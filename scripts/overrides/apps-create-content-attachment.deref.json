{
  "summary": "Create a content attachment",
  "description": "**Deprecated:** use `apps.createContentAttachmentForRepo()` (`POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments`) instead. Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://docs.github.com/webhooks/event-payloads/#content_reference) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://docs.github.com/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
  "tags": ["apps"],
  "operationId": "apps/create-content-attachment",
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://docs.github.com/rest/reference/apps#create-a-content-attachment"
  },
  "parameters": [
    {
      "name": "content_reference_id",
      "in": "path",
      "required": true,
      "schema": { "type": "integer" }
    }
  ],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "title": {
              "description": "The title of the attachment",
              "example": "Title of the attachment",
              "type": "string",
              "maxLength": 1024
            },
            "body": {
              "description": "The body of the attachment",
              "example": "Body of the attachment",
              "type": "string",
              "maxLength": 262144
            }
          },
          "required": ["title", "body"],
          "type": "object"
        }
      }
    }
  },
  "responses": {
    "200": {
      "description": "Response",
      "content": {
        "application/json": {
          "schema": {
            "title": "ContentReferenceAttachment",
            "description": "Content Reference attachments allow you to provide context around URLs posted in comments",
            "type": "object",
            "properties": {
              "id": {
                "description": "The ID of the attachment",
                "example": 21,
                "type": "integer"
              },
              "title": {
                "description": "The title of the attachment",
                "example": "Title of the attachment",
                "type": "string",
                "maxLength": 1024
              },
              "body": {
                "description": "The body of the attachment",
                "example": "Body of the attachment",
                "type": "string",
                "maxLength": 262144
              },
              "node_id": {
                "description": "The node_id of the content attachment",
                "example": "MDE3OkNvbnRlbnRBdHRhY2htZW50MjE=",
                "type": "string"
              }
            },
            "required": ["id", "title", "body"]
          },
          "examples": {
            "default": {
              "value": {
                "id": 101,
                "title": "[A-1234] Error found in core/models.py file'",
                "body": "You have used an email that already exists for the user_email_uniq field.\n ## DETAILS:\n\nThe (email)=(Octocat@github.com) already exists.\n\n The error was found in core/models.py in get_or_create_user at line 62.\n\n self.save()"
              }
            }
          }
        }
      }
    },
    "304": { "description": "Not modified" },
    "403": {
      "description": "Forbidden",
      "content": {
        "application/json": {
          "schema": {
            "title": "Basic Error",
            "description": "Basic Error",
            "type": "object",
            "properties": {
              "message": { "type": "string" },
              "documentation_url": { "type": "string" },
              "url": { "type": "string" },
              "status": { "type": "string" }
            }
          }
        }
      }
    },
    "404": {
      "description": "Resource not found",
      "content": {
        "application/json": {
          "schema": {
            "title": "Basic Error",
            "description": "Basic Error",
            "type": "object",
            "properties": {
              "message": { "type": "string" },
              "documentation_url": { "type": "string" },
              "url": { "type": "string" },
              "status": { "type": "string" }
            }
          }
        }
      }
    },
    "410": {
      "description": "Gone",
      "content": {
        "application/json": {
          "schema": {
            "title": "Basic Error",
            "description": "Basic Error",
            "type": "object",
            "properties": {
              "message": { "type": "string" },
              "documentation_url": { "type": "string" },
              "url": { "type": "string" },
              "status": { "type": "string" }
            }
          }
        }
      }
    },
    "415": {
      "description": "Preview header missing",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "required": ["message", "documentation_url"],
            "properties": {
              "message": { "type": "string" },
              "documentation_url": { "type": "string" }
            }
          }
        }
      }
    },
    "422": {
      "description": "Validation failed",
      "content": {
        "application/json": {
          "schema": {
            "title": "Validation Error",
            "description": "Validation Error",
            "type": "object",
            "required": ["message", "documentation_url"],
            "properties": {
              "message": { "type": "string" },
              "documentation_url": { "type": "string" },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["code"],
                  "properties": {
                    "resource": { "type": "string" },
                    "field": { "type": "string" },
                    "message": { "type": "string" },
                    "code": { "type": "string" },
                    "index": { "type": "integer" },
                    "value": {
                      "oneOf": [
                        { "type": "string", "nullable": true },
                        { "type": "integer", "nullable": true },
                        {
                          "type": "array",
                          "nullable": true,
                          "items": { "type": "string" }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "x-github": {
    "githubCloudOnly": false,
    "enabledForGitHubApps": true,
    "previews": [
      {
        "required": true,
        "name": "corsair",
        "note": "To access the Content Attachments API during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.corsair-preview+json\n```"
      }
    ],
    "category": "apps",
    "subcategory": "installations"
  },
  "x-octokit": {},
  "deprecated": true
}
