{
  "summary": "List code scanning alerts for a repository",
  "description": "Lists all open code scanning alerts for the default branch (usually `main`\nor `master`). You must use an access token with the `security_events` scope to use\nthis endpoint with private repos, the `public_repo` scope also grants permission to read\nsecurity events on public repos only. GitHub Apps must have the `security_events` read\npermission to use this endpoint.\n\nThe response includes a `most_recent_instance` object.\nThis provides details of the most recent instance of this alert\nfor the default branch or for the specified Git reference\n(if you used `ref` in the request).",
  "tags": [
    "code-scanning"
  ],
  "operationId": "code-scanning/list-alerts-for-repo",
  "externalDocs": {
    "description": "API method documentation",
    "url": "https://docs.github.com/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository"
  },
  "parameters": [
    {
      "name": "owner",
      "description": "The account owner of the repository. The name is not case sensitive.",
      "in": "path",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "name": "repo",
      "description": "The name of the repository. The name is not case sensitive.",
      "in": "path",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "name": "tool_name",
      "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.",
      "in": "query",
      "required": false,
      "schema": {
        "type": "string",
        "description": "The name of the tool used to generate the code scanning analysis."
      }
    },
    {
      "name": "tool_guid",
      "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.",
      "in": "query",
      "required": false,
      "schema": {
        "nullable": true,
        "type": "string",
        "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data."
      }
    },
    {
      "name": "page",
      "description": "Page number of the results to fetch.",
      "in": "query",
      "schema": {
        "type": "integer",
        "default": 1
      }
    },
    {
      "name": "per_page",
      "description": "The number of results per page (max 100).",
      "in": "query",
      "schema": {
        "type": "integer",
        "default": 30
      }
    },
    {
      "name": "ref",
      "description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.",
      "in": "query",
      "required": false,
      "schema": {
        "type": "string",
        "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`."
      }
    },
    {
      "name": "direction",
      "description": "The direction to sort the results by.",
      "in": "query",
      "required": false,
      "schema": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "default": "desc"
      }
    },
    {
      "name": "sort",
      "description": "The property by which to sort the results. `number` is deprecated - we recommend that you use `created` instead.",
      "in": "query",
      "required": false,
      "schema": {
        "type": "string",
        "enum": [
          "created",
          "number",
          "updated"
        ],
        "default": "created"
      }
    },
    {
      "name": "state",
      "description": "Set to `open`, `closed, `fixed`, or `dismissed` to list code scanning alerts in a specific state.",
      "in": "query",
      "required": false,
      "schema": {
        "type": "string",
        "description": "State of a code scanning alert.",
        "enum": [
          "open",
          "closed",
          "dismissed",
          "fixed"
        ]
      }
    }
  ],
  "responses": {
    "200": {
      "description": "Response",
      "content": {
        "application/json": {
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "number": {
                  "type": "integer",
                  "description": "The security alert number.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                  "format": "date-time",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "description": "The REST API URL of the alert resource.",
                  "format": "uri",
                  "readOnly": true
                },
                "html_url": {
                  "type": "string",
                  "description": "The GitHub URL of the alert resource.",
                  "format": "uri",
                  "readOnly": true
                },
                "instances_url": {
                  "type": "string",
                  "description": "The REST API URL for fetching the list of instances for an alert.",
                  "format": "uri",
                  "readOnly": true
                },
                "state": {
                  "type": "string",
                  "description": "State of a code scanning alert.",
                  "enum": [
                    "open",
                    "closed",
                    "dismissed",
                    "fixed"
                  ]
                },
                "fixed_at": {
                  "type": "string",
                  "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                  "format": "date-time",
                  "readOnly": true,
                  "nullable": true
                },
                "dismissed_by": {
                  "title": "Simple User",
                  "description": "Simple User",
                  "type": "object",
                  "properties": {
                    "name": {
                      "nullable": true,
                      "type": "string"
                    },
                    "email": {
                      "nullable": true,
                      "type": "string"
                    },
                    "login": {
                      "type": "string",
                      "example": "octocat"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "node_id": {
                      "type": "string",
                      "example": "MDQ6VXNlcjE="
                    },
                    "avatar_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://github.com/images/error/octocat_happy.gif"
                    },
                    "gravatar_id": {
                      "type": "string",
                      "example": "41d064eb2195891e12d0413f63227ea7",
                      "nullable": true
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://api.github.com/users/octocat"
                    },
                    "html_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://github.com/octocat"
                    },
                    "followers_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://api.github.com/users/octocat/followers"
                    },
                    "following_url": {
                      "type": "string",
                      "example": "https://api.github.com/users/octocat/following{/other_user}"
                    },
                    "gists_url": {
                      "type": "string",
                      "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                    },
                    "starred_url": {
                      "type": "string",
                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                    },
                    "subscriptions_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://api.github.com/users/octocat/subscriptions"
                    },
                    "organizations_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://api.github.com/users/octocat/orgs"
                    },
                    "repos_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://api.github.com/users/octocat/repos"
                    },
                    "events_url": {
                      "type": "string",
                      "example": "https://api.github.com/users/octocat/events{/privacy}"
                    },
                    "received_events_url": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://api.github.com/users/octocat/received_events"
                    },
                    "type": {
                      "type": "string",
                      "example": "User"
                    },
                    "site_admin": {
                      "type": "boolean"
                    },
                    "starred_at": {
                      "type": "string",
                      "example": "\"2020-07-09T00:17:55Z\""
                    }
                  },
                  "required": [
                    "avatar_url",
                    "events_url",
                    "followers_url",
                    "following_url",
                    "gists_url",
                    "gravatar_id",
                    "html_url",
                    "id",
                    "node_id",
                    "login",
                    "organizations_url",
                    "received_events_url",
                    "repos_url",
                    "site_admin",
                    "starred_url",
                    "subscriptions_url",
                    "type",
                    "url"
                  ],
                  "nullable": true
                },
                "dismissed_at": {
                  "type": "string",
                  "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                  "format": "date-time",
                  "readOnly": true,
                  "nullable": true
                },
                "dismissed_reason": {
                  "type": "string",
                  "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert.",
                  "nullable": true,
                  "enum": [
                    null,
                    "false positive",
                    "won't fix",
                    "used in tests"
                  ]
                },
                "dismissed_comment": {
                  "type": "string",
                  "description": "The dismissal comment associated with the dismissal of the alert.",
                  "nullable": true,
                  "maxLength": 280
                },
                "rule": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "nullable": true,
                      "type": "string",
                      "description": "A unique identifier for the rule used to detect the alert."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the rule used to detect the alert."
                    },
                    "tags": {
                      "nullable": true,
                      "type": "array",
                      "description": "A set of tags applicable for the rule.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "severity": {
                      "nullable": true,
                      "type": "string",
                      "description": "The severity of the alert.",
                      "enum": [
                        "none",
                        "note",
                        "warning",
                        "error"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "description": "A short description of the rule used to detect the alert."
                    }
                  }
                },
                "tool": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the tool used to generate the code scanning analysis."
                    },
                    "version": {
                      "nullable": true,
                      "type": "string",
                      "description": "The version of the tool used to generate the code scanning analysis."
                    },
                    "guid": {
                      "nullable": true,
                      "type": "string",
                      "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data."
                    }
                  }
                },
                "most_recent_instance": {
                  "type": "object",
                  "properties": {
                    "ref": {
                      "type": "string",
                      "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`."
                    },
                    "analysis_key": {
                      "type": "string",
                      "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
                    },
                    "environment": {
                      "type": "string",
                      "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
                    },
                    "category": {
                      "type": "string",
                      "description": "Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code."
                    },
                    "state": {
                      "type": "string",
                      "description": "State of a code scanning alert.",
                      "enum": [
                        "open",
                        "closed",
                        "dismissed",
                        "fixed"
                      ]
                    },
                    "commit_sha": {
                      "type": "string"
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        }
                      }
                    },
                    "location": {
                      "type": "object",
                      "description": "Describe a region within a file for the alert.",
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "start_line": {
                          "type": "integer"
                        },
                        "end_line": {
                          "type": "integer"
                        },
                        "start_column": {
                          "type": "integer"
                        },
                        "end_column": {
                          "type": "integer"
                        }
                      }
                    },
                    "html_url": {
                      "type": "string"
                    },
                    "classifications": {
                      "type": "array",
                      "description": "Classifications that have been applied to the file that triggered the alert.\nFor example identifying it as documentation, or a generated file.",
                      "items": {
                        "type": "string",
                        "description": "A classification of the file. For example to identify it as generated.",
                        "nullable": true,
                        "enum": [
                          "source",
                          "generated",
                          "test",
                          "library"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "number",
                "created_at",
                "url",
                "html_url",
                "instances_url",
                "state",
                "dismissed_by",
                "dismissed_at",
                "dismissed_reason",
                "rule",
                "tool",
                "most_recent_instance"
              ]
            }
          },
          "examples": {
            "default": {
              "value": [
                {
                  "number": 4,
                  "created_at": "2020-02-13T12:29:18Z",
                  "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4",
                  "html_url": "https://github.com/octocat/hello-world/code-scanning/4",
                  "state": "open",
                  "fixed_at": null,
                  "dismissed_by": null,
                  "dismissed_at": null,
                  "dismissed_reason": null,
                  "dismissed_comment": null,
                  "rule": {
                    "id": "js/zipslip",
                    "severity": "error",
                    "tags": [
                      "security",
                      "external/cwe/cwe-022"
                    ],
                    "description": "Arbitrary file write during zip extraction",
                    "name": "js/zipslip"
                  },
                  "tool": {
                    "name": "CodeQL",
                    "guid": null,
                    "version": "2.4.0"
                  },
                  "most_recent_instance": {
                    "ref": "refs/heads/main",
                    "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                    "environment": "{}",
                    "state": "open",
                    "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
                    "message": {
                      "text": "This path depends on a user-provided value."
                    },
                    "location": {
                      "path": "spec-main/api-session-spec.ts",
                      "start_line": 917,
                      "end_line": 917,
                      "start_column": 7,
                      "end_column": 18
                    },
                    "classifications": [
                      "test"
                    ]
                  },
                  "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4/instances"
                },
                {
                  "number": 3,
                  "created_at": "2020-02-13T12:29:18Z",
                  "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3",
                  "html_url": "https://github.com/octocat/hello-world/code-scanning/3",
                  "state": "dismissed",
                  "fixed_at": null,
                  "dismissed_by": {
                    "login": "octocat",
                    "id": 1,
                    "node_id": "MDQ6VXNlcjE=",
                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/octocat",
                    "html_url": "https://github.com/octocat",
                    "followers_url": "https://api.github.com/users/octocat/followers",
                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                    "repos_url": "https://api.github.com/users/octocat/repos",
                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                    "type": "User",
                    "site_admin": false
                  },
                  "dismissed_at": "2020-02-14T12:29:18Z",
                  "dismissed_reason": "false positive",
                  "dismissed_comment": "This alert is not actually correct, because there's a sanitizer included in the library.",
                  "rule": {
                    "id": "js/zipslip",
                    "severity": "error",
                    "tags": [
                      "security",
                      "external/cwe/cwe-022"
                    ],
                    "description": "Arbitrary file write during zip extraction",
                    "name": "js/zipslip"
                  },
                  "tool": {
                    "name": "CodeQL",
                    "guid": null,
                    "version": "2.4.0"
                  },
                  "most_recent_instance": {
                    "ref": "refs/heads/main",
                    "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                    "environment": "{}",
                    "state": "open",
                    "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
                    "message": {
                      "text": "This path depends on a user-provided value."
                    },
                    "location": {
                      "path": "lib/ab12-gen.js",
                      "start_line": 917,
                      "end_line": 917,
                      "start_column": 7,
                      "end_column": 18
                    },
                    "classifications": []
                  },
                  "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3/instances"
                }
              ]
            }
          }
        }
      }
    },
    "304": {
      "description": "Not modified"
    },
    "403": {
      "description": "Response if GitHub Advanced Security is not enabled for this repository",
      "content": {
        "application/json": {
          "schema": {
            "title": "Basic Error",
            "description": "Basic Error",
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "documentation_url": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "404": {
      "description": "Resource not found",
      "content": {
        "application/json": {
          "schema": {
            "title": "Basic Error",
            "description": "Basic Error",
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "documentation_url": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "503": {
      "description": "Service unavailable",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "documentation_url": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "x-github": {
    "githubCloudOnly": false,
    "enabledForGitHubApps": true,
    "category": "code-scanning",
    "subcategory": null
  }
}