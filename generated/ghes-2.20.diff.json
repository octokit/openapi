{
  "version": null,
  "servers": null,
  "paths": {
    "added": [],
    "removed": [
      [
        "/orgs/{org}/teams/{team_slug}/discussions",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "List discussions",
            "description": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussions"
            },
            "operationId": "teams/list-discussions-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "direction",
                "description": "One of `asc` (ascending) or `desc` (descending).",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ],
                  "default": "desc"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "pinned",
                "description": "Pinned discussions only filter",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "A team discussion is a persistent record of a free-form conversation within a team.",
                        "type": "object",
                        "required": [
                          "author",
                          "body",
                          "body_html",
                          "body_version",
                          "comments_count",
                          "comments_url",
                          "created_at",
                          "last_edited_at",
                          "html_url",
                          "pinned",
                          "private",
                          "node_id",
                          "number",
                          "team_url",
                          "title",
                          "updated_at",
                          "url"
                        ],
                        "properties": {
                          "author": {
                            "nullable": true,
                            "allOf": [
                              {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              }
                            ]
                          },
                          "body": {
                            "description": "The main text of the discussion.",
                            "type": "string",
                            "example": "Please suggest improvements to our workflow in comments."
                          },
                          "body_html": {
                            "type": "string",
                            "example": "<p>Hi! This is an area for us to collaborate as a team</p>"
                          },
                          "body_version": {
                            "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
                            "type": "string",
                            "example": "0307116bbf7ced493b8d8a346c650b71"
                          },
                          "comments_count": {
                            "type": "integer",
                            "example": 0
                          },
                          "comments_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/organizations/1/team/2343027/discussions/1/comments"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-01-25T18:56:31Z"
                          },
                          "html_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://github.com/orgs/github/teams/justice-league/discussions/1"
                          },
                          "last_edited_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "node_id": {
                            "type": "string",
                            "example": "MDE0OlRlYW1EaXNjdXNzaW9uMQ=="
                          },
                          "number": {
                            "description": "The unique sequence number of a team discussion.",
                            "type": "integer",
                            "example": 42
                          },
                          "pinned": {
                            "description": "Whether or not this discussion should be pinned for easy retrieval.",
                            "type": "boolean",
                            "example": true
                          },
                          "private": {
                            "description": "Whether or not this discussion should be restricted to team members and organization administrators.",
                            "type": "boolean",
                            "example": true
                          },
                          "reactions": {
                            "type": "object",
                            "required": [
                              "url",
                              "total_count",
                              "+1",
                              "-1",
                              "laugh",
                              "confused",
                              "heart",
                              "hooray",
                              "eyes",
                              "rocket"
                            ],
                            "properties": {
                              "+1": {
                                "type": "integer"
                              },
                              "-1": {
                                "type": "integer"
                              },
                              "confused": {
                                "type": "integer"
                              },
                              "eyes": {
                                "type": "integer"
                              },
                              "heart": {
                                "type": "integer"
                              },
                              "hooray": {
                                "type": "integer"
                              },
                              "laugh": {
                                "type": "integer"
                              },
                              "rocket": {
                                "type": "integer"
                              },
                              "total_count": {
                                "type": "integer"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri"
                              }
                            },
                            "title": "Reaction Rollup"
                          },
                          "team_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/organizations/1/team/2343027"
                          },
                          "title": {
                            "description": "The title of the discussion.",
                            "type": "string",
                            "example": "How can we improve our workflow?"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-01-25T18:56:31Z"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/organizations/1/team/2343027/discussions/1"
                          }
                        },
                        "title": "Team Discussion"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "author": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "body": "Hi! This is an area for us to collaborate as a team.",
                            "body_html": "<p>Hi! This is an area for us to collaborate as a team</p>",
                            "body_version": "0d495416a700fb06133c612575d92bfb",
                            "comments_count": 0,
                            "comments_url": "https://api.github.com/teams/2343027/discussions/1/comments",
                            "created_at": "2018-01-25T18:56:31Z",
                            "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1",
                            "last_edited_at": null,
                            "node_id": "MDE0OlRlYW1EaXNjdXNzaW9uMQ==",
                            "number": 1,
                            "pinned": false,
                            "private": false,
                            "reactions": {
                              "+1": 3,
                              "-1": 1,
                              "confused": 0,
                              "eyes": 1,
                              "heart": 1,
                              "hooray": 0,
                              "laugh": 0,
                              "rocket": 1,
                              "total_count": 5,
                              "url": "https://api.github.com/teams/2343027/discussions/1/reactions"
                            },
                            "team_url": "https://api.github.com/teams/2343027",
                            "title": "Our first team post",
                            "updated_at": "2018-01-25T18:56:31Z",
                            "url": "https://api.github.com/teams/2343027/discussions/1"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": false
                }
              ],
              "subcategory": "discussions"
            },
            "x-octokit": {}
          },
          "post": {
            "tags": [
              "teams"
            ],
            "summary": "Create a discussion",
            "description": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-discussion"
            },
            "operationId": "teams/create-discussion-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "title",
                      "body"
                    ],
                    "properties": {
                      "body": {
                        "description": "The discussion post's body text.",
                        "type": "string"
                      },
                      "private": {
                        "description": "Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.",
                        "type": "boolean",
                        "default": false
                      },
                      "title": {
                        "description": "The discussion post's title.",
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "body": "Hi! This is an area for us to collaborate as a team.",
                    "title": "Our first team post"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "A team discussion is a persistent record of a free-form conversation within a team.",
                      "type": "object",
                      "required": [
                        "author",
                        "body",
                        "body_html",
                        "body_version",
                        "comments_count",
                        "comments_url",
                        "created_at",
                        "last_edited_at",
                        "html_url",
                        "pinned",
                        "private",
                        "node_id",
                        "number",
                        "team_url",
                        "title",
                        "updated_at",
                        "url"
                      ],
                      "properties": {
                        "author": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        },
                        "body": {
                          "description": "The main text of the discussion.",
                          "type": "string",
                          "example": "Please suggest improvements to our workflow in comments."
                        },
                        "body_html": {
                          "type": "string",
                          "example": "<p>Hi! This is an area for us to collaborate as a team</p>"
                        },
                        "body_version": {
                          "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
                          "type": "string",
                          "example": "0307116bbf7ced493b8d8a346c650b71"
                        },
                        "comments_count": {
                          "type": "integer",
                          "example": 0
                        },
                        "comments_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2343027/discussions/1/comments"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-25T18:56:31Z"
                        },
                        "html_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://github.com/orgs/github/teams/justice-league/discussions/1"
                        },
                        "last_edited_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDE0OlRlYW1EaXNjdXNzaW9uMQ=="
                        },
                        "number": {
                          "description": "The unique sequence number of a team discussion.",
                          "type": "integer",
                          "example": 42
                        },
                        "pinned": {
                          "description": "Whether or not this discussion should be pinned for easy retrieval.",
                          "type": "boolean",
                          "example": true
                        },
                        "private": {
                          "description": "Whether or not this discussion should be restricted to team members and organization administrators.",
                          "type": "boolean",
                          "example": true
                        },
                        "reactions": {
                          "type": "object",
                          "required": [
                            "url",
                            "total_count",
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "eyes",
                            "rocket"
                          ],
                          "properties": {
                            "+1": {
                              "type": "integer"
                            },
                            "-1": {
                              "type": "integer"
                            },
                            "confused": {
                              "type": "integer"
                            },
                            "eyes": {
                              "type": "integer"
                            },
                            "heart": {
                              "type": "integer"
                            },
                            "hooray": {
                              "type": "integer"
                            },
                            "laugh": {
                              "type": "integer"
                            },
                            "rocket": {
                              "type": "integer"
                            },
                            "total_count": {
                              "type": "integer"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "title": "Reaction Rollup"
                        },
                        "team_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2343027"
                        },
                        "title": {
                          "description": "The title of the discussion.",
                          "type": "string",
                          "example": "How can we improve our workflow?"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-25T18:56:31Z"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2343027/discussions/1"
                        }
                      },
                      "title": "Team Discussion"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "author": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "body": "Hi! This is an area for us to collaborate as a team.",
                          "body_html": "<p>Hi! This is an area for us to collaborate as a team</p>",
                          "body_version": "0d495416a700fb06133c612575d92bfb",
                          "comments_count": 0,
                          "comments_url": "https://api.github.com/teams/2343027/discussions/1/comments",
                          "created_at": "2018-01-25T18:56:31Z",
                          "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1",
                          "last_edited_at": null,
                          "node_id": "MDE0OlRlYW1EaXNjdXNzaW9uMQ==",
                          "number": 1,
                          "pinned": false,
                          "private": false,
                          "reactions": {
                            "+1": 3,
                            "-1": 1,
                            "confused": 0,
                            "eyes": 1,
                            "heart": 1,
                            "hooray": 0,
                            "laugh": 0,
                            "rocket": 1,
                            "total_count": 5,
                            "url": "https://api.github.com/teams/2343027/discussions/1/reactions"
                          },
                          "team_url": "https://api.github.com/teams/2343027",
                          "title": "Our first team post",
                          "updated_at": "2018-01-25T18:56:31Z",
                          "url": "https://api.github.com/teams/2343027/discussions/1"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": false
                }
              ],
              "subcategory": "discussions",
              "triggersNotification": true
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "Get a discussion",
            "description": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion"
            },
            "operationId": "teams/get-discussion-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "A team discussion is a persistent record of a free-form conversation within a team.",
                      "type": "object",
                      "required": [
                        "author",
                        "body",
                        "body_html",
                        "body_version",
                        "comments_count",
                        "comments_url",
                        "created_at",
                        "last_edited_at",
                        "html_url",
                        "pinned",
                        "private",
                        "node_id",
                        "number",
                        "team_url",
                        "title",
                        "updated_at",
                        "url"
                      ],
                      "properties": {
                        "author": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        },
                        "body": {
                          "description": "The main text of the discussion.",
                          "type": "string",
                          "example": "Please suggest improvements to our workflow in comments."
                        },
                        "body_html": {
                          "type": "string",
                          "example": "<p>Hi! This is an area for us to collaborate as a team</p>"
                        },
                        "body_version": {
                          "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
                          "type": "string",
                          "example": "0307116bbf7ced493b8d8a346c650b71"
                        },
                        "comments_count": {
                          "type": "integer",
                          "example": 0
                        },
                        "comments_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2343027/discussions/1/comments"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-25T18:56:31Z"
                        },
                        "html_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://github.com/orgs/github/teams/justice-league/discussions/1"
                        },
                        "last_edited_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDE0OlRlYW1EaXNjdXNzaW9uMQ=="
                        },
                        "number": {
                          "description": "The unique sequence number of a team discussion.",
                          "type": "integer",
                          "example": 42
                        },
                        "pinned": {
                          "description": "Whether or not this discussion should be pinned for easy retrieval.",
                          "type": "boolean",
                          "example": true
                        },
                        "private": {
                          "description": "Whether or not this discussion should be restricted to team members and organization administrators.",
                          "type": "boolean",
                          "example": true
                        },
                        "reactions": {
                          "type": "object",
                          "required": [
                            "url",
                            "total_count",
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "eyes",
                            "rocket"
                          ],
                          "properties": {
                            "+1": {
                              "type": "integer"
                            },
                            "-1": {
                              "type": "integer"
                            },
                            "confused": {
                              "type": "integer"
                            },
                            "eyes": {
                              "type": "integer"
                            },
                            "heart": {
                              "type": "integer"
                            },
                            "hooray": {
                              "type": "integer"
                            },
                            "laugh": {
                              "type": "integer"
                            },
                            "rocket": {
                              "type": "integer"
                            },
                            "total_count": {
                              "type": "integer"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "title": "Reaction Rollup"
                        },
                        "team_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2343027"
                        },
                        "title": {
                          "description": "The title of the discussion.",
                          "type": "string",
                          "example": "How can we improve our workflow?"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-25T18:56:31Z"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2343027/discussions/1"
                        }
                      },
                      "title": "Team Discussion"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "author": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "body": "Hi! This is an area for us to collaborate as a team.",
                          "body_html": "<p>Hi! This is an area for us to collaborate as a team</p>",
                          "body_version": "0d495416a700fb06133c612575d92bfb",
                          "comments_count": 0,
                          "comments_url": "https://api.github.com/teams/2343027/discussions/1/comments",
                          "created_at": "2018-01-25T18:56:31Z",
                          "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1",
                          "last_edited_at": null,
                          "node_id": "MDE0OlRlYW1EaXNjdXNzaW9uMQ==",
                          "number": 1,
                          "pinned": false,
                          "private": false,
                          "reactions": {
                            "+1": 3,
                            "-1": 1,
                            "confused": 0,
                            "eyes": 1,
                            "heart": 1,
                            "hooray": 0,
                            "laugh": 0,
                            "rocket": 1,
                            "total_count": 5,
                            "url": "https://api.github.com/teams/2343027/discussions/1/reactions"
                          },
                          "team_url": "https://api.github.com/teams/2343027",
                          "title": "Our first team post",
                          "updated_at": "2018-01-25T18:56:31Z",
                          "url": "https://api.github.com/teams/2343027/discussions/1"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": false
                }
              ],
              "subcategory": "discussions"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "teams"
            ],
            "summary": "Delete a discussion",
            "description": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-discussion"
            },
            "operationId": "teams/delete-discussion-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "discussions"
            },
            "x-octokit": {}
          },
          "patch": {
            "tags": [
              "teams"
            ],
            "summary": "Update a discussion",
            "description": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-discussion"
            },
            "operationId": "teams/update-discussion-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "description": "The discussion post's body text.",
                        "type": "string"
                      },
                      "title": {
                        "description": "The discussion post's title.",
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "title": "Welcome to our first team post"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "A team discussion is a persistent record of a free-form conversation within a team.",
                      "type": "object",
                      "required": [
                        "author",
                        "body",
                        "body_html",
                        "body_version",
                        "comments_count",
                        "comments_url",
                        "created_at",
                        "last_edited_at",
                        "html_url",
                        "pinned",
                        "private",
                        "node_id",
                        "number",
                        "team_url",
                        "title",
                        "updated_at",
                        "url"
                      ],
                      "properties": {
                        "author": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        },
                        "body": {
                          "description": "The main text of the discussion.",
                          "type": "string",
                          "example": "Please suggest improvements to our workflow in comments."
                        },
                        "body_html": {
                          "type": "string",
                          "example": "<p>Hi! This is an area for us to collaborate as a team</p>"
                        },
                        "body_version": {
                          "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
                          "type": "string",
                          "example": "0307116bbf7ced493b8d8a346c650b71"
                        },
                        "comments_count": {
                          "type": "integer",
                          "example": 0
                        },
                        "comments_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2343027/discussions/1/comments"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-25T18:56:31Z"
                        },
                        "html_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://github.com/orgs/github/teams/justice-league/discussions/1"
                        },
                        "last_edited_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDE0OlRlYW1EaXNjdXNzaW9uMQ=="
                        },
                        "number": {
                          "description": "The unique sequence number of a team discussion.",
                          "type": "integer",
                          "example": 42
                        },
                        "pinned": {
                          "description": "Whether or not this discussion should be pinned for easy retrieval.",
                          "type": "boolean",
                          "example": true
                        },
                        "private": {
                          "description": "Whether or not this discussion should be restricted to team members and organization administrators.",
                          "type": "boolean",
                          "example": true
                        },
                        "reactions": {
                          "type": "object",
                          "required": [
                            "url",
                            "total_count",
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "eyes",
                            "rocket"
                          ],
                          "properties": {
                            "+1": {
                              "type": "integer"
                            },
                            "-1": {
                              "type": "integer"
                            },
                            "confused": {
                              "type": "integer"
                            },
                            "eyes": {
                              "type": "integer"
                            },
                            "heart": {
                              "type": "integer"
                            },
                            "hooray": {
                              "type": "integer"
                            },
                            "laugh": {
                              "type": "integer"
                            },
                            "rocket": {
                              "type": "integer"
                            },
                            "total_count": {
                              "type": "integer"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "title": "Reaction Rollup"
                        },
                        "team_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2343027"
                        },
                        "title": {
                          "description": "The title of the discussion.",
                          "type": "string",
                          "example": "How can we improve our workflow?"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-25T18:56:31Z"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2343027/discussions/1"
                        }
                      },
                      "title": "Team Discussion"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "author": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "body": "Hi! This is an area for us to collaborate as a team.",
                          "body_html": "<p>Hi! This is an area for us to collaborate as a team</p>",
                          "body_version": "0d495416a700fb06133c612575d92bfb",
                          "comments_count": 1,
                          "comments_url": "https://api.github.com/teams/2343027/discussions/1/comments",
                          "created_at": "2018-01-25T18:56:31Z",
                          "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1",
                          "last_edited_at": "2018-01-26T18:22:20Z",
                          "node_id": "MDE0OlRlYW1EaXNjdXNzaW9uMQ==",
                          "number": 1,
                          "pinned": false,
                          "private": false,
                          "reactions": {
                            "+1": 3,
                            "-1": 1,
                            "confused": 0,
                            "eyes": 1,
                            "heart": 1,
                            "hooray": 0,
                            "laugh": 0,
                            "rocket": 1,
                            "total_count": 5,
                            "url": "https://api.github.com/teams/2343027/discussions/1/reactions"
                          },
                          "team_url": "https://api.github.com/teams/2343027",
                          "title": "Welcome to our first team post",
                          "updated_at": "2018-01-26T18:22:20Z",
                          "url": "https://api.github.com/teams/2343027/discussions/1"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": false
                }
              ],
              "subcategory": "discussions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "List discussion comments",
            "description": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussion-comments"
            },
            "operationId": "teams/list-discussion-comments-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "direction",
                "description": "One of `asc` (ascending) or `desc` (descending).",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "asc",
                    "desc"
                  ],
                  "default": "desc"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "A reply to a discussion within a team.",
                        "type": "object",
                        "required": [
                          "author",
                          "body",
                          "body_html",
                          "body_version",
                          "created_at",
                          "last_edited_at",
                          "discussion_url",
                          "html_url",
                          "node_id",
                          "number",
                          "updated_at",
                          "url"
                        ],
                        "properties": {
                          "author": {
                            "nullable": true,
                            "allOf": [
                              {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              }
                            ]
                          },
                          "body": {
                            "description": "The main text of the comment.",
                            "type": "string",
                            "example": "I agree with this suggestion."
                          },
                          "body_html": {
                            "type": "string",
                            "example": "<p>Do you like apples?</p>"
                          },
                          "body_version": {
                            "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
                            "type": "string",
                            "example": "0307116bbf7ced493b8d8a346c650b71"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-01-15T23:53:58Z"
                          },
                          "discussion_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/organizations/1/team/2403582/discussions/1"
                          },
                          "html_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1"
                          },
                          "last_edited_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "node_id": {
                            "type": "string",
                            "example": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE="
                          },
                          "number": {
                            "description": "The unique sequence number of a team discussion comment.",
                            "type": "integer",
                            "example": 42
                          },
                          "reactions": {
                            "type": "object",
                            "required": [
                              "url",
                              "total_count",
                              "+1",
                              "-1",
                              "laugh",
                              "confused",
                              "heart",
                              "hooray",
                              "eyes",
                              "rocket"
                            ],
                            "properties": {
                              "+1": {
                                "type": "integer"
                              },
                              "-1": {
                                "type": "integer"
                              },
                              "confused": {
                                "type": "integer"
                              },
                              "eyes": {
                                "type": "integer"
                              },
                              "heart": {
                                "type": "integer"
                              },
                              "hooray": {
                                "type": "integer"
                              },
                              "laugh": {
                                "type": "integer"
                              },
                              "rocket": {
                                "type": "integer"
                              },
                              "total_count": {
                                "type": "integer"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri"
                              }
                            },
                            "title": "Reaction Rollup"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2018-01-15T23:53:58Z"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1"
                          }
                        },
                        "title": "Team Discussion Comment"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "author": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "body": "Do you like apples?",
                            "body_html": "<p>Do you like apples?</p>",
                            "body_version": "5eb32b219cdc6a5a9b29ba5d6caa9c51",
                            "created_at": "2018-01-15T23:53:58Z",
                            "discussion_url": "https://api.github.com/teams/2403582/discussions/1",
                            "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1",
                            "last_edited_at": null,
                            "node_id": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=",
                            "number": 1,
                            "reactions": {
                              "+1": 3,
                              "-1": 1,
                              "confused": 0,
                              "eyes": 1,
                              "heart": 1,
                              "hooray": 0,
                              "laugh": 0,
                              "rocket": 1,
                              "total_count": 5,
                              "url": "https://api.github.com/teams/2403582/discussions/1/reactions"
                            },
                            "updated_at": "2018-01-15T23:53:58Z",
                            "url": "https://api.github.com/teams/2403582/discussions/1/comments/1"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": false
                }
              ],
              "subcategory": "discussion-comments"
            },
            "x-octokit": {}
          },
          "post": {
            "tags": [
              "teams"
            ],
            "summary": "Create a discussion comment",
            "description": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@2.21/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-discussion-comment"
            },
            "operationId": "teams/create-discussion-comment-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "body"
                    ],
                    "properties": {
                      "body": {
                        "description": "The discussion comment's body text.",
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "body": "Do you like apples?"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "A reply to a discussion within a team.",
                      "type": "object",
                      "required": [
                        "author",
                        "body",
                        "body_html",
                        "body_version",
                        "created_at",
                        "last_edited_at",
                        "discussion_url",
                        "html_url",
                        "node_id",
                        "number",
                        "updated_at",
                        "url"
                      ],
                      "properties": {
                        "author": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        },
                        "body": {
                          "description": "The main text of the comment.",
                          "type": "string",
                          "example": "I agree with this suggestion."
                        },
                        "body_html": {
                          "type": "string",
                          "example": "<p>Do you like apples?</p>"
                        },
                        "body_version": {
                          "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
                          "type": "string",
                          "example": "0307116bbf7ced493b8d8a346c650b71"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-15T23:53:58Z"
                        },
                        "discussion_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2403582/discussions/1"
                        },
                        "html_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1"
                        },
                        "last_edited_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE="
                        },
                        "number": {
                          "description": "The unique sequence number of a team discussion comment.",
                          "type": "integer",
                          "example": 42
                        },
                        "reactions": {
                          "type": "object",
                          "required": [
                            "url",
                            "total_count",
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "eyes",
                            "rocket"
                          ],
                          "properties": {
                            "+1": {
                              "type": "integer"
                            },
                            "-1": {
                              "type": "integer"
                            },
                            "confused": {
                              "type": "integer"
                            },
                            "eyes": {
                              "type": "integer"
                            },
                            "heart": {
                              "type": "integer"
                            },
                            "hooray": {
                              "type": "integer"
                            },
                            "laugh": {
                              "type": "integer"
                            },
                            "rocket": {
                              "type": "integer"
                            },
                            "total_count": {
                              "type": "integer"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "title": "Reaction Rollup"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-15T23:53:58Z"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1"
                        }
                      },
                      "title": "Team Discussion Comment"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "author": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "body": "Do you like apples?",
                          "body_html": "<p>Do you like apples?</p>",
                          "body_version": "5eb32b219cdc6a5a9b29ba5d6caa9c51",
                          "created_at": "2018-01-15T23:53:58Z",
                          "discussion_url": "https://api.github.com/teams/2403582/discussions/1",
                          "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1",
                          "last_edited_at": null,
                          "node_id": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=",
                          "number": 1,
                          "reactions": {
                            "+1": 3,
                            "-1": 1,
                            "confused": 0,
                            "eyes": 1,
                            "heart": 1,
                            "hooray": 0,
                            "laugh": 0,
                            "rocket": 1,
                            "total_count": 5,
                            "url": "https://api.github.com/teams/2403582/discussions/1/reactions"
                          },
                          "updated_at": "2018-01-15T23:53:58Z",
                          "url": "https://api.github.com/teams/2403582/discussions/1/comments/1"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": false
                }
              ],
              "subcategory": "discussion-comments",
              "triggersNotification": true
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "Get a discussion comment",
            "description": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion-comment"
            },
            "operationId": "teams/get-discussion-comment-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "comment_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "A reply to a discussion within a team.",
                      "type": "object",
                      "required": [
                        "author",
                        "body",
                        "body_html",
                        "body_version",
                        "created_at",
                        "last_edited_at",
                        "discussion_url",
                        "html_url",
                        "node_id",
                        "number",
                        "updated_at",
                        "url"
                      ],
                      "properties": {
                        "author": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        },
                        "body": {
                          "description": "The main text of the comment.",
                          "type": "string",
                          "example": "I agree with this suggestion."
                        },
                        "body_html": {
                          "type": "string",
                          "example": "<p>Do you like apples?</p>"
                        },
                        "body_version": {
                          "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
                          "type": "string",
                          "example": "0307116bbf7ced493b8d8a346c650b71"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-15T23:53:58Z"
                        },
                        "discussion_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2403582/discussions/1"
                        },
                        "html_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1"
                        },
                        "last_edited_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE="
                        },
                        "number": {
                          "description": "The unique sequence number of a team discussion comment.",
                          "type": "integer",
                          "example": 42
                        },
                        "reactions": {
                          "type": "object",
                          "required": [
                            "url",
                            "total_count",
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "eyes",
                            "rocket"
                          ],
                          "properties": {
                            "+1": {
                              "type": "integer"
                            },
                            "-1": {
                              "type": "integer"
                            },
                            "confused": {
                              "type": "integer"
                            },
                            "eyes": {
                              "type": "integer"
                            },
                            "heart": {
                              "type": "integer"
                            },
                            "hooray": {
                              "type": "integer"
                            },
                            "laugh": {
                              "type": "integer"
                            },
                            "rocket": {
                              "type": "integer"
                            },
                            "total_count": {
                              "type": "integer"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "title": "Reaction Rollup"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-15T23:53:58Z"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1"
                        }
                      },
                      "title": "Team Discussion Comment"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "author": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "body": "Do you like apples?",
                          "body_html": "<p>Do you like apples?</p>",
                          "body_version": "5eb32b219cdc6a5a9b29ba5d6caa9c51",
                          "created_at": "2018-01-15T23:53:58Z",
                          "discussion_url": "https://api.github.com/teams/2403582/discussions/1",
                          "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1",
                          "last_edited_at": null,
                          "node_id": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=",
                          "number": 1,
                          "reactions": {
                            "+1": 3,
                            "-1": 1,
                            "confused": 0,
                            "eyes": 1,
                            "heart": 1,
                            "hooray": 0,
                            "laugh": 0,
                            "rocket": 1,
                            "total_count": 5,
                            "url": "https://api.github.com/teams/2403582/discussions/1/reactions"
                          },
                          "updated_at": "2018-01-15T23:53:58Z",
                          "url": "https://api.github.com/teams/2403582/discussions/1/comments/1"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": false
                }
              ],
              "subcategory": "discussion-comments"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "teams"
            ],
            "summary": "Delete a discussion comment",
            "description": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#delete-a-discussion-comment"
            },
            "operationId": "teams/delete-discussion-comment-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "comment_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "discussion-comments"
            },
            "x-octokit": {}
          },
          "patch": {
            "tags": [
              "teams"
            ],
            "summary": "Update a discussion comment",
            "description": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#update-a-discussion-comment"
            },
            "operationId": "teams/update-discussion-comment-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "comment_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "body"
                    ],
                    "properties": {
                      "body": {
                        "description": "The discussion comment's body text.",
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "body": "Do you like pineapples?"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "A reply to a discussion within a team.",
                      "type": "object",
                      "required": [
                        "author",
                        "body",
                        "body_html",
                        "body_version",
                        "created_at",
                        "last_edited_at",
                        "discussion_url",
                        "html_url",
                        "node_id",
                        "number",
                        "updated_at",
                        "url"
                      ],
                      "properties": {
                        "author": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        },
                        "body": {
                          "description": "The main text of the comment.",
                          "type": "string",
                          "example": "I agree with this suggestion."
                        },
                        "body_html": {
                          "type": "string",
                          "example": "<p>Do you like apples?</p>"
                        },
                        "body_version": {
                          "description": "The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.",
                          "type": "string",
                          "example": "0307116bbf7ced493b8d8a346c650b71"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-15T23:53:58Z"
                        },
                        "discussion_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2403582/discussions/1"
                        },
                        "html_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1"
                        },
                        "last_edited_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE="
                        },
                        "number": {
                          "description": "The unique sequence number of a team discussion comment.",
                          "type": "integer",
                          "example": 42
                        },
                        "reactions": {
                          "type": "object",
                          "required": [
                            "url",
                            "total_count",
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "eyes",
                            "rocket"
                          ],
                          "properties": {
                            "+1": {
                              "type": "integer"
                            },
                            "-1": {
                              "type": "integer"
                            },
                            "confused": {
                              "type": "integer"
                            },
                            "eyes": {
                              "type": "integer"
                            },
                            "heart": {
                              "type": "integer"
                            },
                            "hooray": {
                              "type": "integer"
                            },
                            "laugh": {
                              "type": "integer"
                            },
                            "rocket": {
                              "type": "integer"
                            },
                            "total_count": {
                              "type": "integer"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "title": "Reaction Rollup"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2018-01-15T23:53:58Z"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1"
                        }
                      },
                      "title": "Team Discussion Comment"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "author": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "body": "Do you like pineapples?",
                          "body_html": "<p>Do you like pineapples?</p>",
                          "body_version": "e6907b24d9c93cc0c5024a7af5888116",
                          "created_at": "2018-01-15T23:53:58Z",
                          "discussion_url": "https://api.github.com/teams/2403582/discussions/1",
                          "html_url": "https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1",
                          "last_edited_at": "2018-01-26T18:22:20Z",
                          "node_id": "MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=",
                          "number": 1,
                          "reactions": {
                            "+1": 3,
                            "-1": 1,
                            "confused": 0,
                            "eyes": 1,
                            "heart": 1,
                            "hooray": 0,
                            "laugh": 0,
                            "rocket": 1,
                            "total_count": 5,
                            "url": "https://api.github.com/teams/2403582/discussions/1/reactions"
                          },
                          "updated_at": "2018-01-26T18:22:20Z",
                          "url": "https://api.github.com/teams/2403582/discussions/1/comments/1"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": false
                }
              ],
              "subcategory": "discussion-comments"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",
        {
          "get": {
            "tags": [
              "reactions"
            ],
            "summary": "List reactions for a team discussion comment",
            "description": "List the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments/). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion-comment"
            },
            "operationId": "reactions/list-for-team-discussion-comment-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "comment_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "content",
                "description": "Returns a single [reaction type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion comment.",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "+1",
                    "-1",
                    "laugh",
                    "confused",
                    "heart",
                    "hooray",
                    "rocket",
                    "eyes"
                  ]
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
                        "type": "object",
                        "required": [
                          "id",
                          "node_id",
                          "user",
                          "content",
                          "created_at"
                        ],
                        "properties": {
                          "content": {
                            "description": "The reaction to use",
                            "type": "string",
                            "enum": [
                              "+1",
                              "-1",
                              "laugh",
                              "confused",
                              "heart",
                              "hooray",
                              "rocket",
                              "eyes"
                            ],
                            "example": "heart"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2016-05-20T20:09:31Z"
                          },
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "node_id": {
                            "type": "string",
                            "example": "MDg6UmVhY3Rpb24x"
                          },
                          "user": {
                            "nullable": true,
                            "allOf": [
                              {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              }
                            ]
                          }
                        },
                        "title": "Reaction"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "content": "heart",
                            "created_at": "2016-05-20T20:09:31Z",
                            "id": 1,
                            "node_id": "MDg6UmVhY3Rpb24x",
                            "user": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "post": {
            "tags": [
              "reactions"
            ],
            "summary": "Create reaction for a team discussion comment",
            "description": "Create a reaction to a [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion comment.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-a-team-discussion-comment"
            },
            "operationId": "reactions/create-for-team-discussion-comment-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "comment_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "content"
                    ],
                    "properties": {
                      "content": {
                        "description": "The [reaction type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types) to add to the team discussion comment.",
                        "type": "string",
                        "enum": [
                          "+1",
                          "-1",
                          "laugh",
                          "confused",
                          "heart",
                          "hooray",
                          "rocket",
                          "eyes"
                        ]
                      }
                    }
                  },
                  "example": {
                    "content": "heart"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
                      "type": "object",
                      "required": [
                        "id",
                        "node_id",
                        "user",
                        "content",
                        "created_at"
                      ],
                      "properties": {
                        "content": {
                          "description": "The reaction to use",
                          "type": "string",
                          "enum": [
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "rocket",
                            "eyes"
                          ],
                          "example": "heart"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-05-20T20:09:31Z"
                        },
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDg6UmVhY3Rpb24x"
                        },
                        "user": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        }
                      },
                      "title": "Reaction"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "content": "heart",
                          "created_at": "2016-05-20T20:09:31Z",
                          "id": 1,
                          "node_id": "MDg6UmVhY3Rpb24x",
                          "user": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
                      "type": "object",
                      "required": [
                        "id",
                        "node_id",
                        "user",
                        "content",
                        "created_at"
                      ],
                      "properties": {
                        "content": {
                          "description": "The reaction to use",
                          "type": "string",
                          "enum": [
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "rocket",
                            "eyes"
                          ],
                          "example": "heart"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-05-20T20:09:31Z"
                        },
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDg6UmVhY3Rpb24x"
                        },
                        "user": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        }
                      },
                      "title": "Reaction"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "content": "heart",
                          "created_at": "2016-05-20T20:09:31Z",
                          "id": 1,
                          "node_id": "MDg6UmVhY3Rpb24x",
                          "user": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
        {
          "delete": {
            "tags": [
              "reactions"
            ],
            "summary": "Delete team discussion comment reaction",
            "description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.\n\nDelete a reaction to a [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-team-discussion-comment-reaction"
            },
            "operationId": "reactions/delete-for-team-discussion-comment",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "comment_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "reaction_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",
        {
          "get": {
            "tags": [
              "reactions"
            ],
            "summary": "List reactions for a team discussion",
            "description": "List the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion"
            },
            "operationId": "reactions/list-for-team-discussion-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "content",
                "description": "Returns a single [reaction type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion.",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "+1",
                    "-1",
                    "laugh",
                    "confused",
                    "heart",
                    "hooray",
                    "rocket",
                    "eyes"
                  ]
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
                        "type": "object",
                        "required": [
                          "id",
                          "node_id",
                          "user",
                          "content",
                          "created_at"
                        ],
                        "properties": {
                          "content": {
                            "description": "The reaction to use",
                            "type": "string",
                            "enum": [
                              "+1",
                              "-1",
                              "laugh",
                              "confused",
                              "heart",
                              "hooray",
                              "rocket",
                              "eyes"
                            ],
                            "example": "heart"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2016-05-20T20:09:31Z"
                          },
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "node_id": {
                            "type": "string",
                            "example": "MDg6UmVhY3Rpb24x"
                          },
                          "user": {
                            "nullable": true,
                            "allOf": [
                              {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              }
                            ]
                          }
                        },
                        "title": "Reaction"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "content": "heart",
                            "created_at": "2016-05-20T20:09:31Z",
                            "id": 1,
                            "node_id": "MDg6UmVhY3Rpb24x",
                            "user": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "post": {
            "tags": [
              "reactions"
            ],
            "summary": "Create reaction for a team discussion",
            "description": "Create a reaction to a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with an HTTP `200` status means that you already added the reaction type to this team discussion.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#create-reaction-for-a-team-discussion"
            },
            "operationId": "reactions/create-for-team-discussion-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "content"
                    ],
                    "properties": {
                      "content": {
                        "description": "The [reaction type](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#reaction-types) to add to the team discussion.",
                        "type": "string",
                        "enum": [
                          "+1",
                          "-1",
                          "laugh",
                          "confused",
                          "heart",
                          "hooray",
                          "rocket",
                          "eyes"
                        ]
                      }
                    }
                  },
                  "example": {
                    "content": "heart"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
                      "type": "object",
                      "required": [
                        "id",
                        "node_id",
                        "user",
                        "content",
                        "created_at"
                      ],
                      "properties": {
                        "content": {
                          "description": "The reaction to use",
                          "type": "string",
                          "enum": [
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "rocket",
                            "eyes"
                          ],
                          "example": "heart"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-05-20T20:09:31Z"
                        },
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDg6UmVhY3Rpb24x"
                        },
                        "user": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        }
                      },
                      "title": "Reaction"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "content": "heart",
                          "created_at": "2016-05-20T20:09:31Z",
                          "id": 1,
                          "node_id": "MDg6UmVhY3Rpb24x",
                          "user": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
                      "type": "object",
                      "required": [
                        "id",
                        "node_id",
                        "user",
                        "content",
                        "created_at"
                      ],
                      "properties": {
                        "content": {
                          "description": "The reaction to use",
                          "type": "string",
                          "enum": [
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "rocket",
                            "eyes"
                          ],
                          "example": "heart"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-05-20T20:09:31Z"
                        },
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDg6UmVhY3Rpb24x"
                        },
                        "user": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        }
                      },
                      "title": "Reaction"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "content": "heart",
                          "created_at": "2016-05-20T20:09:31Z",
                          "id": 1,
                          "node_id": "MDg6UmVhY3Rpb24x",
                          "user": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",
        {
          "delete": {
            "tags": [
              "reactions"
            ],
            "summary": "Delete team discussion reaction",
            "description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.\n\nDelete a reaction to a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions). OAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-team-discussion-reaction"
            },
            "operationId": "reactions/delete-for-team-discussion",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "discussion_number",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "reaction_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/members",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "List team members",
            "description": "Team members will include the members of child teams.\n\nTo list members in a team, the team must be visible to the authenticated user.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-members"
            },
            "operationId": "teams/list-members-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "role",
                "description": "Filters members returned by their role in the team. Can be one of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` - team maintainers.  \n\\* `all` - all members of the team.",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "member",
                    "maintainer",
                    "all"
                  ],
                  "default": "all"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "Simple User",
                        "type": "object",
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "properties": {
                          "avatar_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://github.com/images/error/octocat_happy.gif"
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "events_url": {
                            "type": "string",
                            "example": "https://api.github.com/users/octocat/events{/privacy}"
                          },
                          "followers_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/users/octocat/followers"
                          },
                          "following_url": {
                            "type": "string",
                            "example": "https://api.github.com/users/octocat/following{/other_user}"
                          },
                          "gists_url": {
                            "type": "string",
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                          },
                          "gravatar_id": {
                            "type": "string",
                            "nullable": true,
                            "example": "41d064eb2195891e12d0413f63227ea7"
                          },
                          "html_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://github.com/octocat"
                          },
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "login": {
                            "type": "string",
                            "example": "octocat"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true
                          },
                          "node_id": {
                            "type": "string",
                            "example": "MDQ6VXNlcjE="
                          },
                          "organizations_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/users/octocat/orgs"
                          },
                          "received_events_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/users/octocat/received_events"
                          },
                          "repos_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/users/octocat/repos"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "type": "string",
                            "example": "\"2020-07-09T00:17:55Z\""
                          },
                          "starred_url": {
                            "type": "string",
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                          },
                          "subscriptions_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/users/octocat/subscriptions"
                          },
                          "type": {
                            "type": "string",
                            "example": "User"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/users/octocat"
                          }
                        },
                        "nullable": true,
                        "title": "Simple User"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/memberships/{username}",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "Get team membership for a user",
            "description": "Team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see see [Create a team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-team).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-membership-for-a-user"
            },
            "operationId": "teams/get-membership-for-user-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Team Membership",
                      "type": "object",
                      "required": [
                        "role",
                        "state",
                        "url"
                      ],
                      "properties": {
                        "role": {
                          "description": "The role of the user in the team.",
                          "type": "string",
                          "enum": [
                            "member",
                            "maintainer"
                          ],
                          "example": "member",
                          "default": "member"
                        },
                        "state": {
                          "description": "The state of the user's membership in the team.",
                          "type": "string",
                          "enum": [
                            "active",
                            "pending"
                          ]
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "title": "Team Membership"
                    },
                    "examples": {
                      "response-if-user-is-a-team-maintainer": {
                        "summary": "Response if user is a team maintainer",
                        "value": {
                          "role": "maintainer",
                          "state": "active",
                          "url": "https://api.github.com/teams/1/memberships/octocat"
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "description": "if user has no team membership"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members"
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "teams"
            ],
            "summary": "Add or update team membership for a user",
            "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nAdds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nAn organization owner can add someone who is not part of the team's organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the \"pending\" state until the person accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/memberships/{username}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-membership-for-a-user"
            },
            "operationId": "teams/add-or-update-membership-for-user-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "description": "The role that this user should have in the team. Can be one of:  \n\\* `member` - a normal member of the team.  \n\\* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.",
                        "type": "string",
                        "enum": [
                          "member",
                          "maintainer"
                        ],
                        "default": "member"
                      }
                    }
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Team Membership",
                      "type": "object",
                      "required": [
                        "role",
                        "state",
                        "url"
                      ],
                      "properties": {
                        "role": {
                          "description": "The role of the user in the team.",
                          "type": "string",
                          "enum": [
                            "member",
                            "maintainer"
                          ],
                          "example": "member",
                          "default": "member"
                        },
                        "state": {
                          "description": "The state of the user's membership in the team.",
                          "type": "string",
                          "enum": [
                            "active",
                            "pending"
                          ]
                        },
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "title": "Team Membership"
                    },
                    "examples": {
                      "response-if-users-membership-with-team-is-now-pending": {
                        "summary": "Response if user's membership with team is now pending",
                        "value": {
                          "role": "member",
                          "state": "pending",
                          "url": "https://api.github.com/teams/1/memberships/octocat"
                        }
                      }
                    }
                  }
                }
              },
              "403": {
                "description": "Forbidden if team synchronization is set up"
              },
              "422": {
                "description": "Unprocessable Entity if you attempt to add an organization to a team"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "teams"
            ],
            "summary": "Remove team membership for a user",
            "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub Enterprise Server team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub Enterprise Server](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/memberships/{username}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-team-membership-for-a-user"
            },
            "operationId": "teams/remove-membership-for-user-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              },
              "403": {
                "description": "Forbidden if team synchronization is set up"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/projects",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "List team projects",
            "description": "Lists the organization projects for a team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-projects"
            },
            "operationId": "teams/list-projects-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "A team's access to a project.",
                        "type": "object",
                        "required": [
                          "owner_url",
                          "url",
                          "html_url",
                          "columns_url",
                          "id",
                          "node_id",
                          "name",
                          "body",
                          "number",
                          "state",
                          "creator",
                          "created_at",
                          "updated_at",
                          "permissions"
                        ],
                        "properties": {
                          "body": {
                            "type": "string",
                            "nullable": true
                          },
                          "columns_url": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "creator": {
                            "description": "Simple User",
                            "type": "object",
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "properties": {
                              "avatar_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/images/error/octocat_happy.gif"
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "events_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                              },
                              "followers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/followers"
                              },
                              "following_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                              },
                              "gists_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                              },
                              "gravatar_id": {
                                "type": "string",
                                "nullable": true,
                                "example": "41d064eb2195891e12d0413f63227ea7"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat"
                              },
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "login": {
                                "type": "string",
                                "example": "octocat"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDQ6VXNlcjE="
                              },
                              "organizations_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/orgs"
                              },
                              "received_events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/received_events"
                              },
                              "repos_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/repos"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "type": "string",
                                "example": "\"2020-07-09T00:17:55Z\""
                              },
                              "starred_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                              },
                              "subscriptions_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/subscriptions"
                              },
                              "type": {
                                "type": "string",
                                "example": "User"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat"
                              }
                            },
                            "nullable": true,
                            "title": "Simple User"
                          },
                          "html_url": {
                            "type": "string"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "node_id": {
                            "type": "string"
                          },
                          "number": {
                            "type": "integer"
                          },
                          "organization_permission": {
                            "description": "The organization permission for this project. Only present when owner is an organization.",
                            "type": "string"
                          },
                          "owner_url": {
                            "type": "string"
                          },
                          "permissions": {
                            "type": "object",
                            "required": [
                              "read",
                              "write",
                              "admin"
                            ],
                            "properties": {
                              "admin": {
                                "type": "boolean"
                              },
                              "read": {
                                "type": "boolean"
                              },
                              "write": {
                                "type": "boolean"
                              }
                            }
                          },
                          "private": {
                            "description": "Whether the project is private or not. Only present when owner is an organization.",
                            "type": "boolean"
                          },
                          "state": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "title": "Team Project"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "body": "High-level roadmap for the upcoming year.",
                            "columns_url": "https://api.github.com/projects/1002605/columns",
                            "created_at": "2011-04-11T20:09:31Z",
                            "creator": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "html_url": "https://github.com/orgs/api-playground/projects/1",
                            "id": 1002605,
                            "name": "Organization Roadmap",
                            "node_id": "MDc6UHJvamVjdDEwMDI2MDU=",
                            "number": 1,
                            "organization_permission": "write",
                            "owner_url": "https://api.github.com/orgs/octocat",
                            "permissions": {
                              "admin": false,
                              "read": true,
                              "write": true
                            },
                            "private": false,
                            "state": "open",
                            "updated_at": "2014-03-04T18:58:10Z",
                            "url": "https://api.github.com/projects/1002605"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "inertia",
                  "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/projects/{project_id}",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "Check team permissions for a project",
            "description": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects/{project_id}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#check-team-permissions-for-a-project"
            },
            "operationId": "teams/check-permissions-for-project-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "project_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "A team's access to a project.",
                      "type": "object",
                      "required": [
                        "owner_url",
                        "url",
                        "html_url",
                        "columns_url",
                        "id",
                        "node_id",
                        "name",
                        "body",
                        "number",
                        "state",
                        "creator",
                        "created_at",
                        "updated_at",
                        "permissions"
                      ],
                      "properties": {
                        "body": {
                          "type": "string",
                          "nullable": true
                        },
                        "columns_url": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "creator": {
                          "description": "Simple User",
                          "type": "object",
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "properties": {
                            "avatar_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://github.com/images/error/octocat_happy.gif"
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "events_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/events{/privacy}"
                            },
                            "followers_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/followers"
                            },
                            "following_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/following{/other_user}"
                            },
                            "gists_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                            },
                            "gravatar_id": {
                              "type": "string",
                              "nullable": true,
                              "example": "41d064eb2195891e12d0413f63227ea7"
                            },
                            "html_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://github.com/octocat"
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "login": {
                              "type": "string",
                              "example": "octocat"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "node_id": {
                              "type": "string",
                              "example": "MDQ6VXNlcjE="
                            },
                            "organizations_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/orgs"
                            },
                            "received_events_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/received_events"
                            },
                            "repos_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/repos"
                            },
                            "site_admin": {
                              "type": "boolean"
                            },
                            "starred_at": {
                              "type": "string",
                              "example": "\"2020-07-09T00:17:55Z\""
                            },
                            "starred_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                            },
                            "subscriptions_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/subscriptions"
                            },
                            "type": {
                              "type": "string",
                              "example": "User"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat"
                            }
                          },
                          "nullable": true,
                          "title": "Simple User"
                        },
                        "html_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "node_id": {
                          "type": "string"
                        },
                        "number": {
                          "type": "integer"
                        },
                        "organization_permission": {
                          "description": "The organization permission for this project. Only present when owner is an organization.",
                          "type": "string"
                        },
                        "owner_url": {
                          "type": "string"
                        },
                        "permissions": {
                          "type": "object",
                          "required": [
                            "read",
                            "write",
                            "admin"
                          ],
                          "properties": {
                            "admin": {
                              "type": "boolean"
                            },
                            "read": {
                              "type": "boolean"
                            },
                            "write": {
                              "type": "boolean"
                            }
                          }
                        },
                        "private": {
                          "description": "Whether the project is private or not. Only present when owner is an organization.",
                          "type": "boolean"
                        },
                        "state": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Team Project"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "body": "High-level roadmap for the upcoming year.",
                          "columns_url": "https://api.github.com/projects/1002605/columns",
                          "created_at": "2011-04-11T20:09:31Z",
                          "creator": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "html_url": "https://github.com/orgs/api-playground/projects/1",
                          "id": 1002605,
                          "name": "Organization Roadmap",
                          "node_id": "MDc6UHJvamVjdDEwMDI2MDU=",
                          "number": 1,
                          "organization_permission": "write",
                          "owner_url": "https://api.github.com/orgs/octocat",
                          "permissions": {
                            "admin": false,
                            "read": true,
                            "write": true
                          },
                          "private": false,
                          "state": "open",
                          "updated_at": "2014-03-04T18:58:10Z",
                          "url": "https://api.github.com/projects/1002605"
                        }
                      }
                    }
                  }
                }
              },
              "404": {
                "description": "Not Found if project is not managed by this team"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "inertia",
                  "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "teams"
            ],
            "summary": "Add or update team project permissions",
            "description": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/projects/{project_id}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-project-permissions"
            },
            "operationId": "teams/add-or-update-project-permissions-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "project_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "permission": {
                        "description": "The permission to grant to the team for this project. Can be one of:  \n\\* `read` - team members can read, but not write to or administer this project.  \n\\* `write` - team members can read and write, but not administer this project.  \n\\* `admin` - team members can read, write and administer this project.  \nDefault: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs).\"",
                        "type": "string",
                        "enum": [
                          "read",
                          "write",
                          "admin"
                        ]
                      }
                    },
                    "nullable": true
                  }
                }
              },
              "required": null
            },
            "responses": {
              "204": {
                "description": "Response"
              },
              "403": {
                "description": "Forbidden if the project is not owned by the organization",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "response-if-the-project-is-not-owned-by-the-organization": {
                        "value": {
                          "documentation_url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#add-or-update-team-project-permissions",
                          "message": "Must have admin rights to Repository."
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "inertia",
                  "note": "The Projects API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-10-27-changes-to-projects-api) for full details. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.inertia-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "teams"
            ],
            "summary": "Remove a project from a team",
            "description": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. This endpoint removes the project from the team, but does not delete the project.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/projects/{project_id}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#remove-a-project-from-a-team"
            },
            "operationId": "teams/remove-project-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "project_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/repos",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "List team repositories",
            "description": "Lists a team's repositories visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-repositories"
            },
            "operationId": "teams/list-repos-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "Minimal Repository",
                        "type": "object",
                        "required": [
                          "archive_url",
                          "assignees_url",
                          "blobs_url",
                          "branches_url",
                          "collaborators_url",
                          "comments_url",
                          "commits_url",
                          "compare_url",
                          "contents_url",
                          "contributors_url",
                          "deployments_url",
                          "description",
                          "downloads_url",
                          "events_url",
                          "fork",
                          "forks_url",
                          "full_name",
                          "git_commits_url",
                          "git_refs_url",
                          "git_tags_url",
                          "hooks_url",
                          "html_url",
                          "id",
                          "node_id",
                          "issue_comment_url",
                          "issue_events_url",
                          "issues_url",
                          "keys_url",
                          "labels_url",
                          "languages_url",
                          "merges_url",
                          "milestones_url",
                          "name",
                          "notifications_url",
                          "owner",
                          "private",
                          "pulls_url",
                          "releases_url",
                          "stargazers_url",
                          "statuses_url",
                          "subscribers_url",
                          "subscription_url",
                          "tags_url",
                          "teams_url",
                          "trees_url",
                          "url"
                        ],
                        "properties": {
                          "anonymous_access_enabled": {
                            "type": "boolean"
                          },
                          "archive_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                          },
                          "archived": {
                            "type": "boolean"
                          },
                          "assignees_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                          },
                          "blobs_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                          },
                          "branches_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                          },
                          "clone_url": {
                            "type": "string"
                          },
                          "code_of_conduct": {
                            "description": "Code Of Conduct",
                            "type": "object",
                            "required": [
                              "url",
                              "html_url",
                              "key",
                              "name"
                            ],
                            "properties": {
                              "body": {
                                "type": "string",
                                "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                              },
                              "key": {
                                "type": "string",
                                "example": "contributor_covenant"
                              },
                              "name": {
                                "type": "string",
                                "example": "Contributor Covenant"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                              }
                            },
                            "title": "Code Of Conduct"
                          },
                          "collaborators_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                          },
                          "comments_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                          },
                          "commits_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                          },
                          "compare_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                          },
                          "contents_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                          },
                          "contributors_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "example": "2011-01-26T19:01:12Z"
                          },
                          "default_branch": {
                            "type": "string"
                          },
                          "delete_branch_on_merge": {
                            "type": "boolean"
                          },
                          "deployments_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "example": "This your first repo!"
                          },
                          "disabled": {
                            "type": "boolean"
                          },
                          "downloads_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                          },
                          "events_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/events"
                          },
                          "fork": {
                            "type": "boolean"
                          },
                          "forks": {
                            "type": "integer",
                            "example": 0
                          },
                          "forks_count": {
                            "type": "integer"
                          },
                          "forks_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                          },
                          "full_name": {
                            "type": "string",
                            "example": "octocat/Hello-World"
                          },
                          "git_commits_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                          },
                          "git_refs_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                          },
                          "git_tags_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                          },
                          "git_url": {
                            "type": "string"
                          },
                          "has_downloads": {
                            "type": "boolean"
                          },
                          "has_issues": {
                            "type": "boolean"
                          },
                          "has_pages": {
                            "type": "boolean"
                          },
                          "has_projects": {
                            "type": "boolean"
                          },
                          "has_wiki": {
                            "type": "boolean"
                          },
                          "homepage": {
                            "type": "string",
                            "nullable": true
                          },
                          "hooks_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                          },
                          "html_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://github.com/octocat/Hello-World"
                          },
                          "id": {
                            "type": "integer",
                            "example": 1296269
                          },
                          "is_template": {
                            "type": "boolean"
                          },
                          "issue_comment_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                          },
                          "issue_events_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                          },
                          "issues_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                          },
                          "keys_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                          },
                          "labels_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                          },
                          "language": {
                            "type": "string",
                            "nullable": true
                          },
                          "languages_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                          },
                          "license": {
                            "type": "object",
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "node_id": {
                                "type": "string"
                              },
                              "spdx_id": {
                                "type": "string"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "nullable": true
                          },
                          "merges_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                          },
                          "milestones_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                          },
                          "mirror_url": {
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "example": "Hello-World"
                          },
                          "network_count": {
                            "type": "integer"
                          },
                          "node_id": {
                            "type": "string",
                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                          },
                          "notifications_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                          },
                          "open_issues": {
                            "type": "integer",
                            "example": 0
                          },
                          "open_issues_count": {
                            "type": "integer"
                          },
                          "owner": {
                            "description": "Simple User",
                            "type": "object",
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "properties": {
                              "avatar_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/images/error/octocat_happy.gif"
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "events_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                              },
                              "followers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/followers"
                              },
                              "following_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                              },
                              "gists_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                              },
                              "gravatar_id": {
                                "type": "string",
                                "nullable": true,
                                "example": "41d064eb2195891e12d0413f63227ea7"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat"
                              },
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "login": {
                                "type": "string",
                                "example": "octocat"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDQ6VXNlcjE="
                              },
                              "organizations_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/orgs"
                              },
                              "received_events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/received_events"
                              },
                              "repos_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/repos"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "type": "string",
                                "example": "\"2020-07-09T00:17:55Z\""
                              },
                              "starred_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                              },
                              "subscriptions_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/subscriptions"
                              },
                              "type": {
                                "type": "string",
                                "example": "User"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat"
                              }
                            },
                            "nullable": true,
                            "title": "Simple User"
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "admin": {
                                "type": "boolean"
                              },
                              "maintain": {
                                "type": "boolean"
                              },
                              "pull": {
                                "type": "boolean"
                              },
                              "push": {
                                "type": "boolean"
                              },
                              "triage": {
                                "type": "boolean"
                              }
                            }
                          },
                          "private": {
                            "type": "boolean"
                          },
                          "pulls_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                          },
                          "pushed_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "example": "2011-01-26T19:06:43Z"
                          },
                          "releases_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                          },
                          "size": {
                            "type": "integer"
                          },
                          "ssh_url": {
                            "type": "string"
                          },
                          "stargazers_count": {
                            "type": "integer"
                          },
                          "stargazers_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                          },
                          "statuses_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                          },
                          "subscribers_count": {
                            "type": "integer"
                          },
                          "subscribers_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                          },
                          "subscription_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                          },
                          "svn_url": {
                            "type": "string"
                          },
                          "tags_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                          },
                          "teams_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                          },
                          "template_repository": {
                            "type": "object",
                            "nullable": true,
                            "allOf": [
                              {
                                "description": "A git repository",
                                "type": "object",
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url",
                                  "clone_url",
                                  "default_branch",
                                  "forks",
                                  "forks_count",
                                  "git_url",
                                  "has_downloads",
                                  "has_issues",
                                  "has_projects",
                                  "has_wiki",
                                  "has_pages",
                                  "homepage",
                                  "language",
                                  "archived",
                                  "disabled",
                                  "mirror_url",
                                  "open_issues",
                                  "open_issues_count",
                                  "license",
                                  "pushed_at",
                                  "size",
                                  "ssh_url",
                                  "stargazers_count",
                                  "svn_url",
                                  "watchers",
                                  "watchers_count",
                                  "created_at",
                                  "updated_at"
                                ],
                                "properties": {
                                  "allow_merge_commit": {
                                    "description": "Whether to allow merge commits for pull requests.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "allow_rebase_merge": {
                                    "description": "Whether to allow rebase merges for pull requests.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "allow_squash_merge": {
                                    "description": "Whether to allow squash merges for pull requests.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "anonymous_access_enabled": {
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                  },
                                  "archived": {
                                    "description": "Whether the repository is archived.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "assignees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                  },
                                  "blobs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                  },
                                  "branches_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                  },
                                  "clone_url": {
                                    "type": "string",
                                    "example": "https://github.com/octocat/Hello-World.git"
                                  },
                                  "collaborators_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                  },
                                  "comments_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                  },
                                  "commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                  },
                                  "compare_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                  },
                                  "contents_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                  },
                                  "contributors_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:01:12Z"
                                  },
                                  "default_branch": {
                                    "description": "The default branch of the repository.",
                                    "type": "string",
                                    "example": "master"
                                  },
                                  "delete_branch_on_merge": {
                                    "description": "Whether to delete head branches when pull requests are merged",
                                    "type": "boolean",
                                    "example": false,
                                    "default": false
                                  },
                                  "deployments_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "This your first repo!"
                                  },
                                  "disabled": {
                                    "description": "Returns whether or not this repository disabled.",
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks": {
                                    "type": "integer"
                                  },
                                  "forks_count": {
                                    "type": "integer",
                                    "example": 9
                                  },
                                  "forks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                  },
                                  "full_name": {
                                    "type": "string",
                                    "example": "octocat/Hello-World"
                                  },
                                  "git_commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                  },
                                  "git_refs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                  },
                                  "git_tags_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                  },
                                  "git_url": {
                                    "type": "string",
                                    "example": "git:github.com/octocat/Hello-World.git"
                                  },
                                  "has_downloads": {
                                    "description": "Whether downloads are enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "has_issues": {
                                    "description": "Whether issues are enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "description": "Whether projects are enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "has_wiki": {
                                    "description": "Whether the wiki is enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "homepage": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true,
                                    "example": "https://github.com"
                                  },
                                  "hooks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat/Hello-World"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the repository",
                                    "type": "integer",
                                    "example": 42
                                  },
                                  "is_template": {
                                    "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": false
                                  },
                                  "issue_comment_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                  },
                                  "issue_events_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                  },
                                  "issues_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                  },
                                  "keys_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                  },
                                  "labels_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                  },
                                  "language": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "languages_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                  },
                                  "license": {
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "License Simple",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "name",
                                          "url",
                                          "spdx_id",
                                          "node_id"
                                        ],
                                        "properties": {
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri"
                                          },
                                          "key": {
                                            "type": "string",
                                            "example": "mit"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "MIT License"
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDc6TGljZW5zZW1pdA=="
                                          },
                                          "spdx_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "MIT"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "https://api.github.com/licenses/mit"
                                          }
                                        },
                                        "title": "License Simple"
                                      }
                                    ]
                                  },
                                  "master_branch": {
                                    "type": "string"
                                  },
                                  "merges_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                  },
                                  "milestones_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                  },
                                  "mirror_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true,
                                    "example": "git:git.example.com/octocat/Hello-World"
                                  },
                                  "name": {
                                    "description": "The name of the repository.",
                                    "type": "string",
                                    "example": "Team Environment"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                  },
                                  "notifications_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                  },
                                  "open_issues": {
                                    "type": "integer"
                                  },
                                  "open_issues_count": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "organization": {
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "Simple User",
                                        "type": "object",
                                        "required": [
                                          "avatar_url",
                                          "events_url",
                                          "followers_url",
                                          "following_url",
                                          "gists_url",
                                          "gravatar_id",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "login",
                                          "organizations_url",
                                          "received_events_url",
                                          "repos_url",
                                          "site_admin",
                                          "starred_url",
                                          "subscriptions_url",
                                          "type",
                                          "url"
                                        ],
                                        "properties": {
                                          "avatar_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/images/error/octocat_happy.gif"
                                          },
                                          "email": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/events{/privacy}"
                                          },
                                          "followers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/followers"
                                          },
                                          "following_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/following{/other_user}"
                                          },
                                          "gists_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                          },
                                          "gravatar_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "41d064eb2195891e12d0413f63227ea7"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat"
                                          },
                                          "id": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "login": {
                                            "type": "string",
                                            "example": "octocat"
                                          },
                                          "name": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDQ6VXNlcjE="
                                          },
                                          "organizations_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/orgs"
                                          },
                                          "received_events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/received_events"
                                          },
                                          "repos_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/repos"
                                          },
                                          "site_admin": {
                                            "type": "boolean"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:55Z\""
                                          },
                                          "starred_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                          },
                                          "subscriptions_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/subscriptions"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "User"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat"
                                          }
                                        },
                                        "nullable": true,
                                        "title": "Simple User"
                                      }
                                    ]
                                  },
                                  "owner": {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "required": [
                                      "admin",
                                      "pull",
                                      "push"
                                    ],
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "description": "Whether the repository is private or public.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "pulls_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                  },
                                  "pushed_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:06:43Z"
                                  },
                                  "releases_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                  },
                                  "size": {
                                    "type": "integer",
                                    "example": 108
                                  },
                                  "ssh_url": {
                                    "type": "string",
                                    "example": "git@github.com:octocat/Hello-World.git"
                                  },
                                  "stargazers_count": {
                                    "type": "integer",
                                    "example": 80
                                  },
                                  "stargazers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:42Z\""
                                  },
                                  "statuses_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                  },
                                  "subscription_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                  },
                                  "svn_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://svn.github.com/octocat/Hello-World"
                                  },
                                  "tags_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                  },
                                  "teams_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                  },
                                  "template_repository": {
                                    "type": "object",
                                    "properties": {
                                      "allow_merge_commit": {
                                        "type": "boolean"
                                      },
                                      "allow_rebase_merge": {
                                        "type": "boolean"
                                      },
                                      "allow_squash_merge": {
                                        "type": "boolean"
                                      },
                                      "anonymous_access_enabled": {
                                        "type": "boolean"
                                      },
                                      "archive_url": {
                                        "type": "string"
                                      },
                                      "archived": {
                                        "type": "boolean"
                                      },
                                      "assignees_url": {
                                        "type": "string"
                                      },
                                      "blobs_url": {
                                        "type": "string"
                                      },
                                      "branches_url": {
                                        "type": "string"
                                      },
                                      "clone_url": {
                                        "type": "string"
                                      },
                                      "collaborators_url": {
                                        "type": "string"
                                      },
                                      "comments_url": {
                                        "type": "string"
                                      },
                                      "commits_url": {
                                        "type": "string"
                                      },
                                      "compare_url": {
                                        "type": "string"
                                      },
                                      "contents_url": {
                                        "type": "string"
                                      },
                                      "contributors_url": {
                                        "type": "string"
                                      },
                                      "created_at": {
                                        "type": "string"
                                      },
                                      "default_branch": {
                                        "type": "string"
                                      },
                                      "delete_branch_on_merge": {
                                        "type": "boolean"
                                      },
                                      "deployments_url": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "disabled": {
                                        "type": "boolean"
                                      },
                                      "downloads_url": {
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "type": "string"
                                      },
                                      "fork": {
                                        "type": "boolean"
                                      },
                                      "forks_count": {
                                        "type": "integer"
                                      },
                                      "forks_url": {
                                        "type": "string"
                                      },
                                      "full_name": {
                                        "type": "string"
                                      },
                                      "git_commits_url": {
                                        "type": "string"
                                      },
                                      "git_refs_url": {
                                        "type": "string"
                                      },
                                      "git_tags_url": {
                                        "type": "string"
                                      },
                                      "git_url": {
                                        "type": "string"
                                      },
                                      "has_downloads": {
                                        "type": "boolean"
                                      },
                                      "has_issues": {
                                        "type": "boolean"
                                      },
                                      "has_pages": {
                                        "type": "boolean"
                                      },
                                      "has_projects": {
                                        "type": "boolean"
                                      },
                                      "has_wiki": {
                                        "type": "boolean"
                                      },
                                      "homepage": {
                                        "type": "string"
                                      },
                                      "hooks_url": {
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "is_template": {
                                        "type": "boolean"
                                      },
                                      "issue_comment_url": {
                                        "type": "string"
                                      },
                                      "issue_events_url": {
                                        "type": "string"
                                      },
                                      "issues_url": {
                                        "type": "string"
                                      },
                                      "keys_url": {
                                        "type": "string"
                                      },
                                      "labels_url": {
                                        "type": "string"
                                      },
                                      "language": {
                                        "type": "string"
                                      },
                                      "languages_url": {
                                        "type": "string"
                                      },
                                      "merges_url": {
                                        "type": "string"
                                      },
                                      "milestones_url": {
                                        "type": "string"
                                      },
                                      "mirror_url": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "network_count": {
                                        "type": "integer"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "notifications_url": {
                                        "type": "string"
                                      },
                                      "open_issues_count": {
                                        "type": "integer"
                                      },
                                      "owner": {
                                        "type": "object",
                                        "properties": {
                                          "avatar_url": {
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "type": "string"
                                          },
                                          "followers_url": {
                                            "type": "string"
                                          },
                                          "following_url": {
                                            "type": "string"
                                          },
                                          "gists_url": {
                                            "type": "string"
                                          },
                                          "gravatar_id": {
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "integer"
                                          },
                                          "login": {
                                            "type": "string"
                                          },
                                          "node_id": {
                                            "type": "string"
                                          },
                                          "organizations_url": {
                                            "type": "string"
                                          },
                                          "received_events_url": {
                                            "type": "string"
                                          },
                                          "repos_url": {
                                            "type": "string"
                                          },
                                          "site_admin": {
                                            "type": "boolean"
                                          },
                                          "starred_url": {
                                            "type": "string"
                                          },
                                          "subscriptions_url": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "url": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "permissions": {
                                        "type": "object",
                                        "properties": {
                                          "admin": {
                                            "type": "boolean"
                                          },
                                          "maintain": {
                                            "type": "boolean"
                                          },
                                          "pull": {
                                            "type": "boolean"
                                          },
                                          "push": {
                                            "type": "boolean"
                                          },
                                          "triage": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pulls_url": {
                                        "type": "string"
                                      },
                                      "pushed_at": {
                                        "type": "string"
                                      },
                                      "releases_url": {
                                        "type": "string"
                                      },
                                      "size": {
                                        "type": "integer"
                                      },
                                      "ssh_url": {
                                        "type": "string"
                                      },
                                      "stargazers_count": {
                                        "type": "integer"
                                      },
                                      "stargazers_url": {
                                        "type": "string"
                                      },
                                      "statuses_url": {
                                        "type": "string"
                                      },
                                      "subscribers_count": {
                                        "type": "integer"
                                      },
                                      "subscribers_url": {
                                        "type": "string"
                                      },
                                      "subscription_url": {
                                        "type": "string"
                                      },
                                      "svn_url": {
                                        "type": "string"
                                      },
                                      "tags_url": {
                                        "type": "string"
                                      },
                                      "teams_url": {
                                        "type": "string"
                                      },
                                      "topics": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "trees_url": {
                                        "type": "string"
                                      },
                                      "updated_at": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "visibility": {
                                        "type": "string"
                                      },
                                      "watchers_count": {
                                        "type": "integer"
                                      }
                                    },
                                    "nullable": true
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:14:43Z"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/repos/octocat/Hello-World"
                                  },
                                  "visibility": {
                                    "description": "The repository visibility: public, private, or internal.",
                                    "type": "string",
                                    "default": "public"
                                  },
                                  "watchers": {
                                    "type": "integer"
                                  },
                                  "watchers_count": {
                                    "type": "integer",
                                    "example": 80
                                  }
                                },
                                "title": "Repository"
                              }
                            ]
                          },
                          "topics": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "trees_url": {
                            "type": "string",
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true,
                            "example": "2011-01-26T19:14:43Z"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://api.github.com/repos/octocat/Hello-World"
                          },
                          "visibility": {
                            "type": "string"
                          },
                          "watchers": {
                            "type": "integer",
                            "example": 0
                          },
                          "watchers_count": {
                            "type": "integer"
                          }
                        },
                        "title": "Minimal Repository"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "archived": false,
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "clone_url": "https://github.com/octocat/Hello-World.git",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                            "created_at": "2011-01-26T19:01:12Z",
                            "default_branch": "master",
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                            "description": "This your first repo!",
                            "disabled": false,
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                            "fork": false,
                            "forks_count": 9,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                            "full_name": "octocat/Hello-World",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "git_url": "git:github.com/octocat/Hello-World.git",
                            "has_downloads": true,
                            "has_issues": true,
                            "has_pages": false,
                            "has_projects": true,
                            "has_wiki": true,
                            "homepage": "https://github.com",
                            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                            "html_url": "https://github.com/octocat/Hello-World",
                            "id": 1296269,
                            "is_template": false,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "language": null,
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "mirror_url": "git:git.example.com/octocat/Hello-World",
                            "name": "Hello-World",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "open_issues_count": 0,
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "permissions": {
                              "admin": false,
                              "pull": true,
                              "push": false
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "pushed_at": "2011-01-26T19:06:43Z",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "size": 108,
                            "ssh_url": "git@github.com:octocat/Hello-World.git",
                            "stargazers_count": 80,
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                            "svn_url": "https://svn.github.com/octocat/Hello-World",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                            "template_repository": {
                              "allow_merge_commit": true,
                              "allow_rebase_merge": true,
                              "allow_squash_merge": true,
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
                              "archived": false,
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
                              "clone_url": "https://github.com/octocat/Hello-World-Template.git",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
                              "created_at": "2011-01-26T19:01:12Z",
                              "default_branch": "master",
                              "delete_branch_on_merge": true,
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
                              "description": "This your first repo!",
                              "disabled": false,
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
                              "fork": false,
                              "forks": 9,
                              "forks_count": 9,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
                              "full_name": "octocat/Hello-World-Template",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World-Template.git",
                              "has_downloads": true,
                              "has_issues": true,
                              "has_pages": false,
                              "has_projects": true,
                              "has_wiki": true,
                              "homepage": "https://github.com",
                              "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
                              "html_url": "https://github.com/octocat/Hello-World-Template",
                              "id": 1296269,
                              "is_template": true,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
                              "language": null,
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
                              "license": {
                                "html_url": "https://api.github.com/licenses/mit",
                                "key": "mit",
                                "name": "MIT License",
                                "node_id": "MDc6TGljZW5zZW1pdA==",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit"
                              },
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
                              "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
                              "name": "Hello-World-Template",
                              "network_count": 0,
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
                              "open_issues": 0,
                              "open_issues_count": 0,
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "gravatar_id": "",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "permissions": {
                                "admin": false,
                                "pull": true,
                                "push": false
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
                              "pushed_at": "2011-01-26T19:06:43Z",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
                              "size": 108,
                              "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
                              "stargazers_count": 80,
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
                              "subscribers_count": 42,
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
                              "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
                              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                              "topics": [
                                "octocat",
                                "atom",
                                "electron",
                                "api"
                              ],
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
                              "updated_at": "2011-01-26T19:14:43Z",
                              "url": "https://api.github.com/repos/octocat/Hello-World-Template",
                              "visibility": "public",
                              "watchers": 80,
                              "watchers_count": 80
                            },
                            "topics": [
                              "octocat",
                              "atom",
                              "electron",
                              "api"
                            ],
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "updated_at": "2011-01-26T19:14:43Z",
                            "url": "https://api.github.com/repos/octocat/Hello-World",
                            "visibility": "public",
                            "watchers_count": 80
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "Check team permissions for a repository",
            "description": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.\n\nIf a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#check-team-permissions-for-a-repository"
            },
            "operationId": "teams/check-permissions-for-repo-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Alternative response with repository permissions",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "A team's access to a repository.",
                      "type": "object",
                      "required": [
                        "archive_url",
                        "assignees_url",
                        "blobs_url",
                        "branches_url",
                        "collaborators_url",
                        "comments_url",
                        "commits_url",
                        "compare_url",
                        "contents_url",
                        "contributors_url",
                        "deployments_url",
                        "description",
                        "downloads_url",
                        "events_url",
                        "fork",
                        "forks_url",
                        "full_name",
                        "git_commits_url",
                        "git_refs_url",
                        "git_tags_url",
                        "hooks_url",
                        "html_url",
                        "id",
                        "node_id",
                        "issue_comment_url",
                        "issue_events_url",
                        "issues_url",
                        "keys_url",
                        "labels_url",
                        "languages_url",
                        "merges_url",
                        "milestones_url",
                        "name",
                        "notifications_url",
                        "owner",
                        "private",
                        "pulls_url",
                        "releases_url",
                        "stargazers_url",
                        "statuses_url",
                        "subscribers_url",
                        "subscription_url",
                        "tags_url",
                        "teams_url",
                        "trees_url",
                        "url",
                        "clone_url",
                        "default_branch",
                        "forks",
                        "forks_count",
                        "git_url",
                        "has_downloads",
                        "has_issues",
                        "has_projects",
                        "has_wiki",
                        "has_pages",
                        "homepage",
                        "language",
                        "archived",
                        "disabled",
                        "mirror_url",
                        "open_issues",
                        "open_issues_count",
                        "license",
                        "pushed_at",
                        "size",
                        "ssh_url",
                        "stargazers_count",
                        "svn_url",
                        "watchers",
                        "watchers_count",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "allow_merge_commit": {
                          "description": "Whether to allow merge commits for pull requests.",
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "allow_rebase_merge": {
                          "description": "Whether to allow rebase merges for pull requests.",
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "allow_squash_merge": {
                          "description": "Whether to allow squash merges for pull requests.",
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "anonymous_access_enabled": {
                          "type": "boolean"
                        },
                        "archive_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                        },
                        "archived": {
                          "description": "Whether the repository is archived.",
                          "type": "boolean",
                          "default": false
                        },
                        "assignees_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                        },
                        "blobs_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                        },
                        "branches_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                        },
                        "clone_url": {
                          "type": "string",
                          "example": "https://github.com/octocat/Hello-World.git"
                        },
                        "collaborators_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                        },
                        "comments_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                        },
                        "commits_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                        },
                        "compare_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                        },
                        "contents_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                        },
                        "contributors_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2011-01-26T19:01:12Z"
                        },
                        "default_branch": {
                          "description": "The default branch of the repository.",
                          "type": "string",
                          "example": "master"
                        },
                        "delete_branch_on_merge": {
                          "description": "Whether to delete head branches when pull requests are merged",
                          "type": "boolean",
                          "example": false,
                          "default": false
                        },
                        "deployments_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true,
                          "example": "This your first repo!"
                        },
                        "disabled": {
                          "description": "Returns whether or not this repository disabled.",
                          "type": "boolean"
                        },
                        "downloads_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                        },
                        "events_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/events"
                        },
                        "fork": {
                          "type": "boolean"
                        },
                        "forks": {
                          "type": "integer"
                        },
                        "forks_count": {
                          "type": "integer",
                          "example": 9
                        },
                        "forks_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                        },
                        "full_name": {
                          "type": "string",
                          "example": "octocat/Hello-World"
                        },
                        "git_commits_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                        },
                        "git_refs_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                        },
                        "git_tags_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                        },
                        "git_url": {
                          "type": "string",
                          "example": "git:github.com/octocat/Hello-World.git"
                        },
                        "has_downloads": {
                          "description": "Whether downloads are enabled.",
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "has_issues": {
                          "description": "Whether issues are enabled.",
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "has_pages": {
                          "type": "boolean"
                        },
                        "has_projects": {
                          "description": "Whether projects are enabled.",
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "has_wiki": {
                          "description": "Whether the wiki is enabled.",
                          "type": "boolean",
                          "example": true,
                          "default": true
                        },
                        "homepage": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true,
                          "example": "https://github.com"
                        },
                        "hooks_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                        },
                        "html_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://github.com/octocat/Hello-World"
                        },
                        "id": {
                          "description": "Unique identifier of the repository",
                          "type": "integer",
                          "example": 42
                        },
                        "is_template": {
                          "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                          "type": "boolean",
                          "example": true,
                          "default": false
                        },
                        "issue_comment_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                        },
                        "issue_events_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                        },
                        "issues_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                        },
                        "keys_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                        },
                        "labels_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                        },
                        "language": {
                          "type": "string",
                          "nullable": true
                        },
                        "languages_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                        },
                        "license": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "License Simple",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "url",
                                "spdx_id",
                                "node_id"
                              ],
                              "properties": {
                                "html_url": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "key": {
                                  "type": "string",
                                  "example": "mit"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "MIT License"
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDc6TGljZW5zZW1pdA=="
                                },
                                "spdx_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "MIT"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "nullable": true,
                                  "example": "https://api.github.com/licenses/mit"
                                }
                              },
                              "title": "License Simple"
                            }
                          ]
                        },
                        "master_branch": {
                          "type": "string"
                        },
                        "merges_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                        },
                        "milestones_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                        },
                        "mirror_url": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true,
                          "example": "git:git.example.com/octocat/Hello-World"
                        },
                        "name": {
                          "description": "The name of the repository.",
                          "type": "string",
                          "example": "Team Environment"
                        },
                        "network_count": {
                          "type": "integer"
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                        },
                        "notifications_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                        },
                        "open_issues": {
                          "type": "integer"
                        },
                        "open_issues_count": {
                          "type": "integer",
                          "example": 0
                        },
                        "owner": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            }
                          ]
                        },
                        "permissions": {
                          "type": "object",
                          "required": [
                            "admin",
                            "pull",
                            "push"
                          ],
                          "properties": {
                            "admin": {
                              "type": "boolean"
                            },
                            "maintain": {
                              "type": "boolean"
                            },
                            "pull": {
                              "type": "boolean"
                            },
                            "push": {
                              "type": "boolean"
                            },
                            "triage": {
                              "type": "boolean"
                            }
                          }
                        },
                        "private": {
                          "description": "Whether the repository is private or public.",
                          "type": "boolean",
                          "default": false
                        },
                        "pulls_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                        },
                        "pushed_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2011-01-26T19:06:43Z"
                        },
                        "releases_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                        },
                        "size": {
                          "type": "integer",
                          "example": 108
                        },
                        "ssh_url": {
                          "type": "string",
                          "example": "git@github.com:octocat/Hello-World.git"
                        },
                        "stargazers_count": {
                          "type": "integer",
                          "example": 80
                        },
                        "stargazers_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                        },
                        "statuses_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                        },
                        "subscribers_count": {
                          "type": "integer"
                        },
                        "subscribers_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                        },
                        "subscription_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                        },
                        "svn_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://svn.github.com/octocat/Hello-World"
                        },
                        "tags_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                        },
                        "teams_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                        },
                        "template_repository": {
                          "type": "object",
                          "properties": {
                            "anonymous_access_enabled": {
                              "type": "boolean"
                            }
                          },
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "A git repository",
                              "type": "object",
                              "required": [
                                "archive_url",
                                "assignees_url",
                                "blobs_url",
                                "branches_url",
                                "collaborators_url",
                                "comments_url",
                                "commits_url",
                                "compare_url",
                                "contents_url",
                                "contributors_url",
                                "deployments_url",
                                "description",
                                "downloads_url",
                                "events_url",
                                "fork",
                                "forks_url",
                                "full_name",
                                "git_commits_url",
                                "git_refs_url",
                                "git_tags_url",
                                "hooks_url",
                                "html_url",
                                "id",
                                "node_id",
                                "issue_comment_url",
                                "issue_events_url",
                                "issues_url",
                                "keys_url",
                                "labels_url",
                                "languages_url",
                                "merges_url",
                                "milestones_url",
                                "name",
                                "notifications_url",
                                "owner",
                                "private",
                                "pulls_url",
                                "releases_url",
                                "stargazers_url",
                                "statuses_url",
                                "subscribers_url",
                                "subscription_url",
                                "tags_url",
                                "teams_url",
                                "trees_url",
                                "url",
                                "clone_url",
                                "default_branch",
                                "forks",
                                "forks_count",
                                "git_url",
                                "has_downloads",
                                "has_issues",
                                "has_projects",
                                "has_wiki",
                                "has_pages",
                                "homepage",
                                "language",
                                "archived",
                                "disabled",
                                "mirror_url",
                                "open_issues",
                                "open_issues_count",
                                "license",
                                "pushed_at",
                                "size",
                                "ssh_url",
                                "stargazers_count",
                                "svn_url",
                                "watchers",
                                "watchers_count",
                                "created_at",
                                "updated_at"
                              ],
                              "properties": {
                                "allow_merge_commit": {
                                  "description": "Whether to allow merge commits for pull requests.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "allow_rebase_merge": {
                                  "description": "Whether to allow rebase merges for pull requests.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "allow_squash_merge": {
                                  "description": "Whether to allow squash merges for pull requests.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "anonymous_access_enabled": {
                                  "type": "boolean"
                                },
                                "archive_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                },
                                "archived": {
                                  "description": "Whether the repository is archived.",
                                  "type": "boolean",
                                  "default": false
                                },
                                "assignees_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                },
                                "blobs_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                },
                                "branches_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                },
                                "clone_url": {
                                  "type": "string",
                                  "example": "https://github.com/octocat/Hello-World.git"
                                },
                                "collaborators_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                },
                                "comments_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                },
                                "commits_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                },
                                "compare_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                },
                                "contents_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                },
                                "contributors_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "nullable": true,
                                  "example": "2011-01-26T19:01:12Z"
                                },
                                "default_branch": {
                                  "description": "The default branch of the repository.",
                                  "type": "string",
                                  "example": "master"
                                },
                                "delete_branch_on_merge": {
                                  "description": "Whether to delete head branches when pull requests are merged",
                                  "type": "boolean",
                                  "example": false,
                                  "default": false
                                },
                                "deployments_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "This your first repo!"
                                },
                                "disabled": {
                                  "description": "Returns whether or not this repository disabled.",
                                  "type": "boolean"
                                },
                                "downloads_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                },
                                "events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                },
                                "fork": {
                                  "type": "boolean"
                                },
                                "forks": {
                                  "type": "integer"
                                },
                                "forks_count": {
                                  "type": "integer",
                                  "example": 9
                                },
                                "forks_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                },
                                "full_name": {
                                  "type": "string",
                                  "example": "octocat/Hello-World"
                                },
                                "git_commits_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                },
                                "git_refs_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                },
                                "git_tags_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                },
                                "git_url": {
                                  "type": "string",
                                  "example": "git:github.com/octocat/Hello-World.git"
                                },
                                "has_downloads": {
                                  "description": "Whether downloads are enabled.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "has_issues": {
                                  "description": "Whether issues are enabled.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "has_pages": {
                                  "type": "boolean"
                                },
                                "has_projects": {
                                  "description": "Whether projects are enabled.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "has_wiki": {
                                  "description": "Whether the wiki is enabled.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                },
                                "homepage": {
                                  "type": "string",
                                  "format": "uri",
                                  "nullable": true,
                                  "example": "https://github.com"
                                },
                                "hooks_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat/Hello-World"
                                },
                                "id": {
                                  "description": "Unique identifier of the repository",
                                  "type": "integer",
                                  "example": 42
                                },
                                "is_template": {
                                  "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": false
                                },
                                "issue_comment_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                },
                                "issue_events_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                },
                                "issues_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                },
                                "keys_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                },
                                "labels_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                },
                                "language": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "languages_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                },
                                "license": {
                                  "nullable": true,
                                  "allOf": [
                                    {
                                      "description": "License Simple",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "name",
                                        "url",
                                        "spdx_id",
                                        "node_id"
                                      ],
                                      "properties": {
                                        "html_url": {
                                          "type": "string",
                                          "format": "uri"
                                        },
                                        "key": {
                                          "type": "string",
                                          "example": "mit"
                                        },
                                        "name": {
                                          "type": "string",
                                          "example": "MIT License"
                                        },
                                        "node_id": {
                                          "type": "string",
                                          "example": "MDc6TGljZW5zZW1pdA=="
                                        },
                                        "spdx_id": {
                                          "type": "string",
                                          "nullable": true,
                                          "example": "MIT"
                                        },
                                        "url": {
                                          "type": "string",
                                          "format": "uri",
                                          "nullable": true,
                                          "example": "https://api.github.com/licenses/mit"
                                        }
                                      },
                                      "title": "License Simple"
                                    }
                                  ]
                                },
                                "master_branch": {
                                  "type": "string"
                                },
                                "merges_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                },
                                "milestones_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                },
                                "mirror_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "nullable": true,
                                  "example": "git:git.example.com/octocat/Hello-World"
                                },
                                "name": {
                                  "description": "The name of the repository.",
                                  "type": "string",
                                  "example": "Team Environment"
                                },
                                "network_count": {
                                  "type": "integer"
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                },
                                "notifications_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                },
                                "open_issues": {
                                  "type": "integer"
                                },
                                "open_issues_count": {
                                  "type": "integer",
                                  "example": 0
                                },
                                "organization": {
                                  "nullable": true,
                                  "allOf": [
                                    {
                                      "description": "Simple User",
                                      "type": "object",
                                      "required": [
                                        "avatar_url",
                                        "events_url",
                                        "followers_url",
                                        "following_url",
                                        "gists_url",
                                        "gravatar_id",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "login",
                                        "organizations_url",
                                        "received_events_url",
                                        "repos_url",
                                        "site_admin",
                                        "starred_url",
                                        "subscriptions_url",
                                        "type",
                                        "url"
                                      ],
                                      "properties": {
                                        "avatar_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://github.com/images/error/octocat_happy.gif"
                                        },
                                        "email": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "events_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/events{/privacy}"
                                        },
                                        "followers_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/followers"
                                        },
                                        "following_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/following{/other_user}"
                                        },
                                        "gists_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                        },
                                        "gravatar_id": {
                                          "type": "string",
                                          "nullable": true,
                                          "example": "41d064eb2195891e12d0413f63227ea7"
                                        },
                                        "html_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://github.com/octocat"
                                        },
                                        "id": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "login": {
                                          "type": "string",
                                          "example": "octocat"
                                        },
                                        "name": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "node_id": {
                                          "type": "string",
                                          "example": "MDQ6VXNlcjE="
                                        },
                                        "organizations_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/orgs"
                                        },
                                        "received_events_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/received_events"
                                        },
                                        "repos_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/repos"
                                        },
                                        "site_admin": {
                                          "type": "boolean"
                                        },
                                        "starred_at": {
                                          "type": "string",
                                          "example": "\"2020-07-09T00:17:55Z\""
                                        },
                                        "starred_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                        },
                                        "subscriptions_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/subscriptions"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "User"
                                        },
                                        "url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat"
                                        }
                                      },
                                      "nullable": true,
                                      "title": "Simple User"
                                    }
                                  ]
                                },
                                "owner": {
                                  "description": "Simple User",
                                  "type": "object",
                                  "required": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "properties": {
                                    "avatar_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://github.com/images/error/octocat_happy.gif"
                                    },
                                    "email": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "events_url": {
                                      "type": "string",
                                      "example": "https://api.github.com/users/octocat/events{/privacy}"
                                    },
                                    "followers_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://api.github.com/users/octocat/followers"
                                    },
                                    "following_url": {
                                      "type": "string",
                                      "example": "https://api.github.com/users/octocat/following{/other_user}"
                                    },
                                    "gists_url": {
                                      "type": "string",
                                      "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                    },
                                    "gravatar_id": {
                                      "type": "string",
                                      "nullable": true,
                                      "example": "41d064eb2195891e12d0413f63227ea7"
                                    },
                                    "html_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://github.com/octocat"
                                    },
                                    "id": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "login": {
                                      "type": "string",
                                      "example": "octocat"
                                    },
                                    "name": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "node_id": {
                                      "type": "string",
                                      "example": "MDQ6VXNlcjE="
                                    },
                                    "organizations_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://api.github.com/users/octocat/orgs"
                                    },
                                    "received_events_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://api.github.com/users/octocat/received_events"
                                    },
                                    "repos_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://api.github.com/users/octocat/repos"
                                    },
                                    "site_admin": {
                                      "type": "boolean"
                                    },
                                    "starred_at": {
                                      "type": "string",
                                      "example": "\"2020-07-09T00:17:55Z\""
                                    },
                                    "starred_url": {
                                      "type": "string",
                                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                    },
                                    "subscriptions_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://api.github.com/users/octocat/subscriptions"
                                    },
                                    "type": {
                                      "type": "string",
                                      "example": "User"
                                    },
                                    "url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://api.github.com/users/octocat"
                                    }
                                  },
                                  "nullable": true,
                                  "title": "Simple User"
                                },
                                "permissions": {
                                  "type": "object",
                                  "required": [
                                    "admin",
                                    "pull",
                                    "push"
                                  ],
                                  "properties": {
                                    "admin": {
                                      "type": "boolean"
                                    },
                                    "maintain": {
                                      "type": "boolean"
                                    },
                                    "pull": {
                                      "type": "boolean"
                                    },
                                    "push": {
                                      "type": "boolean"
                                    },
                                    "triage": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "private": {
                                  "description": "Whether the repository is private or public.",
                                  "type": "boolean",
                                  "default": false
                                },
                                "pulls_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                },
                                "pushed_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "nullable": true,
                                  "example": "2011-01-26T19:06:43Z"
                                },
                                "releases_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                },
                                "size": {
                                  "type": "integer",
                                  "example": 108
                                },
                                "ssh_url": {
                                  "type": "string",
                                  "example": "git@github.com:octocat/Hello-World.git"
                                },
                                "stargazers_count": {
                                  "type": "integer",
                                  "example": 80
                                },
                                "stargazers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:42Z\""
                                },
                                "statuses_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                },
                                "subscribers_count": {
                                  "type": "integer"
                                },
                                "subscribers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                },
                                "subscription_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                },
                                "svn_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://svn.github.com/octocat/Hello-World"
                                },
                                "tags_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                },
                                "teams_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                },
                                "template_repository": {
                                  "type": "object",
                                  "properties": {
                                    "allow_merge_commit": {
                                      "type": "boolean"
                                    },
                                    "allow_rebase_merge": {
                                      "type": "boolean"
                                    },
                                    "allow_squash_merge": {
                                      "type": "boolean"
                                    },
                                    "anonymous_access_enabled": {
                                      "type": "boolean"
                                    },
                                    "archive_url": {
                                      "type": "string"
                                    },
                                    "archived": {
                                      "type": "boolean"
                                    },
                                    "assignees_url": {
                                      "type": "string"
                                    },
                                    "blobs_url": {
                                      "type": "string"
                                    },
                                    "branches_url": {
                                      "type": "string"
                                    },
                                    "clone_url": {
                                      "type": "string"
                                    },
                                    "collaborators_url": {
                                      "type": "string"
                                    },
                                    "comments_url": {
                                      "type": "string"
                                    },
                                    "commits_url": {
                                      "type": "string"
                                    },
                                    "compare_url": {
                                      "type": "string"
                                    },
                                    "contents_url": {
                                      "type": "string"
                                    },
                                    "contributors_url": {
                                      "type": "string"
                                    },
                                    "created_at": {
                                      "type": "string"
                                    },
                                    "default_branch": {
                                      "type": "string"
                                    },
                                    "delete_branch_on_merge": {
                                      "type": "boolean"
                                    },
                                    "deployments_url": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "disabled": {
                                      "type": "boolean"
                                    },
                                    "downloads_url": {
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "type": "string"
                                    },
                                    "fork": {
                                      "type": "boolean"
                                    },
                                    "forks_count": {
                                      "type": "integer"
                                    },
                                    "forks_url": {
                                      "type": "string"
                                    },
                                    "full_name": {
                                      "type": "string"
                                    },
                                    "git_commits_url": {
                                      "type": "string"
                                    },
                                    "git_refs_url": {
                                      "type": "string"
                                    },
                                    "git_tags_url": {
                                      "type": "string"
                                    },
                                    "git_url": {
                                      "type": "string"
                                    },
                                    "has_downloads": {
                                      "type": "boolean"
                                    },
                                    "has_issues": {
                                      "type": "boolean"
                                    },
                                    "has_pages": {
                                      "type": "boolean"
                                    },
                                    "has_projects": {
                                      "type": "boolean"
                                    },
                                    "has_wiki": {
                                      "type": "boolean"
                                    },
                                    "homepage": {
                                      "type": "string"
                                    },
                                    "hooks_url": {
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "is_template": {
                                      "type": "boolean"
                                    },
                                    "issue_comment_url": {
                                      "type": "string"
                                    },
                                    "issue_events_url": {
                                      "type": "string"
                                    },
                                    "issues_url": {
                                      "type": "string"
                                    },
                                    "keys_url": {
                                      "type": "string"
                                    },
                                    "labels_url": {
                                      "type": "string"
                                    },
                                    "language": {
                                      "type": "string"
                                    },
                                    "languages_url": {
                                      "type": "string"
                                    },
                                    "merges_url": {
                                      "type": "string"
                                    },
                                    "milestones_url": {
                                      "type": "string"
                                    },
                                    "mirror_url": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "network_count": {
                                      "type": "integer"
                                    },
                                    "node_id": {
                                      "type": "string"
                                    },
                                    "notifications_url": {
                                      "type": "string"
                                    },
                                    "open_issues_count": {
                                      "type": "integer"
                                    },
                                    "owner": {
                                      "type": "object",
                                      "properties": {
                                        "avatar_url": {
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "type": "string"
                                        },
                                        "followers_url": {
                                          "type": "string"
                                        },
                                        "following_url": {
                                          "type": "string"
                                        },
                                        "gists_url": {
                                          "type": "string"
                                        },
                                        "gravatar_id": {
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "type": "string"
                                        },
                                        "id": {
                                          "type": "integer"
                                        },
                                        "login": {
                                          "type": "string"
                                        },
                                        "node_id": {
                                          "type": "string"
                                        },
                                        "organizations_url": {
                                          "type": "string"
                                        },
                                        "received_events_url": {
                                          "type": "string"
                                        },
                                        "repos_url": {
                                          "type": "string"
                                        },
                                        "site_admin": {
                                          "type": "boolean"
                                        },
                                        "starred_url": {
                                          "type": "string"
                                        },
                                        "subscriptions_url": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "permissions": {
                                      "type": "object",
                                      "properties": {
                                        "admin": {
                                          "type": "boolean"
                                        },
                                        "maintain": {
                                          "type": "boolean"
                                        },
                                        "pull": {
                                          "type": "boolean"
                                        },
                                        "push": {
                                          "type": "boolean"
                                        },
                                        "triage": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "private": {
                                      "type": "boolean"
                                    },
                                    "pulls_url": {
                                      "type": "string"
                                    },
                                    "pushed_at": {
                                      "type": "string"
                                    },
                                    "releases_url": {
                                      "type": "string"
                                    },
                                    "size": {
                                      "type": "integer"
                                    },
                                    "ssh_url": {
                                      "type": "string"
                                    },
                                    "stargazers_count": {
                                      "type": "integer"
                                    },
                                    "stargazers_url": {
                                      "type": "string"
                                    },
                                    "statuses_url": {
                                      "type": "string"
                                    },
                                    "subscribers_count": {
                                      "type": "integer"
                                    },
                                    "subscribers_url": {
                                      "type": "string"
                                    },
                                    "subscription_url": {
                                      "type": "string"
                                    },
                                    "svn_url": {
                                      "type": "string"
                                    },
                                    "tags_url": {
                                      "type": "string"
                                    },
                                    "teams_url": {
                                      "type": "string"
                                    },
                                    "topics": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "trees_url": {
                                      "type": "string"
                                    },
                                    "updated_at": {
                                      "type": "string"
                                    },
                                    "url": {
                                      "type": "string"
                                    },
                                    "visibility": {
                                      "type": "string"
                                    },
                                    "watchers_count": {
                                      "type": "integer"
                                    }
                                  },
                                  "nullable": true
                                },
                                "topics": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "trees_url": {
                                  "type": "string",
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time",
                                  "nullable": true,
                                  "example": "2011-01-26T19:14:43Z"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/repos/octocat/Hello-World"
                                },
                                "visibility": {
                                  "description": "The repository visibility: public, private, or internal.",
                                  "type": "string",
                                  "default": "public"
                                },
                                "watchers": {
                                  "type": "integer"
                                },
                                "watchers_count": {
                                  "type": "integer",
                                  "example": 80
                                }
                              },
                              "title": "Repository"
                            }
                          ]
                        },
                        "topics": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "trees_url": {
                          "type": "string",
                          "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2011-01-26T19:14:43Z"
                        },
                        "url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/repos/octocat/Hello-World"
                        },
                        "visibility": {
                          "description": "The repository visibility: public, private, or internal.",
                          "type": "string",
                          "default": "public"
                        },
                        "watchers": {
                          "type": "integer"
                        },
                        "watchers_count": {
                          "type": "integer",
                          "example": 80
                        }
                      },
                      "title": "Team Repository"
                    },
                    "examples": {
                      "alternative-response-with-repository-permissions": {
                        "value": {
                          "allow_merge_commit": true,
                          "allow_rebase_merge": true,
                          "allow_squash_merge": true,
                          "anonymous_access_enabled": false,
                          "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                          "archived": false,
                          "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                          "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                          "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                          "clone_url": "https://github.com/octocat/Hello-World.git",
                          "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                          "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                          "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                          "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                          "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                          "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                          "created_at": "2011-01-26T19:01:12Z",
                          "default_branch": "master",
                          "delete_branch_on_merge": true,
                          "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                          "description": "This your first repo!",
                          "disabled": false,
                          "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                          "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                          "fork": false,
                          "forks": 1,
                          "forks_count": 9,
                          "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                          "full_name": "octocat/Hello-World",
                          "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                          "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                          "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                          "git_url": "git:github.com/octocat/Hello-World.git",
                          "has_downloads": true,
                          "has_issues": true,
                          "has_pages": false,
                          "has_projects": true,
                          "has_wiki": true,
                          "homepage": "https://github.com",
                          "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                          "html_url": "https://github.com/octocat/Hello-World",
                          "id": 1296269,
                          "is_template": false,
                          "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                          "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                          "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                          "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                          "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                          "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                          "license": {
                            "html_url": "https://api.github.com/licenses/mit",
                            "key": "mit",
                            "name": "MIT License",
                            "node_id": "MDc6TGljZW5zZW1pdA==",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit"
                          },
                          "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                          "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                          "mirror_url": "git:git.example.com/octocat/Hello-World",
                          "name": "Hello-World",
                          "network_count": 0,
                          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                          "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                          "open_issues": 1,
                          "open_issues_count": 0,
                          "owner": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "permissions": {
                            "admin": false,
                            "pull": true,
                            "push": false
                          },
                          "private": false,
                          "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                          "pushed_at": "2011-01-26T19:06:43Z",
                          "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                          "size": 108,
                          "ssh_url": "git@github.com:octocat/Hello-World.git",
                          "stargazers_count": 80,
                          "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                          "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                          "subscribers_count": 42,
                          "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                          "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                          "svn_url": "https://svn.github.com/octocat/Hello-World",
                          "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                          "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                          "template_repository": {
                            "allow_merge_commit": true,
                            "allow_rebase_merge": true,
                            "allow_squash_merge": true,
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
                            "archived": false,
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
                            "clone_url": "https://github.com/octocat/Hello-World-Template.git",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
                            "created_at": "2011-01-26T19:01:12Z",
                            "default_branch": "master",
                            "delete_branch_on_merge": true,
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
                            "description": "This your first repo!",
                            "disabled": false,
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
                            "fork": false,
                            "forks": 9,
                            "forks_count": 9,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
                            "full_name": "octocat/Hello-World-Template",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
                            "git_url": "git:github.com/octocat/Hello-World-Template.git",
                            "has_downloads": true,
                            "has_issues": true,
                            "has_pages": false,
                            "has_projects": true,
                            "has_wiki": true,
                            "homepage": "https://github.com",
                            "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
                            "html_url": "https://github.com/octocat/Hello-World-Template",
                            "id": 1296269,
                            "is_template": true,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
                            "license": {
                              "html_url": "https://api.github.com/licenses/mit",
                              "key": "mit",
                              "name": "MIT License",
                              "node_id": "MDc6TGljZW5zZW1pdA==",
                              "spdx_id": "MIT",
                              "url": "https://api.github.com/licenses/mit"
                            },
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
                            "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
                            "name": "Hello-World-Template",
                            "network_count": 0,
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
                            "open_issues": 0,
                            "open_issues_count": 0,
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "permissions": {
                              "admin": false,
                              "pull": true,
                              "push": false
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
                            "pushed_at": "2011-01-26T19:06:43Z",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
                            "size": 108,
                            "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
                            "stargazers_count": 80,
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
                            "subscribers_count": 42,
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
                            "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
                            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                            "topics": [
                              "octocat",
                              "atom",
                              "electron",
                              "api"
                            ],
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
                            "updated_at": "2011-01-26T19:14:43Z",
                            "url": "https://api.github.com/repos/octocat/Hello-World-Template",
                            "visibility": "public",
                            "watchers": 80,
                            "watchers_count": 80
                          },
                          "topics": [
                            "octocat",
                            "atom",
                            "electron",
                            "api"
                          ],
                          "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                          "updated_at": "2011-01-26T19:14:43Z",
                          "url": "https://api.github.com/repos/octocat/Hello-World",
                          "visibility": "public",
                          "watchers": 1,
                          "watchers_count": 80
                        }
                      }
                    }
                  }
                }
              },
              "204": {
                "description": "Response if team has permission for the repository. This is the response when the repository media type hasn't been provded in the Accept header."
              },
              "404": {
                "description": "Not Found if team does not have permission for the repository"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "teams"
            ],
            "summary": "Add or update team repository permissions",
            "description": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.\n\nFor more information about the permission levels, see \"[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\".",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#add-or-update-team-repository-permissions"
            },
            "operationId": "teams/add-or-update-repo-permissions-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "permission": {
                        "description": "The permission to grant the team on this repository. Can be one of:  \n\\* `pull` - team members can pull, but not push to or administer this repository.  \n\\* `push` - team members can pull and push, but not administer this repository.  \n\\* `admin` - team members can pull, push and administer this repository.  \n\\* `maintain` - team members can manage the repository without access to sensitive or destructive actions. Recommended for project managers. Only applies to repositories owned by organizations.  \n\\* `triage` - team members can proactively manage issues and pull requests without write access. Recommended for contributors who triage a repository. Only applies to repositories owned by organizations.  \n  \nIf no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.",
                        "type": "string",
                        "enum": [
                          "pull",
                          "push",
                          "admin",
                          "maintain",
                          "triage"
                        ]
                      }
                    }
                  }
                }
              },
              "required": null
            },
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "teams"
            ],
            "summary": "Remove a repository from a team",
            "description": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams/#remove-a-repository-from-a-team"
            },
            "operationId": "teams/remove-repo-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/teams",
        {
          "get": {
            "tags": [
              "teams"
            ],
            "summary": "List child teams",
            "description": "Lists the child teams of the team specified by `{team_slug}`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/teams`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-child-teams"
            },
            "operationId": "teams/list-child-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "team_slug",
                "description": "team_slug parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "if child teams exist",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "Groups of organization members that gives permissions on specified repositories.",
                        "type": "object",
                        "required": [
                          "id",
                          "node_id",
                          "url",
                          "members_url",
                          "name",
                          "description",
                          "permission",
                          "html_url",
                          "repositories_url",
                          "slug",
                          "parent"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "html_url": {
                            "type": "string",
                            "format": "uri",
                            "example": "https://github.com/orgs/rails/teams/core"
                          },
                          "id": {
                            "type": "integer"
                          },
                          "members_url": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "node_id": {
                            "type": "string"
                          },
                          "parent": {
                            "nullable": true,
                            "allOf": [
                              {
                                "description": "Groups of organization members that gives permissions on specified repositories.",
                                "type": "object",
                                "required": [
                                  "id",
                                  "node_id",
                                  "url",
                                  "members_url",
                                  "name",
                                  "description",
                                  "permission",
                                  "html_url",
                                  "repositories_url",
                                  "slug"
                                ],
                                "properties": {
                                  "description": {
                                    "description": "Description of the team",
                                    "type": "string",
                                    "nullable": true,
                                    "example": "A great team."
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/orgs/rails/teams/core"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the team",
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "ldap_dn": {
                                    "description": "Distinguished Name (DN) that team maps to within LDAP environment",
                                    "type": "string",
                                    "example": "uid=example,ou=users,dc=github,dc=com"
                                  },
                                  "members_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/organizations/1/team/1/members{/member}"
                                  },
                                  "name": {
                                    "description": "Name of the team",
                                    "type": "string",
                                    "example": "Justice League"
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VGVhbTE="
                                  },
                                  "permission": {
                                    "description": "Permission that the team will have for its repositories",
                                    "type": "string",
                                    "example": "admin"
                                  },
                                  "privacy": {
                                    "description": "The level of privacy this team should have",
                                    "type": "string",
                                    "example": "closed"
                                  },
                                  "repositories_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/organizations/1/team/1/repos"
                                  },
                                  "slug": {
                                    "type": "string",
                                    "example": "justice-league"
                                  },
                                  "url": {
                                    "description": "URL for the team",
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/organizations/1/team/1"
                                  }
                                },
                                "nullable": true,
                                "title": "Team Simple"
                              }
                            ]
                          },
                          "permission": {
                            "type": "string"
                          },
                          "permissions": {
                            "type": "object",
                            "required": [
                              "pull",
                              "triage",
                              "push",
                              "maintain",
                              "admin"
                            ],
                            "properties": {
                              "admin": {
                                "type": "boolean"
                              },
                              "maintain": {
                                "type": "boolean"
                              },
                              "pull": {
                                "type": "boolean"
                              },
                              "push": {
                                "type": "boolean"
                              },
                              "triage": {
                                "type": "boolean"
                              }
                            }
                          },
                          "privacy": {
                            "type": "string"
                          },
                          "repositories_url": {
                            "type": "string",
                            "format": "uri"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "title": "Team"
                      }
                    },
                    "examples": {
                      "response-if-child-teams-exist": {
                        "value": [
                          {
                            "description": "Started it all.",
                            "html_url": "https://github.com/orgs/rails/teams/core",
                            "id": 2,
                            "members_url": "https://api.github.com/teams/2/members{/member}",
                            "name": "Original Roster",
                            "node_id": "MDQ6VGVhbTI=",
                            "parent": {
                              "description": "A great team.",
                              "html_url": "https://github.com/orgs/github/teams/justice-league",
                              "id": 1,
                              "members_url": "https://api.github.com/teams/1/members{/member}",
                              "name": "Justice League",
                              "node_id": "MDQ6VGVhbTE=",
                              "permission": "admin",
                              "privacy": "closed",
                              "repositories_url": "https://api.github.com/teams/1/repos",
                              "slug": "justice-league",
                              "url": "https://api.github.com/teams/1"
                            },
                            "permission": "admin",
                            "privacy": "closed",
                            "repositories_url": "https://api.github.com/teams/2/repos",
                            "slug": "original-roster",
                            "url": "https://api.github.com/teams/2"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",
        {
          "delete": {
            "tags": [
              "reactions"
            ],
            "summary": "Delete a commit comment reaction",
            "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.\n\nDelete a reaction to a [commit comment](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#comments).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-a-commit-comment-reaction"
            },
            "operationId": "reactions/delete-for-commit-comment",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "comment_id",
                "description": "comment_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "reaction_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/dispatches",
        {
          "post": {
            "tags": [
              "repos"
            ],
            "summary": "Create a repository dispatch event",
            "description": "You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub Enterprise Server to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see \"[RepositoryDispatchEvent](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#repository_dispatch).\"\n\nThe `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.\n\nThis endpoint requires write access to the repository by providing either:\n\n  - Personal access tokens with `repo` scope. For more information, see \"[Creating a personal access token for the command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line)\" in the GitHub Help documentation.\n  - GitHub Apps with both `metadata:read` and `contents:read&write` permissions.\n\nThis input example shows how you can use the `client_payload` as a test to debug your workflow.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-dispatch-event"
            },
            "operationId": "repos/create-dispatch-event",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "event_type"
                    ],
                    "properties": {
                      "client_payload": {
                        "description": "JSON payload with extra information about the webhook event that your action or worklow may use.",
                        "type": "object",
                        "additionalProperties": true,
                        "maxProperties": 10
                      },
                      "event_type": {
                        "description": "A custom webhook event name.",
                        "type": "string",
                        "maxLength": 100,
                        "minLength": 1
                      }
                    }
                  },
                  "example": {
                    "client_payload": {
                      "integration": true,
                      "unit": false
                    },
                    "event_type": "on-demand-test"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "204": {
                "description": "Response"
              },
              "422": {
                "description": "Validation failed",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "type": "object",
                      "required": [
                        "message",
                        "documentation_url"
                      ],
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "code"
                            ],
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "index": {
                                "type": "integer"
                              },
                              "message": {
                                "type": "string"
                              },
                              "resource": {
                                "type": "string"
                              },
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  {
                                    "type": "integer",
                                    "nullable": true
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "nullable": true
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "message": {
                          "type": "string"
                        }
                      },
                      "title": "Validation Error"
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",
        {
          "delete": {
            "tags": [
              "reactions"
            ],
            "summary": "Delete an issue comment reaction",
            "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.\n\nDelete a reaction to an [issue comment](https://docs.github.com/enterprise-server@2.21/rest/reference/issues#comments).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-an-issue-comment-reaction"
            },
            "operationId": "reactions/delete-for-issue-comment",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "comment_id",
                "description": "comment_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "reaction_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",
        {
          "delete": {
            "tags": [
              "reactions"
            ],
            "summary": "Delete an issue reaction",
            "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.\n\nDelete a reaction to an [issue](https://docs.github.com/enterprise-server@2.21/rest/reference/issues/).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-an-issue-reaction"
            },
            "operationId": "reactions/delete-for-issue",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "issue_number",
                "description": "issue_number parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "reaction_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",
        {
          "delete": {
            "tags": [
              "reactions"
            ],
            "summary": "Delete a pull request comment reaction",
            "description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`\n\nDelete a reaction to a [pull request review comment](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#review-comments).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#delete-a-pull-request-comment-reaction"
            },
            "operationId": "reactions/delete-for-pull-request-comment",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "comment_id",
                "description": "comment_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "reaction_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ]
    ],
    "changed": {
      "/orgs/{org}/repos": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "delete_branch_on_merge",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/installations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.",
              "to": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/applications/{client_id}/tokens/{access_token}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.20/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/repository_invitations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/stargazers": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:",
              "to": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to a [pull request review comment](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#review-comments).",
              "to": "List the reactions to a [pull request review comment](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#review-comments)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/users": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.",
              "to": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.20/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.20/rest/reference/search#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/readme": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.",
              "to": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/gitignore/templates/{name}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) to get the raw contents.",
              "to": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/) to get the raw contents."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/topics": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.",
              "to": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.20/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/comments/{comment_id}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to a [commit comment](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#comments).",
              "to": "List the reactions to a [commit comment](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#comments)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "description": "Whether to delete head branches when pull requests are merged",
                                                      "type": "boolean",
                                                      "example": false,
                                                      "default": false
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "removed": [
                                                        [
                                                          "delete_branch_on_merge",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/installation": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub Enterprise Server plan information' below.\"",
              "to": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub Enterprise Server plan information' below.\""
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/memberships/{username}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "Get team membership for a user (Legacy)",
              "to": "Get team membership for a user"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-membership-for-a-user) endpoint.\n\nTeam members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-team).",
              "to": "Team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/enterprise-server@2.20/rest/reference/teams#create-a-team)."
            },
            "operation_id": {
              "from": "teams/get-membership-for-user-legacy",
              "to": "teams/get-membership-for-user"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [
                [
                  "404",
                  {
                    "description": "Resource not found",
                    "content": {
                      "application/json": {
                        "schema": {
                          "description": "Basic Error",
                          "type": "object",
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "title": "Basic Error"
                        }
                      }
                    }
                  }
                ]
              ],
              "changed": {}
            }
          }
        }
      },
      "/gists/public": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.",
              "to": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/repos/{owner}/{repo}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "Check team permissions for a repository (Legacy)",
              "to": "Check team permissions for a repository"
            },
            "description": {
              "from": "**Note**: Repositories inherited through a parent team will also be checked.\n\n**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:",
              "to": "**Note**: Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": {
              "from": "teams/check-permissions-for-repo-legacy",
              "to": "teams/check-permissions-for-repo"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [
                      [
                        "application/vnd.github.v3.repository+json",
                        {
                          "schema": {
                            "description": "Full Repository",
                            "type": "object",
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at",
                              "network_count",
                              "subscribers_count"
                            ],
                            "properties": {
                              "allow_merge_commit": {
                                "type": "boolean",
                                "example": true
                              },
                              "allow_rebase_merge": {
                                "type": "boolean",
                                "example": true
                              },
                              "allow_squash_merge": {
                                "type": "boolean",
                                "example": true
                              },
                              "anonymous_access_enabled": {
                                "description": "Whether anonymous git access is allowed.",
                                "type": "boolean",
                                "default": true
                              },
                              "archive_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "assignees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                              },
                              "blobs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                              },
                              "branches_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                              },
                              "clone_url": {
                                "type": "string",
                                "example": "https://github.com/octocat/Hello-World.git"
                              },
                              "code_of_conduct": {
                                "description": "Code of Conduct Simple",
                                "type": "object",
                                "required": [
                                  "url",
                                  "key",
                                  "name",
                                  "html_url"
                                ],
                                "properties": {
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true,
                                    "example": "https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "citizen_code_of_conduct"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Citizen Code of Conduct"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/repos/github/docs/community/code_of_conduct"
                                  }
                                },
                                "title": "Code Of Conduct Simple"
                              },
                              "collaborators_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                              },
                              "comments_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                              },
                              "commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                              },
                              "compare_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                              },
                              "contents_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                              },
                              "contributors_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2011-01-26T19:01:12Z"
                              },
                              "default_branch": {
                                "type": "string",
                                "example": "master"
                              },
                              "deployments_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "This your first repo!"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/events"
                              },
                              "fork": {
                                "type": "boolean"
                              },
                              "forks": {
                                "type": "integer"
                              },
                              "forks_count": {
                                "type": "integer",
                                "example": 9
                              },
                              "forks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "octocat/Hello-World"
                              },
                              "git_commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                              },
                              "git_refs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                              },
                              "git_tags_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                              },
                              "git_url": {
                                "type": "string",
                                "example": "git:github.com/octocat/Hello-World.git"
                              },
                              "has_downloads": {
                                "type": "boolean",
                                "example": true
                              },
                              "has_issues": {
                                "type": "boolean",
                                "example": true
                              },
                              "has_pages": {
                                "type": "boolean"
                              },
                              "has_projects": {
                                "type": "boolean",
                                "example": true
                              },
                              "has_wiki": {
                                "type": "boolean",
                                "example": true
                              },
                              "homepage": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "https://github.com"
                              },
                              "hooks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat/Hello-World"
                              },
                              "id": {
                                "type": "integer",
                                "example": 1296269
                              },
                              "is_template": {
                                "type": "boolean",
                                "example": true
                              },
                              "issue_comment_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                              },
                              "issue_events_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                              },
                              "keys_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                              },
                              "labels_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "languages_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                              },
                              "license": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "properties": {
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "mit"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "MIT License"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDc6TGljZW5zZW1pdA=="
                                      },
                                      "spdx_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "MIT"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://api.github.com/licenses/mit"
                                      }
                                    },
                                    "title": "License Simple"
                                  }
                                ]
                              },
                              "master_branch": {
                                "type": "string"
                              },
                              "merges_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                              },
                              "milestones_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                              },
                              "mirror_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "git:git.example.com/octocat/Hello-World"
                              },
                              "name": {
                                "type": "string",
                                "example": "Hello-World"
                              },
                              "network_count": {
                                "type": "integer",
                                "example": 0
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                              },
                              "notifications_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                              },
                              "open_issues": {
                                "type": "integer"
                              },
                              "open_issues_count": {
                                "type": "integer",
                                "example": 0
                              },
                              "organization": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  }
                                ]
                              },
                              "owner": {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              },
                              "parent": {
                                "description": "A git repository",
                                "type": "object",
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url",
                                  "clone_url",
                                  "default_branch",
                                  "forks",
                                  "forks_count",
                                  "git_url",
                                  "has_downloads",
                                  "has_issues",
                                  "has_projects",
                                  "has_wiki",
                                  "has_pages",
                                  "homepage",
                                  "language",
                                  "archived",
                                  "disabled",
                                  "mirror_url",
                                  "open_issues",
                                  "open_issues_count",
                                  "license",
                                  "pushed_at",
                                  "size",
                                  "ssh_url",
                                  "stargazers_count",
                                  "svn_url",
                                  "watchers",
                                  "watchers_count",
                                  "created_at",
                                  "updated_at"
                                ],
                                "properties": {
                                  "allow_merge_commit": {
                                    "description": "Whether to allow merge commits for pull requests.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "allow_rebase_merge": {
                                    "description": "Whether to allow rebase merges for pull requests.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "allow_squash_merge": {
                                    "description": "Whether to allow squash merges for pull requests.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "anonymous_access_enabled": {
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                  },
                                  "archived": {
                                    "description": "Whether the repository is archived.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "assignees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                  },
                                  "blobs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                  },
                                  "branches_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                  },
                                  "clone_url": {
                                    "type": "string",
                                    "example": "https://github.com/octocat/Hello-World.git"
                                  },
                                  "collaborators_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                  },
                                  "comments_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                  },
                                  "commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                  },
                                  "compare_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                  },
                                  "contents_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                  },
                                  "contributors_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:01:12Z"
                                  },
                                  "default_branch": {
                                    "description": "The default branch of the repository.",
                                    "type": "string",
                                    "example": "master"
                                  },
                                  "deployments_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "This your first repo!"
                                  },
                                  "disabled": {
                                    "description": "Returns whether or not this repository disabled.",
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks": {
                                    "type": "integer"
                                  },
                                  "forks_count": {
                                    "type": "integer",
                                    "example": 9
                                  },
                                  "forks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                  },
                                  "full_name": {
                                    "type": "string",
                                    "example": "octocat/Hello-World"
                                  },
                                  "git_commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                  },
                                  "git_refs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                  },
                                  "git_tags_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                  },
                                  "git_url": {
                                    "type": "string",
                                    "example": "git:github.com/octocat/Hello-World.git"
                                  },
                                  "has_downloads": {
                                    "description": "Whether downloads are enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "has_issues": {
                                    "description": "Whether issues are enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "description": "Whether projects are enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "has_wiki": {
                                    "description": "Whether the wiki is enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "homepage": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true,
                                    "example": "https://github.com"
                                  },
                                  "hooks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat/Hello-World"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the repository",
                                    "type": "integer",
                                    "example": 42
                                  },
                                  "is_template": {
                                    "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": false
                                  },
                                  "issue_comment_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                  },
                                  "issue_events_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                  },
                                  "issues_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                  },
                                  "keys_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                  },
                                  "labels_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                  },
                                  "language": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "languages_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                  },
                                  "license": {
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "License Simple",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "name",
                                          "url",
                                          "spdx_id",
                                          "node_id"
                                        ],
                                        "properties": {
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri"
                                          },
                                          "key": {
                                            "type": "string",
                                            "example": "mit"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "MIT License"
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDc6TGljZW5zZW1pdA=="
                                          },
                                          "spdx_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "MIT"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "https://api.github.com/licenses/mit"
                                          }
                                        },
                                        "title": "License Simple"
                                      }
                                    ]
                                  },
                                  "master_branch": {
                                    "type": "string"
                                  },
                                  "merges_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                  },
                                  "milestones_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                  },
                                  "mirror_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true,
                                    "example": "git:git.example.com/octocat/Hello-World"
                                  },
                                  "name": {
                                    "description": "The name of the repository.",
                                    "type": "string",
                                    "example": "Team Environment"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                  },
                                  "notifications_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                  },
                                  "open_issues": {
                                    "type": "integer"
                                  },
                                  "open_issues_count": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "organization": {
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "Simple User",
                                        "type": "object",
                                        "required": [
                                          "avatar_url",
                                          "events_url",
                                          "followers_url",
                                          "following_url",
                                          "gists_url",
                                          "gravatar_id",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "login",
                                          "organizations_url",
                                          "received_events_url",
                                          "repos_url",
                                          "site_admin",
                                          "starred_url",
                                          "subscriptions_url",
                                          "type",
                                          "url"
                                        ],
                                        "properties": {
                                          "avatar_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/images/error/octocat_happy.gif"
                                          },
                                          "email": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/events{/privacy}"
                                          },
                                          "followers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/followers"
                                          },
                                          "following_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/following{/other_user}"
                                          },
                                          "gists_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                          },
                                          "gravatar_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "41d064eb2195891e12d0413f63227ea7"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat"
                                          },
                                          "id": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "login": {
                                            "type": "string",
                                            "example": "octocat"
                                          },
                                          "name": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDQ6VXNlcjE="
                                          },
                                          "organizations_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/orgs"
                                          },
                                          "received_events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/received_events"
                                          },
                                          "repos_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/repos"
                                          },
                                          "site_admin": {
                                            "type": "boolean"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:55Z\""
                                          },
                                          "starred_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                          },
                                          "subscriptions_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/subscriptions"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "User"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat"
                                          }
                                        },
                                        "nullable": true,
                                        "title": "Simple User"
                                      }
                                    ]
                                  },
                                  "owner": {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "required": [
                                      "admin",
                                      "pull",
                                      "push"
                                    ],
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "description": "Whether the repository is private or public.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "pulls_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                  },
                                  "pushed_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:06:43Z"
                                  },
                                  "releases_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                  },
                                  "size": {
                                    "type": "integer",
                                    "example": 108
                                  },
                                  "ssh_url": {
                                    "type": "string",
                                    "example": "git@github.com:octocat/Hello-World.git"
                                  },
                                  "stargazers_count": {
                                    "type": "integer",
                                    "example": 80
                                  },
                                  "stargazers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:42Z\""
                                  },
                                  "statuses_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                  },
                                  "subscription_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                  },
                                  "svn_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://svn.github.com/octocat/Hello-World"
                                  },
                                  "tags_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                  },
                                  "teams_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                  },
                                  "template_repository": {
                                    "type": "object",
                                    "properties": {
                                      "allow_merge_commit": {
                                        "type": "boolean"
                                      },
                                      "allow_rebase_merge": {
                                        "type": "boolean"
                                      },
                                      "allow_squash_merge": {
                                        "type": "boolean"
                                      },
                                      "anonymous_access_enabled": {
                                        "type": "boolean"
                                      },
                                      "archive_url": {
                                        "type": "string"
                                      },
                                      "archived": {
                                        "type": "boolean"
                                      },
                                      "assignees_url": {
                                        "type": "string"
                                      },
                                      "blobs_url": {
                                        "type": "string"
                                      },
                                      "branches_url": {
                                        "type": "string"
                                      },
                                      "clone_url": {
                                        "type": "string"
                                      },
                                      "collaborators_url": {
                                        "type": "string"
                                      },
                                      "comments_url": {
                                        "type": "string"
                                      },
                                      "commits_url": {
                                        "type": "string"
                                      },
                                      "compare_url": {
                                        "type": "string"
                                      },
                                      "contents_url": {
                                        "type": "string"
                                      },
                                      "contributors_url": {
                                        "type": "string"
                                      },
                                      "created_at": {
                                        "type": "string"
                                      },
                                      "default_branch": {
                                        "type": "string"
                                      },
                                      "deployments_url": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "disabled": {
                                        "type": "boolean"
                                      },
                                      "downloads_url": {
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "type": "string"
                                      },
                                      "fork": {
                                        "type": "boolean"
                                      },
                                      "forks_count": {
                                        "type": "integer"
                                      },
                                      "forks_url": {
                                        "type": "string"
                                      },
                                      "full_name": {
                                        "type": "string"
                                      },
                                      "git_commits_url": {
                                        "type": "string"
                                      },
                                      "git_refs_url": {
                                        "type": "string"
                                      },
                                      "git_tags_url": {
                                        "type": "string"
                                      },
                                      "git_url": {
                                        "type": "string"
                                      },
                                      "has_downloads": {
                                        "type": "boolean"
                                      },
                                      "has_issues": {
                                        "type": "boolean"
                                      },
                                      "has_pages": {
                                        "type": "boolean"
                                      },
                                      "has_projects": {
                                        "type": "boolean"
                                      },
                                      "has_wiki": {
                                        "type": "boolean"
                                      },
                                      "homepage": {
                                        "type": "string"
                                      },
                                      "hooks_url": {
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "is_template": {
                                        "type": "boolean"
                                      },
                                      "issue_comment_url": {
                                        "type": "string"
                                      },
                                      "issue_events_url": {
                                        "type": "string"
                                      },
                                      "issues_url": {
                                        "type": "string"
                                      },
                                      "keys_url": {
                                        "type": "string"
                                      },
                                      "labels_url": {
                                        "type": "string"
                                      },
                                      "language": {
                                        "type": "string"
                                      },
                                      "languages_url": {
                                        "type": "string"
                                      },
                                      "merges_url": {
                                        "type": "string"
                                      },
                                      "milestones_url": {
                                        "type": "string"
                                      },
                                      "mirror_url": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "network_count": {
                                        "type": "integer"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "notifications_url": {
                                        "type": "string"
                                      },
                                      "open_issues_count": {
                                        "type": "integer"
                                      },
                                      "owner": {
                                        "type": "object",
                                        "properties": {
                                          "avatar_url": {
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "type": "string"
                                          },
                                          "followers_url": {
                                            "type": "string"
                                          },
                                          "following_url": {
                                            "type": "string"
                                          },
                                          "gists_url": {
                                            "type": "string"
                                          },
                                          "gravatar_id": {
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "integer"
                                          },
                                          "login": {
                                            "type": "string"
                                          },
                                          "node_id": {
                                            "type": "string"
                                          },
                                          "organizations_url": {
                                            "type": "string"
                                          },
                                          "received_events_url": {
                                            "type": "string"
                                          },
                                          "repos_url": {
                                            "type": "string"
                                          },
                                          "site_admin": {
                                            "type": "boolean"
                                          },
                                          "starred_url": {
                                            "type": "string"
                                          },
                                          "subscriptions_url": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "url": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "permissions": {
                                        "type": "object",
                                        "properties": {
                                          "admin": {
                                            "type": "boolean"
                                          },
                                          "maintain": {
                                            "type": "boolean"
                                          },
                                          "pull": {
                                            "type": "boolean"
                                          },
                                          "push": {
                                            "type": "boolean"
                                          },
                                          "triage": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pulls_url": {
                                        "type": "string"
                                      },
                                      "pushed_at": {
                                        "type": "string"
                                      },
                                      "releases_url": {
                                        "type": "string"
                                      },
                                      "size": {
                                        "type": "integer"
                                      },
                                      "ssh_url": {
                                        "type": "string"
                                      },
                                      "stargazers_count": {
                                        "type": "integer"
                                      },
                                      "stargazers_url": {
                                        "type": "string"
                                      },
                                      "statuses_url": {
                                        "type": "string"
                                      },
                                      "subscribers_count": {
                                        "type": "integer"
                                      },
                                      "subscribers_url": {
                                        "type": "string"
                                      },
                                      "subscription_url": {
                                        "type": "string"
                                      },
                                      "svn_url": {
                                        "type": "string"
                                      },
                                      "tags_url": {
                                        "type": "string"
                                      },
                                      "teams_url": {
                                        "type": "string"
                                      },
                                      "topics": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "trees_url": {
                                        "type": "string"
                                      },
                                      "updated_at": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "visibility": {
                                        "type": "string"
                                      },
                                      "watchers_count": {
                                        "type": "integer"
                                      }
                                    },
                                    "nullable": true
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:14:43Z"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/repos/octocat/Hello-World"
                                  },
                                  "visibility": {
                                    "description": "The repository visibility: public, private, or internal.",
                                    "type": "string",
                                    "default": "public"
                                  },
                                  "watchers": {
                                    "type": "integer"
                                  },
                                  "watchers_count": {
                                    "type": "integer",
                                    "example": 80
                                  }
                                },
                                "title": "Repository"
                              },
                              "permissions": {
                                "type": "object",
                                "required": [
                                  "admin",
                                  "pull",
                                  "push"
                                ],
                                "properties": {
                                  "admin": {
                                    "type": "boolean"
                                  },
                                  "pull": {
                                    "type": "boolean"
                                  },
                                  "push": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "private": {
                                "type": "boolean"
                              },
                              "pulls_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                              },
                              "pushed_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2011-01-26T19:06:43Z"
                              },
                              "releases_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                              },
                              "size": {
                                "type": "integer",
                                "example": 108
                              },
                              "source": {
                                "description": "A git repository",
                                "type": "object",
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url",
                                  "clone_url",
                                  "default_branch",
                                  "forks",
                                  "forks_count",
                                  "git_url",
                                  "has_downloads",
                                  "has_issues",
                                  "has_projects",
                                  "has_wiki",
                                  "has_pages",
                                  "homepage",
                                  "language",
                                  "archived",
                                  "disabled",
                                  "mirror_url",
                                  "open_issues",
                                  "open_issues_count",
                                  "license",
                                  "pushed_at",
                                  "size",
                                  "ssh_url",
                                  "stargazers_count",
                                  "svn_url",
                                  "watchers",
                                  "watchers_count",
                                  "created_at",
                                  "updated_at"
                                ],
                                "properties": {
                                  "allow_merge_commit": {
                                    "description": "Whether to allow merge commits for pull requests.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "allow_rebase_merge": {
                                    "description": "Whether to allow rebase merges for pull requests.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "allow_squash_merge": {
                                    "description": "Whether to allow squash merges for pull requests.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "anonymous_access_enabled": {
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                  },
                                  "archived": {
                                    "description": "Whether the repository is archived.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "assignees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                  },
                                  "blobs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                  },
                                  "branches_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                  },
                                  "clone_url": {
                                    "type": "string",
                                    "example": "https://github.com/octocat/Hello-World.git"
                                  },
                                  "collaborators_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                  },
                                  "comments_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                  },
                                  "commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                  },
                                  "compare_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                  },
                                  "contents_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                  },
                                  "contributors_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:01:12Z"
                                  },
                                  "default_branch": {
                                    "description": "The default branch of the repository.",
                                    "type": "string",
                                    "example": "master"
                                  },
                                  "deployments_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "This your first repo!"
                                  },
                                  "disabled": {
                                    "description": "Returns whether or not this repository disabled.",
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks": {
                                    "type": "integer"
                                  },
                                  "forks_count": {
                                    "type": "integer",
                                    "example": 9
                                  },
                                  "forks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                  },
                                  "full_name": {
                                    "type": "string",
                                    "example": "octocat/Hello-World"
                                  },
                                  "git_commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                  },
                                  "git_refs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                  },
                                  "git_tags_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                  },
                                  "git_url": {
                                    "type": "string",
                                    "example": "git:github.com/octocat/Hello-World.git"
                                  },
                                  "has_downloads": {
                                    "description": "Whether downloads are enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "has_issues": {
                                    "description": "Whether issues are enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "description": "Whether projects are enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "has_wiki": {
                                    "description": "Whether the wiki is enabled.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": true
                                  },
                                  "homepage": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true,
                                    "example": "https://github.com"
                                  },
                                  "hooks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat/Hello-World"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the repository",
                                    "type": "integer",
                                    "example": 42
                                  },
                                  "is_template": {
                                    "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                    "type": "boolean",
                                    "example": true,
                                    "default": false
                                  },
                                  "issue_comment_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                  },
                                  "issue_events_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                  },
                                  "issues_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                  },
                                  "keys_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                  },
                                  "labels_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                  },
                                  "language": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "languages_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                  },
                                  "license": {
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "License Simple",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "name",
                                          "url",
                                          "spdx_id",
                                          "node_id"
                                        ],
                                        "properties": {
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri"
                                          },
                                          "key": {
                                            "type": "string",
                                            "example": "mit"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "MIT License"
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDc6TGljZW5zZW1pdA=="
                                          },
                                          "spdx_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "MIT"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "https://api.github.com/licenses/mit"
                                          }
                                        },
                                        "title": "License Simple"
                                      }
                                    ]
                                  },
                                  "master_branch": {
                                    "type": "string"
                                  },
                                  "merges_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                  },
                                  "milestones_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                  },
                                  "mirror_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true,
                                    "example": "git:git.example.com/octocat/Hello-World"
                                  },
                                  "name": {
                                    "description": "The name of the repository.",
                                    "type": "string",
                                    "example": "Team Environment"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                  },
                                  "notifications_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                  },
                                  "open_issues": {
                                    "type": "integer"
                                  },
                                  "open_issues_count": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "organization": {
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "Simple User",
                                        "type": "object",
                                        "required": [
                                          "avatar_url",
                                          "events_url",
                                          "followers_url",
                                          "following_url",
                                          "gists_url",
                                          "gravatar_id",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "login",
                                          "organizations_url",
                                          "received_events_url",
                                          "repos_url",
                                          "site_admin",
                                          "starred_url",
                                          "subscriptions_url",
                                          "type",
                                          "url"
                                        ],
                                        "properties": {
                                          "avatar_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/images/error/octocat_happy.gif"
                                          },
                                          "email": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/events{/privacy}"
                                          },
                                          "followers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/followers"
                                          },
                                          "following_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/following{/other_user}"
                                          },
                                          "gists_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                          },
                                          "gravatar_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "41d064eb2195891e12d0413f63227ea7"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat"
                                          },
                                          "id": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "login": {
                                            "type": "string",
                                            "example": "octocat"
                                          },
                                          "name": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDQ6VXNlcjE="
                                          },
                                          "organizations_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/orgs"
                                          },
                                          "received_events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/received_events"
                                          },
                                          "repos_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/repos"
                                          },
                                          "site_admin": {
                                            "type": "boolean"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:55Z\""
                                          },
                                          "starred_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                          },
                                          "subscriptions_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/subscriptions"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "User"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat"
                                          }
                                        },
                                        "nullable": true,
                                        "title": "Simple User"
                                      }
                                    ]
                                  },
                                  "owner": {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "required": [
                                      "admin",
                                      "pull",
                                      "push"
                                    ],
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "description": "Whether the repository is private or public.",
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "pulls_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                  },
                                  "pushed_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:06:43Z"
                                  },
                                  "releases_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                  },
                                  "size": {
                                    "type": "integer",
                                    "example": 108
                                  },
                                  "ssh_url": {
                                    "type": "string",
                                    "example": "git@github.com:octocat/Hello-World.git"
                                  },
                                  "stargazers_count": {
                                    "type": "integer",
                                    "example": 80
                                  },
                                  "stargazers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:42Z\""
                                  },
                                  "statuses_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                  },
                                  "subscription_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                  },
                                  "svn_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://svn.github.com/octocat/Hello-World"
                                  },
                                  "tags_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                  },
                                  "teams_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                  },
                                  "template_repository": {
                                    "type": "object",
                                    "properties": {
                                      "allow_merge_commit": {
                                        "type": "boolean"
                                      },
                                      "allow_rebase_merge": {
                                        "type": "boolean"
                                      },
                                      "allow_squash_merge": {
                                        "type": "boolean"
                                      },
                                      "anonymous_access_enabled": {
                                        "type": "boolean"
                                      },
                                      "archive_url": {
                                        "type": "string"
                                      },
                                      "archived": {
                                        "type": "boolean"
                                      },
                                      "assignees_url": {
                                        "type": "string"
                                      },
                                      "blobs_url": {
                                        "type": "string"
                                      },
                                      "branches_url": {
                                        "type": "string"
                                      },
                                      "clone_url": {
                                        "type": "string"
                                      },
                                      "collaborators_url": {
                                        "type": "string"
                                      },
                                      "comments_url": {
                                        "type": "string"
                                      },
                                      "commits_url": {
                                        "type": "string"
                                      },
                                      "compare_url": {
                                        "type": "string"
                                      },
                                      "contents_url": {
                                        "type": "string"
                                      },
                                      "contributors_url": {
                                        "type": "string"
                                      },
                                      "created_at": {
                                        "type": "string"
                                      },
                                      "default_branch": {
                                        "type": "string"
                                      },
                                      "deployments_url": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string"
                                      },
                                      "disabled": {
                                        "type": "boolean"
                                      },
                                      "downloads_url": {
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "type": "string"
                                      },
                                      "fork": {
                                        "type": "boolean"
                                      },
                                      "forks_count": {
                                        "type": "integer"
                                      },
                                      "forks_url": {
                                        "type": "string"
                                      },
                                      "full_name": {
                                        "type": "string"
                                      },
                                      "git_commits_url": {
                                        "type": "string"
                                      },
                                      "git_refs_url": {
                                        "type": "string"
                                      },
                                      "git_tags_url": {
                                        "type": "string"
                                      },
                                      "git_url": {
                                        "type": "string"
                                      },
                                      "has_downloads": {
                                        "type": "boolean"
                                      },
                                      "has_issues": {
                                        "type": "boolean"
                                      },
                                      "has_pages": {
                                        "type": "boolean"
                                      },
                                      "has_projects": {
                                        "type": "boolean"
                                      },
                                      "has_wiki": {
                                        "type": "boolean"
                                      },
                                      "homepage": {
                                        "type": "string"
                                      },
                                      "hooks_url": {
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "is_template": {
                                        "type": "boolean"
                                      },
                                      "issue_comment_url": {
                                        "type": "string"
                                      },
                                      "issue_events_url": {
                                        "type": "string"
                                      },
                                      "issues_url": {
                                        "type": "string"
                                      },
                                      "keys_url": {
                                        "type": "string"
                                      },
                                      "labels_url": {
                                        "type": "string"
                                      },
                                      "language": {
                                        "type": "string"
                                      },
                                      "languages_url": {
                                        "type": "string"
                                      },
                                      "merges_url": {
                                        "type": "string"
                                      },
                                      "milestones_url": {
                                        "type": "string"
                                      },
                                      "mirror_url": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "network_count": {
                                        "type": "integer"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "notifications_url": {
                                        "type": "string"
                                      },
                                      "open_issues_count": {
                                        "type": "integer"
                                      },
                                      "owner": {
                                        "type": "object",
                                        "properties": {
                                          "avatar_url": {
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "type": "string"
                                          },
                                          "followers_url": {
                                            "type": "string"
                                          },
                                          "following_url": {
                                            "type": "string"
                                          },
                                          "gists_url": {
                                            "type": "string"
                                          },
                                          "gravatar_id": {
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "integer"
                                          },
                                          "login": {
                                            "type": "string"
                                          },
                                          "node_id": {
                                            "type": "string"
                                          },
                                          "organizations_url": {
                                            "type": "string"
                                          },
                                          "received_events_url": {
                                            "type": "string"
                                          },
                                          "repos_url": {
                                            "type": "string"
                                          },
                                          "site_admin": {
                                            "type": "boolean"
                                          },
                                          "starred_url": {
                                            "type": "string"
                                          },
                                          "subscriptions_url": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          },
                                          "url": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "permissions": {
                                        "type": "object",
                                        "properties": {
                                          "admin": {
                                            "type": "boolean"
                                          },
                                          "maintain": {
                                            "type": "boolean"
                                          },
                                          "pull": {
                                            "type": "boolean"
                                          },
                                          "push": {
                                            "type": "boolean"
                                          },
                                          "triage": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "private": {
                                        "type": "boolean"
                                      },
                                      "pulls_url": {
                                        "type": "string"
                                      },
                                      "pushed_at": {
                                        "type": "string"
                                      },
                                      "releases_url": {
                                        "type": "string"
                                      },
                                      "size": {
                                        "type": "integer"
                                      },
                                      "ssh_url": {
                                        "type": "string"
                                      },
                                      "stargazers_count": {
                                        "type": "integer"
                                      },
                                      "stargazers_url": {
                                        "type": "string"
                                      },
                                      "statuses_url": {
                                        "type": "string"
                                      },
                                      "subscribers_count": {
                                        "type": "integer"
                                      },
                                      "subscribers_url": {
                                        "type": "string"
                                      },
                                      "subscription_url": {
                                        "type": "string"
                                      },
                                      "svn_url": {
                                        "type": "string"
                                      },
                                      "tags_url": {
                                        "type": "string"
                                      },
                                      "teams_url": {
                                        "type": "string"
                                      },
                                      "topics": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "trees_url": {
                                        "type": "string"
                                      },
                                      "updated_at": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      },
                                      "visibility": {
                                        "type": "string"
                                      },
                                      "watchers_count": {
                                        "type": "integer"
                                      }
                                    },
                                    "nullable": true
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:14:43Z"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/repos/octocat/Hello-World"
                                  },
                                  "visibility": {
                                    "description": "The repository visibility: public, private, or internal.",
                                    "type": "string",
                                    "default": "public"
                                  },
                                  "watchers": {
                                    "type": "integer"
                                  },
                                  "watchers_count": {
                                    "type": "integer",
                                    "example": 80
                                  }
                                },
                                "title": "Repository"
                              },
                              "ssh_url": {
                                "type": "string",
                                "example": "git@github.com:octocat/Hello-World.git"
                              },
                              "stargazers_count": {
                                "type": "integer",
                                "example": 80
                              },
                              "stargazers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                              },
                              "statuses_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                              },
                              "subscribers_count": {
                                "type": "integer",
                                "example": 42
                              },
                              "subscribers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                              },
                              "subscription_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                              },
                              "svn_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://svn.github.com/octocat/Hello-World"
                              },
                              "tags_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                              },
                              "teams_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                              },
                              "template_repository": {
                                "type": "object",
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "A git repository",
                                    "type": "object",
                                    "required": [
                                      "archive_url",
                                      "assignees_url",
                                      "blobs_url",
                                      "branches_url",
                                      "collaborators_url",
                                      "comments_url",
                                      "commits_url",
                                      "compare_url",
                                      "contents_url",
                                      "contributors_url",
                                      "deployments_url",
                                      "description",
                                      "downloads_url",
                                      "events_url",
                                      "fork",
                                      "forks_url",
                                      "full_name",
                                      "git_commits_url",
                                      "git_refs_url",
                                      "git_tags_url",
                                      "hooks_url",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "issue_comment_url",
                                      "issue_events_url",
                                      "issues_url",
                                      "keys_url",
                                      "labels_url",
                                      "languages_url",
                                      "merges_url",
                                      "milestones_url",
                                      "name",
                                      "notifications_url",
                                      "owner",
                                      "private",
                                      "pulls_url",
                                      "releases_url",
                                      "stargazers_url",
                                      "statuses_url",
                                      "subscribers_url",
                                      "subscription_url",
                                      "tags_url",
                                      "teams_url",
                                      "trees_url",
                                      "url",
                                      "clone_url",
                                      "default_branch",
                                      "forks",
                                      "forks_count",
                                      "git_url",
                                      "has_downloads",
                                      "has_issues",
                                      "has_projects",
                                      "has_wiki",
                                      "has_pages",
                                      "homepage",
                                      "language",
                                      "archived",
                                      "disabled",
                                      "mirror_url",
                                      "open_issues",
                                      "open_issues_count",
                                      "license",
                                      "pushed_at",
                                      "size",
                                      "ssh_url",
                                      "stargazers_count",
                                      "svn_url",
                                      "watchers",
                                      "watchers_count",
                                      "created_at",
                                      "updated_at"
                                    ],
                                    "properties": {
                                      "allow_merge_commit": {
                                        "description": "Whether to allow merge commits for pull requests.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "allow_rebase_merge": {
                                        "description": "Whether to allow rebase merges for pull requests.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "allow_squash_merge": {
                                        "description": "Whether to allow squash merges for pull requests.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "anonymous_access_enabled": {
                                        "type": "boolean"
                                      },
                                      "archive_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                      },
                                      "archived": {
                                        "description": "Whether the repository is archived.",
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "assignees_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                      },
                                      "blobs_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                      },
                                      "branches_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                      },
                                      "clone_url": {
                                        "type": "string",
                                        "example": "https://github.com/octocat/Hello-World.git"
                                      },
                                      "collaborators_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                      },
                                      "comments_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                      },
                                      "commits_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                      },
                                      "compare_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                      },
                                      "contents_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                      },
                                      "contributors_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                      },
                                      "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true,
                                        "example": "2011-01-26T19:01:12Z"
                                      },
                                      "default_branch": {
                                        "description": "The default branch of the repository.",
                                        "type": "string",
                                        "example": "master"
                                      },
                                      "deployments_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                      },
                                      "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "This your first repo!"
                                      },
                                      "disabled": {
                                        "description": "Returns whether or not this repository disabled.",
                                        "type": "boolean"
                                      },
                                      "downloads_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                      },
                                      "fork": {
                                        "type": "boolean"
                                      },
                                      "forks": {
                                        "type": "integer"
                                      },
                                      "forks_count": {
                                        "type": "integer",
                                        "example": 9
                                      },
                                      "forks_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                      },
                                      "full_name": {
                                        "type": "string",
                                        "example": "octocat/Hello-World"
                                      },
                                      "git_commits_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                      },
                                      "git_refs_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                      },
                                      "git_tags_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                      },
                                      "git_url": {
                                        "type": "string",
                                        "example": "git:github.com/octocat/Hello-World.git"
                                      },
                                      "has_downloads": {
                                        "description": "Whether downloads are enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "has_issues": {
                                        "description": "Whether issues are enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "has_pages": {
                                        "type": "boolean"
                                      },
                                      "has_projects": {
                                        "description": "Whether projects are enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "has_wiki": {
                                        "description": "Whether the wiki is enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "homepage": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://github.com"
                                      },
                                      "hooks_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat/Hello-World"
                                      },
                                      "id": {
                                        "description": "Unique identifier of the repository",
                                        "type": "integer",
                                        "example": 42
                                      },
                                      "is_template": {
                                        "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": false
                                      },
                                      "issue_comment_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                      },
                                      "issue_events_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                      },
                                      "issues_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                      },
                                      "keys_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                      },
                                      "labels_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                      },
                                      "language": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "languages_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                      },
                                      "license": {
                                        "nullable": true,
                                        "allOf": [
                                          {
                                            "description": "License Simple",
                                            "type": "object",
                                            "required": [
                                              "key",
                                              "name",
                                              "url",
                                              "spdx_id",
                                              "node_id"
                                            ],
                                            "properties": {
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri"
                                              },
                                              "key": {
                                                "type": "string",
                                                "example": "mit"
                                              },
                                              "name": {
                                                "type": "string",
                                                "example": "MIT License"
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDc6TGljZW5zZW1pdA=="
                                              },
                                              "spdx_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "MIT"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "nullable": true,
                                                "example": "https://api.github.com/licenses/mit"
                                              }
                                            },
                                            "title": "License Simple"
                                          }
                                        ]
                                      },
                                      "master_branch": {
                                        "type": "string"
                                      },
                                      "merges_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                      },
                                      "milestones_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                      },
                                      "mirror_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "git:git.example.com/octocat/Hello-World"
                                      },
                                      "name": {
                                        "description": "The name of the repository.",
                                        "type": "string",
                                        "example": "Team Environment"
                                      },
                                      "network_count": {
                                        "type": "integer"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                      },
                                      "notifications_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                      },
                                      "open_issues": {
                                        "type": "integer"
                                      },
                                      "open_issues_count": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "organization": {
                                        "nullable": true,
                                        "allOf": [
                                          {
                                            "description": "Simple User",
                                            "type": "object",
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/images/error/octocat_happy.gif"
                                              },
                                              "email": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "events_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                                              },
                                              "followers_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/followers"
                                              },
                                              "following_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                                              },
                                              "gists_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                              },
                                              "gravatar_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "41d064eb2195891e12d0413f63227ea7"
                                              },
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/octocat"
                                              },
                                              "id": {
                                                "type": "integer",
                                                "example": 1
                                              },
                                              "login": {
                                                "type": "string",
                                                "example": "octocat"
                                              },
                                              "name": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDQ6VXNlcjE="
                                              },
                                              "organizations_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/orgs"
                                              },
                                              "received_events_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/received_events"
                                              },
                                              "repos_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/repos"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "type": "string",
                                                "example": "\"2020-07-09T00:17:55Z\""
                                              },
                                              "starred_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                              },
                                              "subscriptions_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/subscriptions"
                                              },
                                              "type": {
                                                "type": "string",
                                                "example": "User"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat"
                                              }
                                            },
                                            "nullable": true,
                                            "title": "Simple User"
                                          }
                                        ]
                                      },
                                      "owner": {
                                        "description": "Simple User",
                                        "type": "object",
                                        "required": [
                                          "avatar_url",
                                          "events_url",
                                          "followers_url",
                                          "following_url",
                                          "gists_url",
                                          "gravatar_id",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "login",
                                          "organizations_url",
                                          "received_events_url",
                                          "repos_url",
                                          "site_admin",
                                          "starred_url",
                                          "subscriptions_url",
                                          "type",
                                          "url"
                                        ],
                                        "properties": {
                                          "avatar_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/images/error/octocat_happy.gif"
                                          },
                                          "email": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/events{/privacy}"
                                          },
                                          "followers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/followers"
                                          },
                                          "following_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/following{/other_user}"
                                          },
                                          "gists_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                          },
                                          "gravatar_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "41d064eb2195891e12d0413f63227ea7"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat"
                                          },
                                          "id": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "login": {
                                            "type": "string",
                                            "example": "octocat"
                                          },
                                          "name": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDQ6VXNlcjE="
                                          },
                                          "organizations_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/orgs"
                                          },
                                          "received_events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/received_events"
                                          },
                                          "repos_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/repos"
                                          },
                                          "site_admin": {
                                            "type": "boolean"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:55Z\""
                                          },
                                          "starred_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                          },
                                          "subscriptions_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/subscriptions"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "User"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat"
                                          }
                                        },
                                        "nullable": true,
                                        "title": "Simple User"
                                      },
                                      "permissions": {
                                        "type": "object",
                                        "required": [
                                          "admin",
                                          "pull",
                                          "push"
                                        ],
                                        "properties": {
                                          "admin": {
                                            "type": "boolean"
                                          },
                                          "maintain": {
                                            "type": "boolean"
                                          },
                                          "pull": {
                                            "type": "boolean"
                                          },
                                          "push": {
                                            "type": "boolean"
                                          },
                                          "triage": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "private": {
                                        "description": "Whether the repository is private or public.",
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "pulls_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                      },
                                      "pushed_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true,
                                        "example": "2011-01-26T19:06:43Z"
                                      },
                                      "releases_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                      },
                                      "size": {
                                        "type": "integer",
                                        "example": 108
                                      },
                                      "ssh_url": {
                                        "type": "string",
                                        "example": "git@github.com:octocat/Hello-World.git"
                                      },
                                      "stargazers_count": {
                                        "type": "integer",
                                        "example": 80
                                      },
                                      "stargazers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:42Z\""
                                      },
                                      "statuses_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                      },
                                      "subscribers_count": {
                                        "type": "integer"
                                      },
                                      "subscribers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                      },
                                      "subscription_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                      },
                                      "svn_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://svn.github.com/octocat/Hello-World"
                                      },
                                      "tags_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                      },
                                      "teams_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                      },
                                      "template_repository": {
                                        "type": "object",
                                        "properties": {
                                          "allow_merge_commit": {
                                            "type": "boolean"
                                          },
                                          "allow_rebase_merge": {
                                            "type": "boolean"
                                          },
                                          "allow_squash_merge": {
                                            "type": "boolean"
                                          },
                                          "anonymous_access_enabled": {
                                            "type": "boolean"
                                          },
                                          "archive_url": {
                                            "type": "string"
                                          },
                                          "archived": {
                                            "type": "boolean"
                                          },
                                          "assignees_url": {
                                            "type": "string"
                                          },
                                          "blobs_url": {
                                            "type": "string"
                                          },
                                          "branches_url": {
                                            "type": "string"
                                          },
                                          "clone_url": {
                                            "type": "string"
                                          },
                                          "collaborators_url": {
                                            "type": "string"
                                          },
                                          "comments_url": {
                                            "type": "string"
                                          },
                                          "commits_url": {
                                            "type": "string"
                                          },
                                          "compare_url": {
                                            "type": "string"
                                          },
                                          "contents_url": {
                                            "type": "string"
                                          },
                                          "contributors_url": {
                                            "type": "string"
                                          },
                                          "created_at": {
                                            "type": "string"
                                          },
                                          "default_branch": {
                                            "type": "string"
                                          },
                                          "deployments_url": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          },
                                          "disabled": {
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "type": "string"
                                          },
                                          "fork": {
                                            "type": "boolean"
                                          },
                                          "forks_count": {
                                            "type": "integer"
                                          },
                                          "forks_url": {
                                            "type": "string"
                                          },
                                          "full_name": {
                                            "type": "string"
                                          },
                                          "git_commits_url": {
                                            "type": "string"
                                          },
                                          "git_refs_url": {
                                            "type": "string"
                                          },
                                          "git_tags_url": {
                                            "type": "string"
                                          },
                                          "git_url": {
                                            "type": "string"
                                          },
                                          "has_downloads": {
                                            "type": "boolean"
                                          },
                                          "has_issues": {
                                            "type": "boolean"
                                          },
                                          "has_pages": {
                                            "type": "boolean"
                                          },
                                          "has_projects": {
                                            "type": "boolean"
                                          },
                                          "has_wiki": {
                                            "type": "boolean"
                                          },
                                          "homepage": {
                                            "type": "string"
                                          },
                                          "hooks_url": {
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "integer"
                                          },
                                          "is_template": {
                                            "type": "boolean"
                                          },
                                          "issue_comment_url": {
                                            "type": "string"
                                          },
                                          "issue_events_url": {
                                            "type": "string"
                                          },
                                          "issues_url": {
                                            "type": "string"
                                          },
                                          "keys_url": {
                                            "type": "string"
                                          },
                                          "labels_url": {
                                            "type": "string"
                                          },
                                          "language": {
                                            "type": "string"
                                          },
                                          "languages_url": {
                                            "type": "string"
                                          },
                                          "merges_url": {
                                            "type": "string"
                                          },
                                          "milestones_url": {
                                            "type": "string"
                                          },
                                          "mirror_url": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "type": "string"
                                          },
                                          "notifications_url": {
                                            "type": "string"
                                          },
                                          "open_issues_count": {
                                            "type": "integer"
                                          },
                                          "owner": {
                                            "type": "object",
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "followers_url": {
                                                "type": "string"
                                              },
                                              "following_url": {
                                                "type": "string"
                                              },
                                              "gists_url": {
                                                "type": "string"
                                              },
                                              "gravatar_id": {
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "integer"
                                              },
                                              "login": {
                                                "type": "string"
                                              },
                                              "node_id": {
                                                "type": "string"
                                              },
                                              "organizations_url": {
                                                "type": "string"
                                              },
                                              "received_events_url": {
                                                "type": "string"
                                              },
                                              "repos_url": {
                                                "type": "string"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_url": {
                                                "type": "string"
                                              },
                                              "subscriptions_url": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "permissions": {
                                            "type": "object",
                                            "properties": {
                                              "admin": {
                                                "type": "boolean"
                                              },
                                              "maintain": {
                                                "type": "boolean"
                                              },
                                              "pull": {
                                                "type": "boolean"
                                              },
                                              "push": {
                                                "type": "boolean"
                                              },
                                              "triage": {
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "private": {
                                            "type": "boolean"
                                          },
                                          "pulls_url": {
                                            "type": "string"
                                          },
                                          "pushed_at": {
                                            "type": "string"
                                          },
                                          "releases_url": {
                                            "type": "string"
                                          },
                                          "size": {
                                            "type": "integer"
                                          },
                                          "ssh_url": {
                                            "type": "string"
                                          },
                                          "stargazers_count": {
                                            "type": "integer"
                                          },
                                          "stargazers_url": {
                                            "type": "string"
                                          },
                                          "statuses_url": {
                                            "type": "string"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "type": "string"
                                          },
                                          "subscription_url": {
                                            "type": "string"
                                          },
                                          "svn_url": {
                                            "type": "string"
                                          },
                                          "tags_url": {
                                            "type": "string"
                                          },
                                          "teams_url": {
                                            "type": "string"
                                          },
                                          "topics": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "trees_url": {
                                            "type": "string"
                                          },
                                          "updated_at": {
                                            "type": "string"
                                          },
                                          "url": {
                                            "type": "string"
                                          },
                                          "visibility": {
                                            "type": "string"
                                          },
                                          "watchers_count": {
                                            "type": "integer"
                                          }
                                        },
                                        "nullable": true
                                      },
                                      "topics": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "trees_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                      },
                                      "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true,
                                        "example": "2011-01-26T19:14:43Z"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/repos/octocat/Hello-World"
                                      },
                                      "visibility": {
                                        "description": "The repository visibility: public, private, or internal.",
                                        "type": "string",
                                        "default": "public"
                                      },
                                      "watchers": {
                                        "type": "integer"
                                      },
                                      "watchers_count": {
                                        "type": "integer",
                                        "example": 80
                                      }
                                    },
                                    "title": "Repository"
                                  }
                                ]
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "octocat",
                                  "atom",
                                  "electron",
                                  "API"
                                ]
                              },
                              "trees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2011-01-26T19:14:43Z"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "visibility": {
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string",
                                "example": "public"
                              },
                              "watchers": {
                                "type": "integer"
                              },
                              "watchers_count": {
                                "type": "integer",
                                "example": 80
                              }
                            },
                            "title": "Full Repository"
                          },
                          "examples": {
                            "alternative-response-with-extra-repository-information": {
                              "summary": "Alternative response with extra repository information",
                              "value": {
                                "organization": {
                                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                  "followers_url": "https://api.github.com/users/octocat/followers",
                                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "gravatar_id": "",
                                  "html_url": "https://github.com/octocat",
                                  "id": 1,
                                  "login": "octocat",
                                  "node_id": "MDQ6VXNlcjE=",
                                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                                  "repos_url": "https://api.github.com/users/octocat/repos",
                                  "site_admin": false,
                                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                  "type": "Organization",
                                  "url": "https://api.github.com/users/octocat"
                                },
                                "parent": {
                                  "allow_auto_merge": false,
                                  "allow_merge_commit": true,
                                  "allow_rebase_merge": true,
                                  "allow_squash_merge": true,
                                  "anonymous_access_enabled": false,
                                  "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                  "archived": false,
                                  "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                  "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                  "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                  "clone_url": "https://github.com/octocat/Hello-World.git",
                                  "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                  "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                  "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                  "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                  "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                  "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                                  "created_at": "2011-01-26T19:01:12Z",
                                  "default_branch": "master",
                                  "delete_branch_on_merge": true,
                                  "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                                  "description": "This your first repo!",
                                  "disabled": false,
                                  "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                                  "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                                  "fork": false,
                                  "forks_count": 9,
                                  "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                                  "full_name": "octocat/Hello-World",
                                  "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                  "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                  "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                  "git_url": "git:github.com/octocat/Hello-World.git",
                                  "has_downloads": true,
                                  "has_issues": true,
                                  "has_pages": false,
                                  "has_projects": true,
                                  "has_wiki": true,
                                  "homepage": "https://github.com",
                                  "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                                  "html_url": "https://github.com/octocat/Hello-World",
                                  "id": 1296269,
                                  "is_template": false,
                                  "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                  "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                  "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                  "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                  "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                                  "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                                  "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                                  "name": "Hello-World",
                                  "network_count": 0,
                                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                  "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                  "open_issues_count": 0,
                                  "owner": {
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "gravatar_id": "",
                                    "html_url": "https://github.com/octocat",
                                    "id": 1,
                                    "login": "octocat",
                                    "node_id": "MDQ6VXNlcjE=",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "site_admin": false,
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "type": "User",
                                    "url": "https://api.github.com/users/octocat"
                                  },
                                  "permissions": {
                                    "admin": false,
                                    "pull": true,
                                    "push": false
                                  },
                                  "private": false,
                                  "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                  "pushed_at": "2011-01-26T19:06:43Z",
                                  "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                  "size": 108,
                                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                                  "stargazers_count": 80,
                                  "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                                  "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                  "subscribers_count": 42,
                                  "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                                  "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                                  "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                                  "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                                  "template_repository": {
                                    "allow_auto_merge": false,
                                    "allow_merge_commit": true,
                                    "allow_rebase_merge": true,
                                    "allow_squash_merge": true,
                                    "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
                                    "archived": false,
                                    "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
                                    "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
                                    "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
                                    "clone_url": "https://github.com/octocat/Hello-World-Template.git",
                                    "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
                                    "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
                                    "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
                                    "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
                                    "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
                                    "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
                                    "created_at": "2011-01-26T19:01:12Z",
                                    "default_branch": "master",
                                    "delete_branch_on_merge": true,
                                    "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
                                    "description": "This your first repo!",
                                    "disabled": false,
                                    "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
                                    "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
                                    "fork": false,
                                    "forks": 9,
                                    "forks_count": 9,
                                    "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
                                    "full_name": "octocat/Hello-World-Template",
                                    "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
                                    "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
                                    "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
                                    "git_url": "git:github.com/octocat/Hello-World-Template.git",
                                    "has_downloads": true,
                                    "has_issues": true,
                                    "has_pages": false,
                                    "has_projects": true,
                                    "has_wiki": true,
                                    "homepage": "https://github.com",
                                    "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
                                    "html_url": "https://github.com/octocat/Hello-World-Template",
                                    "id": 1296269,
                                    "is_template": true,
                                    "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
                                    "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
                                    "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
                                    "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
                                    "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
                                    "language": null,
                                    "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
                                    "license": {
                                      "html_url": "https://api.github.com/licenses/mit",
                                      "key": "mit",
                                      "name": "MIT License",
                                      "node_id": "MDc6TGljZW5zZW1pdA==",
                                      "spdx_id": "MIT",
                                      "url": "https://api.github.com/licenses/mit"
                                    },
                                    "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
                                    "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
                                    "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
                                    "name": "Hello-World-Template",
                                    "network_count": 0,
                                    "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
                                    "open_issues": 0,
                                    "open_issues_count": 0,
                                    "owner": {
                                      "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                      "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                      "followers_url": "https://api.github.com/users/octocat/followers",
                                      "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                      "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                      "gravatar_id": "",
                                      "html_url": "https://github.com/octocat",
                                      "id": 1,
                                      "login": "octocat",
                                      "node_id": "MDQ6VXNlcjE=",
                                      "organizations_url": "https://api.github.com/users/octocat/orgs",
                                      "received_events_url": "https://api.github.com/users/octocat/received_events",
                                      "repos_url": "https://api.github.com/users/octocat/repos",
                                      "site_admin": false,
                                      "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                      "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                      "type": "User",
                                      "url": "https://api.github.com/users/octocat"
                                    },
                                    "permissions": {
                                      "admin": false,
                                      "pull": true,
                                      "push": false
                                    },
                                    "private": false,
                                    "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
                                    "pushed_at": "2011-01-26T19:06:43Z",
                                    "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
                                    "size": 108,
                                    "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
                                    "stargazers_count": 80,
                                    "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
                                    "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
                                    "subscribers_count": 42,
                                    "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
                                    "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
                                    "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
                                    "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
                                    "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
                                    "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                                    "topics": [
                                      "octocat",
                                      "atom",
                                      "electron",
                                      "api"
                                    ],
                                    "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
                                    "updated_at": "2011-01-26T19:14:43Z",
                                    "url": "https://api.github.com/repos/octocat/Hello-World-Template",
                                    "visibility": "public",
                                    "watchers": 80,
                                    "watchers_count": 80
                                  },
                                  "topics": [
                                    "octocat",
                                    "atom",
                                    "electron",
                                    "api"
                                  ],
                                  "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                  "updated_at": "2011-01-26T19:14:43Z",
                                  "url": "https://api.github.com/repos/octocat/Hello-World",
                                  "visibility": "public",
                                  "watchers_count": 80
                                },
                                "permissions": {
                                  "admin": false,
                                  "pull": true,
                                  "push": false
                                },
                                "source": {
                                  "allow_merge_commit": true,
                                  "allow_rebase_merge": true,
                                  "allow_squash_merge": true,
                                  "anonymous_access_enabled": false,
                                  "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                  "archived": false,
                                  "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                  "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                  "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                  "clone_url": "https://github.com/octocat/Hello-World.git",
                                  "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                  "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                  "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                  "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                  "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                  "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                                  "created_at": "2011-01-26T19:01:12Z",
                                  "default_branch": "master",
                                  "delete_branch_on_merge": true,
                                  "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                                  "description": "This your first repo!",
                                  "disabled": false,
                                  "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                                  "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                                  "fork": false,
                                  "forks_count": 9,
                                  "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                                  "full_name": "octocat/Hello-World",
                                  "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                  "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                  "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                  "git_url": "git:github.com/octocat/Hello-World.git",
                                  "has_downloads": true,
                                  "has_issues": true,
                                  "has_pages": false,
                                  "has_projects": true,
                                  "has_wiki": true,
                                  "homepage": "https://github.com",
                                  "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                                  "html_url": "https://github.com/octocat/Hello-World",
                                  "id": 1296269,
                                  "is_template": true,
                                  "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                  "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                  "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                  "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                  "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                  "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                                  "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                                  "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                  "mirror_url": "git:git.example.com/octocat/Hello-World",
                                  "name": "Hello-World",
                                  "network_count": 0,
                                  "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                  "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                  "open_issues_count": 0,
                                  "owner": {
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "gravatar_id": "",
                                    "html_url": "https://github.com/octocat",
                                    "id": 1,
                                    "login": "octocat",
                                    "node_id": "MDQ6VXNlcjE=",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "site_admin": false,
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "type": "User",
                                    "url": "https://api.github.com/users/octocat"
                                  },
                                  "permissions": {
                                    "admin": false,
                                    "pull": true,
                                    "push": false
                                  },
                                  "private": false,
                                  "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                  "pushed_at": "2011-01-26T19:06:43Z",
                                  "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                  "size": 108,
                                  "ssh_url": "git@github.com:octocat/Hello-World.git",
                                  "stargazers_count": 80,
                                  "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                                  "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                  "subscribers_count": 42,
                                  "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                                  "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                                  "svn_url": "https://svn.github.com/octocat/Hello-World",
                                  "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                                  "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                                  "topics": [
                                    "octocat",
                                    "atom",
                                    "electron",
                                    "api"
                                  ],
                                  "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                  "updated_at": "2011-01-26T19:14:43Z",
                                  "url": "https://api.github.com/repos/octocat/Hello-World",
                                  "visibility": "public",
                                  "watchers_count": 80
                                }
                              }
                            }
                          }
                        }
                      ]
                    ],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": {
                            "from": "A team's access to a repository.",
                            "to": "Minimal Repository"
                          },
                          "format_changed": null,
                          "required_changed": {
                            "added": [],
                            "removed": [
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ]
                          },
                          "properties_changed": {
                            "added": [
                              [
                                "code_of_conduct",
                                {
                                  "description": "Code Of Conduct",
                                  "type": "object",
                                  "required": [
                                    "url",
                                    "html_url",
                                    "key",
                                    "name"
                                  ],
                                  "properties": {
                                    "body": {
                                      "type": "string",
                                      "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                                    },
                                    "html_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "nullable": true
                                    },
                                    "key": {
                                      "type": "string",
                                      "example": "contributor_covenant"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Contributor Covenant"
                                    },
                                    "url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                                    }
                                  },
                                  "title": "Code Of Conduct"
                                }
                              ]
                            ],
                            "removed": [
                              [
                                "allow_merge_commit",
                                {
                                  "description": "Whether to allow merge commits for pull requests.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                }
                              ],
                              [
                                "allow_rebase_merge",
                                {
                                  "description": "Whether to allow rebase merges for pull requests.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                }
                              ],
                              [
                                "allow_squash_merge",
                                {
                                  "description": "Whether to allow squash merges for pull requests.",
                                  "type": "boolean",
                                  "example": true,
                                  "default": true
                                }
                              ],
                              [
                                "delete_branch_on_merge",
                                {
                                  "description": "Whether to delete head branches when pull requests are merged",
                                  "type": "boolean",
                                  "example": false,
                                  "default": false
                                }
                              ],
                              [
                                "master_branch",
                                {
                                  "type": "string"
                                }
                              ]
                            ],
                            "changed": {
                              "permissions": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": {
                                  "added": [],
                                  "removed": [
                                    "admin",
                                    "pull",
                                    "push"
                                  ]
                                },
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "archived": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "Whether the repository is archived.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "svn_url": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": {
                                  "from": "uri",
                                  "to": null
                                },
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "default_branch": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "The default branch of the repository.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "id": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "Unique identifier of the repository",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "disabled": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "Returns whether or not this repository disabled.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "private": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "Whether the repository is private or public.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "has_wiki": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "Whether the wiki is enabled.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "homepage": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": {
                                  "from": "uri",
                                  "to": null
                                },
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "mirror_url": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": {
                                  "from": "uri",
                                  "to": null
                                },
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "template_repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "anonymous_access_enabled",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "is_template": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "Whether this repository acts as a template that can be used to generate new repositories.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "owner": {
                                "type_changed": {
                                  "from": null,
                                  "to": "object"
                                },
                                "description_changed": {
                                  "from": null,
                                  "to": "Simple User"
                                },
                                "format_changed": null,
                                "required_changed": {
                                  "added": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "removed": []
                                },
                                "properties_changed": {
                                  "added": [
                                    [
                                      "avatar_url",
                                      {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      }
                                    ],
                                    [
                                      "email",
                                      {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    ],
                                    [
                                      "events_url",
                                      {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      }
                                    ],
                                    [
                                      "followers_url",
                                      {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      }
                                    ],
                                    [
                                      "following_url",
                                      {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      }
                                    ],
                                    [
                                      "gists_url",
                                      {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      }
                                    ],
                                    [
                                      "gravatar_id",
                                      {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      }
                                    ],
                                    [
                                      "html_url",
                                      {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      }
                                    ],
                                    [
                                      "id",
                                      {
                                        "type": "integer",
                                        "example": 1
                                      }
                                    ],
                                    [
                                      "login",
                                      {
                                        "type": "string",
                                        "example": "octocat"
                                      }
                                    ],
                                    [
                                      "name",
                                      {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    ],
                                    [
                                      "node_id",
                                      {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      }
                                    ],
                                    [
                                      "organizations_url",
                                      {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      }
                                    ],
                                    [
                                      "received_events_url",
                                      {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      }
                                    ],
                                    [
                                      "repos_url",
                                      {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      }
                                    ],
                                    [
                                      "site_admin",
                                      {
                                        "type": "boolean"
                                      }
                                    ],
                                    [
                                      "starred_at",
                                      {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      }
                                    ],
                                    [
                                      "starred_url",
                                      {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      }
                                    ],
                                    [
                                      "subscriptions_url",
                                      {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      }
                                    ],
                                    [
                                      "type",
                                      {
                                        "type": "string",
                                        "example": "User"
                                      }
                                    ],
                                    [
                                      "url",
                                      {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    ]
                                  ],
                                  "removed": [],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "visibility": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "The repository visibility: public, private, or internal.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "name": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "The name of the repository.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "has_downloads": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "Whether downloads are enabled.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "has_projects": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "Whether projects are enabled.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "has_issues": {
                                "type_changed": null,
                                "description_changed": {
                                  "from": "Whether issues are enabled.",
                                  "to": null
                                },
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "license": {
                                "type_changed": {
                                  "from": null,
                                  "to": "object"
                                },
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [
                                    [
                                      "key",
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    [
                                      "name",
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    [
                                      "node_id",
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    [
                                      "spdx_id",
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    [
                                      "url",
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  ],
                                  "removed": [],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.",
              "to": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
              "to": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.\n\n**Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see \"[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests).\"",
              "to": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://docs.github.com/enterprise-server@2.20/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.\n\n**Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see \"[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests).\""
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "items": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "description": "Whether to delete head branches when pull requests are merged",
                                                "type": "boolean",
                                                "example": false,
                                                "default": false
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/teams": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "List child teams (Legacy)",
              "to": "List child teams"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List child teams`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-child-teams) endpoint.",
              "to": ""
            },
            "operation_id": {
              "from": "teams/list-child-legacy",
              "to": "teams/list-child"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [
                [
                  "403",
                  {
                    "description": "Forbidden",
                    "content": {
                      "application/json": {
                        "schema": {
                          "description": "Basic Error",
                          "type": "object",
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "title": "Basic Error"
                        }
                      }
                    }
                  }
                ],
                [
                  "404",
                  {
                    "description": "Resource not found",
                    "content": {
                      "application/json": {
                        "schema": {
                          "description": "Basic Error",
                          "type": "object",
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "title": "Basic Error"
                        }
                      }
                    }
                  }
                ],
                [
                  "422",
                  {
                    "description": "Validation failed",
                    "content": {
                      "application/json": {
                        "schema": {
                          "description": "Validation Error",
                          "type": "object",
                          "required": [
                            "message",
                            "documentation_url"
                          ],
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "code"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "field": {
                                    "type": "string"
                                  },
                                  "index": {
                                    "type": "integer"
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "resource": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "oneOf": [
                                      {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      {
                                        "type": "integer",
                                        "nullable": true
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "nullable": true
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "title": "Validation Error"
                        }
                      }
                    }
                  }
                ]
              ],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": {
                              "from": "Groups of organization members that gives permissions on specified repositories.",
                              "to": null
                            },
                            "format_changed": null,
                            "required_changed": {
                              "added": [],
                              "removed": [
                                "id",
                                "node_id",
                                "url",
                                "members_url",
                                "name",
                                "description",
                                "permission",
                                "html_url",
                                "repositories_url",
                                "slug",
                                "parent"
                              ]
                            },
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "html_url",
                                  {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/orgs/rails/teams/core"
                                  }
                                ],
                                [
                                  "permissions",
                                  {
                                    "type": "object",
                                    "required": [
                                      "pull",
                                      "triage",
                                      "push",
                                      "maintain",
                                      "admin"
                                    ],
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                ]
                              ],
                              "changed": {
                                "description": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": null,
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": {
                                    "from": true,
                                    "to": false
                                  }
                                },
                                "repositories_url": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": {
                                    "from": "uri",
                                    "to": null
                                  },
                                  "required_changed": null,
                                  "properties_changed": null,
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "url": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": {
                                    "from": "uri",
                                    "to": null
                                  },
                                  "required_changed": null,
                                  "properties_changed": null,
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "parent": {
                                  "type_changed": {
                                    "from": null,
                                    "to": "object"
                                  },
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "description",
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      [
                                        "html_url",
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      [
                                        "id",
                                        {
                                          "type": "integer"
                                        }
                                      ],
                                      [
                                        "members_url",
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      [
                                        "name",
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      [
                                        "node_id",
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      [
                                        "permission",
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      [
                                        "privacy",
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      [
                                        "repositories_url",
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      [
                                        "slug",
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      [
                                        "url",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "removed": [],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": {
                                    "from": true,
                                    "to": false
                                  }
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/license": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.",
              "to": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types) for retrieving the raw license content or rendered license HTML."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/subscriptions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "delete_branch_on_merge",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/events/public": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "description": "Whether to delete head branches when pull requests are merged",
                                                      "type": "boolean",
                                                      "example": false,
                                                      "default": false
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "removed": [
                                                        [
                                                          "delete_branch_on_merge",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/notifications/threads/{thread_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "delete_branch_on_merge",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/received_events/public": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "description": "Whether to delete head branches when pull requests are merged",
                                                      "type": "boolean",
                                                      "example": false,
                                                      "default": false
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "removed": [
                                                        [
                                                          "delete_branch_on_merge",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/starred": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:",
              "to": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/{issue_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/enterprise-server@2.20/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "delete_branch_on_merge",
                                      {
                                        "description": "Whether to delete head branches when pull requests are merged",
                                        "type": "boolean",
                                        "example": false,
                                        "default": false
                                      }
                                    ]
                                  ],
                                  "changed": {
                                    "template_repository": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [],
                                        "removed": [
                                          [
                                            "delete_branch_on_merge",
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        ],
                                        "changed": {}
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/subscriptions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "delete_branch_on_merge",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/organizations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists all organizations, in the order that they were created on GitHub Enterprise Server.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations.",
              "to": "Lists all organizations, in the order that they were created on GitHub Enterprise Server.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls/{pull_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#update-a-pull-request) a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.21/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.",
              "to": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#update-a-pull-request) a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.20/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/authorizations/{authorization_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.20/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.20/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "type": "boolean",
                                          "example": false,
                                          "default": false
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/notifications": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/events/{event_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "issue": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [],
                                  "changed": {
                                    "repository": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [],
                                        "removed": [
                                          [
                                            "delete_branch_on_merge",
                                            {
                                              "description": "Whether to delete head branches when pull requests are merged",
                                              "type": "boolean",
                                              "example": false,
                                              "default": false
                                            }
                                          ]
                                        ],
                                        "changed": {
                                          "template_repository": {
                                            "type_changed": null,
                                            "description_changed": null,
                                            "format_changed": null,
                                            "required_changed": null,
                                            "properties_changed": {
                                              "added": [],
                                              "removed": [
                                                [
                                                  "delete_branch_on_merge",
                                                  {
                                                    "type": "boolean"
                                                  }
                                                ]
                                              ],
                                              "changed": {}
                                            },
                                            "enum_changed": null,
                                            "items_changed": null,
                                            "nullable_changed": null
                                          }
                                        }
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/search/commits": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`",
              "to": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/enterprise-server@2.20/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "items": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/applications/grants/{grant_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.20/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.20/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "Get a team (Legacy)",
              "to": "Get a team"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the [Get a team by name](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-team-by-name) endpoint.",
              "to": ""
            },
            "operation_id": {
              "from": "teams/get-legacy",
              "to": "teams/get"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [
                [
                  "404",
                  {
                    "description": "Resource not found",
                    "content": {
                      "application/json": {
                        "schema": {
                          "description": "Basic Error",
                          "type": "object",
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "title": "Basic Error"
                        }
                      }
                    }
                  }
                ]
              ],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/contents/{path}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\nFiles and symlinks support [a custom media type](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/enterprise-server@2.21/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/enterprise-server@2.21/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values.",
              "to": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\nFiles and symlinks support [a custom media type](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/enterprise-server@2.20/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/enterprise-server@2.20/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases/assets/{asset_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.",
              "to": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "type": "boolean",
                                          "example": false,
                                          "default": false
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/repos": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "delete_branch_on_merge",
                                  {
                                    "description": "Whether to delete head branches when pull requests are merged",
                                    "type": "boolean",
                                    "example": false,
                                    "default": false
                                  }
                                ]
                              ],
                              "changed": {
                                "template_repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/teams": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/).",
              "to": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "List reactions for a team discussion (Legacy)",
              "to": "List reactions for a team discussion"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion) endpoint.\n\nList the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "List the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.20/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": {
              "from": "reactions/list-for-team-discussion-legacy",
              "to": "reactions/list-for-team-discussion"
            },
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.squirrel-girl-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/{issue_number}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to an [issue](https://docs.github.com/enterprise-server@2.21/rest/reference/issues).",
              "to": "List the reactions to an [issue](https://docs.github.com/enterprise-server@2.20/rest/reference/issues)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists all users, in the order that they signed up on GitHub Enterprise Server. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users.",
              "to": "Lists all users, in the order that they signed up on GitHub Enterprise Server. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/installation": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/received_events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "description": "Whether to delete head branches when pull requests are merged",
                                                      "type": "boolean",
                                                      "example": false,
                                                      "default": false
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "removed": [
                                                        [
                                                          "delete_branch_on_merge",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/gitignore/templates": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-for-the-authenticated-user).",
              "to": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#create-a-repository-for-the-authenticated-user)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/repos": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "delete_branch_on_merge",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}/check-suites": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "check_suites": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}/comments": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "List discussion comments (Legacy)",
              "to": "List discussion comments"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussion-comments) endpoint.\n\nList all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": {
              "from": "teams/list-discussion-comments-legacy",
              "to": "teams/list-discussion-comments"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "Get a discussion comment (Legacy)",
              "to": "Get a discussion comment"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion-comment) endpoint.\n\nGet a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": {
              "from": "teams/get-discussion-comment-legacy",
              "to": "teams/get-discussion-comment"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/gpg_keys/{gpg_key_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/hooks/{hook_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "config": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [],
                                  "changed": {
                                    "secret": {
                                      "type_changed": null,
                                      "description_changed": {
                                        "from": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#delivery-headers).",
                                        "to": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.20/webhooks/event-payloads/#delivery-headers)."
                                      },
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": null,
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/members/{username}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.",
              "to": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://docs.github.com/enterprise-server@2.20/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls/{pull_number}/commits": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commits) endpoint.",
              "to": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#list-commits) endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}/status": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
              "to": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "delete_branch_on_merge",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "description": "Whether to delete head branches when pull requests are merged",
                                                      "type": "boolean",
                                                      "example": false,
                                                      "default": false
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "removed": [
                                                        [
                                                          "delete_branch_on_merge",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/invitations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations/{installation_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "description": "Whether to delete head branches when pull requests are merged",
                                                      "type": "boolean",
                                                      "example": false,
                                                      "default": false
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "removed": [
                                                        [
                                                          "delete_branch_on_merge",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/search/labels": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results.",
              "to": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.20/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/members": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "List team members (Legacy)",
              "to": "List team members"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-members) endpoint.\n\nTeam members will include the members of child teams.",
              "to": "Team members will include the members of child teams.\n\nTo list members in a team, the team must be visible to the authenticated user."
            },
            "operation_id": {
              "from": "teams/list-members-legacy",
              "to": "teams/list-members"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [
                [
                  "404",
                  {
                    "description": "Resource not found",
                    "content": {
                      "application/json": {
                        "schema": {
                          "description": "Basic Error",
                          "type": "object",
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "title": "Basic Error"
                        }
                      }
                    }
                  }
                ]
              ],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/events/orgs/{org}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "description": "Whether to delete head branches when pull requests are merged",
                                                      "type": "boolean",
                                                      "example": false,
                                                      "default": false
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "removed": [
                                                        [
                                                          "delete_branch_on_merge",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [
                              [
                                "delete_branch_on_merge",
                                {
                                  "type": "boolean",
                                  "example": false
                                }
                              ]
                            ],
                            "changed": {
                              "parent": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "delete_branch_on_merge",
                                      {
                                        "description": "Whether to delete head branches when pull requests are merged",
                                        "type": "boolean",
                                        "example": false,
                                        "default": false
                                      }
                                    ]
                                  ],
                                  "changed": {
                                    "template_repository": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [],
                                        "removed": [
                                          [
                                            "delete_branch_on_merge",
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        ],
                                        "changed": {}
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "source": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "delete_branch_on_merge",
                                      {
                                        "description": "Whether to delete head branches when pull requests are merged",
                                        "type": "boolean",
                                        "example": false,
                                        "default": false
                                      }
                                    ]
                                  ],
                                  "changed": {
                                    "template_repository": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [],
                                        "removed": [
                                          [
                                            "delete_branch_on_merge",
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        ],
                                        "changed": {}
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "permissions": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "maintain",
                                      {
                                        "type": "boolean"
                                      }
                                    ],
                                    [
                                      "triage",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/apps/{app_slug}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
              "to": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/comments": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Commit Comments use [these custom media types](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/).\n\nComments are ordered by ascending ID.",
              "to": "Commit Comments use [these custom media types](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/).\n\nComments are ordered by ascending ID."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/app": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/enterprise-server@2.21/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/enterprise-server@2.20/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "Get a discussion (Legacy)",
              "to": "Get a discussion"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion) endpoint.\n\nGet a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": {
              "from": "teams/get-discussion-legacy",
              "to": "teams/get-discussion"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/git/ref/{ref}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.21/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".",
              "to": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.20/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\"."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/feeds": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "GitHub Enterprise Server provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub Enterprise Server global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens.",
              "to": "GitHub Enterprise Server provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub Enterprise Server global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/enterprise-server@2.20/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/compare/{basehead}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
              "to": "The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/notifications": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/gpg_keys": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases/{release_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#hypermedia).",
              "to": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#hypermedia)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/public_emails": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/enterprise-server@2.21/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope.",
              "to": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/enterprise-server@2.20/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/installation/repositories": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
              "to": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repositories": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "type": "boolean",
                                          "example": false,
                                          "default": false
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "description": "Whether to delete head branches when pull requests are merged",
                                                      "type": "boolean",
                                                      "example": false,
                                                      "default": false
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "removed": [
                                                        [
                                                          "delete_branch_on_merge",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/notifications/threads/{thread_id}/subscription": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/enterprise-server@2.21/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.",
              "to": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/enterprise-server@2.20/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/orgs": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead.",
              "to": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/enterprise-server@2.20/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "base": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repo": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "description": "Whether to delete head branches when pull requests are merged",
                                                "type": "boolean",
                                                "example": false,
                                                "default": false
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "head": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repo": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "description": "Whether to delete head branches when pull requests are merged",
                                                "type": "boolean",
                                                "example": false,
                                                "default": false
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repositories": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists all public repositories in the order that they were created.\n\nNote:\n- For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n- Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.",
              "to": "Lists all public repositories in the order that they were created.\n\nNote:\n- For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n- Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "delete_branch_on_merge",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "You must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.",
              "to": "You must use a [JWT](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/git/matching-refs/{ref}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.\n\nWhen you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.21/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nIf you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`.",
              "to": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.\n\nWhen you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.20/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nIf you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/check-suites/{check_suite_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "delete_branch_on_merge",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "type": "boolean",
                                          "example": false,
                                          "default": false
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/keys/{key_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/repositories": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`",
              "to": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.20/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/code": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.",
              "to": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.20/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "items": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/repos": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "List team repositories (Legacy)",
              "to": "List team repositories"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-repositories) endpoint.",
              "to": "If you are an [authenticated](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#authentication) site administrator for your Enterprise instance, you will be able to list all repositories for the team."
            },
            "operation_id": {
              "from": "teams/list-repos-legacy",
              "to": "teams/list-repos"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [
                [
                  "404",
                  {
                    "description": "Resource not found",
                    "content": {
                      "application/json": {
                        "schema": {
                          "description": "Basic Error",
                          "type": "object",
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "title": "Basic Error"
                        }
                      }
                    }
                  }
                ]
              ],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "delete_branch_on_merge",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/starred": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:",
              "to": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.20/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "delete_branch_on_merge",
                                  {
                                    "description": "Whether to delete head branches when pull requests are merged",
                                    "type": "boolean",
                                    "example": false,
                                    "default": false
                                  }
                                ]
                              ],
                              "changed": {
                                "template_repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      },
                      "application/vnd.github.v3.star+json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repo": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "type": "boolean",
                                          "example": false,
                                          "default": false
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/installation": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{commit_sha}/pulls": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests) endpoint.",
              "to": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#list-pull-requests) endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "base": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repo": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "description": "Whether to delete head branches when pull requests are merged",
                                                "type": "boolean",
                                                "example": false,
                                                "default": false
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "head": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repo": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "description": "Whether to delete head branches when pull requests are merged",
                                                "type": "boolean",
                                                "example": false,
                                                "default": false
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/forks": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [
                                [
                                  "delete_branch_on_merge",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "issue": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "description": "Whether to delete head branches when pull requests are merged",
                                                "type": "boolean",
                                                "example": false,
                                                "default": false
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to an [issue comment](https://docs.github.com/enterprise-server@2.21/rest/reference/issues#comments).",
              "to": "List the reactions to an [issue comment](https://docs.github.com/enterprise-server@2.20/rest/reference/issues#comments)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "List reactions for a team discussion comment (Legacy)",
              "to": "List reactions for a team discussion comment"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion-comment) endpoint.\n\nList the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "List the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.20/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": {
              "from": "reactions/list-for-team-discussion-comment-legacy",
              "to": "reactions/list-for-team-discussion-comment"
            },
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.squirrel-girl-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/projects": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "List team projects (Legacy)",
              "to": "List team projects"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-projects) endpoint.\n\nLists the organization projects for a team.",
              "to": "Lists the organization projects for a team. If you are an [authenticated](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#authentication) site administrator for your Enterprise instance, you will be able to list all projects for the team."
            },
            "operation_id": {
              "from": "teams/list-projects-legacy",
              "to": "teams/list-projects"
            },
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.inertia-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [
                [
                  "404",
                  {
                    "description": "Resource not found",
                    "content": {
                      "application/json": {
                        "schema": {
                          "description": "Basic Error",
                          "type": "object",
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "title": "Basic Error"
                        }
                      }
                    }
                  }
                ],
                [
                  "415",
                  {
                    "description": "Preview header missing",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "message",
                            "documentation_url"
                          ],
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              ],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/discussions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "List discussions (Legacy)",
              "to": "List discussions"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussions) endpoint.\n\nList all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": {
              "from": "teams/list-discussions-legacy",
              "to": "teams/list-discussions"
            },
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub Enterprise Server plan information' below\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub Enterprise Server [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see [Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/enterprise-server@2.21/rest/reference/users#emails)\".",
              "to": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub Enterprise Server plan information' below\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub Enterprise Server [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see [Authentication](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/enterprise-server@2.20/rest/reference/users#emails)\"."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/networks/{owner}/{repo}/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "removed": [
                                                  [
                                                    "delete_branch_on_merge",
                                                    {
                                                      "description": "Whether to delete head branches when pull requests are merged",
                                                      "type": "boolean",
                                                      "example": false,
                                                      "default": false
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "removed": [
                                                        [
                                                          "delete_branch_on_merge",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/readme/{dir}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Gets the README from a repository directory.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.",
              "to": "Gets the README from a repository directory.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/hooks": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "config": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "secret": {
                                        "type_changed": null,
                                        "description_changed": {
                                          "from": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#delivery-headers).",
                                          "to": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.20/webhooks/event-payloads/#delivery-headers)."
                                        },
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": null,
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/projects/{project_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": {
              "from": "Check team permissions for a project (Legacy)",
              "to": "Check team permissions for a project"
            },
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#check-team-permissions-for-a-project) endpoint.\n\nChecks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.",
              "to": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team."
            },
            "operation_id": {
              "from": "teams/check-permissions-for-project-legacy",
              "to": "teams/check-permissions-for-project"
            },
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.inertia-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [
                [
                  "415",
                  {
                    "description": "Preview header missing",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "object",
                          "required": [
                            "message",
                            "documentation_url"
                          ],
                          "properties": {
                            "documentation_url": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              ],
              "changed": {}
            }
          }
        }
      },
      "/applications/grants": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.21/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.20/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.20/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.20/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/enterprise-server@2.20/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/keys": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.20/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "type": "boolean",
                                          "example": false,
                                          "default": false
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/authorizations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.20/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.20/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.20/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/installations/{installation_id}/repositories": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key.",
              "to": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.20/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repositories": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "delete_branch_on_merge",
                                        {
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "type": "boolean",
                                          "example": false,
                                          "default": false
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [
                                            [
                                              "delete_branch_on_merge",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "info": null
}
