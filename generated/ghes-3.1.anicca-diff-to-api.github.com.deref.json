{
  "info": null,
  "paths": {
    "added": [
      [
        "/admin/hooks",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#list-global-webhooks"
            },
            "operationId": "enterprise-admin/list-global-webhooks",
            "parameters": [
              {
                "description": "This API is under preview and subject to change.",
                "in": "header",
                "name": "accept",
                "required": true,
                "schema": {
                  "default": "application/vnd.github.superpro-preview+json",
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "active": true,
                            "config": {
                              "content_type": "json",
                              "insecure_ssl": "0",
                              "secret": "********",
                              "url": "https://example.com"
                            },
                            "created_at": "2017-12-07T00:14:59Z",
                            "events": ["organization", "user"],
                            "id": 1,
                            "name": "web",
                            "ping_url": "https://api.github.com/admin/hooks/1/pings",
                            "type": "Global",
                            "updated_at": "2017-12-07T00:14:59Z",
                            "url": "https://api.github.com/admin/hooks/1"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "active": { "type": "boolean" },
                          "config": {
                            "properties": {
                              "content_type": { "type": "string" },
                              "insecure_ssl": { "type": "string" },
                              "secret": { "type": "string" },
                              "url": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "created_at": { "type": "string" },
                          "events": {
                            "items": { "type": "string" },
                            "type": "array"
                          },
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "ping_url": { "type": "string" },
                          "type": { "type": "string" },
                          "updated_at": { "type": "string" },
                          "url": { "type": "string" }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              }
            },
            "summary": "List global webhooks",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "superpro",
                  "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "global-webhooks"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#create-a-global-webhook"
            },
            "operationId": "enterprise-admin/create-global-webhook",
            "parameters": [
              {
                "description": "This API is under preview and subject to change.",
                "in": "header",
                "name": "accept",
                "required": true,
                "schema": {
                  "default": "application/vnd.github.superpro-preview+json",
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "config": {
                      "content_type": "json",
                      "secret": "secret",
                      "url": "https://example.com/webhook"
                    },
                    "events": ["organization", "user"],
                    "name": "web"
                  },
                  "schema": {
                    "properties": {
                      "active": {
                        "default": true,
                        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                        "type": "boolean"
                      },
                      "config": {
                        "description": "Key/value pairs to provide settings for this webhook.",
                        "properties": {
                          "content_type": {
                            "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                            "type": "string"
                          },
                          "insecure_ssl": {
                            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                            "type": "string"
                          },
                          "secret": {
                            "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads/#delivery-headers) header.",
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL to which the payloads will be delivered.",
                            "type": "string"
                          }
                        },
                        "required": ["url"],
                        "type": "object"
                      },
                      "events": {
                        "description": "The [events](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                        "items": { "type": "string" },
                        "type": "array"
                      },
                      "name": {
                        "description": "Must be passed as \"web\".",
                        "type": "string"
                      }
                    },
                    "required": ["name", "config"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "config": {
                            "content_type": "json",
                            "insecure_ssl": "0",
                            "secret": "********",
                            "url": "https://example.com"
                          },
                          "created_at": "2017-12-07T00:14:59Z",
                          "events": ["organization", "user"],
                          "id": 1,
                          "name": "web",
                          "ping_url": "https://api.github.com/admin/hooks/1/pings",
                          "type": "Global",
                          "updated_at": "2017-12-07T00:14:59Z",
                          "url": "https://api.github.com/admin/hooks/1"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "active": { "type": "boolean" },
                        "config": {
                          "properties": {
                            "content_type": { "type": "string" },
                            "insecure_ssl": { "type": "string" },
                            "secret": { "type": "string" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "created_at": { "type": "string" },
                        "events": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "id": { "type": "integer" },
                        "name": { "type": "string" },
                        "ping_url": { "type": "string" },
                        "type": { "type": "string" },
                        "updated_at": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Create a global webhook",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "superpro",
                  "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "global-webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/hooks/{hook_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#delete-a-global-webhook"
            },
            "operationId": "enterprise-admin/delete-global-webhook",
            "parameters": [
              {
                "description": "This API is under preview and subject to change.",
                "in": "header",
                "name": "accept",
                "required": true,
                "schema": {
                  "default": "application/vnd.github.superpro-preview+json",
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Delete a global webhook",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "superpro",
                  "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "global-webhooks"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-a-global-webhook"
            },
            "operationId": "enterprise-admin/get-global-webhook",
            "parameters": [
              {
                "description": "This API is under preview and subject to change.",
                "in": "header",
                "name": "accept",
                "required": true,
                "schema": {
                  "default": "application/vnd.github.superpro-preview+json",
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "config": {
                            "content_type": "json",
                            "insecure_ssl": "0",
                            "secret": "********",
                            "url": "https://example.com"
                          },
                          "created_at": "2017-12-07T00:14:59Z",
                          "events": ["organization", "user"],
                          "id": 1,
                          "name": "web",
                          "ping_url": "https://api.github.com/admin/hooks/1/pings",
                          "type": "Global",
                          "updated_at": "2017-12-07T00:14:59Z",
                          "url": "https://api.github.com/admin/hooks/1"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "active": { "type": "boolean" },
                        "config": {
                          "properties": {
                            "content_type": { "type": "string" },
                            "insecure_ssl": { "type": "string" },
                            "secret": { "type": "string" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "created_at": { "type": "string" },
                        "events": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "id": { "type": "integer" },
                        "name": { "type": "string" },
                        "ping_url": { "type": "string" },
                        "type": { "type": "string" },
                        "updated_at": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a global webhook",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "superpro",
                  "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "global-webhooks"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "Parameters that are not provided will be overwritten with the default value or removed if no default exists.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-a-global-webhook"
            },
            "operationId": "enterprise-admin/update-global-webhook",
            "parameters": [
              {
                "description": "This API is under preview and subject to change.",
                "in": "header",
                "name": "accept",
                "required": true,
                "schema": {
                  "default": "application/vnd.github.superpro-preview+json",
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "config": { "url": "https://example.com/webhook" },
                    "events": ["organization"]
                  },
                  "schema": {
                    "properties": {
                      "active": {
                        "default": true,
                        "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                        "type": "boolean"
                      },
                      "config": {
                        "description": "Key/value pairs to provide settings for this webhook.",
                        "properties": {
                          "content_type": {
                            "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                            "type": "string"
                          },
                          "insecure_ssl": {
                            "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                            "type": "string"
                          },
                          "secret": {
                            "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads/#delivery-headers) header.",
                            "type": "string"
                          },
                          "url": {
                            "description": "The URL to which the payloads will be delivered.",
                            "type": "string"
                          }
                        },
                        "required": ["url"],
                        "type": "object"
                      },
                      "events": {
                        "description": "The [events](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                        "items": { "type": "string" },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "config": {
                            "content_type": "form",
                            "insecure_ssl": "0",
                            "url": "https://example.com"
                          },
                          "created_at": "2017-12-07T00:14:59Z",
                          "events": ["organization"],
                          "id": 1,
                          "name": "web",
                          "ping_url": "https://api.github.com/admin/hooks/1/pings",
                          "type": "Global",
                          "updated_at": "2017-12-07T00:14:59Z",
                          "url": "https://api.github.com/admin/hooks/1"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "active": { "type": "boolean" },
                        "config": {
                          "properties": {
                            "content_type": { "type": "string" },
                            "insecure_ssl": { "type": "string" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "created_at": { "type": "string" },
                        "events": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "id": { "type": "integer" },
                        "name": { "type": "string" },
                        "ping_url": { "type": "string" },
                        "type": { "type": "string" },
                        "updated_at": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update a global webhook",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "superpro",
                  "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "global-webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/hooks/{hook_id}/pings",
        {
          "post": {
            "deprecated": null,
            "description": "This will trigger a [ping event](https://docs.github.com/enterprise-server@3.1/webhooks/#ping-event) to be sent to the webhook.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#ping-a-global-webhook"
            },
            "operationId": "enterprise-admin/ping-global-webhook",
            "parameters": [
              {
                "description": "This API is under preview and subject to change.",
                "in": "header",
                "name": "accept",
                "required": true,
                "schema": {
                  "default": "application/vnd.github.superpro-preview+json",
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Ping a global webhook",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "superpro",
                  "note": "The [Global Webhooks API](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "global-webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/keys",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#list-public-keys"
            },
            "operationId": "enterprise-admin/list-public-keys",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "One of `asc` (ascending) or `desc` (descending).",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": {
                  "default": "desc",
                  "enum": ["asc", "desc"],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": ["created", "updated", "accessed"],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Only show public keys accessed after the given time.",
                "in": "query",
                "name": "since",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2020-06-11T21:31:57Z",
                            "id": 2,
                            "key": "2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234",
                            "last_used": "2020-06-11T22:31:57Z",
                            "read_only": false,
                            "repository_id": 2,
                            "title": "ssh-rsa AAAAB3NzaC1yc2EAAA",
                            "url": "https://api.github.com/user/keys/2",
                            "user_id": 1,
                            "verified": false
                          },
                          {
                            "created_at": "2020-06-11T21:31:57Z",
                            "id": 3,
                            "key": "9Og8iYjAyymI9LvABpJerYrMxURPc8r+dB7TJyvv1234",
                            "last_used": "2020-06-11T22:31:57Z",
                            "read_only": false,
                            "repository_id": 2,
                            "title": "ssh-rsa AAAAB3NzaC1yc2EAAA",
                            "url": "https://api.github.com/user/keys/2",
                            "user_id": 1,
                            "verified": false
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": { "type": "integer" },
                          "key": { "type": "string" },
                          "last_used": {
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "read_only": { "type": "boolean" },
                          "repository_id": {
                            "nullable": true,
                            "type": "integer"
                          },
                          "title": { "type": "string" },
                          "url": { "type": "string" },
                          "user_id": { "nullable": true, "type": "integer" },
                          "verified": { "type": "boolean" }
                        },
                        "required": [
                          "id",
                          "key",
                          "url",
                          "title",
                          "verified",
                          "created_at",
                          "read_only",
                          "last_used",
                          "user_id",
                          "repository_id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              }
            },
            "summary": "List public keys",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/keys/{key_ids}",
        {
          "delete": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#delete-a-public-key"
            },
            "operationId": "enterprise-admin/delete-public-key",
            "parameters": [
              {
                "in": "path",
                "name": "key_ids",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Delete a public key",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/ldap/teams/{team_id}/mapping",
        {
          "patch": {
            "deprecated": null,
            "description": "Updates the [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. [LDAP synchronization](https://help.github.com/enterprise/admin/guides/user-management/using-ldap/#enabling-ldap-sync) must be enabled to map LDAP entries to a team. Use the [Create a team](https://docs.github.com/enterprise-server@3.1/rest/reference/teams/#create-a-team) endpoint to create a team with LDAP mapping.\n\nIf you pass the `hellcat-preview` media type, you can also update the LDAP mapping of a child team.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team"
            },
            "operationId": "enterprise-admin/update-ldap-mapping-for-team",
            "parameters": [
              {
                "in": "path",
                "name": "team_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "ldap_dn": "cn=Enterprise Ops,ou=teams,dc=github,dc=com"
                  },
                  "schema": {
                    "properties": {
                      "ldap_dn": {
                        "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "description": "A great team.",
                          "html_url": "https://github.com/orgs/github/teams/justice-league",
                          "id": 1,
                          "ldap_dn": "cn=Enterprise Ops,ou=teams,dc=github,dc=com",
                          "members_url": "https://api.github.com/teams/1/members{/member}",
                          "name": "Justice League",
                          "node_id": "MDQ6VGVhbTE=",
                          "parent": null,
                          "permission": "admin",
                          "privacy": "closed",
                          "repositories_url": "https://api.github.com/teams/1/repos",
                          "slug": "justice-league",
                          "url": "https://api.github.com/teams/1"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "description": { "nullable": true, "type": "string" },
                        "html_url": { "type": "string" },
                        "id": { "type": "integer" },
                        "ldap_dn": { "type": "string" },
                        "members_url": { "type": "string" },
                        "name": { "type": "string" },
                        "node_id": { "type": "string" },
                        "parent": { "nullable": true },
                        "permission": { "type": "string" },
                        "privacy": { "type": "string" },
                        "repositories_url": { "type": "string" },
                        "slug": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update LDAP mapping for a team",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "hellcat",
                  "note": "The Nested Teams API is currently available for developers to preview. See the [blog post](https://developer.github.com/changes/2017-08-30-preview-nested-teams) for full details. To access the API, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.hellcat-preview+json\n```",
                  "required": false
                }
              ],
              "subcategory": "ldap"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/ldap/teams/{team_id}/sync",
        {
          "post": {
            "deprecated": null,
            "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-team"
            },
            "operationId": "enterprise-admin/sync-ldap-mapping-for-team",
            "parameters": [
              {
                "in": "path",
                "name": "team_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "example": { "status": "queued" },
                    "schema": {
                      "properties": { "status": { "type": "string" } },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Sync LDAP mapping for a team",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "ldap"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/ldap/users/{username}/mapping",
        {
          "patch": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user"
            },
            "operationId": "enterprise-admin/update-ldap-mapping-for-user",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "ldap_dn": "uid=asdf,ou=users,dc=github,dc=com"
                  },
                  "schema": {
                    "properties": {
                      "ldap_dn": {
                        "description": "The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                          "bio": "There once was...",
                          "blog": "https://github.com/blog",
                          "collaborators": 8,
                          "company": "GitHub",
                          "created_at": "2008-01-14T04:33:35Z",
                          "disk_usage": 10000,
                          "email": "octocat@github.com",
                          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                          "followers": 20,
                          "followers_url": "https://api.github.com/users/octocat/followers",
                          "following": 0,
                          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                          "gravatar_id": "",
                          "hireable": false,
                          "html_url": "https://github.com/octocat",
                          "id": 1,
                          "ldap_dn": "uid=asdf,ou=users,dc=github,dc=com",
                          "location": "San Francisco",
                          "login": "octocat",
                          "name": "monalisa octocat",
                          "node_id": "MDQ6VXNlcjE=",
                          "organizations_url": "https://api.github.com/users/octocat/orgs",
                          "owned_private_repos": 100,
                          "plan": {
                            "collaborators": 0,
                            "name": "Medium",
                            "private_repos": 20,
                            "space": 400
                          },
                          "private_gists": 81,
                          "public_gists": 1,
                          "public_repos": 2,
                          "received_events_url": "https://api.github.com/users/octocat/received_events",
                          "repos_url": "https://api.github.com/users/octocat/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                          "total_private_repos": 100,
                          "twitter_username": "monatheoctocat",
                          "two_factor_authentication": true,
                          "type": "User",
                          "updated_at": "2008-01-14T04:33:35Z",
                          "url": "https://api.github.com/users/octocat"
                        }
                      }
                    },
                    "schema": {
                      "description": "Ldap Private User",
                      "properties": {
                        "avatar_url": {
                          "example": "https://github.com/images/error/octocat_happy.gif",
                          "format": "uri",
                          "type": "string"
                        },
                        "bio": {
                          "example": "There once was...",
                          "nullable": true,
                          "type": "string"
                        },
                        "blog": {
                          "example": "https://github.com/blog",
                          "nullable": true,
                          "type": "string"
                        },
                        "business_plus": { "type": "boolean" },
                        "collaborators": { "example": 8, "type": "integer" },
                        "company": {
                          "example": "GitHub",
                          "nullable": true,
                          "type": "string"
                        },
                        "created_at": {
                          "example": "2008-01-14T04:33:35Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "disk_usage": { "example": 10000, "type": "integer" },
                        "email": {
                          "example": "octocat@github.com",
                          "format": "email",
                          "nullable": true,
                          "type": "string"
                        },
                        "events_url": {
                          "example": "https://api.github.com/users/octocat/events{/privacy}",
                          "type": "string"
                        },
                        "followers": { "example": 20, "type": "integer" },
                        "followers_url": {
                          "example": "https://api.github.com/users/octocat/followers",
                          "format": "uri",
                          "type": "string"
                        },
                        "following": { "example": 0, "type": "integer" },
                        "following_url": {
                          "example": "https://api.github.com/users/octocat/following{/other_user}",
                          "type": "string"
                        },
                        "gists_url": {
                          "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                          "type": "string"
                        },
                        "gravatar_id": {
                          "example": "41d064eb2195891e12d0413f63227ea7",
                          "nullable": true,
                          "type": "string"
                        },
                        "hireable": { "nullable": true, "type": "boolean" },
                        "html_url": {
                          "example": "https://github.com/octocat",
                          "format": "uri",
                          "type": "string"
                        },
                        "id": { "example": 1, "type": "integer" },
                        "ldap_dn": { "type": "string" },
                        "location": {
                          "example": "San Francisco",
                          "nullable": true,
                          "type": "string"
                        },
                        "login": { "example": "octocat", "type": "string" },
                        "name": {
                          "example": "monalisa octocat",
                          "nullable": true,
                          "type": "string"
                        },
                        "node_id": {
                          "example": "MDQ6VXNlcjE=",
                          "type": "string"
                        },
                        "organizations_url": {
                          "example": "https://api.github.com/users/octocat/orgs",
                          "format": "uri",
                          "type": "string"
                        },
                        "owned_private_repos": {
                          "example": 100,
                          "type": "integer"
                        },
                        "plan": {
                          "properties": {
                            "collaborators": { "type": "integer" },
                            "name": { "type": "string" },
                            "private_repos": { "type": "integer" },
                            "space": { "type": "integer" }
                          },
                          "required": [
                            "collaborators",
                            "name",
                            "space",
                            "private_repos"
                          ],
                          "type": "object"
                        },
                        "private_gists": { "example": 81, "type": "integer" },
                        "public_gists": { "example": 1, "type": "integer" },
                        "public_repos": { "example": 2, "type": "integer" },
                        "received_events_url": {
                          "example": "https://api.github.com/users/octocat/received_events",
                          "format": "uri",
                          "type": "string"
                        },
                        "repos_url": {
                          "example": "https://api.github.com/users/octocat/repos",
                          "format": "uri",
                          "type": "string"
                        },
                        "site_admin": { "type": "boolean" },
                        "starred_url": {
                          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                          "type": "string"
                        },
                        "subscriptions_url": {
                          "example": "https://api.github.com/users/octocat/subscriptions",
                          "format": "uri",
                          "type": "string"
                        },
                        "suspended_at": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "total_private_repos": {
                          "example": 100,
                          "type": "integer"
                        },
                        "twitter_username": {
                          "example": "monalisa",
                          "nullable": true,
                          "type": "string"
                        },
                        "two_factor_authentication": {
                          "example": true,
                          "type": "boolean"
                        },
                        "type": { "example": "User", "type": "string" },
                        "updated_at": {
                          "example": "2008-01-14T04:33:35Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/users/octocat",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "avatar_url",
                        "events_url",
                        "followers_url",
                        "following_url",
                        "gists_url",
                        "gravatar_id",
                        "html_url",
                        "id",
                        "node_id",
                        "login",
                        "organizations_url",
                        "received_events_url",
                        "repos_url",
                        "site_admin",
                        "starred_url",
                        "subscriptions_url",
                        "type",
                        "url",
                        "bio",
                        "blog",
                        "company",
                        "email",
                        "followers",
                        "following",
                        "hireable",
                        "location",
                        "name",
                        "public_gists",
                        "public_repos",
                        "created_at",
                        "updated_at",
                        "collaborators",
                        "disk_usage",
                        "owned_private_repos",
                        "private_gists",
                        "total_private_repos",
                        "two_factor_authentication"
                      ],
                      "title": "Ldap Private User",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update LDAP mapping for a user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "ldap"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/ldap/users/{username}/sync",
        {
          "post": {
            "deprecated": null,
            "description": "Note that this API call does not automatically initiate an LDAP sync. Rather, if a `201` is returned, the sync job is queued successfully, and is performed when the instance is ready.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#sync-ldap-mapping-for-a-user"
            },
            "operationId": "enterprise-admin/sync-ldap-mapping-for-user",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "example": { "status": "queued" },
                    "schema": {
                      "properties": { "status": { "type": "string" } },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Sync LDAP mapping for a user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "ldap"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/organizations",
        {
          "post": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#create-an-organization"
            },
            "operationId": "enterprise-admin/create-org",
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "admin": "monalisaoctocat",
                    "login": "github",
                    "profile_name": "GitHub, Inc."
                  },
                  "schema": {
                    "properties": {
                      "admin": {
                        "description": "The login of the user who will manage this organization.",
                        "type": "string"
                      },
                      "login": {
                        "description": "The organization's username.",
                        "type": "string"
                      },
                      "profile_name": {
                        "description": "The organization's display name.",
                        "type": "string"
                      }
                    },
                    "required": ["login", "admin"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                          "description": "A great organization",
                          "events_url": "https://api.github.com/orgs/github/events",
                          "hooks_url": "https://api.github.com/orgs/github/hooks",
                          "id": 1,
                          "issues_url": "https://api.github.com/orgs/github/issues",
                          "login": "github",
                          "members_url": "https://api.github.com/orgs/github/members{/member}",
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                          "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                          "repos_url": "https://api.github.com/orgs/github/repos",
                          "url": "https://api.github.com/orgs/github"
                        }
                      }
                    },
                    "schema": {
                      "description": "Organization Simple",
                      "properties": {
                        "avatar_url": {
                          "example": "https://github.com/images/error/octocat_happy.gif",
                          "type": "string"
                        },
                        "description": {
                          "example": "A great organization",
                          "nullable": true,
                          "type": "string"
                        },
                        "events_url": {
                          "example": "https://api.github.com/orgs/github/events",
                          "format": "uri",
                          "type": "string"
                        },
                        "hooks_url": {
                          "example": "https://api.github.com/orgs/github/hooks",
                          "type": "string"
                        },
                        "id": { "example": 1, "type": "integer" },
                        "issues_url": {
                          "example": "https://api.github.com/orgs/github/issues",
                          "type": "string"
                        },
                        "login": { "example": "github", "type": "string" },
                        "members_url": {
                          "example": "https://api.github.com/orgs/github/members{/member}",
                          "type": "string"
                        },
                        "node_id": {
                          "example": "MDEyOk9yZ2FuaXphdGlvbjE=",
                          "type": "string"
                        },
                        "public_members_url": {
                          "example": "https://api.github.com/orgs/github/public_members{/member}",
                          "type": "string"
                        },
                        "repos_url": {
                          "example": "https://api.github.com/orgs/github/repos",
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/github",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "login",
                        "url",
                        "id",
                        "node_id",
                        "repos_url",
                        "events_url",
                        "hooks_url",
                        "issues_url",
                        "members_url",
                        "public_members_url",
                        "avatar_url",
                        "description"
                      ],
                      "title": "Organization Simple",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Create an organization",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/organizations/{org}",
        {
          "patch": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-an-organization-name"
            },
            "operationId": "enterprise-admin/update-org-name",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": { "login": "the-new-octocats" },
                  "schema": {
                    "properties": {
                      "login": {
                        "description": "The organization's new name.",
                        "type": "string"
                      }
                    },
                    "required": ["login"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "202": {
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Job queued to rename organization. It may take a few minutes to complete.",
                      "url": "https://<hostname>/api/v3/organizations/1"
                    },
                    "schema": {
                      "properties": {
                        "message": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update an organization name",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/pre-receive-environments",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#list-pre-receive-environments"
            },
            "operationId": "enterprise-admin/list-pre-receive-environments",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "One of `asc` (ascending) or `desc` (descending).",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": {
                  "default": "desc",
                  "enum": ["asc", "desc"],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": ["created", "updated", "name"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2016-05-20T11:35:45-05:00",
                            "default_environment": true,
                            "download": {
                              "downloaded_at": "2016-05-26T07:42:53-05:00",
                              "message": null,
                              "state": "not_started",
                              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest"
                            },
                            "hooks_count": 14,
                            "html_url": "https://github.example.com/admin/pre-receive-environments/1",
                            "id": 1,
                            "image_url": "githubenterprise://internal",
                            "name": "Default",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1"
                          },
                          {
                            "created_at": "2016-05-20T11:35:45-05:00",
                            "default_environment": false,
                            "download": {
                              "downloaded_at": "2016-05-26T07:42:53-05:00",
                              "message": null,
                              "state": "success",
                              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                            },
                            "hooks_count": 1,
                            "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                            "id": 2,
                            "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                            "name": "DevTools Hook Env",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "created_at": { "type": "string" },
                          "default_environment": { "type": "boolean" },
                          "download": {
                            "properties": {
                              "downloaded_at": {
                                "nullable": true,
                                "type": "string"
                              },
                              "message": { "nullable": true, "type": "string" },
                              "state": { "type": "string" },
                              "url": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "hooks_count": { "type": "integer" },
                          "html_url": { "type": "string" },
                          "id": { "type": "integer" },
                          "image_url": { "type": "string" },
                          "name": { "type": "string" },
                          "url": { "type": "string" }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List pre-receive environments",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-environments"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#create-a-pre-receive-environment"
            },
            "operationId": "enterprise-admin/create-pre-receive-environment",
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                    "name": "DevTools Hook Env"
                  },
                  "schema": {
                    "properties": {
                      "image_url": {
                        "description": "URL from which to download a tarball of this environment.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The new pre-receive environment's name.",
                        "type": "string"
                      }
                    },
                    "required": ["name", "image_url"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": false,
                          "download": {
                            "downloaded_at": null,
                            "message": null,
                            "state": "not_started",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                          },
                          "hooks_count": 1,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                          "id": 2,
                          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                          "name": "DevTools Hook Env",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "created_at": { "type": "string" },
                        "default_environment": { "type": "boolean" },
                        "download": {
                          "properties": {
                            "downloaded_at": {
                              "nullable": true,
                              "type": "string"
                            },
                            "message": { "nullable": true, "type": "string" },
                            "state": { "type": "string" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "hooks_count": { "type": "integer" },
                        "html_url": { "type": "string" },
                        "id": { "type": "integer" },
                        "image_url": { "type": "string" },
                        "name": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Create a pre-receive environment",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-environments"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/pre-receive-environments/{pre_receive_environment_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Cannot delete environment that has hooks_\n*   _Cannot delete environment when download is in progress_",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#delete-a-pre-receive-environment"
            },
            "operationId": "enterprise-admin/delete-pre-receive-environment",
            "parameters": [
              {
                "in": "path",
                "name": "pre_receive_environment_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "422": {
                "content": {
                  "application/json": {
                    "examples": {
                      "client-errors": {
                        "value": {
                          "errors": [
                            {
                              "code": "custom",
                              "message": "Cannot modify or delete the default environment",
                              "resource": "PreReceiveEnvironment"
                            }
                          ],
                          "message": "Validation Failed"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Client Errors"
              }
            },
            "summary": "Delete a pre-receive environment",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-environments"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-a-pre-receive-environment"
            },
            "operationId": "enterprise-admin/get-pre-receive-environment",
            "parameters": [
              {
                "in": "path",
                "name": "pre_receive_environment_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": false,
                          "download": {
                            "downloaded_at": null,
                            "message": null,
                            "state": "not_started",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                          },
                          "hooks_count": 1,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                          "id": 2,
                          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                          "name": "DevTools Hook Env",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "created_at": { "type": "string" },
                        "default_environment": { "type": "boolean" },
                        "download": {
                          "properties": {
                            "downloaded_at": {
                              "nullable": true,
                              "type": "string"
                            },
                            "message": { "nullable": true, "type": "string" },
                            "state": { "type": "string" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "hooks_count": { "type": "integer" },
                        "html_url": { "type": "string" },
                        "id": { "type": "integer" },
                        "image_url": { "type": "string" },
                        "name": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a pre-receive environment",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-environments"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "You cannot modify the default environment. If you attempt to modify the default environment, you will receive a `422 Unprocessable Entity` response.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-a-pre-receive-environment"
            },
            "operationId": "enterprise-admin/update-pre-receive-environment",
            "parameters": [
              {
                "in": "path",
                "name": "pre_receive_environment_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "image_url": {
                        "description": "URL from which to download a tarball of this environment.",
                        "type": "string"
                      },
                      "name": {
                        "description": "This pre-receive environment's new name.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default-response": {
                        "value": {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": false,
                          "download": {
                            "downloaded_at": "2016-05-26T07:42:53-05:00",
                            "message": null,
                            "state": "success",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                          },
                          "hooks_count": 1,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                          "id": 2,
                          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                          "name": "DevTools Hook Env",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "created_at": { "type": "string" },
                        "default_environment": { "type": "boolean" },
                        "download": {
                          "properties": {
                            "downloaded_at": {
                              "nullable": true,
                              "type": "string"
                            },
                            "message": { "nullable": true, "type": "string" },
                            "state": { "type": "string" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "hooks_count": { "type": "integer" },
                        "html_url": { "type": "string" },
                        "id": { "type": "integer" },
                        "image_url": { "type": "string" },
                        "name": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "422": {
                "content": {
                  "application/json": {
                    "examples": {
                      "client-errors": {
                        "value": {
                          "errors": [
                            {
                              "code": "custom",
                              "message": "Cannot modify or delete the default environment",
                              "resource": "PreReceiveEnvironment"
                            }
                          ],
                          "message": "Validation Failed"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Client Errors"
              }
            },
            "summary": "Update a pre-receive environment",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-environments"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads",
        {
          "post": {
            "deprecated": null,
            "description": "Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.\n\nIf a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n* _Cannot modify or delete the default environment_\n* _Can not start a new download when a download is in progress_",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#start-a-pre-receive-environment-download"
            },
            "operationId": "enterprise-admin/start-pre-receive-environment-download",
            "parameters": [
              {
                "in": "path",
                "name": "pre_receive_environment_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "202": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default-response": {
                        "value": {
                          "downloaded_at": null,
                          "message": null,
                          "state": "not_started",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "downloaded_at": { "nullable": true, "type": "string" },
                        "message": { "nullable": true, "type": "string" },
                        "state": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "422": {
                "content": {
                  "application/json": {
                    "examples": {
                      "client-errors": {
                        "value": {
                          "errors": [
                            {
                              "code": "custom",
                              "message": "Can not start a new download when a download is in progress",
                              "resource": "PreReceiveEnvironment"
                            }
                          ],
                          "message": "Validation Failed"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Client Errors"
              }
            },
            "summary": "Start a pre-receive environment download",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-environments"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest",
        {
          "get": {
            "deprecated": null,
            "description": "In addition to seeing the download status at the \"[Get a pre-receive environment](#get-a-pre-receive-environment)\" endpoint, there is also this separate endpoint for just the download status.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-the-download-status-for-a-pre-receive-environment"
            },
            "operationId": "enterprise-admin/get-download-status-for-pre-receive-environment",
            "parameters": [
              {
                "in": "path",
                "name": "pre_receive_environment_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "downloaded_at": "2016-05-26T07:42:53-05:00",
                          "message": null,
                          "state": "success",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "downloaded_at": { "nullable": true, "type": "string" },
                        "message": { "nullable": true, "type": "string" },
                        "state": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get the download status for a pre-receive environment",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-environments"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/pre-receive-hooks",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#list-pre-receive-hooks"
            },
            "operationId": "enterprise-admin/list-pre-receive-hooks",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "One of `asc` (ascending) or `desc` (descending).",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": {
                  "default": "desc",
                  "enum": ["asc", "desc"],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to) or `name`.",
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": ["created", "updated", "name"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "allow_downstream_configuration": false,
                            "enforcement": "disabled",
                            "environment": {
                              "created_at": "2016-05-20T11:35:45-05:00",
                              "default_environment": false,
                              "download": {
                                "downloaded_at": "2016-05-26T07:42:53-05:00",
                                "message": null,
                                "state": "success",
                                "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                              },
                              "hooks_count": 1,
                              "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                              "id": 2,
                              "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                              "name": "DevTools Hook Env",
                              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                            },
                            "id": 1,
                            "name": "Check Commits",
                            "script": "scripts/commmit_check.sh",
                            "script_repository": {
                              "full_name": "DevIT/hooks",
                              "html_url": "https://github.example.com/DevIT/hooks",
                              "id": 595,
                              "url": "https://github.example.com/api/v3/repos/DevIT/hooks"
                            }
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "allow_downstream_configuration": {
                            "type": "boolean"
                          },
                          "enforcement": { "type": "string" },
                          "environment": {
                            "properties": {
                              "created_at": { "type": "string" },
                              "default_environment": { "type": "boolean" },
                              "download": {
                                "properties": {
                                  "downloaded_at": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "message": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "state": { "type": "string" },
                                  "url": { "type": "string" }
                                },
                                "type": "object"
                              },
                              "hooks_count": { "type": "integer" },
                              "html_url": { "type": "string" },
                              "id": { "type": "integer" },
                              "image_url": { "type": "string" },
                              "name": { "type": "string" },
                              "url": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "id": { "type": "integer" },
                          "name": { "type": "string" },
                          "script": { "type": "string" },
                          "script_repository": {
                            "properties": {
                              "full_name": { "type": "string" },
                              "html_url": { "type": "string" },
                              "id": { "type": "integer" },
                              "url": { "type": "string" }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List pre-receive hooks",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-hooks"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#create-a-pre-receive-hook"
            },
            "operationId": "enterprise-admin/create-pre-receive-hook",
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "allow_downstream_configuration": false,
                    "enforcement": "disabled",
                    "environment": { "id": 2 },
                    "name": "Check Commits",
                    "script": "scripts/commit_check.sh",
                    "script_repository": { "full_name": "DevIT/hooks" }
                  },
                  "schema": {
                    "properties": {
                      "allow_downstream_configuration": {
                        "description": "Whether enforcement can be overridden at the org or repo level. default: `false`",
                        "type": "boolean"
                      },
                      "enforcement": {
                        "description": "The state of enforcement for this hook. default: `disabled`",
                        "type": "string"
                      },
                      "environment": {
                        "additionalProperties": true,
                        "description": "The pre-receive environment where the script is executed.",
                        "properties": {},
                        "type": "object"
                      },
                      "name": {
                        "description": "The name of the hook.",
                        "type": "string"
                      },
                      "script": {
                        "description": "The script that the hook runs.",
                        "type": "string"
                      },
                      "script_repository": {
                        "additionalProperties": true,
                        "description": "The GitHub repository where the script is kept.",
                        "properties": {},
                        "type": "object"
                      }
                    },
                    "required": [
                      "name",
                      "script",
                      "script_repository",
                      "environment"
                    ],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "allow_downstream_configuration": false,
                          "enforcement": "disabled",
                          "environment": {
                            "created_at": "2016-05-20T11:35:45-05:00",
                            "default_environment": false,
                            "download": {
                              "downloaded_at": "2016-05-26T07:42:53-05:00",
                              "message": null,
                              "state": "success",
                              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                            },
                            "hooks_count": 1,
                            "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                            "id": 2,
                            "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                            "name": "DevTools Hook Env",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                          },
                          "id": 1,
                          "name": "Check Commits",
                          "script": "scripts/commmit_check.sh",
                          "script_repository": {
                            "full_name": "DevIT/hooks",
                            "html_url": "https://github.example.com/DevIT/hooks",
                            "id": 595,
                            "url": "https://github.example.com/api/v3/repos/DevIT/hooks"
                          }
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "allow_downstream_configuration": { "type": "boolean" },
                        "enforcement": { "type": "string" },
                        "environment": {
                          "properties": {
                            "created_at": { "type": "string" },
                            "default_environment": { "type": "boolean" },
                            "download": {
                              "properties": {
                                "downloaded_at": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "message": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "state": { "type": "string" },
                                "url": { "type": "string" }
                              },
                              "type": "object"
                            },
                            "hooks_count": { "type": "integer" },
                            "html_url": { "type": "string" },
                            "id": { "type": "integer" },
                            "image_url": { "type": "string" },
                            "name": { "type": "string" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "id": { "type": "integer" },
                        "name": { "type": "string" },
                        "script": { "type": "string" },
                        "script_repository": {
                          "properties": {
                            "full_name": { "type": "string" },
                            "html_url": { "type": "string" },
                            "id": { "type": "integer" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Create a pre-receive hook",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-hooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/pre-receive-hooks/{pre_receive_hook_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#delete-a-pre-receive-hook"
            },
            "operationId": "enterprise-admin/delete-pre-receive-hook",
            "parameters": [
              {
                "description": "pre_receive_hook_id parameter",
                "in": "path",
                "name": "pre_receive_hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Delete a pre-receive hook",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-hooks"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-a-pre-receive-hook"
            },
            "operationId": "enterprise-admin/get-pre-receive-hook",
            "parameters": [
              {
                "description": "pre_receive_hook_id parameter",
                "in": "path",
                "name": "pre_receive_hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "allow_downstream_configuration": false,
                          "enforcement": "disabled",
                          "environment": {
                            "created_at": "2016-05-20T11:35:45-05:00",
                            "default_environment": false,
                            "download": {
                              "downloaded_at": "2016-05-26T07:42:53-05:00",
                              "message": null,
                              "state": "success",
                              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                            },
                            "hooks_count": 1,
                            "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                            "id": 2,
                            "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                            "name": "DevTools Hook Env",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                          },
                          "id": 1,
                          "name": "Check Commits",
                          "script": "scripts/commmit_check.sh",
                          "script_repository": {
                            "full_name": "DevIT/hooks",
                            "html_url": "https://github.example.com/DevIT/hooks",
                            "id": 595,
                            "url": "https://github.example.com/api/v3/repos/DevIT/hooks"
                          }
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "allow_downstream_configuration": { "type": "boolean" },
                        "enforcement": { "type": "string" },
                        "environment": {
                          "properties": {
                            "created_at": { "type": "string" },
                            "default_environment": { "type": "boolean" },
                            "download": {
                              "properties": {
                                "downloaded_at": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "message": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "state": { "type": "string" },
                                "url": { "type": "string" }
                              },
                              "type": "object"
                            },
                            "hooks_count": { "type": "integer" },
                            "html_url": { "type": "string" },
                            "id": { "type": "integer" },
                            "image_url": { "type": "string" },
                            "name": { "type": "string" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "id": { "type": "integer" },
                        "name": { "type": "string" },
                        "script": { "type": "string" },
                        "script_repository": {
                          "properties": {
                            "full_name": { "type": "string" },
                            "html_url": { "type": "string" },
                            "id": { "type": "integer" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a pre-receive hook",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-hooks"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-a-pre-receive-hook"
            },
            "operationId": "enterprise-admin/update-pre-receive-hook",
            "parameters": [
              {
                "description": "pre_receive_hook_id parameter",
                "in": "path",
                "name": "pre_receive_hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "allow_downstream_configuration": true,
                    "environment": { "id": 1 },
                    "name": "Check Commits"
                  },
                  "schema": {
                    "properties": {
                      "allow_downstream_configuration": {
                        "description": "Whether enforcement can be overridden at the org or repo level.",
                        "type": "boolean"
                      },
                      "enforcement": {
                        "description": "The state of enforcement for this hook.",
                        "type": "string"
                      },
                      "environment": {
                        "additionalProperties": true,
                        "description": "The pre-receive environment where the script is executed.",
                        "properties": {},
                        "type": "object"
                      },
                      "name": {
                        "description": "The name of the hook.",
                        "type": "string"
                      },
                      "script": {
                        "description": "The script that the hook runs.",
                        "type": "string"
                      },
                      "script_repository": {
                        "additionalProperties": true,
                        "description": "The GitHub repository where the script is kept.",
                        "properties": {},
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "allow_downstream_configuration": true,
                          "enforcement": "disabled",
                          "environment": {
                            "created_at": "2016-05-20T11:35:45-05:00",
                            "default_environment": true,
                            "download": {
                              "downloaded_at": "2016-05-26T07:42:53-05:00",
                              "message": null,
                              "state": "success",
                              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest"
                            },
                            "hooks_count": 1,
                            "html_url": "https://github.example.com/admin/pre-receive-environments/1",
                            "id": 1,
                            "image_url": "githubenterprise://internal",
                            "name": "Default",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1"
                          },
                          "id": 1,
                          "name": "Check Commits",
                          "script": "scripts/commmit_check.sh",
                          "script_repository": {
                            "full_name": "DevIT/hooks",
                            "html_url": "https://github.example.com/DevIT/hooks",
                            "id": 595,
                            "url": "https://github.example.com/api/v3/repos/DevIT/hooks"
                          }
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "allow_downstream_configuration": { "type": "boolean" },
                        "enforcement": { "type": "string" },
                        "environment": {
                          "properties": {
                            "created_at": { "type": "string" },
                            "default_environment": { "type": "boolean" },
                            "download": {
                              "properties": {
                                "downloaded_at": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "message": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "state": { "type": "string" },
                                "url": { "type": "string" }
                              },
                              "type": "object"
                            },
                            "hooks_count": { "type": "integer" },
                            "html_url": { "type": "string" },
                            "id": { "type": "integer" },
                            "image_url": { "type": "string" },
                            "name": { "type": "string" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "id": { "type": "integer" },
                        "name": { "type": "string" },
                        "script": { "type": "string" },
                        "script_repository": {
                          "properties": {
                            "full_name": { "type": "string" },
                            "html_url": { "type": "string" },
                            "id": { "type": "integer" },
                            "url": { "type": "string" }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update a pre-receive hook",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "pre-receive-hooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/tokens",
        {
          "get": {
            "deprecated": null,
            "description": "Lists personal access tokens for all users, including admin users.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#list-personal-access-tokens"
            },
            "operationId": "enterprise-admin/list-personal-access-tokens",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "app": {
                              "client_id": "00000000000000000000",
                              "name": "My personal access token",
                              "url": "https://docs.github.com/enterprise/rest/reference/enterprise-admin#list-personal-access-tokens"
                            },
                            "created_at": "2019-04-24T21:49:02Z",
                            "fingerprint": null,
                            "hashed_token": "23cffb2fab1b0a62747863eba88cb9327e561f2f7a0c8661c0d9b83146cb8d45",
                            "id": 2,
                            "note": "My personal access token",
                            "note_url": null,
                            "scopes": [
                              "admin:business",
                              "admin:gpg_key",
                              "admin:org",
                              "admin:org_hook",
                              "admin:pre_receive_hook",
                              "admin:public_key",
                              "admin:repo_hook",
                              "delete_repo",
                              "gist",
                              "notifications",
                              "repo",
                              "user",
                              "write:discussion"
                            ],
                            "token": "ghp_16C7e42F292c6912E7710c838347Ae178B4a",
                            "token_last_eight": "Ae178B4a",
                            "updated_at": "2019-04-24T21:49:02Z",
                            "url": "https://enterprise.octocat.com/api/v3/authorizations/2"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                        "properties": {
                          "app": {
                            "properties": {
                              "client_id": { "type": "string" },
                              "name": { "type": "string" },
                              "url": { "format": "uri", "type": "string" }
                            },
                            "required": ["client_id", "name", "url"],
                            "type": "object"
                          },
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "fingerprint": { "nullable": true, "type": "string" },
                          "hashed_token": {
                            "nullable": true,
                            "type": "string"
                          },
                          "id": { "type": "integer" },
                          "installation": {
                            "allOf": [
                              {
                                "properties": {
                                  "account": {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  },
                                  "has_multiple_single_files": {
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "permissions": {
                                    "description": "The permissions granted to the user-to-server access token.",
                                    "example": {
                                      "contents": "read",
                                      "deployments": "write",
                                      "issues": "read",
                                      "single_file": "read"
                                    },
                                    "properties": {
                                      "actions": {
                                        "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "administration": {
                                        "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "checks": {
                                        "description": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "content_references": {
                                        "description": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "contents": {
                                        "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "deployments": {
                                        "description": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "environments": {
                                        "description": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "issues": {
                                        "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "members": {
                                        "description": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "metadata": {
                                        "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "organization_administration": {
                                        "description": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "organization_hooks": {
                                        "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "organization_packages": {
                                        "description": "The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "organization_plan": {
                                        "description": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
                                        "enum": ["read"],
                                        "type": "string"
                                      },
                                      "organization_projects": {
                                        "description": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                                        "enum": ["read", "write", "admin"],
                                        "type": "string"
                                      },
                                      "organization_secrets": {
                                        "description": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "organization_self_hosted_runners": {
                                        "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "organization_user_blocking": {
                                        "description": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "packages": {
                                        "description": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "pages": {
                                        "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "pull_requests": {
                                        "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "repository_hooks": {
                                        "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "repository_projects": {
                                        "description": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                                        "enum": ["read", "write", "admin"],
                                        "type": "string"
                                      },
                                      "secret_scanning_alerts": {
                                        "description": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "secrets": {
                                        "description": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "security_events": {
                                        "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "single_file": {
                                        "description": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "statuses": {
                                        "description": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "team_discussions": {
                                        "description": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
                                        "enum": ["read", "write"],
                                        "type": "string"
                                      },
                                      "vulnerability_alerts": {
                                        "description": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
                                        "enum": ["read"],
                                        "type": "string"
                                      },
                                      "workflows": {
                                        "description": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
                                        "enum": ["write"],
                                        "type": "string"
                                      }
                                    },
                                    "title": "App Permissions",
                                    "type": "object"
                                  },
                                  "repositories_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repository_selection": {
                                    "description": "Describe whether all repositories have been selected or there's a selection involved",
                                    "enum": ["all", "selected"],
                                    "type": "string"
                                  },
                                  "single_file_name": {
                                    "example": "config.yaml",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "single_file_paths": {
                                    "example": [
                                      "config.yml",
                                      ".github/issue_TEMPLATE.md"
                                    ],
                                    "items": { "type": "string" },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "permissions",
                                  "repository_selection",
                                  "single_file_name",
                                  "repositories_url",
                                  "account"
                                ],
                                "title": "Scoped Installation",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "note": { "nullable": true, "type": "string" },
                          "note_url": {
                            "format": "uri",
                            "nullable": true,
                            "type": "string"
                          },
                          "scopes": {
                            "description": "A list of scopes that this authorization is in.",
                            "items": { "type": "string" },
                            "nullable": true,
                            "type": "array"
                          },
                          "token": { "type": "string" },
                          "token_last_eight": {
                            "nullable": true,
                            "type": "string"
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": { "format": "uri", "type": "string" },
                          "user": {
                            "allOf": [
                              {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          }
                        },
                        "required": [
                          "app",
                          "id",
                          "note",
                          "note_url",
                          "scopes",
                          "token",
                          "hashed_token",
                          "token_last_eight",
                          "fingerprint",
                          "url",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Authorization",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              }
            },
            "summary": "List personal access tokens",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/tokens/{token_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#delete-a-personal-access-token"
            },
            "operationId": "enterprise-admin/delete-personal-access-token",
            "parameters": [
              {
                "in": "path",
                "name": "token_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Delete a personal access token",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/users",
        {
          "post": {
            "deprecated": null,
            "description": "If an external authentication mechanism is used, the login name should match the login name in the external system. If you are using LDAP authentication, you should also [update the LDAP mapping](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-ldap-mapping-for-a-user) for the user.\n\nThe login name will be normalized to only contain alphanumeric characters or single hyphens. For example, if you send `\"octo_cat\"` as the login, a user named `\"octo-cat\"` will be created.\n\nIf the login name or email address is already associated with an account, the server will return a `422` response.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#create-a-user"
            },
            "operationId": "enterprise-admin/create-user",
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "email": "octocat@github.com",
                    "login": "monalisa"
                  },
                  "schema": {
                    "properties": {
                      "email": {
                        "description": "**Required for built-in authentication.** The user's email address. This parameter can be omitted when using CAS, LDAP, or SAML. For details on built-in and centrally-managed authentication, see the the [GitHub authentication guide](https://help.github.com/enterprise/2.18/admin/guides/user-management/authenticating-users-for-your-github-enterprise-server-instance/).",
                        "type": "string"
                      },
                      "login": {
                        "description": "The user's username.",
                        "type": "string"
                      }
                    },
                    "required": ["login"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                          "followers_url": "https://api.github.com/users/octocat/followers",
                          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                          "gravatar_id": "",
                          "html_url": "https://github.com/octocat",
                          "id": 1,
                          "login": "octocat",
                          "node_id": "MDQ6VXNlcjE=",
                          "organizations_url": "https://api.github.com/users/octocat/orgs",
                          "received_events_url": "https://api.github.com/users/octocat/received_events",
                          "repos_url": "https://api.github.com/users/octocat/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                          "type": "User",
                          "url": "https://api.github.com/users/octocat"
                        }
                      }
                    },
                    "schema": {
                      "description": "Simple User",
                      "nullable": true,
                      "properties": {
                        "avatar_url": {
                          "example": "https://github.com/images/error/octocat_happy.gif",
                          "format": "uri",
                          "type": "string"
                        },
                        "email": { "nullable": true, "type": "string" },
                        "events_url": {
                          "example": "https://api.github.com/users/octocat/events{/privacy}",
                          "type": "string"
                        },
                        "followers_url": {
                          "example": "https://api.github.com/users/octocat/followers",
                          "format": "uri",
                          "type": "string"
                        },
                        "following_url": {
                          "example": "https://api.github.com/users/octocat/following{/other_user}",
                          "type": "string"
                        },
                        "gists_url": {
                          "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                          "type": "string"
                        },
                        "gravatar_id": {
                          "example": "41d064eb2195891e12d0413f63227ea7",
                          "nullable": true,
                          "type": "string"
                        },
                        "html_url": {
                          "example": "https://github.com/octocat",
                          "format": "uri",
                          "type": "string"
                        },
                        "id": { "example": 1, "type": "integer" },
                        "login": { "example": "octocat", "type": "string" },
                        "name": { "nullable": true, "type": "string" },
                        "node_id": {
                          "example": "MDQ6VXNlcjE=",
                          "type": "string"
                        },
                        "organizations_url": {
                          "example": "https://api.github.com/users/octocat/orgs",
                          "format": "uri",
                          "type": "string"
                        },
                        "received_events_url": {
                          "example": "https://api.github.com/users/octocat/received_events",
                          "format": "uri",
                          "type": "string"
                        },
                        "repos_url": {
                          "example": "https://api.github.com/users/octocat/repos",
                          "format": "uri",
                          "type": "string"
                        },
                        "site_admin": { "type": "boolean" },
                        "starred_at": {
                          "example": "\"2020-07-09T00:17:55Z\"",
                          "type": "string"
                        },
                        "starred_url": {
                          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                          "type": "string"
                        },
                        "subscriptions_url": {
                          "example": "https://api.github.com/users/octocat/subscriptions",
                          "format": "uri",
                          "type": "string"
                        },
                        "type": { "example": "User", "type": "string" },
                        "url": {
                          "example": "https://api.github.com/users/octocat",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "avatar_url",
                        "events_url",
                        "followers_url",
                        "following_url",
                        "gists_url",
                        "gravatar_id",
                        "html_url",
                        "id",
                        "node_id",
                        "login",
                        "organizations_url",
                        "received_events_url",
                        "repos_url",
                        "site_admin",
                        "starred_url",
                        "subscriptions_url",
                        "type",
                        "url"
                      ],
                      "title": "Simple User",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Create a user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/users/{username}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#suspend-a-user) is often a better option.\n\nYou can delete any user account except your own.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#delete-a-user"
            },
            "operationId": "enterprise-admin/delete-user",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Delete a user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-the-username-for-a-user"
            },
            "operationId": "enterprise-admin/update-username-for-user",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": { "login": "thenewmonalisa" },
                  "schema": {
                    "properties": {
                      "login": {
                        "description": "The user's new username.",
                        "type": "string"
                      }
                    },
                    "required": ["login"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "202": {
                "content": {
                  "application/json": {
                    "example": {
                      "message": "Job queued to rename user. It may take a few minutes to complete.",
                      "url": "https://api.github.com/user/1"
                    },
                    "schema": {
                      "properties": {
                        "message": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update the username for a user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/admin/users/{username}/authorizations",
        {
          "delete": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#delete-an-impersonation-oauth-token"
            },
            "operationId": "enterprise-admin/delete-impersonation-o-auth-token",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Delete an impersonation OAuth token",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#create-an-impersonation-oauth-token"
            },
            "operationId": "enterprise-admin/create-impersonation-o-auth-token",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "scopes": {
                        "description": "A list of [scopes](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
                        "items": { "type": "string" },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "app": {
                            "client_id": "abcde12345fghij67890",
                            "name": "my github app",
                            "url": "http://my-github-app.com"
                          },
                          "created_at": "2011-09-06T17:26:27Z",
                          "fingerprint": "jklmnop12345678",
                          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                          "id": 1,
                          "note": "optional note",
                          "note_url": "http://optional/note/url",
                          "scopes": ["public_repo"],
                          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                          "token_last_eight": "Ae178B4a",
                          "updated_at": "2011-09-06T20:39:23Z",
                          "url": "https://api.github.com/authorizations/1"
                        }
                      }
                    },
                    "schema": {
                      "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                      "properties": {
                        "app": {
                          "properties": {
                            "client_id": { "type": "string" },
                            "name": { "type": "string" },
                            "url": { "format": "uri", "type": "string" }
                          },
                          "required": ["client_id", "name", "url"],
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "fingerprint": { "nullable": true, "type": "string" },
                        "hashed_token": { "nullable": true, "type": "string" },
                        "id": { "type": "integer" },
                        "installation": {
                          "allOf": [
                            {
                              "properties": {
                                "account": {
                                  "description": "Simple User",
                                  "nullable": true,
                                  "properties": {
                                    "avatar_url": {
                                      "example": "https://github.com/images/error/octocat_happy.gif",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "email": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "example": "https://api.github.com/users/octocat/events{/privacy}",
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "example": "https://api.github.com/users/octocat/followers",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "example": "https://api.github.com/users/octocat/following{/other_user}",
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "example": "41d064eb2195891e12d0413f63227ea7",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "example": "https://github.com/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "id": { "example": 1, "type": "integer" },
                                    "login": {
                                      "example": "octocat",
                                      "type": "string"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "example": "MDQ6VXNlcjE=",
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "example": "https://api.github.com/users/octocat/orgs",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "example": "https://api.github.com/users/octocat/received_events",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "example": "https://api.github.com/users/octocat/repos",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "site_admin": { "type": "boolean" },
                                    "starred_at": {
                                      "example": "\"2020-07-09T00:17:55Z\"",
                                      "type": "string"
                                    },
                                    "starred_url": {
                                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "example": "https://api.github.com/users/octocat/subscriptions",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": {
                                      "example": "User",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/users/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "title": "Simple User",
                                  "type": "object"
                                },
                                "has_multiple_single_files": {
                                  "example": true,
                                  "type": "boolean"
                                },
                                "permissions": {
                                  "description": "The permissions granted to the user-to-server access token.",
                                  "example": {
                                    "contents": "read",
                                    "deployments": "write",
                                    "issues": "read",
                                    "single_file": "read"
                                  },
                                  "properties": {
                                    "actions": {
                                      "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "administration": {
                                      "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "checks": {
                                      "description": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "content_references": {
                                      "description": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "contents": {
                                      "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "deployments": {
                                      "description": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "environments": {
                                      "description": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "issues": {
                                      "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "members": {
                                      "description": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_administration": {
                                      "description": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_hooks": {
                                      "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_packages": {
                                      "description": "The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_plan": {
                                      "description": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
                                      "enum": ["read"],
                                      "type": "string"
                                    },
                                    "organization_projects": {
                                      "description": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                                      "enum": ["read", "write", "admin"],
                                      "type": "string"
                                    },
                                    "organization_secrets": {
                                      "description": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_self_hosted_runners": {
                                      "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_user_blocking": {
                                      "description": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "packages": {
                                      "description": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "pages": {
                                      "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "pull_requests": {
                                      "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "repository_hooks": {
                                      "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "repository_projects": {
                                      "description": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                                      "enum": ["read", "write", "admin"],
                                      "type": "string"
                                    },
                                    "secret_scanning_alerts": {
                                      "description": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "secrets": {
                                      "description": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "security_events": {
                                      "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "single_file": {
                                      "description": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "statuses": {
                                      "description": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "team_discussions": {
                                      "description": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "vulnerability_alerts": {
                                      "description": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
                                      "enum": ["read"],
                                      "type": "string"
                                    },
                                    "workflows": {
                                      "description": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
                                      "enum": ["write"],
                                      "type": "string"
                                    }
                                  },
                                  "title": "App Permissions",
                                  "type": "object"
                                },
                                "repositories_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repository_selection": {
                                  "description": "Describe whether all repositories have been selected or there's a selection involved",
                                  "enum": ["all", "selected"],
                                  "type": "string"
                                },
                                "single_file_name": {
                                  "example": "config.yaml",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "single_file_paths": {
                                  "example": [
                                    "config.yml",
                                    ".github/issue_TEMPLATE.md"
                                  ],
                                  "items": { "type": "string" },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "permissions",
                                "repository_selection",
                                "single_file_name",
                                "repositories_url",
                                "account"
                              ],
                              "title": "Scoped Installation",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "note": { "nullable": true, "type": "string" },
                        "note_url": {
                          "format": "uri",
                          "nullable": true,
                          "type": "string"
                        },
                        "scopes": {
                          "description": "A list of scopes that this authorization is in.",
                          "items": { "type": "string" },
                          "nullable": true,
                          "type": "array"
                        },
                        "token": { "type": "string" },
                        "token_last_eight": {
                          "nullable": true,
                          "type": "string"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": { "format": "uri", "type": "string" },
                        "user": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        }
                      },
                      "required": [
                        "app",
                        "id",
                        "note",
                        "note_url",
                        "scopes",
                        "token",
                        "hashed_token",
                        "token_last_eight",
                        "fingerprint",
                        "url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Authorization",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Create an impersonation OAuth token",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/applications/{client_id}/grants/{access_token}",
        {
          "delete": {
            "deprecated": true,
            "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.1/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the Applications settings page under \"Authorized OAuth Apps\" on GitHub Enterprise Server](https://github.com/settings/applications#authorized).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/apps#revoke-a-grant-for-an-application"
            },
            "operationId": "apps/revoke-grant-for-application",
            "parameters": [
              {
                "description": "The client ID of your GitHub app.",
                "in": "path",
                "name": "client_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "access_token",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Revoke a grant for an application",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "deprecationDate": "2020-02-14",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "removalDate": "2021-05-05",
              "subcategory": "oauth-applications"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/applications/{client_id}/tokens/{access_token}",
        {
          "delete": {
            "deprecated": true,
            "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.1/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/apps#revoke-an-authorization-for-an-application"
            },
            "operationId": "apps/revoke-authorization-for-application",
            "parameters": [
              {
                "description": "The client ID of your GitHub app.",
                "in": "path",
                "name": "client_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "access_token",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Revoke an authorization for an application",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "deprecationDate": "2020-02-14",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "removalDate": "2021-05-05",
              "subcategory": "oauth-applications"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": true,
            "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.1/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/apps#check-an-authorization"
            },
            "operationId": "apps/check-authorization",
            "parameters": [
              {
                "description": "The client ID of your GitHub app.",
                "in": "path",
                "name": "client_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "access_token",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "app": {
                            "client_id": "abcde12345fghij67890",
                            "name": "my github app",
                            "url": "http://my-github-app.com"
                          },
                          "created_at": "2011-09-06T17:26:27Z",
                          "fingerprint": "jklmnop12345678",
                          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                          "id": 1,
                          "note": "optional note",
                          "note_url": "http://optional/note/url",
                          "scopes": ["public_repo", "user"],
                          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                          "token_last_eight": "Ae178B4a",
                          "updated_at": "2011-09-06T20:39:23Z",
                          "url": "https://api.github.com/authorizations/1",
                          "user": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        }
                      }
                    },
                    "schema": {
                      "allOf": [
                        {
                          "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                          "properties": {
                            "app": {
                              "properties": {
                                "client_id": { "type": "string" },
                                "name": { "type": "string" },
                                "url": { "format": "uri", "type": "string" }
                              },
                              "required": ["client_id", "name", "url"],
                              "type": "object"
                            },
                            "created_at": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "fingerprint": {
                              "nullable": true,
                              "type": "string"
                            },
                            "hashed_token": {
                              "nullable": true,
                              "type": "string"
                            },
                            "id": { "type": "integer" },
                            "installation": {
                              "allOf": [
                                {
                                  "properties": {
                                    "account": {
                                      "description": "Simple User",
                                      "nullable": true,
                                      "properties": {
                                        "avatar_url": {
                                          "example": "https://github.com/images/error/octocat_happy.gif",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "email": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "example": "https://api.github.com/users/octocat/events{/privacy}",
                                          "type": "string"
                                        },
                                        "followers_url": {
                                          "example": "https://api.github.com/users/octocat/followers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "following_url": {
                                          "example": "https://api.github.com/users/octocat/following{/other_user}",
                                          "type": "string"
                                        },
                                        "gists_url": {
                                          "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                          "type": "string"
                                        },
                                        "gravatar_id": {
                                          "example": "41d064eb2195891e12d0413f63227ea7",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "example": "https://github.com/octocat",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "example": 1,
                                          "type": "integer"
                                        },
                                        "login": {
                                          "example": "octocat",
                                          "type": "string"
                                        },
                                        "name": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "node_id": {
                                          "example": "MDQ6VXNlcjE=",
                                          "type": "string"
                                        },
                                        "organizations_url": {
                                          "example": "https://api.github.com/users/octocat/orgs",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "received_events_url": {
                                          "example": "https://api.github.com/users/octocat/received_events",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "repos_url": {
                                          "example": "https://api.github.com/users/octocat/repos",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "site_admin": { "type": "boolean" },
                                        "starred_at": {
                                          "example": "\"2020-07-09T00:17:55Z\"",
                                          "type": "string"
                                        },
                                        "starred_url": {
                                          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                          "type": "string"
                                        },
                                        "subscriptions_url": {
                                          "example": "https://api.github.com/users/octocat/subscriptions",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "type": {
                                          "example": "User",
                                          "type": "string"
                                        },
                                        "url": {
                                          "example": "https://api.github.com/users/octocat",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "avatar_url",
                                        "events_url",
                                        "followers_url",
                                        "following_url",
                                        "gists_url",
                                        "gravatar_id",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "login",
                                        "organizations_url",
                                        "received_events_url",
                                        "repos_url",
                                        "site_admin",
                                        "starred_url",
                                        "subscriptions_url",
                                        "type",
                                        "url"
                                      ],
                                      "title": "Simple User",
                                      "type": "object"
                                    },
                                    "has_multiple_single_files": {
                                      "example": true,
                                      "type": "boolean"
                                    },
                                    "permissions": {
                                      "description": "The permissions granted to the user-to-server access token.",
                                      "example": {
                                        "contents": "read",
                                        "deployments": "write",
                                        "issues": "read",
                                        "single_file": "read"
                                      },
                                      "properties": {
                                        "actions": {
                                          "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "administration": {
                                          "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "checks": {
                                          "description": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "content_references": {
                                          "description": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "contents": {
                                          "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "deployments": {
                                          "description": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "environments": {
                                          "description": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "issues": {
                                          "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "members": {
                                          "description": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "metadata": {
                                          "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "organization_administration": {
                                          "description": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "organization_hooks": {
                                          "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "organization_packages": {
                                          "description": "The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "organization_plan": {
                                          "description": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
                                          "enum": ["read"],
                                          "type": "string"
                                        },
                                        "organization_projects": {
                                          "description": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                                          "enum": ["read", "write", "admin"],
                                          "type": "string"
                                        },
                                        "organization_secrets": {
                                          "description": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "organization_self_hosted_runners": {
                                          "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "organization_user_blocking": {
                                          "description": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "packages": {
                                          "description": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "pages": {
                                          "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "pull_requests": {
                                          "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "repository_hooks": {
                                          "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "repository_projects": {
                                          "description": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                                          "enum": ["read", "write", "admin"],
                                          "type": "string"
                                        },
                                        "secret_scanning_alerts": {
                                          "description": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "secrets": {
                                          "description": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "security_events": {
                                          "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "single_file": {
                                          "description": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "statuses": {
                                          "description": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "team_discussions": {
                                          "description": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
                                          "enum": ["read", "write"],
                                          "type": "string"
                                        },
                                        "vulnerability_alerts": {
                                          "description": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
                                          "enum": ["read"],
                                          "type": "string"
                                        },
                                        "workflows": {
                                          "description": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
                                          "enum": ["write"],
                                          "type": "string"
                                        }
                                      },
                                      "title": "App Permissions",
                                      "type": "object"
                                    },
                                    "repositories_url": {
                                      "example": "https://api.github.com/users/octocat/repos",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "repository_selection": {
                                      "description": "Describe whether all repositories have been selected or there's a selection involved",
                                      "enum": ["all", "selected"],
                                      "type": "string"
                                    },
                                    "single_file_name": {
                                      "example": "config.yaml",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "single_file_paths": {
                                      "example": [
                                        "config.yml",
                                        ".github/issue_TEMPLATE.md"
                                      ],
                                      "items": { "type": "string" },
                                      "type": "array"
                                    }
                                  },
                                  "required": [
                                    "permissions",
                                    "repository_selection",
                                    "single_file_name",
                                    "repositories_url",
                                    "account"
                                  ],
                                  "title": "Scoped Installation",
                                  "type": "object"
                                }
                              ],
                              "nullable": true
                            },
                            "note": { "nullable": true, "type": "string" },
                            "note_url": {
                              "format": "uri",
                              "nullable": true,
                              "type": "string"
                            },
                            "scopes": {
                              "description": "A list of scopes that this authorization is in.",
                              "items": { "type": "string" },
                              "nullable": true,
                              "type": "array"
                            },
                            "token": { "type": "string" },
                            "token_last_eight": {
                              "nullable": true,
                              "type": "string"
                            },
                            "updated_at": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "url": { "format": "uri", "type": "string" },
                            "user": {
                              "allOf": [
                                {
                                  "description": "Simple User",
                                  "nullable": true,
                                  "properties": {
                                    "avatar_url": {
                                      "example": "https://github.com/images/error/octocat_happy.gif",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "email": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "example": "https://api.github.com/users/octocat/events{/privacy}",
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "example": "https://api.github.com/users/octocat/followers",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "example": "https://api.github.com/users/octocat/following{/other_user}",
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "example": "41d064eb2195891e12d0413f63227ea7",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "example": "https://github.com/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "id": { "example": 1, "type": "integer" },
                                    "login": {
                                      "example": "octocat",
                                      "type": "string"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "example": "MDQ6VXNlcjE=",
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "example": "https://api.github.com/users/octocat/orgs",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "example": "https://api.github.com/users/octocat/received_events",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "example": "https://api.github.com/users/octocat/repos",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "site_admin": { "type": "boolean" },
                                    "starred_at": {
                                      "example": "\"2020-07-09T00:17:55Z\"",
                                      "type": "string"
                                    },
                                    "starred_url": {
                                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "example": "https://api.github.com/users/octocat/subscriptions",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": {
                                      "example": "User",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/users/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "title": "Simple User",
                                  "type": "object"
                                }
                              ],
                              "nullable": true
                            }
                          },
                          "required": [
                            "app",
                            "id",
                            "note",
                            "note_url",
                            "scopes",
                            "token",
                            "hashed_token",
                            "token_last_eight",
                            "fingerprint",
                            "url",
                            "created_at",
                            "updated_at"
                          ],
                          "title": "Authorization",
                          "type": "object"
                        }
                      ],
                      "nullable": true
                    }
                  }
                },
                "description": "Response"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Check an authorization",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "deprecationDate": "2020-02-14",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "removalDate": "2021-05-05",
              "subcategory": "oauth-applications"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": true,
            "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.1/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/apps#reset-an-authorization"
            },
            "operationId": "apps/reset-authorization",
            "parameters": [
              {
                "description": "The client ID of your GitHub app.",
                "in": "path",
                "name": "client_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "access_token",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "app": {
                            "client_id": "abcde12345fghij67890",
                            "name": "my github app",
                            "url": "http://my-github-app.com"
                          },
                          "created_at": "2011-09-06T17:26:27Z",
                          "fingerprint": "jklmnop12345678",
                          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                          "id": 1,
                          "note": "optional note",
                          "note_url": "http://optional/note/url",
                          "scopes": ["public_repo", "user"],
                          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                          "token_last_eight": "Ae178B4a",
                          "updated_at": "2011-09-06T20:39:23Z",
                          "url": "https://api.github.com/authorizations/1",
                          "user": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        }
                      }
                    },
                    "schema": {
                      "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                      "properties": {
                        "app": {
                          "properties": {
                            "client_id": { "type": "string" },
                            "name": { "type": "string" },
                            "url": { "format": "uri", "type": "string" }
                          },
                          "required": ["client_id", "name", "url"],
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "fingerprint": { "nullable": true, "type": "string" },
                        "hashed_token": { "nullable": true, "type": "string" },
                        "id": { "type": "integer" },
                        "installation": {
                          "allOf": [
                            {
                              "properties": {
                                "account": {
                                  "description": "Simple User",
                                  "nullable": true,
                                  "properties": {
                                    "avatar_url": {
                                      "example": "https://github.com/images/error/octocat_happy.gif",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "email": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "example": "https://api.github.com/users/octocat/events{/privacy}",
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "example": "https://api.github.com/users/octocat/followers",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "example": "https://api.github.com/users/octocat/following{/other_user}",
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "example": "41d064eb2195891e12d0413f63227ea7",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "example": "https://github.com/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "id": { "example": 1, "type": "integer" },
                                    "login": {
                                      "example": "octocat",
                                      "type": "string"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "example": "MDQ6VXNlcjE=",
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "example": "https://api.github.com/users/octocat/orgs",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "example": "https://api.github.com/users/octocat/received_events",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "example": "https://api.github.com/users/octocat/repos",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "site_admin": { "type": "boolean" },
                                    "starred_at": {
                                      "example": "\"2020-07-09T00:17:55Z\"",
                                      "type": "string"
                                    },
                                    "starred_url": {
                                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "example": "https://api.github.com/users/octocat/subscriptions",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": {
                                      "example": "User",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/users/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "title": "Simple User",
                                  "type": "object"
                                },
                                "has_multiple_single_files": {
                                  "example": true,
                                  "type": "boolean"
                                },
                                "permissions": {
                                  "description": "The permissions granted to the user-to-server access token.",
                                  "example": {
                                    "contents": "read",
                                    "deployments": "write",
                                    "issues": "read",
                                    "single_file": "read"
                                  },
                                  "properties": {
                                    "actions": {
                                      "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "administration": {
                                      "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "checks": {
                                      "description": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "content_references": {
                                      "description": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "contents": {
                                      "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "deployments": {
                                      "description": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "environments": {
                                      "description": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "issues": {
                                      "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "members": {
                                      "description": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_administration": {
                                      "description": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_hooks": {
                                      "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_packages": {
                                      "description": "The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_plan": {
                                      "description": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
                                      "enum": ["read"],
                                      "type": "string"
                                    },
                                    "organization_projects": {
                                      "description": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                                      "enum": ["read", "write", "admin"],
                                      "type": "string"
                                    },
                                    "organization_secrets": {
                                      "description": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_self_hosted_runners": {
                                      "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "organization_user_blocking": {
                                      "description": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "packages": {
                                      "description": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "pages": {
                                      "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "pull_requests": {
                                      "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "repository_hooks": {
                                      "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "repository_projects": {
                                      "description": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
                                      "enum": ["read", "write", "admin"],
                                      "type": "string"
                                    },
                                    "secret_scanning_alerts": {
                                      "description": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "secrets": {
                                      "description": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "security_events": {
                                      "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "single_file": {
                                      "description": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "statuses": {
                                      "description": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "team_discussions": {
                                      "description": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
                                      "enum": ["read", "write"],
                                      "type": "string"
                                    },
                                    "vulnerability_alerts": {
                                      "description": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
                                      "enum": ["read"],
                                      "type": "string"
                                    },
                                    "workflows": {
                                      "description": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
                                      "enum": ["write"],
                                      "type": "string"
                                    }
                                  },
                                  "title": "App Permissions",
                                  "type": "object"
                                },
                                "repositories_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repository_selection": {
                                  "description": "Describe whether all repositories have been selected or there's a selection involved",
                                  "enum": ["all", "selected"],
                                  "type": "string"
                                },
                                "single_file_name": {
                                  "example": "config.yaml",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "single_file_paths": {
                                  "example": [
                                    "config.yml",
                                    ".github/issue_TEMPLATE.md"
                                  ],
                                  "items": { "type": "string" },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "permissions",
                                "repository_selection",
                                "single_file_name",
                                "repositories_url",
                                "account"
                              ],
                              "title": "Scoped Installation",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "note": { "nullable": true, "type": "string" },
                        "note_url": {
                          "format": "uri",
                          "nullable": true,
                          "type": "string"
                        },
                        "scopes": {
                          "description": "A list of scopes that this authorization is in.",
                          "items": { "type": "string" },
                          "nullable": true,
                          "type": "array"
                        },
                        "token": { "type": "string" },
                        "token_last_eight": {
                          "nullable": true,
                          "type": "string"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": { "format": "uri", "type": "string" },
                        "user": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        }
                      },
                      "required": [
                        "app",
                        "id",
                        "note",
                        "note_url",
                        "scopes",
                        "token",
                        "hashed_token",
                        "token_last_eight",
                        "fingerprint",
                        "url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Authorization",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Reset an authorization",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "deprecationDate": "2020-02-14",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "removalDate": "2021-05-05",
              "subcategory": "oauth-applications"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/announcement",
        {
          "delete": {
            "deprecated": null,
            "description": "Removes the global announcement banner in your enterprise.",
            "operationId": "enterprise-admin/remove-announcement",
            "responses": { "204": { "description": "Response" } },
            "summary": "Remove the global announcement banner",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "announcement"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Gets the current message and expiration date of the global announcement banner in your enterprise.",
            "operationId": "enterprise-admin/get-announcement",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "summary": "Default response",
                        "value": {
                          "announcement": "Very **important** announcement about _nothing_.",
                          "expires_at": "2021-01-01T00:00:00.000+00:00"
                        }
                      }
                    },
                    "schema": {
                      "description": "Enterprise global announcement",
                      "properties": {
                        "announcement": {
                          "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Mastering markdown](https://guides.github.com/features/mastering-markdown/).\"",
                          "example": "Very **important** announcement about _nothing_.",
                          "type": "string"
                        },
                        "expires_at": {
                          "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                          "example": "\"2021-01-01T00:00:00.000-07:00\"",
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": ["announcement"],
                      "title": "Enterprise Announcement",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get the global announcement banner",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "announcement"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "Sets the message and expiration time for the global announcement banner in your enterprise.",
            "operationId": "enterprise-admin/set-announcement",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Enterprise global announcement",
                    "properties": {
                      "announcement": {
                        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Mastering markdown](https://guides.github.com/features/mastering-markdown/).\"",
                        "example": "Very **important** announcement about _nothing_.",
                        "type": "string"
                      },
                      "expires_at": {
                        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                        "example": "\"2021-01-01T00:00:00.000-07:00\"",
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": ["announcement"],
                    "title": "Enterprise Announcement",
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "summary": "Default response",
                        "value": {
                          "announcement": "Very **important** announcement about _nothing_.",
                          "expires_at": "2021-01-01T00:00:00.000+00:00"
                        }
                      }
                    },
                    "schema": {
                      "description": "Enterprise global announcement",
                      "properties": {
                        "announcement": {
                          "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Mastering markdown](https://guides.github.com/features/mastering-markdown/).\"",
                          "example": "Very **important** announcement about _nothing_.",
                          "type": "string"
                        },
                        "expires_at": {
                          "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                          "example": "\"2021-01-01T00:00:00.000-07:00\"",
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": ["announcement"],
                      "title": "Enterprise Announcement",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Set the global announcement banner",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "announcement"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/settings/license",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-license-information"
            },
            "operationId": "enterprise-admin/get-license-information",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "days_until_expiration": 365,
                          "expire_at": "2016/02/06 12:41:52 -0600",
                          "kind": "standard",
                          "seats": 1400,
                          "seats_available": 84,
                          "seats_used": 1316
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "days_until_expiration": { "type": "integer" },
                        "expire_at": { "type": "string" },
                        "kind": { "type": "string" },
                        "seats": {
                          "oneOf": [{ "type": "string" }, { "type": "integer" }]
                        },
                        "seats_available": {
                          "oneOf": [{ "type": "string" }, { "type": "integer" }]
                        },
                        "seats_used": { "type": "integer" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get license information",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "license"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/all",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-statistics"
            },
            "operationId": "enterprise-admin/get-all-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "comments": {
                            "total_commit_comments": 6,
                            "total_gist_comments": 28,
                            "total_issue_comments": 366,
                            "total_pull_request_comments": 30
                          },
                          "gists": {
                            "private_gists": 151,
                            "public_gists": 25,
                            "total_gists": 178
                          },
                          "hooks": {
                            "active_hooks": 23,
                            "inactive_hooks": 4,
                            "total_hooks": 27
                          },
                          "issues": {
                            "closed_issues": 96,
                            "open_issues": 83,
                            "total_issues": 179
                          },
                          "milestones": {
                            "closed_milestones": 1,
                            "open_milestones": 6,
                            "total_milestones": 7
                          },
                          "orgs": {
                            "disabled_orgs": 0,
                            "total_orgs": 33,
                            "total_team_members": 314,
                            "total_teams": 60
                          },
                          "pages": { "total_pages": 36 },
                          "pulls": {
                            "mergeable_pulls": 21,
                            "merged_pulls": 60,
                            "total_pulls": 86,
                            "unmergeable_pulls": 3
                          },
                          "repos": {
                            "fork_repos": 18,
                            "org_repos": 51,
                            "root_repos": 194,
                            "total_pushes": 3082,
                            "total_repos": 212,
                            "total_wikis": 15
                          },
                          "users": {
                            "admin_users": 45,
                            "suspended_users": 21,
                            "total_users": 254
                          }
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "comments": {
                          "properties": {
                            "total_commit_comments": { "type": "integer" },
                            "total_gist_comments": { "type": "integer" },
                            "total_issue_comments": { "type": "integer" },
                            "total_pull_request_comments": { "type": "integer" }
                          },
                          "required": [
                            "total_commit_comments",
                            "total_gist_comments",
                            "total_issue_comments",
                            "total_pull_request_comments"
                          ],
                          "title": "Enterprise Comment Stats",
                          "type": "object"
                        },
                        "gists": {
                          "properties": {
                            "private_gists": { "type": "integer" },
                            "public_gists": { "type": "integer" },
                            "total_gists": { "type": "integer" }
                          },
                          "required": [
                            "total_gists",
                            "private_gists",
                            "public_gists"
                          ],
                          "title": "Enterprise Gist Stats",
                          "type": "object"
                        },
                        "hooks": {
                          "properties": {
                            "active_hooks": { "type": "integer" },
                            "inactive_hooks": { "type": "integer" },
                            "total_hooks": { "type": "integer" }
                          },
                          "required": [
                            "total_hooks",
                            "active_hooks",
                            "inactive_hooks"
                          ],
                          "title": "Hooks Enterprise Stats",
                          "type": "object"
                        },
                        "issues": {
                          "properties": {
                            "closed_issues": { "type": "integer" },
                            "open_issues": { "type": "integer" },
                            "total_issues": { "type": "integer" }
                          },
                          "required": [
                            "total_issues",
                            "open_issues",
                            "closed_issues"
                          ],
                          "title": "Enterprise Issue Stats",
                          "type": "object"
                        },
                        "milestones": {
                          "properties": {
                            "closed_milestones": { "type": "integer" },
                            "open_milestones": { "type": "integer" },
                            "total_milestones": { "type": "integer" }
                          },
                          "required": [
                            "total_milestones",
                            "open_milestones",
                            "closed_milestones"
                          ],
                          "title": "Enterprise Milestone Stats",
                          "type": "object"
                        },
                        "orgs": {
                          "properties": {
                            "disabled_orgs": { "type": "integer" },
                            "total_orgs": { "type": "integer" },
                            "total_team_members": { "type": "integer" },
                            "total_teams": { "type": "integer" }
                          },
                          "required": [
                            "total_orgs",
                            "disabled_orgs",
                            "total_teams",
                            "total_team_members"
                          ],
                          "title": "Enterprise Organization Stats",
                          "type": "object"
                        },
                        "pages": {
                          "properties": {
                            "total_pages": { "type": "integer" }
                          },
                          "required": ["total_pages"],
                          "title": "Enterprise Pages Stats",
                          "type": "object"
                        },
                        "pulls": {
                          "properties": {
                            "mergeable_pulls": { "type": "integer" },
                            "merged_pulls": { "type": "integer" },
                            "total_pulls": { "type": "integer" },
                            "unmergeable_pulls": { "type": "integer" }
                          },
                          "required": [
                            "total_pulls",
                            "merged_pulls",
                            "mergeable_pulls",
                            "unmergeable_pulls"
                          ],
                          "title": "Enterprise Pull Request Stats",
                          "type": "object"
                        },
                        "repos": {
                          "properties": {
                            "fork_repos": { "type": "integer" },
                            "org_repos": { "type": "integer" },
                            "root_repos": { "type": "integer" },
                            "total_pushes": { "type": "integer" },
                            "total_repos": { "type": "integer" },
                            "total_wikis": { "type": "integer" }
                          },
                          "required": [
                            "total_repos",
                            "root_repos",
                            "fork_repos",
                            "org_repos",
                            "total_pushes",
                            "total_wikis"
                          ],
                          "title": "Repository Enterprise Stats",
                          "type": "object"
                        },
                        "users": {
                          "properties": {
                            "admin_users": { "type": "integer" },
                            "suspended_users": { "type": "integer" },
                            "total_users": { "type": "integer" }
                          },
                          "required": [
                            "total_users",
                            "admin_users",
                            "suspended_users"
                          ],
                          "title": "Enterprise User Stats",
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get all statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/comments",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-comment-statistics"
            },
            "operationId": "enterprise-admin/get-comment-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "total_commit_comments": { "type": "integer" },
                        "total_gist_comments": { "type": "integer" },
                        "total_issue_comments": { "type": "integer" },
                        "total_pull_request_comments": { "type": "integer" }
                      },
                      "required": [
                        "total_commit_comments",
                        "total_gist_comments",
                        "total_issue_comments",
                        "total_pull_request_comments"
                      ],
                      "title": "Enterprise Comment Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get comment statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/gists",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-gist-statistics"
            },
            "operationId": "enterprise-admin/get-all-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "private_gists": { "type": "integer" },
                        "public_gists": { "type": "integer" },
                        "total_gists": { "type": "integer" }
                      },
                      "required": [
                        "total_gists",
                        "private_gists",
                        "public_gists"
                      ],
                      "title": "Enterprise Gist Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get gist statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/hooks",
        {
          "get": {
            "deprecated": null,
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-hooks-statistics"
            },
            "operationId": "enterprise-admin/get-hooks-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "active_hooks": { "type": "integer" },
                        "inactive_hooks": { "type": "integer" },
                        "total_hooks": { "type": "integer" }
                      },
                      "required": [
                        "total_hooks",
                        "active_hooks",
                        "inactive_hooks"
                      ],
                      "title": "Hooks Enterprise Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get hooks statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/issues",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-issues-statistics"
            },
            "operationId": "enterprise-admin/get-issue-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "closed_issues": { "type": "integer" },
                        "open_issues": { "type": "integer" },
                        "total_issues": { "type": "integer" }
                      },
                      "required": [
                        "total_issues",
                        "open_issues",
                        "closed_issues"
                      ],
                      "title": "Enterprise Issue Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get issue statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/milestones",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-milestone-statistics"
            },
            "operationId": "enterprise-admin/get-milestone-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "closed_milestones": { "type": "integer" },
                        "open_milestones": { "type": "integer" },
                        "total_milestones": { "type": "integer" }
                      },
                      "required": [
                        "total_milestones",
                        "open_milestones",
                        "closed_milestones"
                      ],
                      "title": "Enterprise Milestone Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get milestone statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/orgs",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-organization-statistics"
            },
            "operationId": "enterprise-admin/get-org-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "disabled_orgs": { "type": "integer" },
                        "total_orgs": { "type": "integer" },
                        "total_team_members": { "type": "integer" },
                        "total_teams": { "type": "integer" }
                      },
                      "required": [
                        "total_orgs",
                        "disabled_orgs",
                        "total_teams",
                        "total_team_members"
                      ],
                      "title": "Enterprise Organization Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get organization statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/pages",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-pages-statistics"
            },
            "operationId": "enterprise-admin/get-pages-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": { "total_pages": { "type": "integer" } },
                      "required": ["total_pages"],
                      "title": "Enterprise Pages Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get pages statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/pulls",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-pull-requests-statistics"
            },
            "operationId": "enterprise-admin/get-pull-request-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "mergeable_pulls": { "type": "integer" },
                        "merged_pulls": { "type": "integer" },
                        "total_pulls": { "type": "integer" },
                        "unmergeable_pulls": { "type": "integer" }
                      },
                      "required": [
                        "total_pulls",
                        "merged_pulls",
                        "mergeable_pulls",
                        "unmergeable_pulls"
                      ],
                      "title": "Enterprise Pull Request Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get pull request statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/repos",
        {
          "get": {
            "deprecated": null,
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-repository-statistics"
            },
            "operationId": "enterprise-admin/get-repo-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "fork_repos": { "type": "integer" },
                        "org_repos": { "type": "integer" },
                        "root_repos": { "type": "integer" },
                        "total_pushes": { "type": "integer" },
                        "total_repos": { "type": "integer" },
                        "total_wikis": { "type": "integer" }
                      },
                      "required": [
                        "total_repos",
                        "root_repos",
                        "fork_repos",
                        "org_repos",
                        "total_pushes",
                        "total_wikis"
                      ],
                      "title": "Repository Enterprise Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get repository statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprise/stats/users",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-users-statistics"
            },
            "operationId": "enterprise-admin/get-user-stats",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "admin_users": { "type": "integer" },
                        "suspended_users": { "type": "integer" },
                        "total_users": { "type": "integer" }
                      },
                      "required": [
                        "total_users",
                        "admin_users",
                        "suspended_users"
                      ],
                      "title": "Enterprise User Stats",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get users statistics",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "admin-stats"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/pre-receive-hooks",
        {
          "get": {
            "deprecated": null,
            "description": "List all pre-receive hooks that are enabled or testing for this organization as well as any disabled hooks that can be configured at the organization level. Globally disabled pre-receive hooks that do not allow downstream configuration are not listed.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#list-pre-receive-hooks-for-an-organization"
            },
            "operationId": "enterprise-admin/list-pre-receive-hooks-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "One of `asc` (ascending) or `desc` (descending).",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": {
                  "default": "desc",
                  "enum": ["asc", "desc"],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "The sort order for the response collection.",
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": ["created", "updated", "name"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "allow_downstream_configuration": true,
                            "configuration_url": "https://github.example.com/api/v3/admin/pre-receive-hooks/42",
                            "enforcement": "disabled",
                            "id": 42,
                            "name": "Check Commits"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "allow_downstream_configuration": {
                            "type": "boolean"
                          },
                          "configuration_url": { "type": "string" },
                          "enforcement": { "type": "string" },
                          "id": { "type": "integer" },
                          "name": { "type": "string" }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List pre-receive hooks for an organization",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "org-pre-receive-hooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/pre-receive-hooks/{pre_receive_hook_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "Removes any overrides for this hook at the org level for this org.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-an-organization"
            },
            "operationId": "enterprise-admin/remove-pre-receive-hook-enforcement-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "pre_receive_hook_id parameter",
                "in": "path",
                "name": "pre_receive_hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "allow_downstream_configuration": true,
                          "configuration_url": "https://github.example.com/api/v3/admin/pre-receive-hooks/42",
                          "enforcement": "disabled",
                          "id": 42,
                          "name": "Check Commits"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "allow_downstream_configuration": { "type": "boolean" },
                        "configuration_url": { "type": "string" },
                        "enforcement": { "type": "string" },
                        "id": { "type": "integer" },
                        "name": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Remove pre-receive hook enforcement for an organization",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "org-pre-receive-hooks"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-an-organization"
            },
            "operationId": "enterprise-admin/get-pre-receive-hook-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "pre_receive_hook_id parameter",
                "in": "path",
                "name": "pre_receive_hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "allow_downstream_configuration": true,
                          "configuration_url": "https://github.example.com/api/v3/admin/pre-receive-hooks/42",
                          "enforcement": "disabled",
                          "id": 42,
                          "name": "Check Commits"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "allow_downstream_configuration": { "type": "boolean" },
                        "configuration_url": { "type": "string" },
                        "enforcement": { "type": "string" },
                        "id": { "type": "integer" },
                        "name": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a pre-receive hook for an organization",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "org-pre-receive-hooks"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "For pre-receive hooks which are allowed to be configured at the org level, you can set `enforcement` and `allow_downstream_configuration`",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-an-organization"
            },
            "operationId": "enterprise-admin/update-pre-receive-hook-enforcement-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "pre_receive_hook_id parameter",
                "in": "path",
                "name": "pre_receive_hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "allow_downstream_configuration": false,
                    "enforcement": "enabled"
                  },
                  "schema": {
                    "properties": {
                      "allow_downstream_configuration": {
                        "description": "Whether repositories can override enforcement.",
                        "type": "boolean"
                      },
                      "enforcement": {
                        "description": "The state of enforcement for the hook on this repository.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "allow_downstream_configuration": false,
                          "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42",
                          "enforcement": "enabled",
                          "id": 42,
                          "name": "Check Commits"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "allow_downstream_configuration": { "type": "boolean" },
                        "configuration_url": { "type": "string" },
                        "enforcement": { "type": "string" },
                        "id": { "type": "integer" },
                        "name": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update pre-receive hook enforcement for an organization",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "org-pre-receive-hooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/pre-receive-hooks",
        {
          "get": {
            "deprecated": null,
            "description": "List all pre-receive hooks that are enabled or testing for this repository as well as any disabled hooks that are allowed to be enabled at the repository level. Pre-receive hooks that are disabled at a higher level and are not configurable will not be listed.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#list-pre-receive-hooks-for-a-repository"
            },
            "operationId": "enterprise-admin/list-pre-receive-hooks-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "One of `asc` (ascending) or `desc` (descending).",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": {
                  "default": "desc",
                  "enum": ["asc", "desc"],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": ["created", "updated", "name"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42",
                            "enforcement": "disabled",
                            "id": 42,
                            "name": "Check Commits"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "configuration_url": { "type": "string" },
                          "enforcement": { "type": "string" },
                          "id": { "type": "integer" },
                          "name": { "type": "string" }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List pre-receive hooks for a repository",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "repo-pre-receive-hooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/pre-receive-hooks/{pre_receive_hook_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes any overridden enforcement on this repository for the specified hook.\n\nResponds with effective values inherited from owner and/or global level.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#remove-pre-receive-hook-enforcement-for-a-repository"
            },
            "operationId": "enterprise-admin/remove-pre-receive-hook-enforcement-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "pre_receive_hook_id parameter",
                "in": "path",
                "name": "pre_receive_hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42",
                          "enforcement": "disabled",
                          "id": 42,
                          "name": "Check Commits"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "configuration_url": { "type": "string" },
                        "enforcement": { "type": "string" },
                        "id": { "type": "integer" },
                        "name": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Responds with effective values inherited from owner and/or global level."
              }
            },
            "summary": "Remove pre-receive hook enforcement for a repository",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "repo-pre-receive-hooks"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-a-pre-receive-hook-for-a-repository"
            },
            "operationId": "enterprise-admin/get-pre-receive-hook-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "pre_receive_hook_id parameter",
                "in": "path",
                "name": "pre_receive_hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "configuration_url": "https://github.example.com/api/v3/orgs/octocat/pre-receive-hooks/42",
                          "enforcement": "disabled",
                          "id": 42,
                          "name": "Check Commits"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "configuration_url": { "type": "string" },
                        "enforcement": { "type": "string" },
                        "id": { "type": "integer" },
                        "name": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a pre-receive hook for a repository",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "repo-pre-receive-hooks"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "For pre-receive hooks which are allowed to be configured at the repo level, you can set `enforcement`",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#update-pre-receive-hook-enforcement-for-a-repository"
            },
            "operationId": "enterprise-admin/update-pre-receive-hook-enforcement-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "pre_receive_hook_id parameter",
                "in": "path",
                "name": "pre_receive_hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": { "enforcement": "enabled" },
                  "schema": {
                    "properties": {
                      "enforcement": {
                        "description": "The state of enforcement for the hook on this repository.",
                        "enum": ["enabled", "disabled", "testing"],
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "configuration_url": "https://github.example.com/api/v3/repos/octocat/hello-world/pre-receive-hooks/42",
                          "enforcement": "enabled",
                          "id": 42,
                          "name": "Check Commits"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "configuration_url": { "type": "string" },
                        "enforcement": { "type": "string" },
                        "id": { "type": "integer" },
                        "name": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update pre-receive hook enforcement for a repository",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "eye-scream",
                  "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```",
                  "required": true
                }
              ],
              "subcategory": "repo-pre-receive-hooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/setup/api/configcheck",
        {
          "get": {
            "deprecated": null,
            "description": "This endpoint allows you to check the status of the most recent configuration process:\n\nNote that you may need to wait several seconds after you start a process before you can check its status.\n\nThe different statuses are:\n\n| Status        | Description                       |\n| ------------- | --------------------------------- |\n| `PENDING`     | The job has not started yet       |\n| `CONFIGURING` | The job is running                |\n| `DONE`        | The job has finished correctly    |\n| `FAILED`      | The job has finished unexpectedly |",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-the-configuration-status"
            },
            "operationId": "enterprise-admin/get-configuration-status",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "progress": [
                            {
                              "key": "Appliance core components",
                              "status": "DONE"
                            },
                            { "key": "GitHub utilities", "status": "DONE" },
                            { "key": "GitHub applications", "status": "DONE" },
                            {
                              "key": "GitHub services",
                              "status": "CONFIGURING"
                            },
                            {
                              "key": "Reloading appliance services",
                              "status": "PENDING"
                            }
                          ],
                          "status": "running"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "progress": {
                          "items": {
                            "properties": {
                              "key": { "type": "string" },
                              "status": { "type": "string" }
                            },
                            "required": ["status", "key"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "status": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get the configuration status",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/setup/api/configure",
        {
          "post": {
            "deprecated": null,
            "description": "This endpoint allows you to start a configuration process at any time for your updated settings to take effect:",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#start-a-configuration-process"
            },
            "operationId": "enterprise-admin/start-configuration-process",
            "responses": { "202": { "description": "Response" } },
            "summary": "Start a configuration process",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/setup/api/maintenance",
        {
          "get": {
            "deprecated": null,
            "description": "Check your installation's maintenance status:",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-the-maintenance-status"
            },
            "operationId": "enterprise-admin/get-maintenance-status",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "connection_services": [
                            { "name": "git operations", "number": 0 },
                            { "name": "mysql queries", "number": 233 },
                            { "name": "resque jobs", "number": 54 }
                          ],
                          "scheduled_time": "Tuesday, January 22 at 15:34 -0800",
                          "status": "scheduled"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "connection_services": {
                          "items": {
                            "properties": {
                              "name": { "type": "string" },
                              "number": { "type": "integer" }
                            },
                            "required": ["name", "number"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "scheduled_time": { "type": "string" },
                        "status": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get the maintenance status",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#enable-or-disable-maintenance-mode"
            },
            "operationId": "enterprise-admin/enable-or-disable-maintenance-mode",
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "example": {
                    "maintenance": "{\"enabled\":true, \"when\":\"now\"}"
                  },
                  "schema": {
                    "properties": {
                      "maintenance": {
                        "description": "A JSON string with the attributes `enabled` and `when`.\n\nThe possible values for `enabled` are `true` and `false`. When it's `false`, the attribute `when` is ignored and the maintenance mode is turned off. `when` defines the time period when the maintenance was enabled.\n\nThe possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).",
                        "type": "string"
                      }
                    },
                    "required": ["maintenance"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "connection_services": [
                            { "name": "git operations", "number": 0 },
                            { "name": "mysql queries", "number": 233 },
                            { "name": "resque jobs", "number": 54 }
                          ],
                          "scheduled_time": "Tuesday, January 22 at 15:34 -0800",
                          "status": "scheduled"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "connection_services": {
                          "items": {
                            "properties": {
                              "name": { "type": "string" },
                              "number": { "type": "integer" }
                            },
                            "required": ["name", "number"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "scheduled_time": { "type": "string" },
                        "status": { "type": "string" }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Enable or disable maintenance mode",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/setup/api/settings",
        {
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-settings"
            },
            "operationId": "enterprise-admin/get-settings",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "enterprise": {
                            "admin_password": null,
                            "assets": null,
                            "auth_mode": "default",
                            "avatar": { "enabled": false, "uri": "" },
                            "cas": { "url": null },
                            "collectd": {
                              "enabled": false,
                              "encryption": null,
                              "password": null,
                              "port": 0,
                              "server": null,
                              "username": null
                            },
                            "configuration_id": 1401777404,
                            "configuration_run_count": 4,
                            "customer": {
                              "email": "stannis@themannis.biz",
                              "name": "GitHub",
                              "public_key_data": "-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v1.4.10 (GNU/Linux)\n\nmI0ETqzZYgEEALSe6snowdenXyqvLfSQ34HWD6C7....\n-----END PGP PUBLIC KEY BLOCK-----\n",
                              "secret_key_data": "-----BEGIN PGP PRIVATE KEY BLOCK-----\nVersion: GnuPG v1.4.10 (GNU/Linux)\n\nlQcYBE5TCgsBEACk4yHpUcapplebaumBMXYMiLF+nCQ0lxpx...\n-----END PGP PRIVATE KEY BLOCK-----\n",
                              "uuid": "af6cac80-e4e1-012e-d822-1231380e52e9"
                            },
                            "expire_sessions": false,
                            "github_hostname": "ghe.local",
                            "github_oauth": {
                              "client_id": "12313412",
                              "client_secret": "kj123131132",
                              "organization_name": "Homestar Runners",
                              "organization_team": "homestarrunners/characters"
                            },
                            "github_ssl": {
                              "cert": null,
                              "enabled": false,
                              "key": null
                            },
                            "http_proxy": null,
                            "identicons_host": "dotcom",
                            "ldap": {
                              "admin_group": null,
                              "base": [],
                              "bind_dn": null,
                              "host": null,
                              "method": "Plain",
                              "password": null,
                              "port": 0,
                              "posix_support": true,
                              "profile": {
                                "key": null,
                                "mail": null,
                                "name": null,
                                "uid": "uid"
                              },
                              "reconciliation": { "org": null, "user": null },
                              "recursive_group_search": false,
                              "search_strategy": "detect",
                              "sync_enabled": false,
                              "team_sync_interval": 4,
                              "uid": null,
                              "user_groups": [],
                              "user_sync_emails": false,
                              "user_sync_interval": 4,
                              "user_sync_keys": false,
                              "virtual_attribute_enabled": false
                            },
                            "license": {
                              "cluster_support": false,
                              "evaluation": false,
                              "expire_at": "2016-04-27T00:00:00-07:00",
                              "perpetual": false,
                              "seats": 0,
                              "ssh_allowed": true,
                              "support_key": "ssh-rsa AAAAB3N....",
                              "unlimited_seating": true
                            },
                            "load_balancer": null,
                            "mapping": {
                              "basemap": "company.map-qsz2zrvs",
                              "enabled": true,
                              "tileserver": null,
                              "token": null
                            },
                            "ntp": {
                              "primary_server": "0.pool.ntp.org",
                              "secondary_server": "1.pool.ntp.org"
                            },
                            "pages": { "enabled": true },
                            "private_mode": false,
                            "public_pages": false,
                            "saml": {
                              "certificate": null,
                              "certificate_path": null,
                              "disable_admin_demote": false,
                              "idp_initiated_sso": false,
                              "issuer": null,
                              "sso_url": null
                            },
                            "signup_enabled": false,
                            "smtp": {
                              "address": "smtp.example.com",
                              "authentication": "plain",
                              "discard-to-noreply-address": true,
                              "domain": "blah",
                              "enable_starttls_auto": true,
                              "enabled": true,
                              "noreply_address": "noreply@github.com",
                              "password": "bar",
                              "port": "1234",
                              "support_address": "enterprise@github.com",
                              "support_address_type": "email",
                              "user_name": "mr_foo",
                              "username": "foo"
                            },
                            "snmp": { "community": "", "enabled": false },
                            "subdomain_isolation": true,
                            "syslog": {
                              "enabled": false,
                              "protocol_name": "udp",
                              "server": null
                            },
                            "timezone": null
                          },
                          "run_list": ["recipe[enterprise-configure]"]
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "enterprise": {
                          "properties": {
                            "admin_password": {
                              "nullable": true,
                              "type": "string"
                            },
                            "assets": { "nullable": true, "type": "string" },
                            "auth_mode": { "type": "string" },
                            "avatar": {
                              "properties": {
                                "enabled": { "type": "boolean" },
                                "uri": { "type": "string" }
                              },
                              "type": "object"
                            },
                            "cas": {
                              "properties": {
                                "url": { "nullable": true, "type": "string" }
                              },
                              "type": "object"
                            },
                            "collectd": {
                              "properties": {
                                "enabled": { "type": "boolean" },
                                "encryption": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "password": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "port": { "type": "integer" },
                                "server": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "username": {
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "configuration_id": { "type": "integer" },
                            "configuration_run_count": { "type": "integer" },
                            "customer": {
                              "properties": {
                                "email": { "type": "string" },
                                "name": { "type": "string" },
                                "public_key_data": { "type": "string" },
                                "secret_key_data": { "type": "string" },
                                "uuid": { "type": "string" }
                              },
                              "type": "object"
                            },
                            "expire_sessions": { "type": "boolean" },
                            "github_hostname": { "type": "string" },
                            "github_oauth": {
                              "properties": {
                                "client_id": { "type": "string" },
                                "client_secret": { "type": "string" },
                                "organization_name": { "type": "string" },
                                "organization_team": { "type": "string" }
                              },
                              "type": "object"
                            },
                            "github_ssl": {
                              "properties": {
                                "cert": { "nullable": true, "type": "string" },
                                "enabled": { "type": "boolean" },
                                "key": { "nullable": true, "type": "string" }
                              },
                              "type": "object"
                            },
                            "http_proxy": {
                              "nullable": true,
                              "type": "string"
                            },
                            "identicons_host": { "type": "string" },
                            "ldap": {
                              "properties": {
                                "admin_group": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "base": { "items": {}, "type": "array" },
                                "bind_dn": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "host": { "nullable": true, "type": "string" },
                                "method": { "type": "string" },
                                "password": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "port": { "type": "integer" },
                                "posix_support": { "type": "boolean" },
                                "profile": {
                                  "properties": {
                                    "key": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "mail": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "uid": { "type": "string" }
                                  },
                                  "type": "object"
                                },
                                "reconciliation": {
                                  "properties": {
                                    "org": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "user": {
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "recursive_group_search": { "type": "boolean" },
                                "search_strategy": { "type": "string" },
                                "sync_enabled": { "type": "boolean" },
                                "team_sync_interval": { "type": "integer" },
                                "uid": { "nullable": true, "type": "string" },
                                "user_groups": { "items": {}, "type": "array" },
                                "user_sync_emails": { "type": "boolean" },
                                "user_sync_interval": { "type": "integer" },
                                "user_sync_keys": { "type": "boolean" },
                                "virtual_attribute_enabled": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "license": {
                              "properties": {
                                "cluster_support": { "type": "boolean" },
                                "evaluation": { "type": "boolean" },
                                "expire_at": { "type": "string" },
                                "perpetual": { "type": "boolean" },
                                "seats": { "type": "integer" },
                                "ssh_allowed": { "type": "boolean" },
                                "support_key": { "type": "string" },
                                "unlimited_seating": { "type": "boolean" }
                              },
                              "type": "object"
                            },
                            "load_balancer": {
                              "nullable": true,
                              "type": "string"
                            },
                            "mapping": {
                              "properties": {
                                "basemap": { "type": "string" },
                                "enabled": { "type": "boolean" },
                                "tileserver": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "token": { "nullable": true, "type": "string" }
                              },
                              "type": "object"
                            },
                            "ntp": {
                              "properties": {
                                "primary_server": { "type": "string" },
                                "secondary_server": { "type": "string" }
                              },
                              "type": "object"
                            },
                            "pages": {
                              "properties": {
                                "enabled": { "type": "boolean" }
                              },
                              "type": "object"
                            },
                            "private_mode": { "type": "boolean" },
                            "public_pages": { "type": "boolean" },
                            "saml": {
                              "properties": {
                                "certificate": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "certificate_path": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "disable_admin_demote": { "type": "boolean" },
                                "idp_initiated_sso": { "type": "boolean" },
                                "issuer": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "sso_url": {
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "signup_enabled": { "type": "boolean" },
                            "smtp": {
                              "properties": {
                                "address": { "type": "string" },
                                "authentication": { "type": "string" },
                                "discard-to-noreply-address": {
                                  "type": "boolean"
                                },
                                "domain": { "type": "string" },
                                "enable_starttls_auto": { "type": "boolean" },
                                "enabled": { "type": "boolean" },
                                "noreply_address": { "type": "string" },
                                "password": { "type": "string" },
                                "port": { "type": "string" },
                                "support_address": { "type": "string" },
                                "support_address_type": { "type": "string" },
                                "user_name": { "type": "string" },
                                "username": { "type": "string" }
                              },
                              "type": "object"
                            },
                            "snmp": {
                              "properties": {
                                "community": { "type": "string" },
                                "enabled": { "type": "boolean" }
                              },
                              "type": "object"
                            },
                            "subdomain_isolation": { "type": "boolean" },
                            "syslog": {
                              "properties": {
                                "enabled": { "type": "boolean" },
                                "protocol_name": { "type": "string" },
                                "server": { "nullable": true, "type": "string" }
                              },
                              "type": "object"
                            },
                            "timezone": { "nullable": true, "type": "string" }
                          },
                          "type": "object"
                        },
                        "run_list": {
                          "items": { "type": "string" },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get settings",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-settings).\n\n**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#set-settings"
            },
            "operationId": "enterprise-admin/set-settings",
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "example": {
                    "settings": "{ \"enterprise\": { \"public_pages\": true }}"
                  },
                  "schema": {
                    "properties": {
                      "settings": {
                        "description": "A JSON string with the new settings. Note that you only need to pass the specific settings you want to modify. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-settings).",
                        "type": "string"
                      }
                    },
                    "required": ["settings"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": { "204": { "description": "Response" } },
            "summary": "Set settings",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/setup/api/settings/authorized-keys",
        {
          "delete": {
            "deprecated": null,
            "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#remove-an-authorized-ssh-key"
            },
            "operationId": "enterprise-admin/remove-authorized-ssh-key",
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "example": {
                    "authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCssTL/Vtu/ODLTj0VtZoRAbvf7uiv5997GyDq0MoAZUjb5jmA5wYe2/wF6sFuhiZTnZoF1ZtCHunPp0hM/GHrn6VySBhNncx14YO8FPt1CIhEeRMSEjUK9cY3xAbS365oXY8vnUHJsS9+1tr/2bx/+4NJfcUt/Ezf1OR/0LStQXw=="
                  },
                  "schema": {
                    "properties": {
                      "authorized_key": {
                        "description": "The public SSH key.",
                        "type": "string"
                      }
                    },
                    "required": ["authorized_key"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                          },
                          {
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                          },
                          {
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "key": { "type": "string" },
                          "pretty-print": { "type": "string" }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Remove an authorized SSH key",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-all-authorized-ssh-keys"
            },
            "operationId": "enterprise-admin/get-all-authorized-ssh-keys",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                          },
                          {
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                          },
                          {
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "key": { "type": "string" },
                          "pretty-print": { "type": "string" }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get all authorized SSH keys",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#add-an-authorized-ssh-key"
            },
            "operationId": "enterprise-admin/add-authorized-ssh-key",
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "example": {
                    "authorized_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQCssTL/Vtu/ODLTj0VtZoRAbvf7uiv5997GyDq0MoAZUjb5jmA5wYe2/wF6sFuhiZTnZoF1ZtCHunPp0hM/GHrn6VySBhNncx14YO8FPt1CIhEeRMSEjUK9cY3xAbS365oXY8vnUHJsS9+1tr/2bx/+4NJfcUt/Ezf1OR/0LStQXw=="
                  },
                  "schema": {
                    "properties": {
                      "authorized_key": {
                        "description": "The public SSH key.",
                        "type": "string"
                      }
                    },
                    "required": ["authorized_key"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                          },
                          {
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                          },
                          {
                            "key": "ssh-rsa AAAAB3NzaC1yc2EAAAAB...",
                            "pretty-print": "ssh-rsa 01:14:0f:f2:0f:e2:fe:e8:f4:72:62:af:75:f7:1a:88:3e:04:92:64"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "key": { "type": "string" },
                          "pretty-print": { "type": "string" }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Add an authorized SSH key",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/setup/api/start",
        {
          "post": {
            "deprecated": null,
            "description": "When you boot a GitHub instance for the first time, you can use the following endpoint to upload a license.\n\nNote that you need to `POST` to [`/setup/api/configure`](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#start-a-configuration-process) to start the actual configuration process.\n\nWhen using this endpoint, your GitHub instance must have a password set. This can be accomplished two ways:\n\n1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.\n2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.\n\n**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#create-a-github-enterprise-server-license"
            },
            "operationId": "enterprise-admin/create-enterprise-server-license",
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "properties": {
                      "license": {
                        "description": "The content of your _.ghl_ license file.",
                        "type": "string"
                      },
                      "password": {
                        "description": "You **must** provide a password _only if_ you are uploading your license for the first time. If you previously set a password through the web interface, you don't need this parameter.",
                        "type": "string"
                      },
                      "settings": {
                        "description": "An optional JSON string containing the installation settings. For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#get-settings).",
                        "type": "string"
                      }
                    },
                    "required": ["license"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": { "202": { "description": "Response" } },
            "summary": "Create a GitHub license",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/setup/api/upgrade",
        {
          "post": {
            "deprecated": null,
            "description": "This API upgrades your license and also triggers the configuration process.\n\n**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#upgrade-a-license"
            },
            "operationId": "enterprise-admin/upgrade-license",
            "requestBody": {
              "content": {
                "application/x-www-form-urlencoded": {
                  "schema": {
                    "properties": {
                      "license": {
                        "description": "The content of your new _.ghl_ license file.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": { "202": { "description": "Response" } },
            "summary": "Upgrade a license",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "management-console"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/site_admin",
        {
          "delete": {
            "deprecated": null,
            "description": "You can demote any user account except your own.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#demote-a-site-administrator"
            },
            "operationId": "enterprise-admin/demote-site-administrator",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Demote a site administrator",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#http-verbs).\"",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#promote-a-user-to-be-a-site-administrator"
            },
            "operationId": "enterprise-admin/promote-user-to-be-site-administrator",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Promote a user to be a site administrator",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/suspended",
        {
          "delete": {
            "deprecated": null,
            "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#unsuspend-a-user"
            },
            "operationId": "enterprise-admin/unsuspend-user",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "nullable": true,
                    "properties": {
                      "reason": {
                        "description": "The reason the user is being unsuspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Unsuspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": { "204": { "description": "Response" } },
            "summary": "Unsuspend a user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.\n\nYou can suspend any user account except your own.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#http-verbs).\"",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@3.1/rest/reference/enterprise-admin#suspend-a-user"
            },
            "operationId": "enterprise-admin/suspend-user",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "nullable": true,
                    "properties": {
                      "reason": {
                        "description": "The reason the user is being suspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Suspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": { "204": { "description": "Response" } },
            "summary": "Suspend a user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ]
    ],
    "changed": {
      "/app": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/enterprise-server@3.1/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/app/hook/config": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"[Creating a GitHub App](/developers/apps/creating-a-github-app).\"\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Returns the webhook configuration for a GitHub App. For more information about configuring a webhook for your app, see \"[Creating a GitHub App](/developers/apps/creating-a-github-app).\"\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "secret": {
                                "description_changed": {
                                  "from": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
                                  "to": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads/#delivery-headers)."
                                },
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": null,
                                "nullable_changed": null,
                                "properties_changed": null,
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/app/installations": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "You must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.",
              "to": "You must use a [JWT](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/app/installations/{installation_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/applications/grants": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.1/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.1/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.1/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/enterprise-server@3.1/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/applications/grants/{grant_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.1/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.1/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/apps/{app_slug}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
              "to": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/authorizations": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.1/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.1/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/authorizations/{authorization_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.1/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@3.1/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/emojis": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists all the emojis available to use on GitHub.",
              "to": "Lists all the emojis available to use on GitHub Enterprise Server."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/enterprises/{enterprise}/actions/permissions/selected-actions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {},
                            "removed": [
                              [
                                "verified_allowed",
                                {
                                  "description": "Whether actions in GitHub Marketplace from verified creators are allowed. Set to `true` to allow all GitHub Marketplace actions by verified creators.",
                                  "type": "boolean"
                                }
                              ]
                            ]
                          },
                          "required_changed": {
                            "added": [
                              "github_owned_allowed",
                              "patterns_allowed"
                            ],
                            "removed": []
                          },
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/events": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "payload": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "issue": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {
                                                  "template_repository": {
                                                    "description_changed": null,
                                                    "enum_changed": null,
                                                    "format_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "changed": {},
                                                      "removed": [
                                                        [
                                                          "allow_auto_merge",
                                                          { "type": "boolean" }
                                                        ]
                                                      ]
                                                    },
                                                    "required_changed": null,
                                                    "type_changed": null
                                                  }
                                                },
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    {
                                                      "default": false,
                                                      "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": []
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/feeds": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens.",
              "to": "GitHub Enterprise Server provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub Enterprise Server global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/enterprise-server@3.1/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/gists/public": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.",
              "to": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/gitignore/templates": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/rest/reference/repos#create-a-repository-for-the-authenticated-user).",
              "to": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#create-a-repository-for-the-authenticated-user)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/gitignore/templates/{name}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/rest/overview/media-types/) to get the raw contents.",
              "to": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/) to get the raw contents."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/installation/repositories": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
              "to": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "repositories": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "template_repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {},
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              { "type": "boolean" }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                },
                                "nullable_changed": null,
                                "properties_changed": null,
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/issues": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "repository": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "template_repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {},
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              { "type": "boolean" }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/meta": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Returns meta information about GitHub, including a list of GitHub's IP addresses. For more information, see \"[About GitHub's IP addresses](https://help.github.com/articles/about-github-s-ip-addresses/).\"\n\n**Note:** The IP addresses shown in the documentation's response are only example values. You must always query the API directly to get the latest list of IP addresses.",
              "to": ""
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [
                              [
                                "installed_version",
                                { "example": "3.1.0", "type": "string" }
                              ]
                            ],
                            "changed": {},
                            "removed": [
                              [
                                "actions",
                                {
                                  "example": ["13.64.0.0/16", "13.65.0.0/16"],
                                  "items": { "type": "string" },
                                  "type": "array"
                                }
                              ],
                              [
                                "api",
                                {
                                  "example": ["127.0.0.1/32"],
                                  "items": { "type": "string" },
                                  "type": "array"
                                }
                              ],
                              [
                                "git",
                                {
                                  "example": ["127.0.0.1/32"],
                                  "items": { "type": "string" },
                                  "type": "array"
                                }
                              ],
                              [
                                "hooks",
                                {
                                  "example": ["127.0.0.1/32"],
                                  "items": { "type": "string" },
                                  "type": "array"
                                }
                              ],
                              [
                                "importer",
                                {
                                  "example": ["54.158.161.132", "54.226.70.38"],
                                  "items": { "type": "string" },
                                  "type": "array"
                                }
                              ],
                              [
                                "pages",
                                {
                                  "example": [
                                    "192.30.252.153/32",
                                    "192.30.252.154/32"
                                  ],
                                  "items": { "type": "string" },
                                  "type": "array"
                                }
                              ],
                              [
                                "ssh_key_fingerprints",
                                {
                                  "properties": {
                                    "SHA256_DSA": { "type": "string" },
                                    "SHA256_RSA": { "type": "string" }
                                  },
                                  "type": "object"
                                }
                              ],
                              [
                                "web",
                                {
                                  "example": ["127.0.0.1/32"],
                                  "items": { "type": "string" },
                                  "type": "array"
                                }
                              ]
                            ]
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": {
              "from": "Get GitHub meta information",
              "to": "Get GitHub Enterprise Server meta information"
            },
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/networks/{owner}/{repo}/events": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "payload": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "issue": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {
                                                  "template_repository": {
                                                    "description_changed": null,
                                                    "enum_changed": null,
                                                    "format_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "changed": {},
                                                      "removed": [
                                                        [
                                                          "allow_auto_merge",
                                                          { "type": "boolean" }
                                                        ]
                                                      ]
                                                    },
                                                    "required_changed": null,
                                                    "type_changed": null
                                                  }
                                                },
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    {
                                                      "default": false,
                                                      "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": []
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/notifications/threads/{thread_id}/subscription": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.",
              "to": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/enterprise-server@3.1/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/organizations": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists all organizations, in the order that they were created on GitHub.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations.",
              "to": "Lists all organizations, in the order that they were created on GitHub Enterprise Server.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub plan information' below.\"",
              "to": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub Enterprise Server plan information' below.\""
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/actions/permissions/repositories": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "repositories": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "template_repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {},
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              { "type": "boolean" }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                },
                                "nullable_changed": null,
                                "properties_changed": null,
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/actions/permissions/selected-actions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {},
                            "removed": [
                              [
                                "verified_allowed",
                                {
                                  "description": "Whether actions in GitHub Marketplace from verified creators are allowed. Set to `true` to allow all GitHub Marketplace actions by verified creators.",
                                  "type": "boolean"
                                }
                              ]
                            ]
                          },
                          "required_changed": {
                            "added": [
                              "github_owned_allowed",
                              "patterns_allowed"
                            ],
                            "removed": []
                          },
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/actions/runner-groups": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nLists all self-hosted runner groups configured in an organization and inherited from an enterprise.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
              "to": "Lists all self-hosted runner groups configured in an organization and inherited from an enterprise.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/actions/runner-groups/{runner_group_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nGets a specific self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
              "to": "Gets a specific self-hosted runner group for an organization.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nLists self-hosted runners that are in a specific organization group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
              "to": "Lists self-hosted runners that are in a specific organization group.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/audit-log": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Gets the audit log for an organization. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization).\"\n\nTo use this endpoint, you must be an organization owner, and you must use an access token with the `admin:org` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint.",
              "to": "Gets the audit log for an organization. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/enterprise-server@3.1/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization).\"\n\nTo use this endpoint, you must be an organization owner, and you must use an access token with the `admin:org` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/events": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "payload": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "issue": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {
                                                  "template_repository": {
                                                    "description_changed": null,
                                                    "enum_changed": null,
                                                    "format_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "changed": {},
                                                      "removed": [
                                                        [
                                                          "allow_auto_merge",
                                                          { "type": "boolean" }
                                                        ]
                                                      ]
                                                    },
                                                    "required_changed": null,
                                                    "type_changed": null
                                                  }
                                                },
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    {
                                                      "default": false,
                                                      "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": []
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/hooks": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {},
                              "removed": [
                                [
                                  "deliveries_url",
                                  {
                                    "example": "https://api.github.com/orgs/octocat/hooks/1/deliveries",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                ]
                              ]
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/hooks/{hook_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {},
                            "removed": [
                              [
                                "deliveries_url",
                                {
                                  "example": "https://api.github.com/orgs/octocat/hooks/1/deliveries",
                                  "format": "uri",
                                  "type": "string"
                                }
                              ]
                            ]
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/hooks/{hook_id}/config": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "secret": {
                                "description_changed": {
                                  "from": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
                                  "to": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads/#delivery-headers)."
                                },
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": null,
                                "nullable_changed": null,
                                "properties_changed": null,
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/installation": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/issues": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "repository": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "template_repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {},
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              { "type": "boolean" }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/teams/{team_slug}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Gets a team using the team's `slug`. GitHub generates the `slug` from the team `name`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.",
              "to": "Gets a team using the team's `slug`. GitHub Enterprise Server generates the `slug` from the team `name`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/teams/{team_slug}/discussions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.",
              "to": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.",
              "to": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.",
              "to": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.",
              "to": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List the reactions to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments/). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.",
              "to": "List the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#discussion-comments/). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List the reactions to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.",
              "to": "List the reactions to a [team discussion](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/teams/{team_slug}/memberships/{username}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see see [Create a team](https://docs.github.com/rest/reference/teams#create-a-team).",
              "to": "Team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see see [Create a team](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#create-a-team)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.\n\nIf a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.",
              "to": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.\n\nIf a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {},
                            "removed": [
                              [
                                "allow_auto_merge",
                                {
                                  "default": false,
                                  "description": "Whether to allow Auto-merge to be used on pull requests.",
                                  "example": false,
                                  "type": "boolean"
                                }
                              ]
                            ]
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "parent": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": null,
                                "nullable_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "changed": {
                                    "template_repository": {
                                      "description_changed": null,
                                      "enum_changed": null,
                                      "format_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null,
                                      "properties_changed": {
                                        "added": [],
                                        "changed": {},
                                        "removed": [
                                          [
                                            "allow_auto_merge",
                                            { "type": "boolean" }
                                          ]
                                        ]
                                      },
                                      "required_changed": null,
                                      "type_changed": null
                                    }
                                  },
                                  "removed": [
                                    [
                                      "allow_auto_merge",
                                      {
                                        "default": false,
                                        "description": "Whether to allow Auto-merge to be used on pull requests.",
                                        "example": false,
                                        "type": "boolean"
                                      }
                                    ]
                                  ]
                                },
                                "required_changed": null,
                                "type_changed": null
                              },
                              "source": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": null,
                                "nullable_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "changed": {
                                    "template_repository": {
                                      "description_changed": null,
                                      "enum_changed": null,
                                      "format_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null,
                                      "properties_changed": {
                                        "added": [],
                                        "changed": {},
                                        "removed": [
                                          [
                                            "allow_auto_merge",
                                            { "type": "boolean" }
                                          ]
                                        ]
                                      },
                                      "required_changed": null,
                                      "type_changed": null
                                    }
                                  },
                                  "removed": [
                                    [
                                      "allow_auto_merge",
                                      {
                                        "default": false,
                                        "description": "Whether to allow Auto-merge to be used on pull requests.",
                                        "example": false,
                                        "type": "boolean"
                                      }
                                    ]
                                  ]
                                },
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": [
                              [
                                "allow_auto_merge",
                                { "example": false, "type": "boolean" }
                              ],
                              [
                                "security_and_analysis",
                                {
                                  "nullable": true,
                                  "properties": {
                                    "advanced_security": {
                                      "properties": {
                                        "status": {
                                          "enum": ["enabled", "disabled"],
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "secret_scanning": {
                                      "properties": {
                                        "status": {
                                          "enum": ["enabled", "disabled"],
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            ]
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/actions/permissions/selected-actions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {},
                            "removed": [
                              [
                                "verified_allowed",
                                {
                                  "description": "Whether actions in GitHub Marketplace from verified creators are allowed. Set to `true` to allow all GitHub Marketplace actions by verified creators.",
                                  "type": "boolean"
                                }
                              ]
                            ]
                          },
                          "required_changed": {
                            "added": [
                              "github_owned_allowed",
                              "patterns_allowed"
                            ],
                            "removed": []
                          },
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/actions/runs": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
              "to": "Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).",
              "to": "Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#parameters)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.",
              "to": "List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "rule": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": null,
                                "nullable_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "changed": {},
                                  "removed": [
                                    [
                                      "security_severity_level",
                                      {
                                        "description": "The security severity of the alert.",
                                        "enum": [
                                          "low",
                                          "medium",
                                          "high",
                                          "critical"
                                        ],
                                        "nullable": true,
                                        "type": "string"
                                      }
                                    ]
                                  ]
                                },
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/comments": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Commit Comments use [these custom media types](https://docs.github.com/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/rest/overview/media-types/).\n\nComments are ordered by ascending ID.",
              "to": "Commit Comments use [these custom media types](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/).\n\nComments are ordered by ascending ID."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/comments/{comment_id}/reactions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List the reactions to a [commit comment](https://docs.github.com/rest/reference/repos#comments).",
              "to": "List the reactions to a [commit comment](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#comments)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/commits/{commit_sha}/pulls": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests) endpoint.",
              "to": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#list-pull-requests) endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "base": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "repo": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "template_repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {},
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    { "type": "boolean" }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              {
                                                "default": false,
                                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                "example": false,
                                                "type": "boolean"
                                              }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                },
                                "head": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "repo": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "template_repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {},
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    { "type": "boolean" }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              {
                                                "default": false,
                                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                "example": false,
                                                "type": "boolean"
                                              }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/commits/{ref}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
              "to": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |"
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/commits/{ref}/status": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
              "to": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`"
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/compare/{basehead}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nTo process a response with a large number of commits, you can use (`per_page` or `page`) to paginate the results. When using paging, the list of changed files is only returned with page 1, but includes all changed files for the entire comparison. For more information on working with pagination, see \"[Traversing with pagination](/rest/guides/traversing-with-pagination).\"\n\nWhen calling this API without any paging parameters (`per_page` or `page`), the returned list is limited to 250 commits and the last commit in the list is the most recent of the entire comparison. When a paging parameter is specified, the first commit in the returned list of each page is the earliest.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
              "to": "The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "changed": {},
              "removed": [
                {
                  "allowReserved": null,
                  "description": "Page number of the results to fetch.",
                  "in": "query",
                  "name": "page",
                  "required": false,
                  "schema": { "default": 1, "type": "integer" },
                  "style": "form"
                },
                {
                  "allowReserved": null,
                  "description": "Results per page (max 100)",
                  "in": "query",
                  "name": "per_page",
                  "required": false,
                  "schema": { "default": 30, "type": "integer" },
                  "style": "form"
                }
              ]
            },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/contents/{path}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\nFiles and symlinks support [a custom media type](https://docs.github.com/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values.",
              "to": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\nFiles and symlinks support [a custom media type](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/enterprise-server@3.1/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/enterprise-server@3.1/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/events": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "payload": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "issue": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {
                                                  "template_repository": {
                                                    "description_changed": null,
                                                    "enum_changed": null,
                                                    "format_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "changed": {},
                                                      "removed": [
                                                        [
                                                          "allow_auto_merge",
                                                          { "type": "boolean" }
                                                        ]
                                                      ]
                                                    },
                                                    "required_changed": null,
                                                    "type_changed": null
                                                  }
                                                },
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    {
                                                      "default": false,
                                                      "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": []
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/git/matching-refs/{ref}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.\n\nWhen you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nIf you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`.",
              "to": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.\n\nWhen you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@3.1/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nIf you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/git/ref/{ref}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".",
              "to": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@3.1/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\"."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/hooks": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "config": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "secret": {
                                        "description_changed": {
                                          "from": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
                                          "to": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads/#delivery-headers)."
                                        },
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": null,
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": [
                                [
                                  "deliveries_url",
                                  {
                                    "example": "https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                ]
                              ]
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/hooks/{hook_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "config": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": null,
                                "nullable_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "changed": {
                                    "secret": {
                                      "description_changed": {
                                        "from": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
                                        "to": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads/#delivery-headers)."
                                      },
                                      "enum_changed": null,
                                      "format_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null,
                                      "properties_changed": null,
                                      "required_changed": null,
                                      "type_changed": null
                                    }
                                  },
                                  "removed": []
                                },
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": [
                              [
                                "deliveries_url",
                                {
                                  "example": "https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries",
                                  "format": "uri",
                                  "type": "string"
                                }
                              ]
                            ]
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/hooks/{hook_id}/config": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "secret": {
                                "description_changed": {
                                  "from": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).",
                                  "to": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads/#delivery-headers)."
                                },
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": null,
                                "nullable_changed": null,
                                "properties_changed": null,
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/installation": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/issues": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "repository": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "template_repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {},
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              { "type": "boolean" }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List the reactions to an [issue comment](https://docs.github.com/rest/reference/issues#comments).",
              "to": "List the reactions to an [issue comment](https://docs.github.com/enterprise-server@3.1/rest/reference/issues#comments)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/issues/events": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "issue": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "template_repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {},
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    { "type": "boolean" }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              {
                                                "default": false,
                                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                "example": false,
                                                "type": "boolean"
                                              }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/issues/events/{event_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "issue": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": null,
                                "nullable_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "changed": {
                                    "repository": {
                                      "description_changed": null,
                                      "enum_changed": null,
                                      "format_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null,
                                      "properties_changed": {
                                        "added": [],
                                        "changed": {
                                          "template_repository": {
                                            "description_changed": null,
                                            "enum_changed": null,
                                            "format_changed": null,
                                            "items_changed": null,
                                            "nullable_changed": null,
                                            "properties_changed": {
                                              "added": [],
                                              "changed": {},
                                              "removed": [
                                                [
                                                  "allow_auto_merge",
                                                  { "type": "boolean" }
                                                ]
                                              ]
                                            },
                                            "required_changed": null,
                                            "type_changed": null
                                          }
                                        },
                                        "removed": [
                                          [
                                            "allow_auto_merge",
                                            {
                                              "default": false,
                                              "description": "Whether to allow Auto-merge to be used on pull requests.",
                                              "example": false,
                                              "type": "boolean"
                                            }
                                          ]
                                        ]
                                      },
                                      "required_changed": null,
                                      "type_changed": null
                                    }
                                  },
                                  "removed": []
                                },
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/issues/{issue_number}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/enterprise-server@3.1/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "repository": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": null,
                                "nullable_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "changed": {
                                    "template_repository": {
                                      "description_changed": null,
                                      "enum_changed": null,
                                      "format_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null,
                                      "properties_changed": {
                                        "added": [],
                                        "changed": {},
                                        "removed": [
                                          [
                                            "allow_auto_merge",
                                            { "type": "boolean" }
                                          ]
                                        ]
                                      },
                                      "required_changed": null,
                                      "type_changed": null
                                    }
                                  },
                                  "removed": [
                                    [
                                      "allow_auto_merge",
                                      {
                                        "default": false,
                                        "description": "Whether to allow Auto-merge to be used on pull requests.",
                                        "example": false,
                                        "type": "boolean"
                                      }
                                    ]
                                  ]
                                },
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/issues/{issue_number}/reactions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List the reactions to an [issue](https://docs.github.com/rest/reference/issues).",
              "to": "List the reactions to an [issue](https://docs.github.com/enterprise-server@3.1/rest/reference/issues)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/license": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.",
              "to": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types) for retrieving the raw license content or rendered license HTML."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/pages": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": {
              "from": "Get a GitHub Pages site",
              "to": "Get a GitHub Enterprise Server Pages site"
            },
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/pages/builds": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": {
              "from": "List GitHub Pages builds",
              "to": "List GitHub Enterprise Server Pages builds"
            },
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/pages/builds/{build_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": {
              "from": "Get GitHub Pages build",
              "to": "Get GitHub Enterprise Server Pages build"
            },
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/pulls": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "base": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "repo": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "template_repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {},
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    { "type": "boolean" }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              {
                                                "default": false,
                                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                "example": false,
                                                "type": "boolean"
                                              }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                },
                                "head": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "repo": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "template_repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {},
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    { "type": "boolean" }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              {
                                                "default": false,
                                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                "example": false,
                                                "type": "boolean"
                                              }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List the reactions to a [pull request review comment](https://docs.github.com/rest/reference/pulls#review-comments).",
              "to": "List the reactions to a [pull request review comment](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#review-comments)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/pulls/{pull_number}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/rest/reference/pulls#update-a-pull-request) a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.",
              "to": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#update-a-pull-request) a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@3.1/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/pulls/{pull_number}/commits": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/rest/reference/repos#list-commits) endpoint.",
              "to": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#list-commits) endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/readme": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.",
              "to": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/readme/{dir}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Gets the README from a repository directory.\n\nREADMEs support [custom media types](https://docs.github.com/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.",
              "to": "Gets the README from a repository directory.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/releases": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.",
              "to": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/enterprise-server@3.1/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {},
                              "removed": [
                                [
                                  "discussion_url",
                                  {
                                    "description": "The URL of the release discussion.",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                ],
                                ["mentions_count", { "type": "integer" }]
                              ]
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/releases/assets/{asset_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.",
              "to": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/releases/latest": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {},
                            "removed": [
                              [
                                "discussion_url",
                                {
                                  "description": "The URL of the release discussion.",
                                  "format": "uri",
                                  "type": "string"
                                }
                              ],
                              ["mentions_count", { "type": "integer" }]
                            ]
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/releases/tags/{tag}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {},
                            "removed": [
                              [
                                "discussion_url",
                                {
                                  "description": "The URL of the release discussion.",
                                  "format": "uri",
                                  "type": "string"
                                }
                              ],
                              ["mentions_count", { "type": "integer" }]
                            ]
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/releases/{release_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/rest/overview/resources-in-the-rest-api#hypermedia).",
              "to": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#hypermedia)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {},
                            "removed": [
                              [
                                "discussion_url",
                                {
                                  "description": "The URL of the release discussion.",
                                  "format": "uri",
                                  "type": "string"
                                }
                              ],
                              ["mentions_count", { "type": "integer" }]
                            ]
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repos/{owner}/{repo}/stargazers": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:",
              "to": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/repositories": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists all public repositories in the order that they were created.\n\nNote:\n- For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n- Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.",
              "to": "Lists all public repositories in the order that they were created.\n\nNote:\n- For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n- Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories."
            },
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "allowReserved": null,
                  "description": "Specifies the types of repositories to return. Can be one of `all` or `public`. Default: `public`. Note: For GitHub Enterprise Server and GitHub AE, this endpoint will only list repositories available to all users on the enterprise.",
                  "in": "query",
                  "name": "visibility",
                  "required": false,
                  "schema": {
                    "default": "public",
                    "enum": ["all", "public"],
                    "example": "all",
                    "type": "string"
                  },
                  "style": "form"
                }
              ],
              "changed": {},
              "removed": []
            },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/search/code": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.",
              "to": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@3.1/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/search/commits": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`",
              "to": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/enterprise-server@3.1/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`"
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/search/issues": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.\n\n**Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see \"[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests).\"",
              "to": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://docs.github.com/enterprise-server@3.1/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.\n\n**Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see \"[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests).\""
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "items": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "template_repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {},
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    { "type": "boolean" }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              {
                                                "default": false,
                                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                "example": false,
                                                "type": "boolean"
                                              }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                },
                                "nullable_changed": null,
                                "properties_changed": null,
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/search/labels": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results.",
              "to": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@3.1/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/search/repositories": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`",
              "to": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@3.1/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`"
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "items": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {},
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        { "type": "boolean" }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                },
                                "nullable_changed": null,
                                "properties_changed": null,
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/search/topics": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.",
              "to": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@3.1/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/search/users": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/reference/search#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.",
              "to": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/enterprise-server@3.1/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@3.1/rest/reference/search#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the [Get a team by name](https://docs.github.com/rest/reference/teams#get-a-team-by-name) endpoint.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the [Get a team by name](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#get-a-team-by-name) endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/discussions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://docs.github.com/rest/reference/teams#list-discussions) endpoint.\n\nList all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#list-discussions) endpoint.\n\nList all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/discussions/{discussion_number}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/rest/reference/teams#get-a-discussion) endpoint.\n\nGet a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#get-a-discussion) endpoint.\n\nGet a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/discussions/{discussion_number}/comments": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://docs.github.com/rest/reference/teams#list-discussion-comments) endpoint.\n\nList all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#list-discussion-comments) endpoint.\n\nList all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://docs.github.com/rest/reference/teams#get-a-discussion-comment) endpoint.\n\nGet a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#get-a-discussion-comment) endpoint.\n\nGet a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://docs.github.com/rest/reference/reactions#list-reactions-for-a-team-discussion-comment) endpoint.\n\nList the reactions to a [team discussion comment](https://docs.github.com/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://docs.github.com/enterprise-server@3.1/rest/reference/reactions#list-reactions-for-a-team-discussion-comment) endpoint.\n\nList the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/discussions/{discussion_number}/reactions": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://docs.github.com/rest/reference/reactions#list-reactions-for-a-team-discussion) endpoint.\n\nList the reactions to a [team discussion](https://docs.github.com/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://docs.github.com/enterprise-server@3.1/rest/reference/reactions#list-reactions-for-a-team-discussion) endpoint.\n\nList the reactions to a [team discussion](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/members": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://docs.github.com/rest/reference/teams#list-team-members) endpoint.\n\nTeam members will include the members of child teams.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#list-team-members) endpoint.\n\nTeam members will include the members of child teams."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/members/{username}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.",
              "to": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/memberships/{username}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://docs.github.com/rest/reference/teams#get-team-membership-for-a-user) endpoint.\n\nTeam members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/rest/reference/teams#create-a-team).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#get-team-membership-for-a-user) endpoint.\n\nTeam members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#create-a-team)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/projects": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://docs.github.com/rest/reference/teams#list-team-projects) endpoint.\n\nLists the organization projects for a team.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#list-team-projects) endpoint.\n\nLists the organization projects for a team."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/projects/{project_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://docs.github.com/rest/reference/teams#check-team-permissions-for-a-project) endpoint.\n\nChecks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#check-team-permissions-for-a-project) endpoint.\n\nChecks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/repos": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/rest/reference/teams#list-team-repositories) endpoint.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#list-team-repositories) endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/repos/{owner}/{repo}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Note**: Repositories inherited through a parent team will also be checked.\n\n**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:",
              "to": "**Note**: Repositories inherited through a parent team will also be checked.\n\n**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {},
                            "removed": [
                              [
                                "allow_auto_merge",
                                {
                                  "default": false,
                                  "description": "Whether to allow Auto-merge to be used on pull requests.",
                                  "example": false,
                                  "type": "boolean"
                                }
                              ]
                            ]
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/teams/{team_id}/teams": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List child teams`](https://docs.github.com/rest/reference/teams#list-child-teams) endpoint.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List child teams`](https://docs.github.com/enterprise-server@3.1/rest/reference/teams#list-child-teams) endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/gpg_keys": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/gpg_keys/{gpg_key_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/installations": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.",
              "to": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/installations/{installation_id}/repositories": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key.",
              "to": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": null,
                          "nullable_changed": null,
                          "properties_changed": {
                            "added": [],
                            "changed": {
                              "repositories": {
                                "description_changed": null,
                                "enum_changed": null,
                                "format_changed": null,
                                "items_changed": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "template_repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {},
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              { "type": "boolean" }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                },
                                "nullable_changed": null,
                                "properties_changed": null,
                                "required_changed": null,
                                "type_changed": null
                              }
                            },
                            "removed": []
                          },
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/issues": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "repository": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "template_repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {},
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              { "type": "boolean" }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/keys": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/keys/{key_id}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/public_emails": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope.",
              "to": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/enterprise-server@3.1/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/repos": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "template_repository": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {},
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        { "type": "boolean" }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": [
                                [
                                  "allow_auto_merge",
                                  {
                                    "default": false,
                                    "description": "Whether to allow Auto-merge to be used on pull requests.",
                                    "example": false,
                                    "type": "boolean"
                                  }
                                ]
                              ]
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/starred": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:",
              "to": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "template_repository": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {},
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        { "type": "boolean" }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": [
                                [
                                  "allow_auto_merge",
                                  {
                                    "default": false,
                                    "description": "Whether to allow Auto-merge to be used on pull requests.",
                                    "example": false,
                                    "type": "boolean"
                                  }
                                ]
                              ]
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      },
                      "application/vnd.github.v3.star+json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "repo": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "template_repository": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {},
                                          "removed": [
                                            [
                                              "allow_auto_merge",
                                              { "type": "boolean" }
                                            ]
                                          ]
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": [
                                      [
                                        "allow_auto_merge",
                                        {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        }
                                      ]
                                    ]
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/user/teams": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/apps/building-oauth-apps/).",
              "to": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/enterprise-server@3.1/apps/building-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users.",
              "to": "Lists all users, in the order that they signed up on GitHub Enterprise Server. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users/{username}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub plan information' below\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://docs.github.com/rest/overview/resources-in-the-rest-api#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/rest/reference/users#emails)\".",
              "to": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub Enterprise Server plan information' below\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub Enterprise Server [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see [Authentication](https://docs.github.com/enterprise-server@3.1/rest/overview/resources-in-the-rest-api#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/enterprise-server@3.1/rest/reference/users#emails)\"."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users/{username}/events": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "payload": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "issue": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {
                                                  "template_repository": {
                                                    "description_changed": null,
                                                    "enum_changed": null,
                                                    "format_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "changed": {},
                                                      "removed": [
                                                        [
                                                          "allow_auto_merge",
                                                          { "type": "boolean" }
                                                        ]
                                                      ]
                                                    },
                                                    "required_changed": null,
                                                    "type_changed": null
                                                  }
                                                },
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    {
                                                      "default": false,
                                                      "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": []
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users/{username}/events/orgs/{org}": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "payload": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "issue": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {
                                                  "template_repository": {
                                                    "description_changed": null,
                                                    "enum_changed": null,
                                                    "format_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "changed": {},
                                                      "removed": [
                                                        [
                                                          "allow_auto_merge",
                                                          { "type": "boolean" }
                                                        ]
                                                      ]
                                                    },
                                                    "required_changed": null,
                                                    "type_changed": null
                                                  }
                                                },
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    {
                                                      "default": false,
                                                      "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": []
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users/{username}/events/public": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "payload": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "issue": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {
                                                  "template_repository": {
                                                    "description_changed": null,
                                                    "enum_changed": null,
                                                    "format_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "changed": {},
                                                      "removed": [
                                                        [
                                                          "allow_auto_merge",
                                                          { "type": "boolean" }
                                                        ]
                                                      ]
                                                    },
                                                    "required_changed": null,
                                                    "type_changed": null
                                                  }
                                                },
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    {
                                                      "default": false,
                                                      "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": []
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users/{username}/installation": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@3.1/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users/{username}/orgs": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead.",
              "to": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/enterprise-server@3.1/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead."
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users/{username}/received_events": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "payload": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "issue": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {
                                                  "template_repository": {
                                                    "description_changed": null,
                                                    "enum_changed": null,
                                                    "format_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "changed": {},
                                                      "removed": [
                                                        [
                                                          "allow_auto_merge",
                                                          { "type": "boolean" }
                                                        ]
                                                      ]
                                                    },
                                                    "required_changed": null,
                                                    "type_changed": null
                                                  }
                                                },
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    {
                                                      "default": false,
                                                      "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": []
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users/{username}/received_events/public": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": null,
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": {
              "added": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "changed": {
                      "application/json": {
                        "schema_added": null,
                        "schema_changed": {
                          "description_changed": null,
                          "enum_changed": null,
                          "format_changed": null,
                          "items_changed": {
                            "description_changed": null,
                            "enum_changed": null,
                            "format_changed": null,
                            "items_changed": null,
                            "nullable_changed": null,
                            "properties_changed": {
                              "added": [],
                              "changed": {
                                "payload": {
                                  "description_changed": null,
                                  "enum_changed": null,
                                  "format_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "changed": {
                                      "issue": {
                                        "description_changed": null,
                                        "enum_changed": null,
                                        "format_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "changed": {
                                            "repository": {
                                              "description_changed": null,
                                              "enum_changed": null,
                                              "format_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null,
                                              "properties_changed": {
                                                "added": [],
                                                "changed": {
                                                  "template_repository": {
                                                    "description_changed": null,
                                                    "enum_changed": null,
                                                    "format_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null,
                                                    "properties_changed": {
                                                      "added": [],
                                                      "changed": {},
                                                      "removed": [
                                                        [
                                                          "allow_auto_merge",
                                                          { "type": "boolean" }
                                                        ]
                                                      ]
                                                    },
                                                    "required_changed": null,
                                                    "type_changed": null
                                                  }
                                                },
                                                "removed": [
                                                  [
                                                    "allow_auto_merge",
                                                    {
                                                      "default": false,
                                                      "description": "Whether to allow Auto-merge to be used on pull requests.",
                                                      "example": false,
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ]
                                              },
                                              "required_changed": null,
                                              "type_changed": null
                                            }
                                          },
                                          "removed": []
                                        },
                                        "required_changed": null,
                                        "type_changed": null
                                      }
                                    },
                                    "removed": []
                                  },
                                  "required_changed": null,
                                  "type_changed": null
                                }
                              },
                              "removed": []
                            },
                            "required_changed": null,
                            "type_changed": null
                          },
                          "nullable_changed": null,
                          "properties_changed": null,
                          "required_changed": null,
                          "type_changed": null
                        },
                        "schema_removed": null
                      }
                    },
                    "removed": []
                  }
                }
              },
              "removed": []
            },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      },
      "/users/{username}/starred": {
        "operations_added": [],
        "operations_changed": {
          "get": {
            "description": {
              "from": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/rest/overview/media-types/) via the `Accept` header:",
              "to": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@3.1/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": { "added": [], "changed": {}, "removed": [] },
            "request_body": null,
            "responses": { "added": [], "changed": {}, "removed": [] },
            "summary": null,
            "tags": { "added": [], "removed": [] }
          }
        },
        "operations_removed": []
      }
    },
    "removed": [
      [
        "/app/hook/deliveries",
        {
          "get": {
            "deprecated": null,
            "description": "Returns a list of webhook deliveries for the webhook configured for a GitHub App.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#list-deliveries-for-an-app-webhook"
            },
            "operationId": "apps/list-webhook-deliveries",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for the next and previous page cursors.",
                "in": "query",
                "name": "cursor",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "action": "opened",
                            "delivered_at": "2019-06-03T00:57:16Z",
                            "duration": 0.27,
                            "event": "issues",
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "id": 12345678,
                            "installation_id": 123,
                            "redelivery": false,
                            "repository_id": 456,
                            "status": "OK",
                            "status_code": 200
                          },
                          {
                            "action": "opened",
                            "delivered_at": "2019-06-04T00:57:16Z",
                            "duration": 0.28,
                            "event": "issues",
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "id": 123456789,
                            "installation_id": 123,
                            "redelivery": true,
                            "repository_id": 456,
                            "status": "OK",
                            "status_code": 200
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Delivery made by a webhook, without request and response information.",
                        "properties": {
                          "action": {
                            "description": "The type of activity for the event that triggered the delivery.",
                            "example": "opened",
                            "nullable": true,
                            "type": "string"
                          },
                          "delivered_at": {
                            "description": "Time when the webhook delivery occurred.",
                            "example": "2021-05-12T20:33:44Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Time spent delivering.",
                            "example": 0.03,
                            "type": "number"
                          },
                          "event": {
                            "description": "The event that triggered the delivery.",
                            "example": "issues",
                            "type": "string"
                          },
                          "guid": {
                            "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
                            "example": "58474f00-b361-11eb-836d-0e4f3503ccbe",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the webhook delivery.",
                            "example": 42,
                            "type": "integer"
                          },
                          "installation_id": {
                            "description": "The id of the GitHub App installation associated with this event.",
                            "example": 123,
                            "nullable": true,
                            "type": "integer"
                          },
                          "redelivery": {
                            "description": "Whether the webhook delivery is a redelivery.",
                            "example": false,
                            "type": "boolean"
                          },
                          "repository_id": {
                            "description": "The id of the repository associated with this event.",
                            "example": 123,
                            "nullable": true,
                            "type": "integer"
                          },
                          "status": {
                            "description": "Describes the response returned after attempting the delivery.",
                            "example": "failed to connect",
                            "type": "string"
                          },
                          "status_code": {
                            "description": "Status code received when delivery was made.",
                            "example": 502,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "guid",
                          "delivered_at",
                          "redelivery",
                          "duration",
                          "status",
                          "status_code",
                          "event",
                          "action",
                          "installation_id",
                          "repository_id"
                        ],
                        "title": "Simple webhook delivery",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "List deliveries for an app webhook",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/app/hook/deliveries/{delivery_id}",
        {
          "get": {
            "deprecated": null,
            "description": "Returns a delivery for the webhook configured for a GitHub App.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#get-a-delivery-for-an-app-webhook"
            },
            "operationId": "apps/get-webhook-delivery",
            "parameters": [
              {
                "in": "path",
                "name": "delivery_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "action": "opened",
                          "delivered_at": "2019-06-03T00:57:16Z",
                          "duration": 0.27,
                          "event": "issues",
                          "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "id": 12345678,
                          "installation_id": 123,
                          "redelivery": false,
                          "repository_id": 456,
                          "request": {
                            "headers": {
                              "Accept": "*/*",
                              "User-Agent": "GitHub-Hookshot/b8c71d8",
                              "X-GitHub-Delivery": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                              "X-GitHub-Event": "issues",
                              "X-GitHub-Hook-ID": "42",
                              "X-GitHub-Hook-Installation-Target-ID": "123",
                              "X-GitHub-Hook-Installation-Target-Type": "repository",
                              "X-Hub-Signature": "sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d",
                              "X-Hub-Signature-256": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
                              "content-type": "application/json"
                            },
                            "payload": {
                              "action": "opened",
                              "issue": { "body": "foo" },
                              "repository": { "id": 123 }
                            }
                          },
                          "response": {
                            "headers": {
                              "Content-Type": "text/html;charset=utf-8"
                            },
                            "payload": "ok"
                          },
                          "status": "OK",
                          "status_code": 200,
                          "url": "https://www.example.com"
                        }
                      }
                    },
                    "schema": {
                      "description": "Delivery made by a webhook.",
                      "properties": {
                        "action": {
                          "description": "The type of activity for the event that triggered the delivery.",
                          "example": "opened",
                          "nullable": true,
                          "type": "string"
                        },
                        "delivered_at": {
                          "description": "Time when the delivery was delivered.",
                          "example": "2021-05-12T20:33:44Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Time spent delivering.",
                          "example": 0.03,
                          "type": "number"
                        },
                        "event": {
                          "description": "The event that triggered the delivery.",
                          "example": "issues",
                          "type": "string"
                        },
                        "guid": {
                          "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
                          "example": "58474f00-b361-11eb-836d-0e4f3503ccbe",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the delivery.",
                          "example": 42,
                          "type": "integer"
                        },
                        "installation_id": {
                          "description": "The id of the GitHub App installation associated with this event.",
                          "example": 123,
                          "nullable": true,
                          "type": "integer"
                        },
                        "redelivery": {
                          "description": "Whether the delivery is a redelivery.",
                          "example": false,
                          "type": "boolean"
                        },
                        "repository_id": {
                          "description": "The id of the repository associated with this event.",
                          "example": 123,
                          "nullable": true,
                          "type": "integer"
                        },
                        "request": {
                          "properties": {
                            "headers": {
                              "additionalProperties": true,
                              "description": "The request headers sent with the webhook delivery.",
                              "nullable": true,
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "The webhook payload.",
                              "nullable": true,
                              "type": "object"
                            }
                          },
                          "required": ["headers", "payload"],
                          "type": "object"
                        },
                        "response": {
                          "properties": {
                            "headers": {
                              "additionalProperties": true,
                              "description": "The response headers received when the delivery was made.",
                              "nullable": true,
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "The response payload received.",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": ["headers", "payload"],
                          "type": "object"
                        },
                        "status": {
                          "description": "Description of the status of the attempted delivery",
                          "example": "failed to connect",
                          "type": "string"
                        },
                        "status_code": {
                          "description": "Status code received when delivery was made.",
                          "example": 502,
                          "type": "integer"
                        },
                        "url": {
                          "description": "The URL target of the delivery.",
                          "example": "https://www.example.com",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "guid",
                        "delivered_at",
                        "redelivery",
                        "duration",
                        "status",
                        "status_code",
                        "event",
                        "action",
                        "installation_id",
                        "repository_id",
                        "request",
                        "response"
                      ],
                      "title": "Webhook delivery",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Get a delivery for an app webhook",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/app/hook/deliveries/{delivery_id}/attempts",
        {
          "post": {
            "deprecated": null,
            "description": "Redeliver a delivery for the webhook configured for a GitHub App.\n\nYou must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#redeliver-a-delivery-for-an-app-webhook"
            },
            "operationId": "apps/redeliver-webhook-delivery",
            "parameters": [
              {
                "in": "path",
                "name": "delivery_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "202": {
                "content": {
                  "application/json": { "schema": { "type": "object" } }
                },
                "description": "Accepted"
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Redeliver a delivery for an app webhook",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/audit-log",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the `admin:enterprise` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#get-the-audit-log-for-an-enterprise"
            },
            "operationId": "enterprise-admin/get-audit-log",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).",
                "in": "query",
                "name": "phrase",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "The event types to include:\n\n- `web` - returns web (non-Git) events\n- `git` - returns Git events\n- `all` - returns both web and Git events\n\nThe default is `web`.",
                "in": "query",
                "name": "include",
                "required": false,
                "schema": { "enum": ["web", "git", "all"], "type": "string" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.",
                "in": "query",
                "name": "after",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.",
                "in": "query",
                "name": "before",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\nThe default is `desc`.",
                "in": "query",
                "name": "order",
                "required": false,
                "schema": { "enum": ["desc", "asc"], "type": "string" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "@timestamp": 1606929874512,
                            "_document_id": "xJJFlFOhQ6b-5vaAFy9Rjw",
                            "action": "team.add_member",
                            "actor": "octocat",
                            "created_at": 1606929874512,
                            "org": "octo-corp",
                            "team": "octo-corp/example-team",
                            "user": "monalisa"
                          },
                          {
                            "@timestamp": 1606507117008,
                            "_document_id": "Vqvg6kZ4MYqwWRKFDzlMoQ",
                            "action": "org.create",
                            "actor": "octocat",
                            "created_at": 1606507117008,
                            "org": "octocat-test-org"
                          },
                          {
                            "@timestamp": 1605719148837,
                            "_document_id": "LwW2vpJZCDS-WUmo9Z-ifw",
                            "action": "repo.destroy",
                            "actor": "monalisa",
                            "created_at": 1605719148837,
                            "org": "mona-org",
                            "repo": "mona-org/mona-test-repo",
                            "visibility": "private"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "@timestamp": {
                            "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                            "type": "integer"
                          },
                          "_document_id": {
                            "description": "A unique identifier for an audit event.",
                            "type": "string"
                          },
                          "action": {
                            "description": "The name of the action that was performed, for example `user.login` or `repo.create`.",
                            "type": "string"
                          },
                          "active": { "type": "boolean" },
                          "active_was": { "type": "boolean" },
                          "actor": {
                            "description": "The actor who performed the action.",
                            "type": "string"
                          },
                          "actor_id": {
                            "description": "The id of the actor who performed the action.",
                            "type": "integer"
                          },
                          "actor_location": {
                            "properties": {
                              "country_name": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "blocked_user": {
                            "description": "The username of the account being blocked.",
                            "type": "string"
                          },
                          "business": { "type": "string" },
                          "config": { "type": "array" },
                          "config_was": { "type": "array" },
                          "content_type": { "type": "string" },
                          "created_at": {
                            "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                            "type": "integer"
                          },
                          "data": {
                            "additionalProperties": true,
                            "type": "object"
                          },
                          "deploy_key_fingerprint": { "type": "string" },
                          "emoji": { "type": "string" },
                          "events": { "type": "array" },
                          "events_were": { "type": "array" },
                          "explanation": { "type": "string" },
                          "fingerprint": { "type": "string" },
                          "hook_id": { "type": "integer" },
                          "limited_availability": { "type": "boolean" },
                          "message": { "type": "string" },
                          "name": { "type": "string" },
                          "old_user": { "type": "string" },
                          "openssh_public_key": { "type": "string" },
                          "org": { "type": "string" },
                          "org_id": { "type": "integer" },
                          "previous_visibility": { "type": "string" },
                          "read_only": { "type": "boolean" },
                          "repo": {
                            "description": "The name of the repository.",
                            "type": "string"
                          },
                          "repository": {
                            "description": "The name of the repository.",
                            "type": "string"
                          },
                          "repository_public": { "type": "boolean" },
                          "target_login": { "type": "string" },
                          "team": { "type": "string" },
                          "transport_protocol": {
                            "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data.",
                            "type": "integer"
                          },
                          "transport_protocol_name": {
                            "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.",
                            "type": "string"
                          },
                          "user": {
                            "description": "The user that was affected by the action performed (if available).",
                            "type": "string"
                          },
                          "visibility": {
                            "description": "The repository visibility, for example `public` or `private`.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get the audit log for an enterprise",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "audit-log"
            },
            "x-octokit": {
              "changes": [
                {
                  "before": { "operationId": "audit-log/get-audit-log" },
                  "date": "2021-04-30",
                  "type": "OPERATION"
                }
              ]
            }
          }
        }
      ],
      [
        "/enterprises/{enterprise}/settings/billing/actions",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nThe authenticated user must be an enterprise admin.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/billing#get-github-actions-billing-for-an-enterprise"
            },
            "operationId": "billing/get-github-actions-billing-ghe",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "included_minutes": 3000,
                          "minutes_used_breakdown": {
                            "MACOS": 10,
                            "UBUNTU": 205,
                            "WINDOWS": 90
                          },
                          "total_minutes_used": 305,
                          "total_paid_minutes_used": 0
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "included_minutes": {
                          "description": "The amount of free GitHub Actions minutes available.",
                          "type": "integer"
                        },
                        "minutes_used_breakdown": {
                          "properties": {
                            "MACOS": {
                              "description": "Total minutes used on macOS runner machines.",
                              "type": "integer"
                            },
                            "UBUNTU": {
                              "description": "Total minutes used on Ubuntu runner machines.",
                              "type": "integer"
                            },
                            "WINDOWS": {
                              "description": "Total minutes used on Windows runner machines.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "total_minutes_used": {
                          "description": "The sum of the free and paid GitHub Actions minutes used.",
                          "type": "integer"
                        },
                        "total_paid_minutes_used": {
                          "description": "The total paid GitHub Actions minutes used.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_minutes_used",
                        "total_paid_minutes_used",
                        "included_minutes",
                        "minutes_used_breakdown"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get GitHub Actions billing for an enterprise",
            "tags": ["billing"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "billing"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/settings/billing/packages",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/billing#get-github-packages-billing-for-an-enterprise"
            },
            "operationId": "billing/get-github-packages-billing-ghe",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "included_gigabytes_bandwidth": 10,
                          "total_gigabytes_bandwidth_used": 50,
                          "total_paid_gigabytes_bandwidth_used": 40
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "included_gigabytes_bandwidth": {
                          "description": "Free storage space (GB) for GitHub Packages.",
                          "type": "integer"
                        },
                        "total_gigabytes_bandwidth_used": {
                          "description": "Sum of the free and paid storage space (GB) for GitHuub Packages.",
                          "type": "integer"
                        },
                        "total_paid_gigabytes_bandwidth_used": {
                          "description": "Total paid storage space (GB) for GitHuub Packages.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_gigabytes_bandwidth_used",
                        "total_paid_gigabytes_bandwidth_used",
                        "included_gigabytes_bandwidth"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get GitHub Packages billing for an enterprise",
            "tags": ["billing"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "billing"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/settings/billing/shared-storage",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/billing#get-shared-storage-billing-for-an-enterprise"
            },
            "operationId": "billing/get-shared-storage-billing-ghe",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "days_left_in_billing_cycle": 20,
                          "estimated_paid_storage_for_month": 15,
                          "estimated_storage_for_month": 40
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "days_left_in_billing_cycle": {
                          "description": "Numbers of days left in billing cycle.",
                          "type": "integer"
                        },
                        "estimated_paid_storage_for_month": {
                          "description": "Estimated storage space (GB) used in billing cycle.",
                          "type": "integer"
                        },
                        "estimated_storage_for_month": {
                          "description": "Estimated sum of free and paid storage space (GB) used in billing cycle.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "days_left_in_billing_cycle",
                        "estimated_paid_storage_for_month",
                        "estimated_storage_for_month"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get shared storage billing for an enterprise",
            "tags": ["billing"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "billing"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/marketplace_listing/accounts/{account_id}",
        {
          "get": {
            "deprecated": null,
            "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account"
            },
            "operationId": "apps/get-subscription-plan-for-account",
            "parameters": [
              {
                "description": "account_id parameter",
                "in": "path",
                "name": "account_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "email": "billing@github.com",
                          "id": 4,
                          "login": "github",
                          "marketplace_pending_change": {
                            "effective_date": "2017-11-11T00:00:00Z",
                            "id": 77,
                            "plan": {
                              "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                              "bullets": [
                                "Up to 10 private repositories",
                                "3 concurrent builds"
                              ],
                              "description": "A professional-grade CI solution",
                              "has_free_trial": true,
                              "id": 1111,
                              "monthly_price_in_cents": 699,
                              "name": "Startup",
                              "number": 2,
                              "price_model": "flat-rate",
                              "state": "published",
                              "unit_name": null,
                              "url": "https://api.github.com/marketplace_listing/plans/1111",
                              "yearly_price_in_cents": 7870
                            },
                            "unit_count": null
                          },
                          "marketplace_purchase": {
                            "billing_cycle": "monthly",
                            "free_trial_ends_on": "2017-11-11T00:00:00Z",
                            "next_billing_date": "2017-11-11T00:00:00Z",
                            "on_free_trial": true,
                            "plan": {
                              "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                              "bullets": [
                                "Up to 25 private repositories",
                                "11 concurrent builds"
                              ],
                              "description": "A professional-grade CI solution",
                              "has_free_trial": true,
                              "id": 1313,
                              "monthly_price_in_cents": 1099,
                              "name": "Pro",
                              "number": 3,
                              "price_model": "flat-rate",
                              "state": "published",
                              "unit_name": null,
                              "url": "https://api.github.com/marketplace_listing/plans/1313",
                              "yearly_price_in_cents": 11870
                            },
                            "unit_count": null,
                            "updated_at": "2017-11-02T01:12:12Z"
                          },
                          "organization_billing_email": "billing@github.com",
                          "type": "Organization",
                          "url": "https://api.github.com/orgs/github"
                        }
                      }
                    },
                    "schema": {
                      "description": "Marketplace Purchase",
                      "properties": {
                        "email": { "nullable": true, "type": "string" },
                        "id": { "type": "integer" },
                        "login": { "type": "string" },
                        "marketplace_pending_change": {
                          "nullable": true,
                          "properties": {
                            "effective_date": { "type": "string" },
                            "id": { "type": "integer" },
                            "is_installed": { "type": "boolean" },
                            "plan": {
                              "description": "Marketplace Listing Plan",
                              "properties": {
                                "accounts_url": {
                                  "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "bullets": {
                                  "example": [
                                    "Up to 25 private repositories",
                                    "11 concurrent builds"
                                  ],
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "description": {
                                  "example": "A professional-grade CI solution",
                                  "type": "string"
                                },
                                "has_free_trial": {
                                  "example": true,
                                  "type": "boolean"
                                },
                                "id": { "example": 1313, "type": "integer" },
                                "monthly_price_in_cents": {
                                  "example": 1099,
                                  "type": "integer"
                                },
                                "name": { "example": "Pro", "type": "string" },
                                "number": { "example": 3, "type": "integer" },
                                "price_model": {
                                  "example": "flat-rate",
                                  "type": "string"
                                },
                                "state": {
                                  "example": "published",
                                  "type": "string"
                                },
                                "unit_name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/marketplace_listing/plans/1313",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "yearly_price_in_cents": {
                                  "example": 11870,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "url",
                                "accounts_url",
                                "id",
                                "number",
                                "name",
                                "description",
                                "has_free_trial",
                                "price_model",
                                "unit_name",
                                "monthly_price_in_cents",
                                "state",
                                "yearly_price_in_cents",
                                "bullets"
                              ],
                              "title": "Marketplace Listing Plan",
                              "type": "object"
                            },
                            "unit_count": {
                              "nullable": true,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "marketplace_purchase": {
                          "properties": {
                            "billing_cycle": { "type": "string" },
                            "free_trial_ends_on": {
                              "nullable": true,
                              "type": "string"
                            },
                            "is_installed": { "type": "boolean" },
                            "next_billing_date": {
                              "nullable": true,
                              "type": "string"
                            },
                            "on_free_trial": { "type": "boolean" },
                            "plan": {
                              "description": "Marketplace Listing Plan",
                              "properties": {
                                "accounts_url": {
                                  "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "bullets": {
                                  "example": [
                                    "Up to 25 private repositories",
                                    "11 concurrent builds"
                                  ],
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "description": {
                                  "example": "A professional-grade CI solution",
                                  "type": "string"
                                },
                                "has_free_trial": {
                                  "example": true,
                                  "type": "boolean"
                                },
                                "id": { "example": 1313, "type": "integer" },
                                "monthly_price_in_cents": {
                                  "example": 1099,
                                  "type": "integer"
                                },
                                "name": { "example": "Pro", "type": "string" },
                                "number": { "example": 3, "type": "integer" },
                                "price_model": {
                                  "example": "flat-rate",
                                  "type": "string"
                                },
                                "state": {
                                  "example": "published",
                                  "type": "string"
                                },
                                "unit_name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/marketplace_listing/plans/1313",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "yearly_price_in_cents": {
                                  "example": 11870,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "url",
                                "accounts_url",
                                "id",
                                "number",
                                "name",
                                "description",
                                "has_free_trial",
                                "price_model",
                                "unit_name",
                                "monthly_price_in_cents",
                                "state",
                                "yearly_price_in_cents",
                                "bullets"
                              ],
                              "title": "Marketplace Listing Plan",
                              "type": "object"
                            },
                            "unit_count": {
                              "nullable": true,
                              "type": "integer"
                            },
                            "updated_at": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "organization_billing_email": { "type": "string" },
                        "type": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "required": [
                        "url",
                        "id",
                        "type",
                        "login",
                        "marketplace_purchase"
                      ],
                      "title": "Marketplace Purchase",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Not Found when the account has not purchased the listing"
              }
            },
            "summary": "Get a subscription plan for an account",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "marketplace"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/marketplace_listing/plans",
        {
          "get": {
            "deprecated": null,
            "description": "Lists all plans that are part of your GitHub Marketplace listing.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#list-plans"
            },
            "operationId": "apps/list-plans",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                            "bullets": [
                              "Up to 25 private repositories",
                              "11 concurrent builds"
                            ],
                            "description": "A professional-grade CI solution",
                            "has_free_trial": true,
                            "id": 1313,
                            "monthly_price_in_cents": 1099,
                            "name": "Pro",
                            "number": 3,
                            "price_model": "flat-rate",
                            "state": "published",
                            "unit_name": null,
                            "url": "https://api.github.com/marketplace_listing/plans/1313",
                            "yearly_price_in_cents": 11870
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Marketplace Listing Plan",
                        "properties": {
                          "accounts_url": {
                            "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                            "format": "uri",
                            "type": "string"
                          },
                          "bullets": {
                            "example": [
                              "Up to 25 private repositories",
                              "11 concurrent builds"
                            ],
                            "items": { "type": "string" },
                            "type": "array"
                          },
                          "description": {
                            "example": "A professional-grade CI solution",
                            "type": "string"
                          },
                          "has_free_trial": {
                            "example": true,
                            "type": "boolean"
                          },
                          "id": { "example": 1313, "type": "integer" },
                          "monthly_price_in_cents": {
                            "example": 1099,
                            "type": "integer"
                          },
                          "name": { "example": "Pro", "type": "string" },
                          "number": { "example": 3, "type": "integer" },
                          "price_model": {
                            "example": "flat-rate",
                            "type": "string"
                          },
                          "state": { "example": "published", "type": "string" },
                          "unit_name": { "nullable": true, "type": "string" },
                          "url": {
                            "example": "https://api.github.com/marketplace_listing/plans/1313",
                            "format": "uri",
                            "type": "string"
                          },
                          "yearly_price_in_cents": {
                            "example": 11870,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "url",
                          "accounts_url",
                          "id",
                          "number",
                          "name",
                          "description",
                          "has_free_trial",
                          "price_model",
                          "unit_name",
                          "monthly_price_in_cents",
                          "state",
                          "yearly_price_in_cents",
                          "bullets"
                        ],
                        "title": "Marketplace Listing Plan",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "List plans",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "marketplace"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/marketplace_listing/plans/{plan_id}/accounts",
        {
          "get": {
            "deprecated": null,
            "description": "Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan"
            },
            "operationId": "apps/list-accounts-for-plan",
            "parameters": [
              {
                "description": "plan_id parameter",
                "in": "path",
                "name": "plan_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": ["created", "updated"],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": { "enum": ["asc", "desc"], "type": "string" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "id": 4,
                            "login": "github",
                            "marketplace_pending_change": {
                              "effective_date": "2017-11-11T00:00:00Z",
                              "id": 77,
                              "plan": {
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                                "bullets": [
                                  "Up to 10 private repositories",
                                  "3 concurrent builds"
                                ],
                                "description": "A professional-grade CI solution",
                                "has_free_trial": true,
                                "id": 1111,
                                "monthly_price_in_cents": 699,
                                "name": "Startup",
                                "number": 2,
                                "price_model": "flat-rate",
                                "state": "published",
                                "unit_name": null,
                                "url": "https://api.github.com/marketplace_listing/plans/1111",
                                "yearly_price_in_cents": 7870
                              },
                              "unit_count": null
                            },
                            "marketplace_purchase": {
                              "billing_cycle": "monthly",
                              "free_trial_ends_on": "2017-11-11T00:00:00Z",
                              "next_billing_date": "2017-11-11T00:00:00Z",
                              "on_free_trial": true,
                              "plan": {
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                "bullets": [
                                  "Up to 25 private repositories",
                                  "11 concurrent builds"
                                ],
                                "description": "A professional-grade CI solution",
                                "has_free_trial": true,
                                "id": 1313,
                                "monthly_price_in_cents": 1099,
                                "name": "Pro",
                                "number": 3,
                                "price_model": "flat-rate",
                                "state": "published",
                                "unit_name": null,
                                "url": "https://api.github.com/marketplace_listing/plans/1313",
                                "yearly_price_in_cents": 11870
                              },
                              "unit_count": null,
                              "updated_at": "2017-11-02T01:12:12Z"
                            },
                            "organization_billing_email": "billing@github.com",
                            "type": "Organization",
                            "url": "https://api.github.com/orgs/github"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Marketplace Purchase",
                        "properties": {
                          "email": { "nullable": true, "type": "string" },
                          "id": { "type": "integer" },
                          "login": { "type": "string" },
                          "marketplace_pending_change": {
                            "nullable": true,
                            "properties": {
                              "effective_date": { "type": "string" },
                              "id": { "type": "integer" },
                              "is_installed": { "type": "boolean" },
                              "plan": {
                                "description": "Marketplace Listing Plan",
                                "properties": {
                                  "accounts_url": {
                                    "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "bullets": {
                                    "example": [
                                      "Up to 25 private repositories",
                                      "11 concurrent builds"
                                    ],
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "description": {
                                    "example": "A professional-grade CI solution",
                                    "type": "string"
                                  },
                                  "has_free_trial": {
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "id": { "example": 1313, "type": "integer" },
                                  "monthly_price_in_cents": {
                                    "example": 1099,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "example": "Pro",
                                    "type": "string"
                                  },
                                  "number": { "example": 3, "type": "integer" },
                                  "price_model": {
                                    "example": "flat-rate",
                                    "type": "string"
                                  },
                                  "state": {
                                    "example": "published",
                                    "type": "string"
                                  },
                                  "unit_name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/marketplace_listing/plans/1313",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "yearly_price_in_cents": {
                                    "example": 11870,
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "url",
                                  "accounts_url",
                                  "id",
                                  "number",
                                  "name",
                                  "description",
                                  "has_free_trial",
                                  "price_model",
                                  "unit_name",
                                  "monthly_price_in_cents",
                                  "state",
                                  "yearly_price_in_cents",
                                  "bullets"
                                ],
                                "title": "Marketplace Listing Plan",
                                "type": "object"
                              },
                              "unit_count": {
                                "nullable": true,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "marketplace_purchase": {
                            "properties": {
                              "billing_cycle": { "type": "string" },
                              "free_trial_ends_on": {
                                "nullable": true,
                                "type": "string"
                              },
                              "is_installed": { "type": "boolean" },
                              "next_billing_date": {
                                "nullable": true,
                                "type": "string"
                              },
                              "on_free_trial": { "type": "boolean" },
                              "plan": {
                                "description": "Marketplace Listing Plan",
                                "properties": {
                                  "accounts_url": {
                                    "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "bullets": {
                                    "example": [
                                      "Up to 25 private repositories",
                                      "11 concurrent builds"
                                    ],
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "description": {
                                    "example": "A professional-grade CI solution",
                                    "type": "string"
                                  },
                                  "has_free_trial": {
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "id": { "example": 1313, "type": "integer" },
                                  "monthly_price_in_cents": {
                                    "example": 1099,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "example": "Pro",
                                    "type": "string"
                                  },
                                  "number": { "example": 3, "type": "integer" },
                                  "price_model": {
                                    "example": "flat-rate",
                                    "type": "string"
                                  },
                                  "state": {
                                    "example": "published",
                                    "type": "string"
                                  },
                                  "unit_name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/marketplace_listing/plans/1313",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "yearly_price_in_cents": {
                                    "example": 11870,
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "url",
                                  "accounts_url",
                                  "id",
                                  "number",
                                  "name",
                                  "description",
                                  "has_free_trial",
                                  "price_model",
                                  "unit_name",
                                  "monthly_price_in_cents",
                                  "state",
                                  "yearly_price_in_cents",
                                  "bullets"
                                ],
                                "title": "Marketplace Listing Plan",
                                "type": "object"
                              },
                              "unit_count": {
                                "nullable": true,
                                "type": "integer"
                              },
                              "updated_at": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "organization_billing_email": { "type": "string" },
                          "type": { "type": "string" },
                          "url": { "type": "string" }
                        },
                        "required": [
                          "url",
                          "id",
                          "type",
                          "login",
                          "marketplace_purchase"
                        ],
                        "title": "Marketplace Purchase",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "List accounts for a plan",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "marketplace"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/marketplace_listing/stubbed/accounts/{account_id}",
        {
          "get": {
            "deprecated": null,
            "description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#get-a-subscription-plan-for-an-account-stubbed"
            },
            "operationId": "apps/get-subscription-plan-for-account-stubbed",
            "parameters": [
              {
                "description": "account_id parameter",
                "in": "path",
                "name": "account_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "email": "billing@github.com",
                          "id": 4,
                          "login": "github",
                          "marketplace_pending_change": {
                            "effective_date": "2017-11-11T00:00:00Z",
                            "id": 77,
                            "plan": {
                              "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                              "bullets": [
                                "Up to 10 private repositories",
                                "3 concurrent builds"
                              ],
                              "description": "A professional-grade CI solution",
                              "has_free_trial": true,
                              "id": 1111,
                              "monthly_price_in_cents": 699,
                              "name": "Startup",
                              "number": 2,
                              "price_model": "flat-rate",
                              "state": "published",
                              "unit_name": null,
                              "url": "https://api.github.com/marketplace_listing/plans/1111",
                              "yearly_price_in_cents": 7870
                            },
                            "unit_count": null
                          },
                          "marketplace_purchase": {
                            "billing_cycle": "monthly",
                            "free_trial_ends_on": "2017-11-11T00:00:00Z",
                            "next_billing_date": "2017-11-11T00:00:00Z",
                            "on_free_trial": true,
                            "plan": {
                              "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                              "bullets": [
                                "Up to 25 private repositories",
                                "11 concurrent builds"
                              ],
                              "description": "A professional-grade CI solution",
                              "has_free_trial": true,
                              "id": 1313,
                              "monthly_price_in_cents": 1099,
                              "name": "Pro",
                              "number": 3,
                              "price_model": "flat-rate",
                              "state": "published",
                              "unit_name": null,
                              "url": "https://api.github.com/marketplace_listing/plans/1313",
                              "yearly_price_in_cents": 11870
                            },
                            "unit_count": null,
                            "updated_at": "2017-11-02T01:12:12Z"
                          },
                          "organization_billing_email": "billing@github.com",
                          "type": "Organization",
                          "url": "https://api.github.com/orgs/github"
                        }
                      }
                    },
                    "schema": {
                      "description": "Marketplace Purchase",
                      "properties": {
                        "email": { "nullable": true, "type": "string" },
                        "id": { "type": "integer" },
                        "login": { "type": "string" },
                        "marketplace_pending_change": {
                          "nullable": true,
                          "properties": {
                            "effective_date": { "type": "string" },
                            "id": { "type": "integer" },
                            "is_installed": { "type": "boolean" },
                            "plan": {
                              "description": "Marketplace Listing Plan",
                              "properties": {
                                "accounts_url": {
                                  "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "bullets": {
                                  "example": [
                                    "Up to 25 private repositories",
                                    "11 concurrent builds"
                                  ],
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "description": {
                                  "example": "A professional-grade CI solution",
                                  "type": "string"
                                },
                                "has_free_trial": {
                                  "example": true,
                                  "type": "boolean"
                                },
                                "id": { "example": 1313, "type": "integer" },
                                "monthly_price_in_cents": {
                                  "example": 1099,
                                  "type": "integer"
                                },
                                "name": { "example": "Pro", "type": "string" },
                                "number": { "example": 3, "type": "integer" },
                                "price_model": {
                                  "example": "flat-rate",
                                  "type": "string"
                                },
                                "state": {
                                  "example": "published",
                                  "type": "string"
                                },
                                "unit_name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/marketplace_listing/plans/1313",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "yearly_price_in_cents": {
                                  "example": 11870,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "url",
                                "accounts_url",
                                "id",
                                "number",
                                "name",
                                "description",
                                "has_free_trial",
                                "price_model",
                                "unit_name",
                                "monthly_price_in_cents",
                                "state",
                                "yearly_price_in_cents",
                                "bullets"
                              ],
                              "title": "Marketplace Listing Plan",
                              "type": "object"
                            },
                            "unit_count": {
                              "nullable": true,
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "marketplace_purchase": {
                          "properties": {
                            "billing_cycle": { "type": "string" },
                            "free_trial_ends_on": {
                              "nullable": true,
                              "type": "string"
                            },
                            "is_installed": { "type": "boolean" },
                            "next_billing_date": {
                              "nullable": true,
                              "type": "string"
                            },
                            "on_free_trial": { "type": "boolean" },
                            "plan": {
                              "description": "Marketplace Listing Plan",
                              "properties": {
                                "accounts_url": {
                                  "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "bullets": {
                                  "example": [
                                    "Up to 25 private repositories",
                                    "11 concurrent builds"
                                  ],
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "description": {
                                  "example": "A professional-grade CI solution",
                                  "type": "string"
                                },
                                "has_free_trial": {
                                  "example": true,
                                  "type": "boolean"
                                },
                                "id": { "example": 1313, "type": "integer" },
                                "monthly_price_in_cents": {
                                  "example": 1099,
                                  "type": "integer"
                                },
                                "name": { "example": "Pro", "type": "string" },
                                "number": { "example": 3, "type": "integer" },
                                "price_model": {
                                  "example": "flat-rate",
                                  "type": "string"
                                },
                                "state": {
                                  "example": "published",
                                  "type": "string"
                                },
                                "unit_name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/marketplace_listing/plans/1313",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "yearly_price_in_cents": {
                                  "example": 11870,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "url",
                                "accounts_url",
                                "id",
                                "number",
                                "name",
                                "description",
                                "has_free_trial",
                                "price_model",
                                "unit_name",
                                "monthly_price_in_cents",
                                "state",
                                "yearly_price_in_cents",
                                "bullets"
                              ],
                              "title": "Marketplace Listing Plan",
                              "type": "object"
                            },
                            "unit_count": {
                              "nullable": true,
                              "type": "integer"
                            },
                            "updated_at": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "organization_billing_email": { "type": "string" },
                        "type": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "required": [
                        "url",
                        "id",
                        "type",
                        "login",
                        "marketplace_purchase"
                      ],
                      "title": "Marketplace Purchase",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "404": {
                "description": "Not Found when the account has not purchased the listing"
              }
            },
            "summary": "Get a subscription plan for an account (stubbed)",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "marketplace"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/marketplace_listing/stubbed/plans",
        {
          "get": {
            "deprecated": null,
            "description": "Lists all plans that are part of your GitHub Marketplace listing.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#list-plans-stubbed"
            },
            "operationId": "apps/list-plans-stubbed",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                            "bullets": [
                              "Up to 25 private repositories",
                              "11 concurrent builds"
                            ],
                            "description": "A professional-grade CI solution",
                            "has_free_trial": true,
                            "id": 1313,
                            "monthly_price_in_cents": 1099,
                            "name": "Pro",
                            "number": 3,
                            "price_model": "flat-rate",
                            "state": "published",
                            "unit_name": null,
                            "url": "https://api.github.com/marketplace_listing/plans/1313",
                            "yearly_price_in_cents": 11870
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Marketplace Listing Plan",
                        "properties": {
                          "accounts_url": {
                            "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                            "format": "uri",
                            "type": "string"
                          },
                          "bullets": {
                            "example": [
                              "Up to 25 private repositories",
                              "11 concurrent builds"
                            ],
                            "items": { "type": "string" },
                            "type": "array"
                          },
                          "description": {
                            "example": "A professional-grade CI solution",
                            "type": "string"
                          },
                          "has_free_trial": {
                            "example": true,
                            "type": "boolean"
                          },
                          "id": { "example": 1313, "type": "integer" },
                          "monthly_price_in_cents": {
                            "example": 1099,
                            "type": "integer"
                          },
                          "name": { "example": "Pro", "type": "string" },
                          "number": { "example": 3, "type": "integer" },
                          "price_model": {
                            "example": "flat-rate",
                            "type": "string"
                          },
                          "state": { "example": "published", "type": "string" },
                          "unit_name": { "nullable": true, "type": "string" },
                          "url": {
                            "example": "https://api.github.com/marketplace_listing/plans/1313",
                            "format": "uri",
                            "type": "string"
                          },
                          "yearly_price_in_cents": {
                            "example": 11870,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "url",
                          "accounts_url",
                          "id",
                          "number",
                          "name",
                          "description",
                          "has_free_trial",
                          "price_model",
                          "unit_name",
                          "monthly_price_in_cents",
                          "state",
                          "yearly_price_in_cents",
                          "bullets"
                        ],
                        "title": "Marketplace Listing Plan",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              }
            },
            "summary": "List plans (stubbed)",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "marketplace"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/marketplace_listing/stubbed/plans/{plan_id}/accounts",
        {
          "get": {
            "deprecated": null,
            "description": "Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://docs.github.com/rest/overview/other-authentication-methods#basic-authentication) with their client ID and client secret to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#list-accounts-for-a-plan-stubbed"
            },
            "operationId": "apps/list-accounts-for-plan-stubbed",
            "parameters": [
              {
                "description": "plan_id parameter",
                "in": "path",
                "name": "plan_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to).",
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": ["created", "updated"],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter.",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": { "enum": ["asc", "desc"], "type": "string" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "id": 4,
                            "login": "github",
                            "marketplace_pending_change": {
                              "effective_date": "2017-11-11T00:00:00Z",
                              "id": 77,
                              "plan": {
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1111/accounts",
                                "bullets": [
                                  "Up to 10 private repositories",
                                  "3 concurrent builds"
                                ],
                                "description": "A professional-grade CI solution",
                                "has_free_trial": true,
                                "id": 1111,
                                "monthly_price_in_cents": 699,
                                "name": "Startup",
                                "number": 2,
                                "price_model": "flat-rate",
                                "state": "published",
                                "unit_name": null,
                                "url": "https://api.github.com/marketplace_listing/plans/1111",
                                "yearly_price_in_cents": 7870
                              },
                              "unit_count": null
                            },
                            "marketplace_purchase": {
                              "billing_cycle": "monthly",
                              "free_trial_ends_on": "2017-11-11T00:00:00Z",
                              "next_billing_date": "2017-11-11T00:00:00Z",
                              "on_free_trial": true,
                              "plan": {
                                "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                "bullets": [
                                  "Up to 25 private repositories",
                                  "11 concurrent builds"
                                ],
                                "description": "A professional-grade CI solution",
                                "has_free_trial": true,
                                "id": 1313,
                                "monthly_price_in_cents": 1099,
                                "name": "Pro",
                                "number": 3,
                                "price_model": "flat-rate",
                                "state": "published",
                                "unit_name": null,
                                "url": "https://api.github.com/marketplace_listing/plans/1313",
                                "yearly_price_in_cents": 11870
                              },
                              "unit_count": null,
                              "updated_at": "2017-11-02T01:12:12Z"
                            },
                            "organization_billing_email": "billing@github.com",
                            "type": "Organization",
                            "url": "https://api.github.com/orgs/github"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Marketplace Purchase",
                        "properties": {
                          "email": { "nullable": true, "type": "string" },
                          "id": { "type": "integer" },
                          "login": { "type": "string" },
                          "marketplace_pending_change": {
                            "nullable": true,
                            "properties": {
                              "effective_date": { "type": "string" },
                              "id": { "type": "integer" },
                              "is_installed": { "type": "boolean" },
                              "plan": {
                                "description": "Marketplace Listing Plan",
                                "properties": {
                                  "accounts_url": {
                                    "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "bullets": {
                                    "example": [
                                      "Up to 25 private repositories",
                                      "11 concurrent builds"
                                    ],
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "description": {
                                    "example": "A professional-grade CI solution",
                                    "type": "string"
                                  },
                                  "has_free_trial": {
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "id": { "example": 1313, "type": "integer" },
                                  "monthly_price_in_cents": {
                                    "example": 1099,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "example": "Pro",
                                    "type": "string"
                                  },
                                  "number": { "example": 3, "type": "integer" },
                                  "price_model": {
                                    "example": "flat-rate",
                                    "type": "string"
                                  },
                                  "state": {
                                    "example": "published",
                                    "type": "string"
                                  },
                                  "unit_name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/marketplace_listing/plans/1313",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "yearly_price_in_cents": {
                                    "example": 11870,
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "url",
                                  "accounts_url",
                                  "id",
                                  "number",
                                  "name",
                                  "description",
                                  "has_free_trial",
                                  "price_model",
                                  "unit_name",
                                  "monthly_price_in_cents",
                                  "state",
                                  "yearly_price_in_cents",
                                  "bullets"
                                ],
                                "title": "Marketplace Listing Plan",
                                "type": "object"
                              },
                              "unit_count": {
                                "nullable": true,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "marketplace_purchase": {
                            "properties": {
                              "billing_cycle": { "type": "string" },
                              "free_trial_ends_on": {
                                "nullable": true,
                                "type": "string"
                              },
                              "is_installed": { "type": "boolean" },
                              "next_billing_date": {
                                "nullable": true,
                                "type": "string"
                              },
                              "on_free_trial": { "type": "boolean" },
                              "plan": {
                                "description": "Marketplace Listing Plan",
                                "properties": {
                                  "accounts_url": {
                                    "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "bullets": {
                                    "example": [
                                      "Up to 25 private repositories",
                                      "11 concurrent builds"
                                    ],
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "description": {
                                    "example": "A professional-grade CI solution",
                                    "type": "string"
                                  },
                                  "has_free_trial": {
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "id": { "example": 1313, "type": "integer" },
                                  "monthly_price_in_cents": {
                                    "example": 1099,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "example": "Pro",
                                    "type": "string"
                                  },
                                  "number": { "example": 3, "type": "integer" },
                                  "price_model": {
                                    "example": "flat-rate",
                                    "type": "string"
                                  },
                                  "state": {
                                    "example": "published",
                                    "type": "string"
                                  },
                                  "unit_name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/marketplace_listing/plans/1313",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "yearly_price_in_cents": {
                                    "example": 11870,
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "url",
                                  "accounts_url",
                                  "id",
                                  "number",
                                  "name",
                                  "description",
                                  "has_free_trial",
                                  "price_model",
                                  "unit_name",
                                  "monthly_price_in_cents",
                                  "state",
                                  "yearly_price_in_cents",
                                  "bullets"
                                ],
                                "title": "Marketplace Listing Plan",
                                "type": "object"
                              },
                              "unit_count": {
                                "nullable": true,
                                "type": "integer"
                              },
                              "updated_at": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "organization_billing_email": { "type": "string" },
                          "type": { "type": "string" },
                          "url": { "type": "string" }
                        },
                        "required": [
                          "url",
                          "id",
                          "type",
                          "login",
                          "marketplace_purchase"
                        ],
                        "title": "Marketplace Purchase",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              }
            },
            "summary": "List accounts for a plan (stubbed)",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "marketplace"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/blocks",
        {
          "get": {
            "deprecated": null,
            "description": "List the users blocked by an organization.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#list-users-blocked-by-an-organization"
            },
            "operationId": "orgs/list-blocked-users",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Simple User",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": { "nullable": true, "type": "string" },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": { "example": 1, "type": "integer" },
                          "login": { "example": "octocat", "type": "string" },
                          "name": { "nullable": true, "type": "string" },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": { "type": "boolean" },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": { "example": "User", "type": "string" },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "415": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "type": "object"
                    }
                  }
                },
                "description": "Preview header missing"
              }
            },
            "summary": "List users blocked by an organization",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "blocking"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/blocks/{username}",
        {
          "delete": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#unblock-a-user-from-an-organization"
            },
            "operationId": "orgs/unblock-user",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Unblock a user from an organization",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "blocking"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#check-if-a-user-is-blocked-by-an-organization"
            },
            "operationId": "orgs/check-blocked-user",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "If the user is blocked:" },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "If the user is not blocked:"
              }
            },
            "summary": "Check if a user is blocked by an organization",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "blocking"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#block-a-user-from-an-organization"
            },
            "operationId": "orgs/block-user",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Block a user from an organization",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "blocking"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/credential-authorizations",
        {
          "get": {
            "deprecated": null,
            "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://help.github.com/en/articles/about-authentication-with-saml-single-sign-on).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#list-saml-sso-authorizations-for-an-organization"
            },
            "operationId": "orgs/list-saml-sso-authorizations",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "credential_authorized_at": "2011-01-26T19:06:43Z",
                            "credential_id": 161195,
                            "credential_type": "personal access token",
                            "login": "octocat",
                            "scopes": ["user", "repo"],
                            "token_last_eight": "71c3fc11"
                          },
                          {
                            "credential_authorized_at": "2019-03-29T19:06:43Z",
                            "credential_id": 161196,
                            "credential_type": "personal access token",
                            "login": "hubot",
                            "scopes": ["repo"],
                            "token_last_eight": "Ae178B4a"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Credential Authorization",
                        "properties": {
                          "authorized_credential_id": {
                            "example": 12345678,
                            "nullable": true,
                            "type": "integer"
                          },
                          "authorized_credential_note": {
                            "description": "The note given to the token. This will only be present when the credential is a token.",
                            "example": "my token",
                            "nullable": true,
                            "type": "string"
                          },
                          "authorized_credential_title": {
                            "description": "The title given to the ssh key. This will only be present when the credential is an ssh key.",
                            "example": "my ssh key",
                            "nullable": true,
                            "type": "string"
                          },
                          "credential_accessed_at": {
                            "description": "Date when the credential was last accessed. May be null if it was never accessed",
                            "example": "2011-01-26T19:06:43Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "credential_authorized_at": {
                            "description": "Date when the credential was authorized for use.",
                            "example": "2011-01-26T19:06:43Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "credential_id": {
                            "description": "Unique identifier for the credential.",
                            "example": 1,
                            "type": "integer"
                          },
                          "credential_type": {
                            "description": "Human-readable description of the credential type.",
                            "example": "SSH Key",
                            "type": "string"
                          },
                          "fingerprint": {
                            "description": "Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key.",
                            "example": "jklmnop12345678",
                            "type": "string"
                          },
                          "login": {
                            "description": "User login that owns the underlying credential.",
                            "example": "monalisa",
                            "type": "string"
                          },
                          "scopes": {
                            "description": "List of oauth scopes the token has been granted.",
                            "example": ["user", "repo"],
                            "items": { "type": "string" },
                            "type": "array"
                          },
                          "token_last_eight": {
                            "description": "Last eight characters of the credential. Only included in responses with credential_type of personal access token.",
                            "example": "12345678",
                            "type": "string"
                          }
                        },
                        "required": [
                          "login",
                          "credential_id",
                          "credential_type",
                          "credential_authorized_at"
                        ],
                        "title": "Credential Authorization",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List SAML SSO authorizations for an organization",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/credential-authorizations/{credential_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#remove-a-saml-sso-authorization-for-an-organization"
            },
            "operationId": "orgs/remove-saml-sso-authorization",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "credential_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Remove a SAML SSO authorization for an organization",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/failed_invitations",
        {
          "get": {
            "deprecated": null,
            "description": "The return hash contains `failed_at` and `failed_reason` fields which represent the time at which the invitation failed and the reason for the failure.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#list-failed-organization-invitations"
            },
            "operationId": "orgs/list-failed-invitations",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2016-11-30T06:46:10-08:00",
                            "email": "octocat@github.com",
                            "failed_at": "",
                            "failed_reason": "",
                            "id": 1,
                            "invitation_teams_url": "https://api.github.com/organizations/2/invitations/1/teams",
                            "inviter": {
                              "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                              "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                              "followers_url": "https://api.github.com/users/other_user/followers",
                              "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                              "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/other_user",
                              "id": 1,
                              "login": "other_user",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/other_user/orgs",
                              "received_events_url": "https://api.github.com/users/other_user/received_events",
                              "repos_url": "https://api.github.com/users/other_user/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/other_user"
                            },
                            "login": "monalisa",
                            "node_id": "MDQ6VXNlcjE=",
                            "role": "direct_member",
                            "team_count": 2
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Organization Invitation",
                        "properties": {
                          "created_at": { "type": "string" },
                          "email": { "nullable": true, "type": "string" },
                          "failed_at": { "nullable": true, "type": "string" },
                          "failed_reason": {
                            "nullable": true,
                            "type": "string"
                          },
                          "id": { "type": "integer" },
                          "invitation_teams_url": {
                            "example": "\"https://api.github.com/organizations/16/invitations/1/teams\"",
                            "type": "string"
                          },
                          "inviter": {
                            "description": "Simple User",
                            "nullable": true,
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": { "nullable": true, "type": "string" },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": { "example": 1, "type": "integer" },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": { "type": "boolean" },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": { "example": "User", "type": "string" },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "login": { "nullable": true, "type": "string" },
                          "node_id": {
                            "example": "\"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x\"",
                            "type": "string"
                          },
                          "role": { "type": "string" },
                          "team_count": { "type": "integer" }
                        },
                        "required": [
                          "id",
                          "login",
                          "email",
                          "role",
                          "created_at",
                          "inviter",
                          "team_count",
                          "invitation_teams_url",
                          "node_id"
                        ],
                        "title": "Organization Invitation",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "List failed organization invitations",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/hooks/{hook_id}/deliveries",
        {
          "get": {
            "deprecated": null,
            "description": "Returns a list of webhook deliveries for a webhook configured in an organization.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#list-deliveries-for-an-organization-webhook"
            },
            "operationId": "orgs/list-webhook-deliveries",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for the next and previous page cursors.",
                "in": "query",
                "name": "cursor",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "action": "opened",
                            "delivered_at": "2019-06-03T00:57:16Z",
                            "duration": 0.27,
                            "event": "issues",
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "id": 12345678,
                            "installation_id": 123,
                            "redelivery": false,
                            "repository_id": 456,
                            "status": "OK",
                            "status_code": 200
                          },
                          {
                            "action": "opened",
                            "delivered_at": "2019-06-04T00:57:16Z",
                            "duration": 0.28,
                            "event": "issues",
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "id": 123456789,
                            "installation_id": 123,
                            "redelivery": true,
                            "repository_id": 456,
                            "status": "OK",
                            "status_code": 200
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Delivery made by a webhook, without request and response information.",
                        "properties": {
                          "action": {
                            "description": "The type of activity for the event that triggered the delivery.",
                            "example": "opened",
                            "nullable": true,
                            "type": "string"
                          },
                          "delivered_at": {
                            "description": "Time when the webhook delivery occurred.",
                            "example": "2021-05-12T20:33:44Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Time spent delivering.",
                            "example": 0.03,
                            "type": "number"
                          },
                          "event": {
                            "description": "The event that triggered the delivery.",
                            "example": "issues",
                            "type": "string"
                          },
                          "guid": {
                            "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
                            "example": "58474f00-b361-11eb-836d-0e4f3503ccbe",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the webhook delivery.",
                            "example": 42,
                            "type": "integer"
                          },
                          "installation_id": {
                            "description": "The id of the GitHub App installation associated with this event.",
                            "example": 123,
                            "nullable": true,
                            "type": "integer"
                          },
                          "redelivery": {
                            "description": "Whether the webhook delivery is a redelivery.",
                            "example": false,
                            "type": "boolean"
                          },
                          "repository_id": {
                            "description": "The id of the repository associated with this event.",
                            "example": 123,
                            "nullable": true,
                            "type": "integer"
                          },
                          "status": {
                            "description": "Describes the response returned after attempting the delivery.",
                            "example": "failed to connect",
                            "type": "string"
                          },
                          "status_code": {
                            "description": "Status code received when delivery was made.",
                            "example": 502,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "guid",
                          "delivered_at",
                          "redelivery",
                          "duration",
                          "status",
                          "status_code",
                          "event",
                          "action",
                          "installation_id",
                          "repository_id"
                        ],
                        "title": "Simple webhook delivery",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "List deliveries for an organization webhook",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}",
        {
          "get": {
            "deprecated": null,
            "description": "Returns a delivery for a webhook configured in an organization.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#get-a-webhook-delivery-for-an-organization-webhook"
            },
            "operationId": "orgs/get-webhook-delivery",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "delivery_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "action": "opened",
                          "delivered_at": "2019-06-03T00:57:16Z",
                          "duration": 0.27,
                          "event": "issues",
                          "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "id": 12345678,
                          "installation_id": 123,
                          "redelivery": false,
                          "repository_id": 456,
                          "request": {
                            "headers": {
                              "Accept": "*/*",
                              "User-Agent": "GitHub-Hookshot/b8c71d8",
                              "X-GitHub-Delivery": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                              "X-GitHub-Event": "issues",
                              "X-GitHub-Hook-ID": "42",
                              "X-GitHub-Hook-Installation-Target-ID": "123",
                              "X-GitHub-Hook-Installation-Target-Type": "repository",
                              "X-Hub-Signature": "sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d",
                              "X-Hub-Signature-256": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
                              "content-type": "application/json"
                            },
                            "payload": {
                              "action": "opened",
                              "issue": { "body": "foo" },
                              "repository": { "id": 123 }
                            }
                          },
                          "response": {
                            "headers": {
                              "Content-Type": "text/html;charset=utf-8"
                            },
                            "payload": "ok"
                          },
                          "status": "OK",
                          "status_code": 200,
                          "url": "https://www.example.com"
                        }
                      }
                    },
                    "schema": {
                      "description": "Delivery made by a webhook.",
                      "properties": {
                        "action": {
                          "description": "The type of activity for the event that triggered the delivery.",
                          "example": "opened",
                          "nullable": true,
                          "type": "string"
                        },
                        "delivered_at": {
                          "description": "Time when the delivery was delivered.",
                          "example": "2021-05-12T20:33:44Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Time spent delivering.",
                          "example": 0.03,
                          "type": "number"
                        },
                        "event": {
                          "description": "The event that triggered the delivery.",
                          "example": "issues",
                          "type": "string"
                        },
                        "guid": {
                          "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
                          "example": "58474f00-b361-11eb-836d-0e4f3503ccbe",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the delivery.",
                          "example": 42,
                          "type": "integer"
                        },
                        "installation_id": {
                          "description": "The id of the GitHub App installation associated with this event.",
                          "example": 123,
                          "nullable": true,
                          "type": "integer"
                        },
                        "redelivery": {
                          "description": "Whether the delivery is a redelivery.",
                          "example": false,
                          "type": "boolean"
                        },
                        "repository_id": {
                          "description": "The id of the repository associated with this event.",
                          "example": 123,
                          "nullable": true,
                          "type": "integer"
                        },
                        "request": {
                          "properties": {
                            "headers": {
                              "additionalProperties": true,
                              "description": "The request headers sent with the webhook delivery.",
                              "nullable": true,
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "The webhook payload.",
                              "nullable": true,
                              "type": "object"
                            }
                          },
                          "required": ["headers", "payload"],
                          "type": "object"
                        },
                        "response": {
                          "properties": {
                            "headers": {
                              "additionalProperties": true,
                              "description": "The response headers received when the delivery was made.",
                              "nullable": true,
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "The response payload received.",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": ["headers", "payload"],
                          "type": "object"
                        },
                        "status": {
                          "description": "Description of the status of the attempted delivery",
                          "example": "failed to connect",
                          "type": "string"
                        },
                        "status_code": {
                          "description": "Status code received when delivery was made.",
                          "example": 502,
                          "type": "integer"
                        },
                        "url": {
                          "description": "The URL target of the delivery.",
                          "example": "https://www.example.com",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "guid",
                        "delivered_at",
                        "redelivery",
                        "duration",
                        "status",
                        "status_code",
                        "event",
                        "action",
                        "installation_id",
                        "repository_id",
                        "request",
                        "response"
                      ],
                      "title": "Webhook delivery",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Get a webhook delivery for an organization webhook",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
        {
          "post": {
            "deprecated": null,
            "description": "Redeliver a delivery for a webhook configured in an organization.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#redeliver-a-delivery-for-an-organization-webhook"
            },
            "operationId": "orgs/redeliver-webhook-delivery",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "delivery_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "202": {
                "content": {
                  "application/json": { "schema": { "type": "object" } }
                },
                "description": "Accepted"
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Redeliver a delivery for an organization webhook",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/interaction-limits",
        {
          "delete": {
            "deprecated": null,
            "description": "Removes all interaction restrictions from public repositories in the given organization. You must be an organization owner to remove restrictions.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-an-organization"
            },
            "operationId": "interactions/remove-restrictions-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Remove interaction restrictions for an organization",
            "tags": ["interactions"],
            "x-github": {
              "category": "interactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Shows which type of GitHub user can interact with this organization and when the restriction expires. If there is no restrictions, you will see an empty response.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-an-organization"
            },
            "operationId": "interactions/get-restrictions-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2018-08-17T04:18:39Z",
                          "limit": "collaborators_only",
                          "origin": "organization"
                        }
                      }
                    },
                    "schema": {
                      "anyOf": [
                        {
                          "description": "Interaction limit settings.",
                          "properties": {
                            "expires_at": {
                              "example": "2018-08-17T04:18:39Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "limit": {
                              "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
                              "enum": [
                                "existing_users",
                                "contributors_only",
                                "collaborators_only"
                              ],
                              "example": "collaborators_only",
                              "type": "string"
                            },
                            "origin": {
                              "example": "repository",
                              "type": "string"
                            }
                          },
                          "required": ["limit", "origin", "expires_at"],
                          "title": "Interaction Limits",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object"
                        }
                      ]
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get interaction restrictions for an organization",
            "tags": ["interactions"],
            "x-github": {
              "category": "interactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "Temporarily restricts interactions to a certain type of GitHub user in any public repository in the given organization. You must be an organization owner to set these restrictions. Setting the interaction limit at the organization level will overwrite any interaction limits that are set for individual repositories owned by the organization.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-an-organization"
            },
            "operationId": "interactions/set-restrictions-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Limit interactions to a specific type of user for a specified duration",
                    "properties": {
                      "expiry": {
                        "description": "The duration of the interaction restriction. Can be one of: `one_day`, `three_days`, `one_week`, `one_month`, `six_months`. Default: `one_day`.",
                        "enum": [
                          "one_day",
                          "three_days",
                          "one_week",
                          "one_month",
                          "six_months"
                        ],
                        "example": "one_month",
                        "type": "string"
                      },
                      "limit": {
                        "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
                        "enum": [
                          "existing_users",
                          "contributors_only",
                          "collaborators_only"
                        ],
                        "example": "collaborators_only",
                        "type": "string"
                      }
                    },
                    "required": ["limit"],
                    "title": "Interaction Restrictions",
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2018-08-17T04:18:39Z",
                          "limit": "collaborators_only",
                          "origin": "organization"
                        }
                      }
                    },
                    "schema": {
                      "description": "Interaction limit settings.",
                      "properties": {
                        "expires_at": {
                          "example": "2018-08-17T04:18:39Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "limit": {
                          "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
                          "enum": [
                            "existing_users",
                            "contributors_only",
                            "collaborators_only"
                          ],
                          "example": "collaborators_only",
                          "type": "string"
                        },
                        "origin": { "example": "repository", "type": "string" }
                      },
                      "required": ["limit", "origin", "expires_at"],
                      "title": "Interaction Limits",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Set interaction restrictions for an organization",
            "tags": ["interactions"],
            "x-github": {
              "category": "interactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/invitations",
        {
          "get": {
            "deprecated": null,
            "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#list-pending-organization-invitations"
            },
            "operationId": "orgs/list-pending-invitations",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2016-11-30T06:46:10-08:00",
                            "email": "octocat@github.com",
                            "failed_at": "",
                            "failed_reason": "",
                            "id": 1,
                            "invitation_teams_url": "https://api.github.com/organizations/2/invitations/1/teams",
                            "inviter": {
                              "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                              "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                              "followers_url": "https://api.github.com/users/other_user/followers",
                              "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                              "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/other_user",
                              "id": 1,
                              "login": "other_user",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/other_user/orgs",
                              "received_events_url": "https://api.github.com/users/other_user/received_events",
                              "repos_url": "https://api.github.com/users/other_user/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/other_user"
                            },
                            "login": "monalisa",
                            "node_id": "MDQ6VXNlcjE=",
                            "role": "direct_member",
                            "team_count": 2
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Organization Invitation",
                        "properties": {
                          "created_at": { "type": "string" },
                          "email": { "nullable": true, "type": "string" },
                          "failed_at": { "nullable": true, "type": "string" },
                          "failed_reason": {
                            "nullable": true,
                            "type": "string"
                          },
                          "id": { "type": "integer" },
                          "invitation_teams_url": {
                            "example": "\"https://api.github.com/organizations/16/invitations/1/teams\"",
                            "type": "string"
                          },
                          "inviter": {
                            "description": "Simple User",
                            "nullable": true,
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": { "nullable": true, "type": "string" },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": { "example": 1, "type": "integer" },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": { "type": "boolean" },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": { "example": "User", "type": "string" },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "login": { "nullable": true, "type": "string" },
                          "node_id": {
                            "example": "\"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x\"",
                            "type": "string"
                          },
                          "role": { "type": "string" },
                          "team_count": { "type": "integer" }
                        },
                        "required": [
                          "id",
                          "login",
                          "email",
                          "role",
                          "created_at",
                          "inviter",
                          "team_count",
                          "invitation_teams_url",
                          "node_id"
                        ],
                        "title": "Organization Invitation",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "List pending organization invitations",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#create-an-organization-invitation"
            },
            "operationId": "orgs/create-invitation",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "email": "octocat@github.com",
                    "role": "direct_member",
                    "team_ids": [12, 26]
                  },
                  "schema": {
                    "properties": {
                      "email": {
                        "description": "**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user.",
                        "type": "string"
                      },
                      "invitee_id": {
                        "description": "**Required unless you provide `email`**. GitHub user ID for the person you are inviting.",
                        "type": "integer"
                      },
                      "role": {
                        "default": "direct_member",
                        "description": "Specify role for new member. Can be one of:  \n\\* `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  \n\\* `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  \n\\* `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization.",
                        "enum": ["admin", "direct_member", "billing_manager"],
                        "type": "string"
                      },
                      "team_ids": {
                        "description": "Specify IDs for the teams you want to invite new members to.",
                        "items": { "type": "integer" },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2016-11-30T06:46:10-08:00",
                          "email": "octocat@github.com",
                          "id": 1,
                          "invitation_teams_url": "https://api.github.com/organizations/2/invitations/1/teams",
                          "inviter": {
                            "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                            "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                            "followers_url": "https://api.github.com/users/other_user/followers",
                            "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                            "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/other_user",
                            "id": 1,
                            "login": "other_user",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/other_user/orgs",
                            "received_events_url": "https://api.github.com/users/other_user/received_events",
                            "repos_url": "https://api.github.com/users/other_user/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/other_user"
                          },
                          "login": "monalisa",
                          "node_id": "MDQ6VXNlcjE=",
                          "role": "direct_member",
                          "team_count": 2
                        }
                      }
                    },
                    "schema": {
                      "description": "Organization Invitation",
                      "properties": {
                        "created_at": { "type": "string" },
                        "email": { "nullable": true, "type": "string" },
                        "failed_at": { "nullable": true, "type": "string" },
                        "failed_reason": { "nullable": true, "type": "string" },
                        "id": { "type": "integer" },
                        "invitation_teams_url": {
                          "example": "\"https://api.github.com/organizations/16/invitations/1/teams\"",
                          "type": "string"
                        },
                        "inviter": {
                          "description": "Simple User",
                          "nullable": true,
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": { "nullable": true, "type": "string" },
                            "events_url": {
                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                              "type": "string"
                            },
                            "followers_url": {
                              "example": "https://api.github.com/users/octocat/followers",
                              "format": "uri",
                              "type": "string"
                            },
                            "following_url": {
                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                              "type": "string"
                            },
                            "gists_url": {
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "type": "string"
                            },
                            "gravatar_id": {
                              "example": "41d064eb2195891e12d0413f63227ea7",
                              "nullable": true,
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": { "example": 1, "type": "integer" },
                            "login": { "example": "octocat", "type": "string" },
                            "name": { "nullable": true, "type": "string" },
                            "node_id": {
                              "example": "MDQ6VXNlcjE=",
                              "type": "string"
                            },
                            "organizations_url": {
                              "example": "https://api.github.com/users/octocat/orgs",
                              "format": "uri",
                              "type": "string"
                            },
                            "received_events_url": {
                              "example": "https://api.github.com/users/octocat/received_events",
                              "format": "uri",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "site_admin": { "type": "boolean" },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:55Z\"",
                              "type": "string"
                            },
                            "starred_url": {
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "type": "string"
                            },
                            "subscriptions_url": {
                              "example": "https://api.github.com/users/octocat/subscriptions",
                              "format": "uri",
                              "type": "string"
                            },
                            "type": { "example": "User", "type": "string" },
                            "url": {
                              "example": "https://api.github.com/users/octocat",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "title": "Simple User",
                          "type": "object"
                        },
                        "login": { "nullable": true, "type": "string" },
                        "node_id": {
                          "example": "\"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x\"",
                          "type": "string"
                        },
                        "role": { "type": "string" },
                        "team_count": { "type": "integer" }
                      },
                      "required": [
                        "id",
                        "login",
                        "email",
                        "role",
                        "created_at",
                        "inviter",
                        "team_count",
                        "invitation_teams_url",
                        "node_id"
                      ],
                      "title": "Organization Invitation",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Create an organization invitation",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members",
              "triggersNotification": true
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/invitations/{invitation_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner.\n\nThis endpoint triggers [notifications](https://docs.github.com/en/github/managing-subscriptions-and-notifications-on-github/about-notifications).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#cancel-an-organization-invitation"
            },
            "operationId": "orgs/cancel-invitation",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "invitation_id parameter",
                "in": "path",
                "name": "invitation_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Cancel an organization invitation",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members",
              "triggersNotification": true
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/invitations/{invitation_id}/teams",
        {
          "get": {
            "deprecated": null,
            "description": "List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/orgs#list-organization-invitation-teams"
            },
            "operationId": "orgs/list-invitation-teams",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "invitation_id parameter",
                "in": "path",
                "name": "invitation_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "description": "A great team.",
                            "html_url": "https://github.com/orgs/github/teams/justice-league",
                            "id": 1,
                            "members_url": "https://api.github.com/teams/1/members{/member}",
                            "name": "Justice League",
                            "node_id": "MDQ6VGVhbTE=",
                            "parent": null,
                            "permission": "admin",
                            "privacy": "closed",
                            "repositories_url": "https://api.github.com/teams/1/repos",
                            "slug": "justice-league",
                            "url": "https://api.github.com/teams/1"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Groups of organization members that gives permissions on specified repositories.",
                        "properties": {
                          "description": { "nullable": true, "type": "string" },
                          "html_url": {
                            "example": "https://github.com/orgs/rails/teams/core",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": { "type": "integer" },
                          "members_url": { "type": "string" },
                          "name": { "type": "string" },
                          "node_id": { "type": "string" },
                          "parent": {
                            "allOf": [
                              {
                                "description": "Groups of organization members that gives permissions on specified repositories.",
                                "nullable": true,
                                "properties": {
                                  "description": {
                                    "description": "Description of the team",
                                    "example": "A great team.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/orgs/rails/teams/core",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the team",
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "ldap_dn": {
                                    "description": "Distinguished Name (DN) that team maps to within LDAP environment",
                                    "example": "uid=example,ou=users,dc=github,dc=com",
                                    "type": "string"
                                  },
                                  "members_url": {
                                    "example": "https://api.github.com/organizations/1/team/1/members{/member}",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the team",
                                    "example": "Justice League",
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VGVhbTE=",
                                    "type": "string"
                                  },
                                  "permission": {
                                    "description": "Permission that the team will have for its repositories",
                                    "example": "admin",
                                    "type": "string"
                                  },
                                  "privacy": {
                                    "description": "The level of privacy this team should have",
                                    "example": "closed",
                                    "type": "string"
                                  },
                                  "repositories_url": {
                                    "example": "https://api.github.com/organizations/1/team/1/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "slug": {
                                    "example": "justice-league",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "URL for the team",
                                    "example": "https://api.github.com/organizations/1/team/1",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "node_id",
                                  "url",
                                  "members_url",
                                  "name",
                                  "description",
                                  "permission",
                                  "html_url",
                                  "repositories_url",
                                  "slug"
                                ],
                                "title": "Team Simple",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "permission": { "type": "string" },
                          "permissions": {
                            "properties": {
                              "admin": { "type": "boolean" },
                              "maintain": { "type": "boolean" },
                              "pull": { "type": "boolean" },
                              "push": { "type": "boolean" },
                              "triage": { "type": "boolean" }
                            },
                            "required": [
                              "pull",
                              "triage",
                              "push",
                              "maintain",
                              "admin"
                            ],
                            "type": "object"
                          },
                          "privacy": { "type": "string" },
                          "repositories_url": {
                            "format": "uri",
                            "type": "string"
                          },
                          "slug": { "type": "string" },
                          "url": { "format": "uri", "type": "string" }
                        },
                        "required": [
                          "id",
                          "node_id",
                          "url",
                          "members_url",
                          "name",
                          "description",
                          "permission",
                          "html_url",
                          "repositories_url",
                          "slug",
                          "parent"
                        ],
                        "title": "Team",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "List organization invitation teams",
            "tags": ["orgs"],
            "x-github": {
              "category": "orgs",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/migrations",
        {
          "get": {
            "deprecated": null,
            "description": "Lists the most recent migrations.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#list-organization-migrations"
            },
            "operationId": "migrations/list-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Exclude attributes from the API response to improve performance",
                "in": "query",
                "name": "exclude",
                "required": false,
                "schema": {
                  "items": {
                    "description": "Allowed values that can be passed to the exclude param.",
                    "enum": ["repositories"],
                    "example": "repositories",
                    "type": "string"
                  },
                  "type": "array"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2015-07-06T15:33:38-07:00",
                            "exclude_attachments": false,
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "id": 79,
                            "lock_repositories": true,
                            "node_id": "MDQ6VXNlcjE=",
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/orgs/github/events",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "github",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/orgs/github/repos",
                              "site_admin": true,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/orgs/github"
                            },
                            "repositories": [
                              {
                                "allow_auto_merge": false,
                                "allow_merge_commit": true,
                                "allow_rebase_merge": true,
                                "allow_squash_merge": true,
                                "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "archived": false,
                                "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "clone_url": "https://github.com/octocat/Hello-World.git",
                                "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                                "created_at": "2011-01-26T19:01:12Z",
                                "default_branch": "master",
                                "delete_branch_on_merge": true,
                                "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                                "description": "This your first repo!",
                                "disabled": false,
                                "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                                "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                                "fork": false,
                                "forks": 1,
                                "forks_count": 9,
                                "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                                "full_name": "octocat/Hello-World",
                                "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "git_url": "git:github.com/octocat/Hello-World.git",
                                "has_downloads": true,
                                "has_issues": true,
                                "has_pages": false,
                                "has_projects": true,
                                "has_wiki": true,
                                "homepage": "https://github.com",
                                "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                                "html_url": "https://github.com/octocat/Hello-World",
                                "id": 1296269,
                                "is_template": true,
                                "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "language": null,
                                "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                                "license": {
                                  "html_url": "https://api.github.com/licenses/mit",
                                  "key": "mit",
                                  "name": "MIT License",
                                  "node_id": "MDc6TGljZW5zZW1pdA==",
                                  "spdx_id": "MIT",
                                  "url": "https://api.github.com/licenses/mit"
                                },
                                "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                                "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "mirror_url": "git:git.example.com/octocat/Hello-World",
                                "name": "Hello-World",
                                "network_count": 0,
                                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "open_issues": 1,
                                "open_issues_count": 0,
                                "owner": {
                                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                  "followers_url": "https://api.github.com/users/octocat/followers",
                                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "gravatar_id": "",
                                  "html_url": "https://github.com/octocat",
                                  "id": 1,
                                  "login": "octocat",
                                  "node_id": "MDQ6VXNlcjE=",
                                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                                  "repos_url": "https://api.github.com/users/octocat/repos",
                                  "site_admin": false,
                                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                  "type": "User",
                                  "url": "https://api.github.com/users/octocat"
                                },
                                "permissions": {
                                  "admin": false,
                                  "pull": true,
                                  "push": false
                                },
                                "private": false,
                                "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "pushed_at": "2011-01-26T19:06:43Z",
                                "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "size": 108,
                                "ssh_url": "git@github.com:octocat/Hello-World.git",
                                "stargazers_count": 80,
                                "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "subscribers_count": 42,
                                "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                                "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                                "svn_url": "https://svn.github.com/octocat/Hello-World",
                                "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                                "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                                "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                                "template_repository": null,
                                "topics": [
                                  "octocat",
                                  "atom",
                                  "electron",
                                  "api"
                                ],
                                "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "updated_at": "2011-01-26T19:14:43Z",
                                "url": "https://api.github.com/repos/octocat/Hello-World",
                                "visibility": "public",
                                "watchers": 1,
                                "watchers_count": 80
                              }
                            ],
                            "state": "pending",
                            "updated_at": "2015-07-06T15:33:38-07:00",
                            "url": "https://api.github.com/orgs/octo-org/migrations/79"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "A migration.",
                        "properties": {
                          "archive_url": { "format": "uri", "type": "string" },
                          "created_at": {
                            "example": "2015-07-06T15:33:38-07:00",
                            "format": "date-time",
                            "type": "string"
                          },
                          "exclude": { "items": {}, "type": "array" },
                          "exclude_attachments": { "type": "boolean" },
                          "guid": {
                            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "type": "string"
                          },
                          "id": { "example": 79, "type": "integer" },
                          "lock_repositories": {
                            "example": true,
                            "type": "boolean"
                          },
                          "node_id": { "type": "string" },
                          "owner": {
                            "allOf": [
                              {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "repositories": {
                            "items": {
                              "description": "A git repository",
                              "properties": {
                                "allow_auto_merge": {
                                  "default": false,
                                  "description": "Whether to allow Auto-merge to be used on pull requests.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "allow_merge_commit": {
                                  "default": true,
                                  "description": "Whether to allow merge commits for pull requests.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "allow_rebase_merge": {
                                  "default": true,
                                  "description": "Whether to allow rebase merges for pull requests.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "allow_squash_merge": {
                                  "default": true,
                                  "description": "Whether to allow squash merges for pull requests.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "archive_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                  "type": "string"
                                },
                                "archived": {
                                  "default": false,
                                  "description": "Whether the repository is archived.",
                                  "type": "boolean"
                                },
                                "assignees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                  "type": "string"
                                },
                                "blobs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                  "type": "string"
                                },
                                "branches_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                  "type": "string"
                                },
                                "clone_url": {
                                  "example": "https://github.com/octocat/Hello-World.git",
                                  "type": "string"
                                },
                                "collaborators_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                  "type": "string"
                                },
                                "comments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                  "type": "string"
                                },
                                "commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                  "type": "string"
                                },
                                "compare_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                  "type": "string"
                                },
                                "contents_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                  "type": "string"
                                },
                                "contributors_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "created_at": {
                                  "example": "2011-01-26T19:01:12Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "default_branch": {
                                  "description": "The default branch of the repository.",
                                  "example": "master",
                                  "type": "string"
                                },
                                "delete_branch_on_merge": {
                                  "default": false,
                                  "description": "Whether to delete head branches when pull requests are merged",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "deployments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "description": {
                                  "example": "This your first repo!",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "disabled": {
                                  "description": "Returns whether or not this repository disabled.",
                                  "type": "boolean"
                                },
                                "downloads_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "fork": { "type": "boolean" },
                                "forks": { "type": "integer" },
                                "forks_count": {
                                  "example": 9,
                                  "type": "integer"
                                },
                                "forks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "full_name": {
                                  "example": "octocat/Hello-World",
                                  "type": "string"
                                },
                                "git_commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                  "type": "string"
                                },
                                "git_refs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                  "type": "string"
                                },
                                "git_tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                  "type": "string"
                                },
                                "git_url": {
                                  "example": "git:github.com/octocat/Hello-World.git",
                                  "type": "string"
                                },
                                "has_downloads": {
                                  "default": true,
                                  "description": "Whether downloads are enabled.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "has_issues": {
                                  "default": true,
                                  "description": "Whether issues are enabled.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "has_pages": { "type": "boolean" },
                                "has_projects": {
                                  "default": true,
                                  "description": "Whether projects are enabled.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "has_wiki": {
                                  "default": true,
                                  "description": "Whether the wiki is enabled.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "homepage": {
                                  "example": "https://github.com",
                                  "format": "uri",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "hooks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier of the repository",
                                  "example": 42,
                                  "type": "integer"
                                },
                                "is_template": {
                                  "default": false,
                                  "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "issue_comment_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                  "type": "string"
                                },
                                "issue_events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                  "type": "string"
                                },
                                "issues_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                  "type": "string"
                                },
                                "keys_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                  "type": "string"
                                },
                                "labels_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                  "type": "string"
                                },
                                "language": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "languages_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "license": {
                                  "allOf": [
                                    {
                                      "description": "License Simple",
                                      "properties": {
                                        "html_url": {
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "key": {
                                          "example": "mit",
                                          "type": "string"
                                        },
                                        "name": {
                                          "example": "MIT License",
                                          "type": "string"
                                        },
                                        "node_id": {
                                          "example": "MDc6TGljZW5zZW1pdA==",
                                          "type": "string"
                                        },
                                        "spdx_id": {
                                          "example": "MIT",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "url": {
                                          "example": "https://api.github.com/licenses/mit",
                                          "format": "uri",
                                          "nullable": true,
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "name",
                                        "url",
                                        "spdx_id",
                                        "node_id"
                                      ],
                                      "title": "License Simple",
                                      "type": "object"
                                    }
                                  ],
                                  "nullable": true
                                },
                                "master_branch": { "type": "string" },
                                "merges_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "milestones_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                  "type": "string"
                                },
                                "mirror_url": {
                                  "example": "git:git.example.com/octocat/Hello-World",
                                  "format": "uri",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the repository.",
                                  "example": "Team Environment",
                                  "type": "string"
                                },
                                "network_count": { "type": "integer" },
                                "node_id": {
                                  "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                  "type": "string"
                                },
                                "notifications_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                  "type": "string"
                                },
                                "open_issues": { "type": "integer" },
                                "open_issues_count": {
                                  "example": 0,
                                  "type": "integer"
                                },
                                "organization": {
                                  "allOf": [
                                    {
                                      "description": "Simple User",
                                      "nullable": true,
                                      "properties": {
                                        "avatar_url": {
                                          "example": "https://github.com/images/error/octocat_happy.gif",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "email": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "example": "https://api.github.com/users/octocat/events{/privacy}",
                                          "type": "string"
                                        },
                                        "followers_url": {
                                          "example": "https://api.github.com/users/octocat/followers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "following_url": {
                                          "example": "https://api.github.com/users/octocat/following{/other_user}",
                                          "type": "string"
                                        },
                                        "gists_url": {
                                          "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                          "type": "string"
                                        },
                                        "gravatar_id": {
                                          "example": "41d064eb2195891e12d0413f63227ea7",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "example": "https://github.com/octocat",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "example": 1,
                                          "type": "integer"
                                        },
                                        "login": {
                                          "example": "octocat",
                                          "type": "string"
                                        },
                                        "name": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "node_id": {
                                          "example": "MDQ6VXNlcjE=",
                                          "type": "string"
                                        },
                                        "organizations_url": {
                                          "example": "https://api.github.com/users/octocat/orgs",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "received_events_url": {
                                          "example": "https://api.github.com/users/octocat/received_events",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "repos_url": {
                                          "example": "https://api.github.com/users/octocat/repos",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "site_admin": { "type": "boolean" },
                                        "starred_at": {
                                          "example": "\"2020-07-09T00:17:55Z\"",
                                          "type": "string"
                                        },
                                        "starred_url": {
                                          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                          "type": "string"
                                        },
                                        "subscriptions_url": {
                                          "example": "https://api.github.com/users/octocat/subscriptions",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "type": {
                                          "example": "User",
                                          "type": "string"
                                        },
                                        "url": {
                                          "example": "https://api.github.com/users/octocat",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "avatar_url",
                                        "events_url",
                                        "followers_url",
                                        "following_url",
                                        "gists_url",
                                        "gravatar_id",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "login",
                                        "organizations_url",
                                        "received_events_url",
                                        "repos_url",
                                        "site_admin",
                                        "starred_url",
                                        "subscriptions_url",
                                        "type",
                                        "url"
                                      ],
                                      "title": "Simple User",
                                      "type": "object"
                                    }
                                  ],
                                  "nullable": true
                                },
                                "owner": {
                                  "description": "Simple User",
                                  "nullable": true,
                                  "properties": {
                                    "avatar_url": {
                                      "example": "https://github.com/images/error/octocat_happy.gif",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "email": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "example": "https://api.github.com/users/octocat/events{/privacy}",
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "example": "https://api.github.com/users/octocat/followers",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "example": "https://api.github.com/users/octocat/following{/other_user}",
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "example": "41d064eb2195891e12d0413f63227ea7",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "example": "https://github.com/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "id": { "example": 1, "type": "integer" },
                                    "login": {
                                      "example": "octocat",
                                      "type": "string"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "example": "MDQ6VXNlcjE=",
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "example": "https://api.github.com/users/octocat/orgs",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "example": "https://api.github.com/users/octocat/received_events",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "example": "https://api.github.com/users/octocat/repos",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "site_admin": { "type": "boolean" },
                                    "starred_at": {
                                      "example": "\"2020-07-09T00:17:55Z\"",
                                      "type": "string"
                                    },
                                    "starred_url": {
                                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "example": "https://api.github.com/users/octocat/subscriptions",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": {
                                      "example": "User",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/users/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "title": "Simple User",
                                  "type": "object"
                                },
                                "permissions": {
                                  "properties": {
                                    "admin": { "type": "boolean" },
                                    "maintain": { "type": "boolean" },
                                    "pull": { "type": "boolean" },
                                    "push": { "type": "boolean" },
                                    "triage": { "type": "boolean" }
                                  },
                                  "required": ["admin", "pull", "push"],
                                  "type": "object"
                                },
                                "private": {
                                  "default": false,
                                  "description": "Whether the repository is private or public.",
                                  "type": "boolean"
                                },
                                "pulls_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                  "type": "string"
                                },
                                "pushed_at": {
                                  "example": "2011-01-26T19:06:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "releases_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                  "type": "string"
                                },
                                "size": { "example": 108, "type": "integer" },
                                "ssh_url": {
                                  "example": "git@github.com:octocat/Hello-World.git",
                                  "type": "string"
                                },
                                "stargazers_count": {
                                  "example": 80,
                                  "type": "integer"
                                },
                                "stargazers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:42Z\"",
                                  "type": "string"
                                },
                                "statuses_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                  "type": "string"
                                },
                                "subscribers_count": { "type": "integer" },
                                "subscribers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "subscription_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "svn_url": {
                                  "example": "https://svn.github.com/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "teams_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "temp_clone_token": { "type": "string" },
                                "template_repository": {
                                  "nullable": true,
                                  "properties": {
                                    "allow_auto_merge": { "type": "boolean" },
                                    "allow_merge_commit": { "type": "boolean" },
                                    "allow_rebase_merge": { "type": "boolean" },
                                    "allow_squash_merge": { "type": "boolean" },
                                    "archive_url": { "type": "string" },
                                    "archived": { "type": "boolean" },
                                    "assignees_url": { "type": "string" },
                                    "blobs_url": { "type": "string" },
                                    "branches_url": { "type": "string" },
                                    "clone_url": { "type": "string" },
                                    "collaborators_url": { "type": "string" },
                                    "comments_url": { "type": "string" },
                                    "commits_url": { "type": "string" },
                                    "compare_url": { "type": "string" },
                                    "contents_url": { "type": "string" },
                                    "contributors_url": { "type": "string" },
                                    "created_at": { "type": "string" },
                                    "default_branch": { "type": "string" },
                                    "delete_branch_on_merge": {
                                      "type": "boolean"
                                    },
                                    "deployments_url": { "type": "string" },
                                    "description": { "type": "string" },
                                    "disabled": { "type": "boolean" },
                                    "downloads_url": { "type": "string" },
                                    "events_url": { "type": "string" },
                                    "fork": { "type": "boolean" },
                                    "forks_count": { "type": "integer" },
                                    "forks_url": { "type": "string" },
                                    "full_name": { "type": "string" },
                                    "git_commits_url": { "type": "string" },
                                    "git_refs_url": { "type": "string" },
                                    "git_tags_url": { "type": "string" },
                                    "git_url": { "type": "string" },
                                    "has_downloads": { "type": "boolean" },
                                    "has_issues": { "type": "boolean" },
                                    "has_pages": { "type": "boolean" },
                                    "has_projects": { "type": "boolean" },
                                    "has_wiki": { "type": "boolean" },
                                    "homepage": { "type": "string" },
                                    "hooks_url": { "type": "string" },
                                    "html_url": { "type": "string" },
                                    "id": { "type": "integer" },
                                    "is_template": { "type": "boolean" },
                                    "issue_comment_url": { "type": "string" },
                                    "issue_events_url": { "type": "string" },
                                    "issues_url": { "type": "string" },
                                    "keys_url": { "type": "string" },
                                    "labels_url": { "type": "string" },
                                    "language": { "type": "string" },
                                    "languages_url": { "type": "string" },
                                    "merges_url": { "type": "string" },
                                    "milestones_url": { "type": "string" },
                                    "mirror_url": { "type": "string" },
                                    "name": { "type": "string" },
                                    "network_count": { "type": "integer" },
                                    "node_id": { "type": "string" },
                                    "notifications_url": { "type": "string" },
                                    "open_issues_count": { "type": "integer" },
                                    "owner": {
                                      "properties": {
                                        "avatar_url": { "type": "string" },
                                        "events_url": { "type": "string" },
                                        "followers_url": { "type": "string" },
                                        "following_url": { "type": "string" },
                                        "gists_url": { "type": "string" },
                                        "gravatar_id": { "type": "string" },
                                        "html_url": { "type": "string" },
                                        "id": { "type": "integer" },
                                        "login": { "type": "string" },
                                        "node_id": { "type": "string" },
                                        "organizations_url": {
                                          "type": "string"
                                        },
                                        "received_events_url": {
                                          "type": "string"
                                        },
                                        "repos_url": { "type": "string" },
                                        "site_admin": { "type": "boolean" },
                                        "starred_url": { "type": "string" },
                                        "subscriptions_url": {
                                          "type": "string"
                                        },
                                        "type": { "type": "string" },
                                        "url": { "type": "string" }
                                      },
                                      "type": "object"
                                    },
                                    "permissions": {
                                      "properties": {
                                        "admin": { "type": "boolean" },
                                        "maintain": { "type": "boolean" },
                                        "pull": { "type": "boolean" },
                                        "push": { "type": "boolean" },
                                        "triage": { "type": "boolean" }
                                      },
                                      "type": "object"
                                    },
                                    "private": { "type": "boolean" },
                                    "pulls_url": { "type": "string" },
                                    "pushed_at": { "type": "string" },
                                    "releases_url": { "type": "string" },
                                    "size": { "type": "integer" },
                                    "ssh_url": { "type": "string" },
                                    "stargazers_count": { "type": "integer" },
                                    "stargazers_url": { "type": "string" },
                                    "statuses_url": { "type": "string" },
                                    "subscribers_count": { "type": "integer" },
                                    "subscribers_url": { "type": "string" },
                                    "subscription_url": { "type": "string" },
                                    "svn_url": { "type": "string" },
                                    "tags_url": { "type": "string" },
                                    "teams_url": { "type": "string" },
                                    "temp_clone_token": { "type": "string" },
                                    "topics": {
                                      "items": { "type": "string" },
                                      "type": "array"
                                    },
                                    "trees_url": { "type": "string" },
                                    "updated_at": { "type": "string" },
                                    "url": { "type": "string" },
                                    "visibility": { "type": "string" },
                                    "watchers_count": { "type": "integer" }
                                  },
                                  "type": "object"
                                },
                                "topics": {
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "trees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                  "type": "string"
                                },
                                "updated_at": {
                                  "example": "2011-01-26T19:14:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/repos/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "visibility": {
                                  "default": "public",
                                  "description": "The repository visibility: public, private, or internal.",
                                  "type": "string"
                                },
                                "watchers": { "type": "integer" },
                                "watchers_count": {
                                  "example": 80,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "archive_url",
                                "assignees_url",
                                "blobs_url",
                                "branches_url",
                                "collaborators_url",
                                "comments_url",
                                "commits_url",
                                "compare_url",
                                "contents_url",
                                "contributors_url",
                                "deployments_url",
                                "description",
                                "downloads_url",
                                "events_url",
                                "fork",
                                "forks_url",
                                "full_name",
                                "git_commits_url",
                                "git_refs_url",
                                "git_tags_url",
                                "hooks_url",
                                "html_url",
                                "id",
                                "node_id",
                                "issue_comment_url",
                                "issue_events_url",
                                "issues_url",
                                "keys_url",
                                "labels_url",
                                "languages_url",
                                "merges_url",
                                "milestones_url",
                                "name",
                                "notifications_url",
                                "owner",
                                "private",
                                "pulls_url",
                                "releases_url",
                                "stargazers_url",
                                "statuses_url",
                                "subscribers_url",
                                "subscription_url",
                                "tags_url",
                                "teams_url",
                                "trees_url",
                                "url",
                                "clone_url",
                                "default_branch",
                                "forks",
                                "forks_count",
                                "git_url",
                                "has_downloads",
                                "has_issues",
                                "has_projects",
                                "has_wiki",
                                "has_pages",
                                "homepage",
                                "language",
                                "archived",
                                "disabled",
                                "mirror_url",
                                "open_issues",
                                "open_issues_count",
                                "license",
                                "pushed_at",
                                "size",
                                "ssh_url",
                                "stargazers_count",
                                "svn_url",
                                "watchers",
                                "watchers_count",
                                "created_at",
                                "updated_at"
                              ],
                              "title": "Repository",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "state": { "example": "pending", "type": "string" },
                          "updated_at": {
                            "example": "2015-07-06T15:33:38-07:00",
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/orgs/octo-org/migrations/79",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "node_id",
                          "owner",
                          "guid",
                          "state",
                          "lock_repositories",
                          "exclude_attachments",
                          "repositories",
                          "url",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Migration",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              }
            },
            "summary": "List organization migrations",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "Initiates the generation of a migration archive.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#start-an-organization-migration"
            },
            "operationId": "migrations/start-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "lock_repositories": true,
                    "repositories": ["github/Hello-World"]
                  },
                  "schema": {
                    "properties": {
                      "exclude": {
                        "items": { "enum": ["repositories"], "type": "string" },
                        "type": "array"
                      },
                      "exclude_attachments": {
                        "default": false,
                        "description": "Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).",
                        "type": "boolean"
                      },
                      "lock_repositories": {
                        "default": false,
                        "description": "Indicates whether repositories should be locked (to prevent manipulation) while migrating data.",
                        "type": "boolean"
                      },
                      "repositories": {
                        "description": "A list of arrays indicating which repositories should be migrated.",
                        "items": { "type": "string" },
                        "type": "array"
                      }
                    },
                    "required": ["repositories"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2015-07-06T15:33:38-07:00",
                          "exclude_attachments": false,
                          "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "id": 79,
                          "lock_repositories": true,
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                          "owner": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/orgs/github/events",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "github",
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/orgs/github/repos",
                            "site_admin": true,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/orgs/github"
                          },
                          "repositories": [
                            {
                              "allow_auto_merge": false,
                              "allow_merge_commit": true,
                              "allow_rebase_merge": true,
                              "allow_squash_merge": true,
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "archived": false,
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "clone_url": "https://github.com/octocat/Hello-World.git",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                              "created_at": "2011-01-26T19:01:12Z",
                              "default_branch": "master",
                              "delete_branch_on_merge": true,
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                              "description": "This your first repo!",
                              "disabled": false,
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                              "fork": false,
                              "forks": 1,
                              "forks_count": 9,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                              "full_name": "octocat/Hello-World",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World.git",
                              "has_downloads": true,
                              "has_issues": true,
                              "has_pages": false,
                              "has_projects": true,
                              "has_wiki": true,
                              "homepage": "https://github.com",
                              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                              "html_url": "https://github.com/octocat/Hello-World",
                              "id": 1296269,
                              "is_template": true,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "language": null,
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                              "license": {
                                "html_url": "https://api.github.com/licenses/mit",
                                "key": "mit",
                                "name": "MIT License",
                                "node_id": "MDc6TGljZW5zZW1pdA==",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit"
                              },
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "mirror_url": "git:git.example.com/octocat/Hello-World",
                              "name": "Hello-World",
                              "network_count": 0,
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "open_issues": 1,
                              "open_issues_count": 0,
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "gravatar_id": "",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "permissions": {
                                "admin": false,
                                "pull": true,
                                "push": false
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "pushed_at": "2011-01-26T19:06:43Z",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "size": 108,
                              "ssh_url": "git@github.com:octocat/Hello-World.git",
                              "stargazers_count": 80,
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "subscribers_count": 42,
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                              "svn_url": "https://svn.github.com/octocat/Hello-World",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                              "template_repository": null,
                              "topics": ["octocat", "atom", "electron", "api"],
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "updated_at": "2011-01-26T19:14:43Z",
                              "url": "https://api.github.com/repos/octocat/Hello-World",
                              "visibility": "public",
                              "watchers": 1,
                              "watchers_count": 80
                            }
                          ],
                          "state": "pending",
                          "updated_at": "2015-07-06T15:33:38-07:00",
                          "url": "https://api.github.com/orgs/octo-org/migrations/79"
                        }
                      }
                    },
                    "schema": {
                      "description": "A migration.",
                      "properties": {
                        "archive_url": { "format": "uri", "type": "string" },
                        "created_at": {
                          "example": "2015-07-06T15:33:38-07:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "exclude": { "items": {}, "type": "array" },
                        "exclude_attachments": { "type": "boolean" },
                        "guid": {
                          "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "type": "string"
                        },
                        "id": { "example": 79, "type": "integer" },
                        "lock_repositories": {
                          "example": true,
                          "type": "boolean"
                        },
                        "node_id": { "type": "string" },
                        "owner": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "repositories": {
                          "items": {
                            "description": "A git repository",
                            "properties": {
                              "allow_auto_merge": {
                                "default": false,
                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                "example": false,
                                "type": "boolean"
                              },
                              "allow_merge_commit": {
                                "default": true,
                                "description": "Whether to allow merge commits for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "allow_rebase_merge": {
                                "default": true,
                                "description": "Whether to allow rebase merges for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "allow_squash_merge": {
                                "default": true,
                                "description": "Whether to allow squash merges for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "archive_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "type": "string"
                              },
                              "archived": {
                                "default": false,
                                "description": "Whether the repository is archived.",
                                "type": "boolean"
                              },
                              "assignees_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "type": "string"
                              },
                              "blobs_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "type": "string"
                              },
                              "branches_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "type": "string"
                              },
                              "clone_url": {
                                "example": "https://github.com/octocat/Hello-World.git",
                                "type": "string"
                              },
                              "collaborators_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "type": "string"
                              },
                              "comments_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "type": "string"
                              },
                              "commits_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "type": "string"
                              },
                              "compare_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "type": "string"
                              },
                              "contents_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "type": "string"
                              },
                              "contributors_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                "format": "uri",
                                "type": "string"
                              },
                              "created_at": {
                                "example": "2011-01-26T19:01:12Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "example": "master",
                                "type": "string"
                              },
                              "delete_branch_on_merge": {
                                "default": false,
                                "description": "Whether to delete head branches when pull requests are merged",
                                "example": false,
                                "type": "boolean"
                              },
                              "deployments_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                "format": "uri",
                                "type": "string"
                              },
                              "description": {
                                "example": "This your first repo!",
                                "nullable": true,
                                "type": "string"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                "format": "uri",
                                "type": "string"
                              },
                              "events_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                "format": "uri",
                                "type": "string"
                              },
                              "fork": { "type": "boolean" },
                              "forks": { "type": "integer" },
                              "forks_count": {
                                "example": 9,
                                "type": "integer"
                              },
                              "forks_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                "format": "uri",
                                "type": "string"
                              },
                              "full_name": {
                                "example": "octocat/Hello-World",
                                "type": "string"
                              },
                              "git_commits_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "type": "string"
                              },
                              "git_refs_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "type": "string"
                              },
                              "git_tags_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "type": "string"
                              },
                              "git_url": {
                                "example": "git:github.com/octocat/Hello-World.git",
                                "type": "string"
                              },
                              "has_downloads": {
                                "default": true,
                                "description": "Whether downloads are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_issues": {
                                "default": true,
                                "description": "Whether issues are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_pages": { "type": "boolean" },
                              "has_projects": {
                                "default": true,
                                "description": "Whether projects are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_wiki": {
                                "default": true,
                                "description": "Whether the wiki is enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "homepage": {
                                "example": "https://github.com",
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "hooks_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "format": "uri",
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "example": 42,
                                "type": "integer"
                              },
                              "is_template": {
                                "default": false,
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "example": true,
                                "type": "boolean"
                              },
                              "issue_comment_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "type": "string"
                              },
                              "issue_events_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "type": "string"
                              },
                              "issues_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "type": "string"
                              },
                              "keys_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "type": "string"
                              },
                              "labels_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "type": "string"
                              },
                              "language": {
                                "nullable": true,
                                "type": "string"
                              },
                              "languages_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                "format": "uri",
                                "type": "string"
                              },
                              "license": {
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "properties": {
                                      "html_url": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "key": {
                                        "example": "mit",
                                        "type": "string"
                                      },
                                      "name": {
                                        "example": "MIT License",
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDc6TGljZW5zZW1pdA==",
                                        "type": "string"
                                      },
                                      "spdx_id": {
                                        "example": "MIT",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/licenses/mit",
                                        "format": "uri",
                                        "nullable": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "title": "License Simple",
                                    "type": "object"
                                  }
                                ],
                                "nullable": true
                              },
                              "master_branch": { "type": "string" },
                              "merges_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                "format": "uri",
                                "type": "string"
                              },
                              "milestones_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "type": "string"
                              },
                              "mirror_url": {
                                "example": "git:git.example.com/octocat/Hello-World",
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "example": "Team Environment",
                                "type": "string"
                              },
                              "network_count": { "type": "integer" },
                              "node_id": {
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "type": "string"
                              },
                              "notifications_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "type": "string"
                              },
                              "open_issues": { "type": "integer" },
                              "open_issues_count": {
                                "example": 0,
                                "type": "integer"
                              },
                              "organization": {
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  }
                                ],
                                "nullable": true
                              },
                              "owner": {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              },
                              "permissions": {
                                "properties": {
                                  "admin": { "type": "boolean" },
                                  "maintain": { "type": "boolean" },
                                  "pull": { "type": "boolean" },
                                  "push": { "type": "boolean" },
                                  "triage": { "type": "boolean" }
                                },
                                "required": ["admin", "pull", "push"],
                                "type": "object"
                              },
                              "private": {
                                "default": false,
                                "description": "Whether the repository is private or public.",
                                "type": "boolean"
                              },
                              "pulls_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "type": "string"
                              },
                              "pushed_at": {
                                "example": "2011-01-26T19:06:43Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "releases_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "type": "string"
                              },
                              "size": { "example": 108, "type": "integer" },
                              "ssh_url": {
                                "example": "git@github.com:octocat/Hello-World.git",
                                "type": "string"
                              },
                              "stargazers_count": {
                                "example": 80,
                                "type": "integer"
                              },
                              "stargazers_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                "format": "uri",
                                "type": "string"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:42Z\"",
                                "type": "string"
                              },
                              "statuses_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "type": "string"
                              },
                              "subscribers_count": { "type": "integer" },
                              "subscribers_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                "format": "uri",
                                "type": "string"
                              },
                              "subscription_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                "format": "uri",
                                "type": "string"
                              },
                              "svn_url": {
                                "example": "https://svn.github.com/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "tags_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                "format": "uri",
                                "type": "string"
                              },
                              "teams_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                "format": "uri",
                                "type": "string"
                              },
                              "temp_clone_token": { "type": "string" },
                              "template_repository": {
                                "nullable": true,
                                "properties": {
                                  "allow_auto_merge": { "type": "boolean" },
                                  "allow_merge_commit": { "type": "boolean" },
                                  "allow_rebase_merge": { "type": "boolean" },
                                  "allow_squash_merge": { "type": "boolean" },
                                  "archive_url": { "type": "string" },
                                  "archived": { "type": "boolean" },
                                  "assignees_url": { "type": "string" },
                                  "blobs_url": { "type": "string" },
                                  "branches_url": { "type": "string" },
                                  "clone_url": { "type": "string" },
                                  "collaborators_url": { "type": "string" },
                                  "comments_url": { "type": "string" },
                                  "commits_url": { "type": "string" },
                                  "compare_url": { "type": "string" },
                                  "contents_url": { "type": "string" },
                                  "contributors_url": { "type": "string" },
                                  "created_at": { "type": "string" },
                                  "default_branch": { "type": "string" },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": { "type": "string" },
                                  "description": { "type": "string" },
                                  "disabled": { "type": "boolean" },
                                  "downloads_url": { "type": "string" },
                                  "events_url": { "type": "string" },
                                  "fork": { "type": "boolean" },
                                  "forks_count": { "type": "integer" },
                                  "forks_url": { "type": "string" },
                                  "full_name": { "type": "string" },
                                  "git_commits_url": { "type": "string" },
                                  "git_refs_url": { "type": "string" },
                                  "git_tags_url": { "type": "string" },
                                  "git_url": { "type": "string" },
                                  "has_downloads": { "type": "boolean" },
                                  "has_issues": { "type": "boolean" },
                                  "has_pages": { "type": "boolean" },
                                  "has_projects": { "type": "boolean" },
                                  "has_wiki": { "type": "boolean" },
                                  "homepage": { "type": "string" },
                                  "hooks_url": { "type": "string" },
                                  "html_url": { "type": "string" },
                                  "id": { "type": "integer" },
                                  "is_template": { "type": "boolean" },
                                  "issue_comment_url": { "type": "string" },
                                  "issue_events_url": { "type": "string" },
                                  "issues_url": { "type": "string" },
                                  "keys_url": { "type": "string" },
                                  "labels_url": { "type": "string" },
                                  "language": { "type": "string" },
                                  "languages_url": { "type": "string" },
                                  "merges_url": { "type": "string" },
                                  "milestones_url": { "type": "string" },
                                  "mirror_url": { "type": "string" },
                                  "name": { "type": "string" },
                                  "network_count": { "type": "integer" },
                                  "node_id": { "type": "string" },
                                  "notifications_url": { "type": "string" },
                                  "open_issues_count": { "type": "integer" },
                                  "owner": {
                                    "properties": {
                                      "avatar_url": { "type": "string" },
                                      "events_url": { "type": "string" },
                                      "followers_url": { "type": "string" },
                                      "following_url": { "type": "string" },
                                      "gists_url": { "type": "string" },
                                      "gravatar_id": { "type": "string" },
                                      "html_url": { "type": "string" },
                                      "id": { "type": "integer" },
                                      "login": { "type": "string" },
                                      "node_id": { "type": "string" },
                                      "organizations_url": { "type": "string" },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": { "type": "string" },
                                      "site_admin": { "type": "boolean" },
                                      "starred_url": { "type": "string" },
                                      "subscriptions_url": { "type": "string" },
                                      "type": { "type": "string" },
                                      "url": { "type": "string" }
                                    },
                                    "type": "object"
                                  },
                                  "permissions": {
                                    "properties": {
                                      "admin": { "type": "boolean" },
                                      "maintain": { "type": "boolean" },
                                      "pull": { "type": "boolean" },
                                      "push": { "type": "boolean" },
                                      "triage": { "type": "boolean" }
                                    },
                                    "type": "object"
                                  },
                                  "private": { "type": "boolean" },
                                  "pulls_url": { "type": "string" },
                                  "pushed_at": { "type": "string" },
                                  "releases_url": { "type": "string" },
                                  "size": { "type": "integer" },
                                  "ssh_url": { "type": "string" },
                                  "stargazers_count": { "type": "integer" },
                                  "stargazers_url": { "type": "string" },
                                  "statuses_url": { "type": "string" },
                                  "subscribers_count": { "type": "integer" },
                                  "subscribers_url": { "type": "string" },
                                  "subscription_url": { "type": "string" },
                                  "svn_url": { "type": "string" },
                                  "tags_url": { "type": "string" },
                                  "teams_url": { "type": "string" },
                                  "temp_clone_token": { "type": "string" },
                                  "topics": {
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "trees_url": { "type": "string" },
                                  "updated_at": { "type": "string" },
                                  "url": { "type": "string" },
                                  "visibility": { "type": "string" },
                                  "watchers_count": { "type": "integer" }
                                },
                                "type": "object"
                              },
                              "topics": {
                                "items": { "type": "string" },
                                "type": "array"
                              },
                              "trees_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "type": "string"
                              },
                              "updated_at": {
                                "example": "2011-01-26T19:14:43Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/repos/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "visibility": {
                                "default": "public",
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string"
                              },
                              "watchers": { "type": "integer" },
                              "watchers_count": {
                                "example": 80,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "title": "Repository",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "state": { "example": "pending", "type": "string" },
                        "updated_at": {
                          "example": "2015-07-06T15:33:38-07:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/octo-org/migrations/79",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "node_id",
                        "owner",
                        "guid",
                        "state",
                        "lock_repositories",
                        "exclude_attachments",
                        "repositories",
                        "url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Migration",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Start an organization migration",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/migrations/{migration_id}",
        {
          "get": {
            "deprecated": null,
            "description": "Fetches the status of a migration.\n\nThe `state` of a migration can be one of the following values:\n\n*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#get-an-organization-migration-status"
            },
            "operationId": "migrations/get-status-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Exclude attributes from the API response to improve performance",
                "in": "query",
                "name": "exclude",
                "required": false,
                "schema": {
                  "items": {
                    "description": "Allowed values that can be passed to the exclude param.",
                    "enum": ["repositories"],
                    "example": "repositories",
                    "type": "string"
                  },
                  "type": "array"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2015-07-06T15:33:38-07:00",
                          "exclude_attachments": false,
                          "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "id": 79,
                          "lock_repositories": true,
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                          "owner": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/orgs/github/events",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "github",
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/orgs/github/repos",
                            "site_admin": true,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/orgs/github"
                          },
                          "repositories": [
                            {
                              "allow_auto_merge": false,
                              "allow_merge_commit": true,
                              "allow_rebase_merge": true,
                              "allow_squash_merge": true,
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "archived": false,
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "clone_url": "https://github.com/octocat/Hello-World.git",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                              "created_at": "2011-01-26T19:01:12Z",
                              "default_branch": "master",
                              "delete_branch_on_merge": true,
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                              "description": "This your first repo!",
                              "disabled": false,
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                              "fork": false,
                              "forks": 1,
                              "forks_count": 9,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                              "full_name": "octocat/Hello-World",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World.git",
                              "has_downloads": true,
                              "has_issues": true,
                              "has_pages": false,
                              "has_projects": true,
                              "has_wiki": true,
                              "homepage": "https://github.com",
                              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                              "html_url": "https://github.com/octocat/Hello-World",
                              "id": 1296269,
                              "is_template": true,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "language": null,
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                              "license": {
                                "html_url": "https://api.github.com/licenses/mit",
                                "key": "mit",
                                "name": "MIT License",
                                "node_id": "MDc6TGljZW5zZW1pdA==",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit"
                              },
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "mirror_url": "git:git.example.com/octocat/Hello-World",
                              "name": "Hello-World",
                              "network_count": 0,
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "open_issues": 1,
                              "open_issues_count": 0,
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "gravatar_id": "",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "permissions": {
                                "admin": false,
                                "pull": true,
                                "push": false
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "pushed_at": "2011-01-26T19:06:43Z",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "size": 108,
                              "ssh_url": "git@github.com:octocat/Hello-World.git",
                              "stargazers_count": 80,
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "subscribers_count": 42,
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                              "svn_url": "https://svn.github.com/octocat/Hello-World",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                              "template_repository": null,
                              "topics": ["octocat", "atom", "electron", "api"],
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "updated_at": "2011-01-26T19:14:43Z",
                              "url": "https://api.github.com/repos/octocat/Hello-World",
                              "visibility": "public",
                              "watchers": 1,
                              "watchers_count": 80
                            }
                          ],
                          "state": "exported",
                          "updated_at": "2015-07-06T15:33:38-07:00",
                          "url": "https://api.github.com/orgs/octo-org/migrations/79"
                        }
                      }
                    },
                    "schema": {
                      "description": "A migration.",
                      "properties": {
                        "archive_url": { "format": "uri", "type": "string" },
                        "created_at": {
                          "example": "2015-07-06T15:33:38-07:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "exclude": { "items": {}, "type": "array" },
                        "exclude_attachments": { "type": "boolean" },
                        "guid": {
                          "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "type": "string"
                        },
                        "id": { "example": 79, "type": "integer" },
                        "lock_repositories": {
                          "example": true,
                          "type": "boolean"
                        },
                        "node_id": { "type": "string" },
                        "owner": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "repositories": {
                          "items": {
                            "description": "A git repository",
                            "properties": {
                              "allow_auto_merge": {
                                "default": false,
                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                "example": false,
                                "type": "boolean"
                              },
                              "allow_merge_commit": {
                                "default": true,
                                "description": "Whether to allow merge commits for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "allow_rebase_merge": {
                                "default": true,
                                "description": "Whether to allow rebase merges for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "allow_squash_merge": {
                                "default": true,
                                "description": "Whether to allow squash merges for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "archive_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "type": "string"
                              },
                              "archived": {
                                "default": false,
                                "description": "Whether the repository is archived.",
                                "type": "boolean"
                              },
                              "assignees_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "type": "string"
                              },
                              "blobs_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "type": "string"
                              },
                              "branches_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "type": "string"
                              },
                              "clone_url": {
                                "example": "https://github.com/octocat/Hello-World.git",
                                "type": "string"
                              },
                              "collaborators_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "type": "string"
                              },
                              "comments_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "type": "string"
                              },
                              "commits_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "type": "string"
                              },
                              "compare_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "type": "string"
                              },
                              "contents_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "type": "string"
                              },
                              "contributors_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                "format": "uri",
                                "type": "string"
                              },
                              "created_at": {
                                "example": "2011-01-26T19:01:12Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "example": "master",
                                "type": "string"
                              },
                              "delete_branch_on_merge": {
                                "default": false,
                                "description": "Whether to delete head branches when pull requests are merged",
                                "example": false,
                                "type": "boolean"
                              },
                              "deployments_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                "format": "uri",
                                "type": "string"
                              },
                              "description": {
                                "example": "This your first repo!",
                                "nullable": true,
                                "type": "string"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                "format": "uri",
                                "type": "string"
                              },
                              "events_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                "format": "uri",
                                "type": "string"
                              },
                              "fork": { "type": "boolean" },
                              "forks": { "type": "integer" },
                              "forks_count": {
                                "example": 9,
                                "type": "integer"
                              },
                              "forks_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                "format": "uri",
                                "type": "string"
                              },
                              "full_name": {
                                "example": "octocat/Hello-World",
                                "type": "string"
                              },
                              "git_commits_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "type": "string"
                              },
                              "git_refs_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "type": "string"
                              },
                              "git_tags_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "type": "string"
                              },
                              "git_url": {
                                "example": "git:github.com/octocat/Hello-World.git",
                                "type": "string"
                              },
                              "has_downloads": {
                                "default": true,
                                "description": "Whether downloads are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_issues": {
                                "default": true,
                                "description": "Whether issues are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_pages": { "type": "boolean" },
                              "has_projects": {
                                "default": true,
                                "description": "Whether projects are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_wiki": {
                                "default": true,
                                "description": "Whether the wiki is enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "homepage": {
                                "example": "https://github.com",
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "hooks_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "format": "uri",
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "example": 42,
                                "type": "integer"
                              },
                              "is_template": {
                                "default": false,
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "example": true,
                                "type": "boolean"
                              },
                              "issue_comment_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "type": "string"
                              },
                              "issue_events_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "type": "string"
                              },
                              "issues_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "type": "string"
                              },
                              "keys_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "type": "string"
                              },
                              "labels_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "type": "string"
                              },
                              "language": {
                                "nullable": true,
                                "type": "string"
                              },
                              "languages_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                "format": "uri",
                                "type": "string"
                              },
                              "license": {
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "properties": {
                                      "html_url": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "key": {
                                        "example": "mit",
                                        "type": "string"
                                      },
                                      "name": {
                                        "example": "MIT License",
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDc6TGljZW5zZW1pdA==",
                                        "type": "string"
                                      },
                                      "spdx_id": {
                                        "example": "MIT",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/licenses/mit",
                                        "format": "uri",
                                        "nullable": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "title": "License Simple",
                                    "type": "object"
                                  }
                                ],
                                "nullable": true
                              },
                              "master_branch": { "type": "string" },
                              "merges_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                "format": "uri",
                                "type": "string"
                              },
                              "milestones_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "type": "string"
                              },
                              "mirror_url": {
                                "example": "git:git.example.com/octocat/Hello-World",
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "example": "Team Environment",
                                "type": "string"
                              },
                              "network_count": { "type": "integer" },
                              "node_id": {
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "type": "string"
                              },
                              "notifications_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "type": "string"
                              },
                              "open_issues": { "type": "integer" },
                              "open_issues_count": {
                                "example": 0,
                                "type": "integer"
                              },
                              "organization": {
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  }
                                ],
                                "nullable": true
                              },
                              "owner": {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              },
                              "permissions": {
                                "properties": {
                                  "admin": { "type": "boolean" },
                                  "maintain": { "type": "boolean" },
                                  "pull": { "type": "boolean" },
                                  "push": { "type": "boolean" },
                                  "triage": { "type": "boolean" }
                                },
                                "required": ["admin", "pull", "push"],
                                "type": "object"
                              },
                              "private": {
                                "default": false,
                                "description": "Whether the repository is private or public.",
                                "type": "boolean"
                              },
                              "pulls_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "type": "string"
                              },
                              "pushed_at": {
                                "example": "2011-01-26T19:06:43Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "releases_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "type": "string"
                              },
                              "size": { "example": 108, "type": "integer" },
                              "ssh_url": {
                                "example": "git@github.com:octocat/Hello-World.git",
                                "type": "string"
                              },
                              "stargazers_count": {
                                "example": 80,
                                "type": "integer"
                              },
                              "stargazers_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                "format": "uri",
                                "type": "string"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:42Z\"",
                                "type": "string"
                              },
                              "statuses_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "type": "string"
                              },
                              "subscribers_count": { "type": "integer" },
                              "subscribers_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                "format": "uri",
                                "type": "string"
                              },
                              "subscription_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                "format": "uri",
                                "type": "string"
                              },
                              "svn_url": {
                                "example": "https://svn.github.com/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "tags_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                "format": "uri",
                                "type": "string"
                              },
                              "teams_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                "format": "uri",
                                "type": "string"
                              },
                              "temp_clone_token": { "type": "string" },
                              "template_repository": {
                                "nullable": true,
                                "properties": {
                                  "allow_auto_merge": { "type": "boolean" },
                                  "allow_merge_commit": { "type": "boolean" },
                                  "allow_rebase_merge": { "type": "boolean" },
                                  "allow_squash_merge": { "type": "boolean" },
                                  "archive_url": { "type": "string" },
                                  "archived": { "type": "boolean" },
                                  "assignees_url": { "type": "string" },
                                  "blobs_url": { "type": "string" },
                                  "branches_url": { "type": "string" },
                                  "clone_url": { "type": "string" },
                                  "collaborators_url": { "type": "string" },
                                  "comments_url": { "type": "string" },
                                  "commits_url": { "type": "string" },
                                  "compare_url": { "type": "string" },
                                  "contents_url": { "type": "string" },
                                  "contributors_url": { "type": "string" },
                                  "created_at": { "type": "string" },
                                  "default_branch": { "type": "string" },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": { "type": "string" },
                                  "description": { "type": "string" },
                                  "disabled": { "type": "boolean" },
                                  "downloads_url": { "type": "string" },
                                  "events_url": { "type": "string" },
                                  "fork": { "type": "boolean" },
                                  "forks_count": { "type": "integer" },
                                  "forks_url": { "type": "string" },
                                  "full_name": { "type": "string" },
                                  "git_commits_url": { "type": "string" },
                                  "git_refs_url": { "type": "string" },
                                  "git_tags_url": { "type": "string" },
                                  "git_url": { "type": "string" },
                                  "has_downloads": { "type": "boolean" },
                                  "has_issues": { "type": "boolean" },
                                  "has_pages": { "type": "boolean" },
                                  "has_projects": { "type": "boolean" },
                                  "has_wiki": { "type": "boolean" },
                                  "homepage": { "type": "string" },
                                  "hooks_url": { "type": "string" },
                                  "html_url": { "type": "string" },
                                  "id": { "type": "integer" },
                                  "is_template": { "type": "boolean" },
                                  "issue_comment_url": { "type": "string" },
                                  "issue_events_url": { "type": "string" },
                                  "issues_url": { "type": "string" },
                                  "keys_url": { "type": "string" },
                                  "labels_url": { "type": "string" },
                                  "language": { "type": "string" },
                                  "languages_url": { "type": "string" },
                                  "merges_url": { "type": "string" },
                                  "milestones_url": { "type": "string" },
                                  "mirror_url": { "type": "string" },
                                  "name": { "type": "string" },
                                  "network_count": { "type": "integer" },
                                  "node_id": { "type": "string" },
                                  "notifications_url": { "type": "string" },
                                  "open_issues_count": { "type": "integer" },
                                  "owner": {
                                    "properties": {
                                      "avatar_url": { "type": "string" },
                                      "events_url": { "type": "string" },
                                      "followers_url": { "type": "string" },
                                      "following_url": { "type": "string" },
                                      "gists_url": { "type": "string" },
                                      "gravatar_id": { "type": "string" },
                                      "html_url": { "type": "string" },
                                      "id": { "type": "integer" },
                                      "login": { "type": "string" },
                                      "node_id": { "type": "string" },
                                      "organizations_url": { "type": "string" },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": { "type": "string" },
                                      "site_admin": { "type": "boolean" },
                                      "starred_url": { "type": "string" },
                                      "subscriptions_url": { "type": "string" },
                                      "type": { "type": "string" },
                                      "url": { "type": "string" }
                                    },
                                    "type": "object"
                                  },
                                  "permissions": {
                                    "properties": {
                                      "admin": { "type": "boolean" },
                                      "maintain": { "type": "boolean" },
                                      "pull": { "type": "boolean" },
                                      "push": { "type": "boolean" },
                                      "triage": { "type": "boolean" }
                                    },
                                    "type": "object"
                                  },
                                  "private": { "type": "boolean" },
                                  "pulls_url": { "type": "string" },
                                  "pushed_at": { "type": "string" },
                                  "releases_url": { "type": "string" },
                                  "size": { "type": "integer" },
                                  "ssh_url": { "type": "string" },
                                  "stargazers_count": { "type": "integer" },
                                  "stargazers_url": { "type": "string" },
                                  "statuses_url": { "type": "string" },
                                  "subscribers_count": { "type": "integer" },
                                  "subscribers_url": { "type": "string" },
                                  "subscription_url": { "type": "string" },
                                  "svn_url": { "type": "string" },
                                  "tags_url": { "type": "string" },
                                  "teams_url": { "type": "string" },
                                  "temp_clone_token": { "type": "string" },
                                  "topics": {
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "trees_url": { "type": "string" },
                                  "updated_at": { "type": "string" },
                                  "url": { "type": "string" },
                                  "visibility": { "type": "string" },
                                  "watchers_count": { "type": "integer" }
                                },
                                "type": "object"
                              },
                              "topics": {
                                "items": { "type": "string" },
                                "type": "array"
                              },
                              "trees_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "type": "string"
                              },
                              "updated_at": {
                                "example": "2011-01-26T19:14:43Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/repos/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "visibility": {
                                "default": "public",
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string"
                              },
                              "watchers": { "type": "integer" },
                              "watchers_count": {
                                "example": 80,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "title": "Repository",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "state": { "example": "pending", "type": "string" },
                        "updated_at": {
                          "example": "2015-07-06T15:33:38-07:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/octo-org/migrations/79",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "node_id",
                        "owner",
                        "guid",
                        "state",
                        "lock_repositories",
                        "exclude_attachments",
                        "repositories",
                        "url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Migration",
                      "type": "object"
                    }
                  }
                },
                "description": "*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed."
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Get an organization migration status",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/migrations/{migration_id}/archive",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes a previous migration archive. Migration archives are automatically deleted after seven days.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#delete-an-organization-migration-archive"
            },
            "operationId": "migrations/delete-archive-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete an organization migration archive",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Fetches the URL to a migration archive.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#download-an-organization-migration-archive"
            },
            "operationId": "migrations/download-archive-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "302": { "description": "Response" },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Download an organization migration archive",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",
        {
          "delete": {
            "deprecated": null,
            "description": "Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https://docs.github.com/rest/reference/repos#delete-a-repository) when the migration is complete and you no longer need the source data.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#unlock-an-organization-repository"
            },
            "operationId": "migrations/unlock-repo-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "description": "repo_name parameter",
                "in": "path",
                "name": "repo_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Unlock an organization repository",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/migrations/{migration_id}/repositories",
        {
          "get": {
            "deprecated": null,
            "description": "List all the repositories for this organization migration.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#list-repositories-in-an-organization-migration"
            },
            "operationId": "migrations/list-repos-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "archived": false,
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "clone_url": "https://github.com/octocat/Hello-World.git",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                            "created_at": "2011-01-26T19:01:12Z",
                            "default_branch": "master",
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                            "description": "This your first repo!",
                            "disabled": false,
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                            "fork": false,
                            "forks_count": 9,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                            "full_name": "octocat/Hello-World",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "git_url": "git:github.com/octocat/Hello-World.git",
                            "has_downloads": true,
                            "has_issues": true,
                            "has_pages": false,
                            "has_projects": true,
                            "has_wiki": true,
                            "homepage": "https://github.com",
                            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                            "html_url": "https://github.com/octocat/Hello-World",
                            "id": 1296269,
                            "is_template": false,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "language": null,
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "mirror_url": "git:git.example.com/octocat/Hello-World",
                            "name": "Hello-World",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "open_issues_count": 0,
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "permissions": {
                              "admin": false,
                              "pull": true,
                              "push": false
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "pushed_at": "2011-01-26T19:06:43Z",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "size": 108,
                            "ssh_url": "git@github.com:octocat/Hello-World.git",
                            "stargazers_count": 80,
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                            "svn_url": "https://svn.github.com/octocat/Hello-World",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                            "template_repository": {
                              "allow_auto_merge": false,
                              "allow_merge_commit": true,
                              "allow_rebase_merge": true,
                              "allow_squash_merge": true,
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
                              "archived": false,
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
                              "clone_url": "https://github.com/octocat/Hello-World-Template.git",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
                              "created_at": "2011-01-26T19:01:12Z",
                              "default_branch": "master",
                              "delete_branch_on_merge": true,
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
                              "description": "This your first repo!",
                              "disabled": false,
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
                              "fork": false,
                              "forks": 9,
                              "forks_count": 9,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
                              "full_name": "octocat/Hello-World-Template",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World-Template.git",
                              "has_downloads": true,
                              "has_issues": true,
                              "has_pages": false,
                              "has_projects": true,
                              "has_wiki": true,
                              "homepage": "https://github.com",
                              "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
                              "html_url": "https://github.com/octocat/Hello-World-Template",
                              "id": 1296269,
                              "is_template": true,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
                              "language": null,
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
                              "license": {
                                "html_url": "https://api.github.com/licenses/mit",
                                "key": "mit",
                                "name": "MIT License",
                                "node_id": "MDc6TGljZW5zZW1pdA==",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit"
                              },
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
                              "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
                              "name": "Hello-World-Template",
                              "network_count": 0,
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
                              "open_issues": 0,
                              "open_issues_count": 0,
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "gravatar_id": "",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "permissions": {
                                "admin": false,
                                "pull": true,
                                "push": false
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
                              "pushed_at": "2011-01-26T19:06:43Z",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
                              "size": 108,
                              "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
                              "stargazers_count": 80,
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
                              "subscribers_count": 42,
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
                              "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
                              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                              "topics": ["octocat", "atom", "electron", "api"],
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
                              "updated_at": "2011-01-26T19:14:43Z",
                              "url": "https://api.github.com/repos/octocat/Hello-World-Template",
                              "visibility": "public",
                              "watchers": 80,
                              "watchers_count": 80
                            },
                            "topics": ["octocat", "atom", "electron", "api"],
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "updated_at": "2011-01-26T19:14:43Z",
                            "url": "https://api.github.com/repos/octocat/Hello-World",
                            "visibility": "public",
                            "watchers_count": 80
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Minimal Repository",
                        "properties": {
                          "archive_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "type": "string"
                          },
                          "archived": { "type": "boolean" },
                          "assignees_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "type": "string"
                          },
                          "blobs_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "type": "string"
                          },
                          "branches_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "type": "string"
                          },
                          "clone_url": { "type": "string" },
                          "code_of_conduct": {
                            "description": "Code Of Conduct",
                            "properties": {
                              "body": {
                                "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                                "type": "string"
                              },
                              "html_url": {
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "key": {
                                "example": "contributor_covenant",
                                "type": "string"
                              },
                              "name": {
                                "example": "Contributor Covenant",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": ["url", "html_url", "key", "name"],
                            "title": "Code Of Conduct",
                            "type": "object"
                          },
                          "collaborators_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "type": "string"
                          },
                          "comments_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "type": "string"
                          },
                          "commits_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "type": "string"
                          },
                          "compare_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "type": "string"
                          },
                          "contents_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "type": "string"
                          },
                          "contributors_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                            "format": "uri",
                            "type": "string"
                          },
                          "created_at": {
                            "example": "2011-01-26T19:01:12Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "default_branch": { "type": "string" },
                          "delete_branch_on_merge": { "type": "boolean" },
                          "deployments_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                            "format": "uri",
                            "type": "string"
                          },
                          "description": {
                            "example": "This your first repo!",
                            "nullable": true,
                            "type": "string"
                          },
                          "disabled": { "type": "boolean" },
                          "downloads_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                            "format": "uri",
                            "type": "string"
                          },
                          "events_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/events",
                            "format": "uri",
                            "type": "string"
                          },
                          "fork": { "type": "boolean" },
                          "forks": { "example": 0, "type": "integer" },
                          "forks_count": { "type": "integer" },
                          "forks_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                            "format": "uri",
                            "type": "string"
                          },
                          "full_name": {
                            "example": "octocat/Hello-World",
                            "type": "string"
                          },
                          "git_commits_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "type": "string"
                          },
                          "git_refs_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "type": "string"
                          },
                          "git_tags_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "type": "string"
                          },
                          "git_url": { "type": "string" },
                          "has_downloads": { "type": "boolean" },
                          "has_issues": { "type": "boolean" },
                          "has_pages": { "type": "boolean" },
                          "has_projects": { "type": "boolean" },
                          "has_wiki": { "type": "boolean" },
                          "homepage": { "nullable": true, "type": "string" },
                          "hooks_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                            "format": "uri",
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat/Hello-World",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": { "example": 1296269, "type": "integer" },
                          "is_template": { "type": "boolean" },
                          "issue_comment_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "type": "string"
                          },
                          "issue_events_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "type": "string"
                          },
                          "issues_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "type": "string"
                          },
                          "keys_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "type": "string"
                          },
                          "labels_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "type": "string"
                          },
                          "language": { "nullable": true, "type": "string" },
                          "languages_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                            "format": "uri",
                            "type": "string"
                          },
                          "license": {
                            "nullable": true,
                            "properties": {
                              "key": { "type": "string" },
                              "name": { "type": "string" },
                              "node_id": { "type": "string" },
                              "spdx_id": { "type": "string" },
                              "url": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "merges_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                            "format": "uri",
                            "type": "string"
                          },
                          "milestones_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "type": "string"
                          },
                          "mirror_url": { "nullable": true, "type": "string" },
                          "name": {
                            "example": "Hello-World",
                            "type": "string"
                          },
                          "network_count": { "type": "integer" },
                          "node_id": {
                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "type": "string"
                          },
                          "notifications_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "type": "string"
                          },
                          "open_issues": { "example": 0, "type": "integer" },
                          "open_issues_count": { "type": "integer" },
                          "owner": {
                            "description": "Simple User",
                            "nullable": true,
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": { "nullable": true, "type": "string" },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": { "example": 1, "type": "integer" },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": { "type": "boolean" },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": { "example": "User", "type": "string" },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "permissions": {
                            "properties": {
                              "admin": { "type": "boolean" },
                              "maintain": { "type": "boolean" },
                              "pull": { "type": "boolean" },
                              "push": { "type": "boolean" },
                              "triage": { "type": "boolean" }
                            },
                            "type": "object"
                          },
                          "private": { "type": "boolean" },
                          "pulls_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "type": "string"
                          },
                          "pushed_at": {
                            "example": "2011-01-26T19:06:43Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "releases_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "type": "string"
                          },
                          "size": { "type": "integer" },
                          "ssh_url": { "type": "string" },
                          "stargazers_count": { "type": "integer" },
                          "stargazers_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                            "format": "uri",
                            "type": "string"
                          },
                          "statuses_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "type": "string"
                          },
                          "subscribers_count": { "type": "integer" },
                          "subscribers_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                            "format": "uri",
                            "type": "string"
                          },
                          "subscription_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                            "format": "uri",
                            "type": "string"
                          },
                          "svn_url": { "type": "string" },
                          "tags_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                            "format": "uri",
                            "type": "string"
                          },
                          "teams_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                            "format": "uri",
                            "type": "string"
                          },
                          "temp_clone_token": { "type": "string" },
                          "template_repository": {
                            "allOf": [
                              {
                                "description": "A git repository",
                                "properties": {
                                  "allow_auto_merge": {
                                    "default": false,
                                    "description": "Whether to allow Auto-merge to be used on pull requests.",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "allow_merge_commit": {
                                    "default": true,
                                    "description": "Whether to allow merge commits for pull requests.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "allow_rebase_merge": {
                                    "default": true,
                                    "description": "Whether to allow rebase merges for pull requests.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "allow_squash_merge": {
                                    "default": true,
                                    "description": "Whether to allow squash merges for pull requests.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                    "type": "string"
                                  },
                                  "archived": {
                                    "default": false,
                                    "description": "Whether the repository is archived.",
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                    "type": "string"
                                  },
                                  "clone_url": {
                                    "example": "https://github.com/octocat/Hello-World.git",
                                    "type": "string"
                                  },
                                  "collaborators_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "example": "2011-01-26T19:01:12Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "default_branch": {
                                    "description": "The default branch of the repository.",
                                    "example": "master",
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "default": false,
                                    "description": "Whether to delete head branches when pull requests are merged",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "description": {
                                    "example": "This your first repo!",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "description": "Returns whether or not this repository disabled.",
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "fork": { "type": "boolean" },
                                  "forks": { "type": "integer" },
                                  "forks_count": {
                                    "example": 9,
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "example": "octocat/Hello-World",
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                    "type": "string"
                                  },
                                  "git_url": {
                                    "example": "git:github.com/octocat/Hello-World.git",
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "default": true,
                                    "description": "Whether downloads are enabled.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "default": true,
                                    "description": "Whether issues are enabled.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "has_pages": { "type": "boolean" },
                                  "has_projects": {
                                    "default": true,
                                    "description": "Whether projects are enabled.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "default": true,
                                    "description": "Whether the wiki is enabled.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "example": "https://github.com",
                                    "format": "uri",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the repository",
                                    "example": 42,
                                    "type": "integer"
                                  },
                                  "is_template": {
                                    "default": false,
                                    "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                    "type": "string"
                                  },
                                  "language": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "license": {
                                    "allOf": [
                                      {
                                        "description": "License Simple",
                                        "properties": {
                                          "html_url": {
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "key": {
                                            "example": "mit",
                                            "type": "string"
                                          },
                                          "name": {
                                            "example": "MIT License",
                                            "type": "string"
                                          },
                                          "node_id": {
                                            "example": "MDc6TGljZW5zZW1pdA==",
                                            "type": "string"
                                          },
                                          "spdx_id": {
                                            "example": "MIT",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "url": {
                                            "example": "https://api.github.com/licenses/mit",
                                            "format": "uri",
                                            "nullable": true,
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "name",
                                          "url",
                                          "spdx_id",
                                          "node_id"
                                        ],
                                        "title": "License Simple",
                                        "type": "object"
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "master_branch": { "type": "string" },
                                  "merges_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "example": "git:git.example.com/octocat/Hello-World",
                                    "format": "uri",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the repository.",
                                    "example": "Team Environment",
                                    "type": "string"
                                  },
                                  "network_count": { "type": "integer" },
                                  "node_id": {
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                    "type": "string"
                                  },
                                  "open_issues": { "type": "integer" },
                                  "open_issues_count": {
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "organization": {
                                    "allOf": [
                                      {
                                        "description": "Simple User",
                                        "nullable": true,
                                        "properties": {
                                          "avatar_url": {
                                            "example": "https://github.com/images/error/octocat_happy.gif",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "email": {
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                                            "type": "string"
                                          },
                                          "followers_url": {
                                            "example": "https://api.github.com/users/octocat/followers",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "following_url": {
                                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                                            "type": "string"
                                          },
                                          "gists_url": {
                                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                            "type": "string"
                                          },
                                          "gravatar_id": {
                                            "example": "41d064eb2195891e12d0413f63227ea7",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "example": "https://github.com/octocat",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "id": {
                                            "example": 1,
                                            "type": "integer"
                                          },
                                          "login": {
                                            "example": "octocat",
                                            "type": "string"
                                          },
                                          "name": {
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "node_id": {
                                            "example": "MDQ6VXNlcjE=",
                                            "type": "string"
                                          },
                                          "organizations_url": {
                                            "example": "https://api.github.com/users/octocat/orgs",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "received_events_url": {
                                            "example": "https://api.github.com/users/octocat/received_events",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "repos_url": {
                                            "example": "https://api.github.com/users/octocat/repos",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "site_admin": { "type": "boolean" },
                                          "starred_at": {
                                            "example": "\"2020-07-09T00:17:55Z\"",
                                            "type": "string"
                                          },
                                          "starred_url": {
                                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                            "type": "string"
                                          },
                                          "subscriptions_url": {
                                            "example": "https://api.github.com/users/octocat/subscriptions",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "type": {
                                            "example": "User",
                                            "type": "string"
                                          },
                                          "url": {
                                            "example": "https://api.github.com/users/octocat",
                                            "format": "uri",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "avatar_url",
                                          "events_url",
                                          "followers_url",
                                          "following_url",
                                          "gists_url",
                                          "gravatar_id",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "login",
                                          "organizations_url",
                                          "received_events_url",
                                          "repos_url",
                                          "site_admin",
                                          "starred_url",
                                          "subscriptions_url",
                                          "type",
                                          "url"
                                        ],
                                        "title": "Simple User",
                                        "type": "object"
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "owner": {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  },
                                  "permissions": {
                                    "properties": {
                                      "admin": { "type": "boolean" },
                                      "maintain": { "type": "boolean" },
                                      "pull": { "type": "boolean" },
                                      "push": { "type": "boolean" },
                                      "triage": { "type": "boolean" }
                                    },
                                    "required": ["admin", "pull", "push"],
                                    "type": "object"
                                  },
                                  "private": {
                                    "default": false,
                                    "description": "Whether the repository is private or public.",
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "example": "2011-01-26T19:06:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                    "type": "string"
                                  },
                                  "size": { "example": 108, "type": "integer" },
                                  "ssh_url": {
                                    "example": "git@github.com:octocat/Hello-World.git",
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "example": 80,
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:42Z\"",
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                    "type": "string"
                                  },
                                  "subscribers_count": { "type": "integer" },
                                  "subscribers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "svn_url": {
                                    "example": "https://svn.github.com/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "temp_clone_token": { "type": "string" },
                                  "template_repository": {
                                    "nullable": true,
                                    "properties": {
                                      "allow_auto_merge": { "type": "boolean" },
                                      "allow_merge_commit": {
                                        "type": "boolean"
                                      },
                                      "allow_rebase_merge": {
                                        "type": "boolean"
                                      },
                                      "allow_squash_merge": {
                                        "type": "boolean"
                                      },
                                      "archive_url": { "type": "string" },
                                      "archived": { "type": "boolean" },
                                      "assignees_url": { "type": "string" },
                                      "blobs_url": { "type": "string" },
                                      "branches_url": { "type": "string" },
                                      "clone_url": { "type": "string" },
                                      "collaborators_url": { "type": "string" },
                                      "comments_url": { "type": "string" },
                                      "commits_url": { "type": "string" },
                                      "compare_url": { "type": "string" },
                                      "contents_url": { "type": "string" },
                                      "contributors_url": { "type": "string" },
                                      "created_at": { "type": "string" },
                                      "default_branch": { "type": "string" },
                                      "delete_branch_on_merge": {
                                        "type": "boolean"
                                      },
                                      "deployments_url": { "type": "string" },
                                      "description": { "type": "string" },
                                      "disabled": { "type": "boolean" },
                                      "downloads_url": { "type": "string" },
                                      "events_url": { "type": "string" },
                                      "fork": { "type": "boolean" },
                                      "forks_count": { "type": "integer" },
                                      "forks_url": { "type": "string" },
                                      "full_name": { "type": "string" },
                                      "git_commits_url": { "type": "string" },
                                      "git_refs_url": { "type": "string" },
                                      "git_tags_url": { "type": "string" },
                                      "git_url": { "type": "string" },
                                      "has_downloads": { "type": "boolean" },
                                      "has_issues": { "type": "boolean" },
                                      "has_pages": { "type": "boolean" },
                                      "has_projects": { "type": "boolean" },
                                      "has_wiki": { "type": "boolean" },
                                      "homepage": { "type": "string" },
                                      "hooks_url": { "type": "string" },
                                      "html_url": { "type": "string" },
                                      "id": { "type": "integer" },
                                      "is_template": { "type": "boolean" },
                                      "issue_comment_url": { "type": "string" },
                                      "issue_events_url": { "type": "string" },
                                      "issues_url": { "type": "string" },
                                      "keys_url": { "type": "string" },
                                      "labels_url": { "type": "string" },
                                      "language": { "type": "string" },
                                      "languages_url": { "type": "string" },
                                      "merges_url": { "type": "string" },
                                      "milestones_url": { "type": "string" },
                                      "mirror_url": { "type": "string" },
                                      "name": { "type": "string" },
                                      "network_count": { "type": "integer" },
                                      "node_id": { "type": "string" },
                                      "notifications_url": { "type": "string" },
                                      "open_issues_count": {
                                        "type": "integer"
                                      },
                                      "owner": {
                                        "properties": {
                                          "avatar_url": { "type": "string" },
                                          "events_url": { "type": "string" },
                                          "followers_url": { "type": "string" },
                                          "following_url": { "type": "string" },
                                          "gists_url": { "type": "string" },
                                          "gravatar_id": { "type": "string" },
                                          "html_url": { "type": "string" },
                                          "id": { "type": "integer" },
                                          "login": { "type": "string" },
                                          "node_id": { "type": "string" },
                                          "organizations_url": {
                                            "type": "string"
                                          },
                                          "received_events_url": {
                                            "type": "string"
                                          },
                                          "repos_url": { "type": "string" },
                                          "site_admin": { "type": "boolean" },
                                          "starred_url": { "type": "string" },
                                          "subscriptions_url": {
                                            "type": "string"
                                          },
                                          "type": { "type": "string" },
                                          "url": { "type": "string" }
                                        },
                                        "type": "object"
                                      },
                                      "permissions": {
                                        "properties": {
                                          "admin": { "type": "boolean" },
                                          "maintain": { "type": "boolean" },
                                          "pull": { "type": "boolean" },
                                          "push": { "type": "boolean" },
                                          "triage": { "type": "boolean" }
                                        },
                                        "type": "object"
                                      },
                                      "private": { "type": "boolean" },
                                      "pulls_url": { "type": "string" },
                                      "pushed_at": { "type": "string" },
                                      "releases_url": { "type": "string" },
                                      "size": { "type": "integer" },
                                      "ssh_url": { "type": "string" },
                                      "stargazers_count": { "type": "integer" },
                                      "stargazers_url": { "type": "string" },
                                      "statuses_url": { "type": "string" },
                                      "subscribers_count": {
                                        "type": "integer"
                                      },
                                      "subscribers_url": { "type": "string" },
                                      "subscription_url": { "type": "string" },
                                      "svn_url": { "type": "string" },
                                      "tags_url": { "type": "string" },
                                      "teams_url": { "type": "string" },
                                      "temp_clone_token": { "type": "string" },
                                      "topics": {
                                        "items": { "type": "string" },
                                        "type": "array"
                                      },
                                      "trees_url": { "type": "string" },
                                      "updated_at": { "type": "string" },
                                      "url": { "type": "string" },
                                      "visibility": { "type": "string" },
                                      "watchers_count": { "type": "integer" }
                                    },
                                    "type": "object"
                                  },
                                  "topics": {
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "trees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "example": "2011-01-26T19:14:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/repos/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "visibility": {
                                    "default": "public",
                                    "description": "The repository visibility: public, private, or internal.",
                                    "type": "string"
                                  },
                                  "watchers": { "type": "integer" },
                                  "watchers_count": {
                                    "example": 80,
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url",
                                  "clone_url",
                                  "default_branch",
                                  "forks",
                                  "forks_count",
                                  "git_url",
                                  "has_downloads",
                                  "has_issues",
                                  "has_projects",
                                  "has_wiki",
                                  "has_pages",
                                  "homepage",
                                  "language",
                                  "archived",
                                  "disabled",
                                  "mirror_url",
                                  "open_issues",
                                  "open_issues_count",
                                  "license",
                                  "pushed_at",
                                  "size",
                                  "ssh_url",
                                  "stargazers_count",
                                  "svn_url",
                                  "watchers",
                                  "watchers_count",
                                  "created_at",
                                  "updated_at"
                                ],
                                "title": "Repository",
                                "type": "object"
                              }
                            ],
                            "nullable": true,
                            "type": "object"
                          },
                          "topics": {
                            "items": { "type": "string" },
                            "type": "array"
                          },
                          "trees_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "type": "string"
                          },
                          "updated_at": {
                            "example": "2011-01-26T19:14:43Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/repos/octocat/Hello-World",
                            "format": "uri",
                            "type": "string"
                          },
                          "visibility": { "type": "string" },
                          "watchers": { "example": 0, "type": "integer" },
                          "watchers_count": { "type": "integer" }
                        },
                        "required": [
                          "archive_url",
                          "assignees_url",
                          "blobs_url",
                          "branches_url",
                          "collaborators_url",
                          "comments_url",
                          "commits_url",
                          "compare_url",
                          "contents_url",
                          "contributors_url",
                          "deployments_url",
                          "description",
                          "downloads_url",
                          "events_url",
                          "fork",
                          "forks_url",
                          "full_name",
                          "git_commits_url",
                          "git_refs_url",
                          "git_tags_url",
                          "hooks_url",
                          "html_url",
                          "id",
                          "node_id",
                          "issue_comment_url",
                          "issue_events_url",
                          "issues_url",
                          "keys_url",
                          "labels_url",
                          "languages_url",
                          "merges_url",
                          "milestones_url",
                          "name",
                          "notifications_url",
                          "owner",
                          "private",
                          "pulls_url",
                          "releases_url",
                          "stargazers_url",
                          "statuses_url",
                          "subscribers_url",
                          "subscription_url",
                          "tags_url",
                          "teams_url",
                          "trees_url",
                          "url"
                        ],
                        "title": "Minimal Repository",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "List repositories in an organization migration",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "orgs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/packages",
        {
          "get": {
            "deprecated": null,
            "description": "Lists all packages in an organization readable by the user.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#list-packages-for-an-organization"
            },
            "operationId": "packages/list-packages-for-organization",
            "parameters": [
              {
                "allowReserved": null,
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "query",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "The selected visibility of the packages. Can be one of `public`, `private`, or `internal`. Only `container` package_types currently support `internal` visibility properly. For other ecosystems `internal` is synonymous with `private`. This parameter is optional and only filters an existing result set.",
                "in": "query",
                "name": "visibility",
                "required": false,
                "schema": {
                  "enum": ["public", "private", "internal"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2020-05-19T22:19:11Z",
                            "html_url": "https://github.com/orgs/github/packages/container/package/hello_docker",
                            "id": 197,
                            "name": "hello_docker",
                            "owner": {
                              "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                              "events_url": "https://api.github.com/users/github/events{/privacy}",
                              "followers_url": "https://api.github.com/users/github/followers",
                              "following_url": "https://api.github.com/users/github/following{/other_user}",
                              "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/github",
                              "id": 9919,
                              "login": "github",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                              "organizations_url": "https://api.github.com/users/github/orgs",
                              "received_events_url": "https://api.github.com/users/github/received_events",
                              "repos_url": "https://api.github.com/users/github/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                              "type": "Organization",
                              "url": "https://api.github.com/users/github"
                            },
                            "package_type": "container",
                            "updated_at": "2020-05-19T22:19:11Z",
                            "url": "https://api.github.com/orgs/github/packages/container/hello_docker",
                            "version_count": 1,
                            "visibility": "private"
                          },
                          {
                            "created_at": "2020-05-20T22:19:11Z",
                            "html_url": "https://github.com/orgs/github/packages/container/package/goodbye_docker",
                            "id": 198,
                            "name": "goodbye_docker",
                            "owner": {
                              "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                              "events_url": "https://api.github.com/users/github/events{/privacy}",
                              "followers_url": "https://api.github.com/users/github/followers",
                              "following_url": "https://api.github.com/users/github/following{/other_user}",
                              "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/github",
                              "id": 9919,
                              "login": "github",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                              "organizations_url": "https://api.github.com/users/github/orgs",
                              "received_events_url": "https://api.github.com/users/github/received_events",
                              "repos_url": "https://api.github.com/users/github/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                              "type": "Organization",
                              "url": "https://api.github.com/users/github"
                            },
                            "package_type": "container",
                            "updated_at": "2020-05-20T22:19:11Z",
                            "url": "https://api.github.com/orgs/github/packages/container/goodbye_docker",
                            "version_count": 2,
                            "visibility": "private"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "A software package",
                        "properties": {
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the package.",
                            "example": 1,
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the package.",
                            "example": "super-linter",
                            "type": "string"
                          },
                          "owner": {
                            "allOf": [
                              {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "package_type": {
                            "enum": [
                              "npm",
                              "maven",
                              "rubygems",
                              "docker",
                              "nuget",
                              "container"
                            ],
                            "example": "docker",
                            "type": "string"
                          },
                          "repository": {
                            "allOf": [
                              {
                                "description": "Minimal Repository",
                                "properties": {
                                  "archive_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                    "type": "string"
                                  },
                                  "archived": { "type": "boolean" },
                                  "assignees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                    "type": "string"
                                  },
                                  "clone_url": { "type": "string" },
                                  "code_of_conduct": {
                                    "description": "Code Of Conduct",
                                    "properties": {
                                      "body": {
                                        "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "format": "uri",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "key": {
                                        "example": "contributor_covenant",
                                        "type": "string"
                                      },
                                      "name": {
                                        "example": "Contributor Covenant",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "url",
                                      "html_url",
                                      "key",
                                      "name"
                                    ],
                                    "title": "Code Of Conduct",
                                    "type": "object"
                                  },
                                  "collaborators_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "example": "2011-01-26T19:01:12Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "default_branch": { "type": "string" },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "description": {
                                    "example": "This your first repo!",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "disabled": { "type": "boolean" },
                                  "downloads_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "fork": { "type": "boolean" },
                                  "forks": { "example": 0, "type": "integer" },
                                  "forks_count": { "type": "integer" },
                                  "forks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "example": "octocat/Hello-World",
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                    "type": "string"
                                  },
                                  "git_url": { "type": "string" },
                                  "has_downloads": { "type": "boolean" },
                                  "has_issues": { "type": "boolean" },
                                  "has_pages": { "type": "boolean" },
                                  "has_projects": { "type": "boolean" },
                                  "has_wiki": { "type": "boolean" },
                                  "homepage": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "example": 1296269,
                                    "type": "integer"
                                  },
                                  "is_template": { "type": "boolean" },
                                  "issue_comment_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                    "type": "string"
                                  },
                                  "language": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "license": {
                                    "nullable": true,
                                    "properties": {
                                      "key": { "type": "string" },
                                      "name": { "type": "string" },
                                      "node_id": { "type": "string" },
                                      "spdx_id": { "type": "string" },
                                      "url": { "type": "string" }
                                    },
                                    "type": "object"
                                  },
                                  "merges_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "Hello-World",
                                    "type": "string"
                                  },
                                  "network_count": { "type": "integer" },
                                  "node_id": {
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                    "type": "string"
                                  },
                                  "open_issues": {
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "open_issues_count": { "type": "integer" },
                                  "owner": {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  },
                                  "permissions": {
                                    "properties": {
                                      "admin": { "type": "boolean" },
                                      "maintain": { "type": "boolean" },
                                      "pull": { "type": "boolean" },
                                      "push": { "type": "boolean" },
                                      "triage": { "type": "boolean" }
                                    },
                                    "type": "object"
                                  },
                                  "private": { "type": "boolean" },
                                  "pulls_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "example": "2011-01-26T19:06:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                    "type": "string"
                                  },
                                  "size": { "type": "integer" },
                                  "ssh_url": { "type": "string" },
                                  "stargazers_count": { "type": "integer" },
                                  "stargazers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                    "type": "string"
                                  },
                                  "subscribers_count": { "type": "integer" },
                                  "subscribers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "svn_url": { "type": "string" },
                                  "tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "temp_clone_token": { "type": "string" },
                                  "template_repository": {
                                    "allOf": [
                                      {
                                        "description": "A git repository",
                                        "properties": {
                                          "allow_auto_merge": {
                                            "default": false,
                                            "description": "Whether to allow Auto-merge to be used on pull requests.",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "allow_merge_commit": {
                                            "default": true,
                                            "description": "Whether to allow merge commits for pull requests.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "allow_rebase_merge": {
                                            "default": true,
                                            "description": "Whether to allow rebase merges for pull requests.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "allow_squash_merge": {
                                            "default": true,
                                            "description": "Whether to allow squash merges for pull requests.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "archive_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                            "type": "string"
                                          },
                                          "archived": {
                                            "default": false,
                                            "description": "Whether the repository is archived.",
                                            "type": "boolean"
                                          },
                                          "assignees_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                            "type": "string"
                                          },
                                          "blobs_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                            "type": "string"
                                          },
                                          "branches_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                            "type": "string"
                                          },
                                          "clone_url": {
                                            "example": "https://github.com/octocat/Hello-World.git",
                                            "type": "string"
                                          },
                                          "collaborators_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                            "type": "string"
                                          },
                                          "comments_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                            "type": "string"
                                          },
                                          "commits_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                            "type": "string"
                                          },
                                          "compare_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                            "type": "string"
                                          },
                                          "contents_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                            "type": "string"
                                          },
                                          "contributors_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "created_at": {
                                            "example": "2011-01-26T19:01:12Z",
                                            "format": "date-time",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "default_branch": {
                                            "description": "The default branch of the repository.",
                                            "example": "master",
                                            "type": "string"
                                          },
                                          "delete_branch_on_merge": {
                                            "default": false,
                                            "description": "Whether to delete head branches when pull requests are merged",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "deployments_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "description": {
                                            "example": "This your first repo!",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "disabled": {
                                            "description": "Returns whether or not this repository disabled.",
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "fork": { "type": "boolean" },
                                          "forks": { "type": "integer" },
                                          "forks_count": {
                                            "example": 9,
                                            "type": "integer"
                                          },
                                          "forks_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "full_name": {
                                            "example": "octocat/Hello-World",
                                            "type": "string"
                                          },
                                          "git_commits_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                            "type": "string"
                                          },
                                          "git_refs_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                            "type": "string"
                                          },
                                          "git_tags_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                            "type": "string"
                                          },
                                          "git_url": {
                                            "example": "git:github.com/octocat/Hello-World.git",
                                            "type": "string"
                                          },
                                          "has_downloads": {
                                            "default": true,
                                            "description": "Whether downloads are enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "has_issues": {
                                            "default": true,
                                            "description": "Whether issues are enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "has_pages": { "type": "boolean" },
                                          "has_projects": {
                                            "default": true,
                                            "description": "Whether projects are enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "has_wiki": {
                                            "default": true,
                                            "description": "Whether the wiki is enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "homepage": {
                                            "example": "https://github.com",
                                            "format": "uri",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "hooks_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "example": "https://github.com/octocat/Hello-World",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Unique identifier of the repository",
                                            "example": 42,
                                            "type": "integer"
                                          },
                                          "is_template": {
                                            "default": false,
                                            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "issue_comment_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                            "type": "string"
                                          },
                                          "issue_events_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                            "type": "string"
                                          },
                                          "issues_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                            "type": "string"
                                          },
                                          "keys_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                            "type": "string"
                                          },
                                          "labels_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                            "type": "string"
                                          },
                                          "language": {
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "languages_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "license": {
                                            "allOf": [
                                              {
                                                "description": "License Simple",
                                                "properties": {
                                                  "html_url": {
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "key": {
                                                    "example": "mit",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "example": "MIT License",
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "example": "MDc6TGljZW5zZW1pdA==",
                                                    "type": "string"
                                                  },
                                                  "spdx_id": {
                                                    "example": "MIT",
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "example": "https://api.github.com/licenses/mit",
                                                    "format": "uri",
                                                    "nullable": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "key",
                                                  "name",
                                                  "url",
                                                  "spdx_id",
                                                  "node_id"
                                                ],
                                                "title": "License Simple",
                                                "type": "object"
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "master_branch": { "type": "string" },
                                          "merges_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "milestones_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                            "type": "string"
                                          },
                                          "mirror_url": {
                                            "example": "git:git.example.com/octocat/Hello-World",
                                            "format": "uri",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the repository.",
                                            "example": "Team Environment",
                                            "type": "string"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                            "type": "string"
                                          },
                                          "notifications_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                            "type": "string"
                                          },
                                          "open_issues": { "type": "integer" },
                                          "open_issues_count": {
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "organization": {
                                            "allOf": [
                                              {
                                                "description": "Simple User",
                                                "nullable": true,
                                                "properties": {
                                                  "avatar_url": {
                                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "email": {
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "example": "https://api.github.com/users/octocat/followers",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "example": "https://github.com/octocat",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "example": 1,
                                                    "type": "integer"
                                                  },
                                                  "login": {
                                                    "example": "octocat",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "example": "MDQ6VXNlcjE=",
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "example": "https://api.github.com/users/octocat/orgs",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "example": "https://api.github.com/users/octocat/received_events",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "example": "https://api.github.com/users/octocat/repos",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_at": {
                                                    "example": "\"2020-07-09T00:17:55Z\"",
                                                    "type": "string"
                                                  },
                                                  "starred_url": {
                                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "example": "User",
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "example": "https://api.github.com/users/octocat",
                                                    "format": "uri",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "avatar_url",
                                                  "events_url",
                                                  "followers_url",
                                                  "following_url",
                                                  "gists_url",
                                                  "gravatar_id",
                                                  "html_url",
                                                  "id",
                                                  "node_id",
                                                  "login",
                                                  "organizations_url",
                                                  "received_events_url",
                                                  "repos_url",
                                                  "site_admin",
                                                  "starred_url",
                                                  "subscriptions_url",
                                                  "type",
                                                  "url"
                                                ],
                                                "title": "Simple User",
                                                "type": "object"
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "owner": {
                                            "description": "Simple User",
                                            "nullable": true,
                                            "properties": {
                                              "avatar_url": {
                                                "example": "https://github.com/images/error/octocat_happy.gif",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "email": {
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                "type": "string"
                                              },
                                              "followers_url": {
                                                "example": "https://api.github.com/users/octocat/followers",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "following_url": {
                                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                "type": "string"
                                              },
                                              "gists_url": {
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                "type": "string"
                                              },
                                              "gravatar_id": {
                                                "example": "41d064eb2195891e12d0413f63227ea7",
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "example": "https://github.com/octocat",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "id": {
                                                "example": 1,
                                                "type": "integer"
                                              },
                                              "login": {
                                                "example": "octocat",
                                                "type": "string"
                                              },
                                              "name": {
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "node_id": {
                                                "example": "MDQ6VXNlcjE=",
                                                "type": "string"
                                              },
                                              "organizations_url": {
                                                "example": "https://api.github.com/users/octocat/orgs",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "received_events_url": {
                                                "example": "https://api.github.com/users/octocat/received_events",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "repos_url": {
                                                "example": "https://api.github.com/users/octocat/repos",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "example": "\"2020-07-09T00:17:55Z\"",
                                                "type": "string"
                                              },
                                              "starred_url": {
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                "type": "string"
                                              },
                                              "subscriptions_url": {
                                                "example": "https://api.github.com/users/octocat/subscriptions",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "type": {
                                                "example": "User",
                                                "type": "string"
                                              },
                                              "url": {
                                                "example": "https://api.github.com/users/octocat",
                                                "format": "uri",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "title": "Simple User",
                                            "type": "object"
                                          },
                                          "permissions": {
                                            "properties": {
                                              "admin": { "type": "boolean" },
                                              "maintain": { "type": "boolean" },
                                              "pull": { "type": "boolean" },
                                              "push": { "type": "boolean" },
                                              "triage": { "type": "boolean" }
                                            },
                                            "required": [
                                              "admin",
                                              "pull",
                                              "push"
                                            ],
                                            "type": "object"
                                          },
                                          "private": {
                                            "default": false,
                                            "description": "Whether the repository is private or public.",
                                            "type": "boolean"
                                          },
                                          "pulls_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                            "type": "string"
                                          },
                                          "pushed_at": {
                                            "example": "2011-01-26T19:06:43Z",
                                            "format": "date-time",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "releases_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                            "type": "string"
                                          },
                                          "size": {
                                            "example": 108,
                                            "type": "integer"
                                          },
                                          "ssh_url": {
                                            "example": "git@github.com:octocat/Hello-World.git",
                                            "type": "string"
                                          },
                                          "stargazers_count": {
                                            "example": 80,
                                            "type": "integer"
                                          },
                                          "stargazers_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "starred_at": {
                                            "example": "\"2020-07-09T00:17:42Z\"",
                                            "type": "string"
                                          },
                                          "statuses_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                            "type": "string"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "subscription_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "svn_url": {
                                            "example": "https://svn.github.com/octocat/Hello-World",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "tags_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "teams_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "temp_clone_token": {
                                            "type": "string"
                                          },
                                          "template_repository": {
                                            "nullable": true,
                                            "properties": {
                                              "allow_auto_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_merge_commit": {
                                                "type": "boolean"
                                              },
                                              "allow_rebase_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_squash_merge": {
                                                "type": "boolean"
                                              },
                                              "archive_url": {
                                                "type": "string"
                                              },
                                              "archived": { "type": "boolean" },
                                              "assignees_url": {
                                                "type": "string"
                                              },
                                              "blobs_url": { "type": "string" },
                                              "branches_url": {
                                                "type": "string"
                                              },
                                              "clone_url": { "type": "string" },
                                              "collaborators_url": {
                                                "type": "string"
                                              },
                                              "comments_url": {
                                                "type": "string"
                                              },
                                              "commits_url": {
                                                "type": "string"
                                              },
                                              "compare_url": {
                                                "type": "string"
                                              },
                                              "contents_url": {
                                                "type": "string"
                                              },
                                              "contributors_url": {
                                                "type": "string"
                                              },
                                              "created_at": {
                                                "type": "string"
                                              },
                                              "default_branch": {
                                                "type": "string"
                                              },
                                              "delete_branch_on_merge": {
                                                "type": "boolean"
                                              },
                                              "deployments_url": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "disabled": { "type": "boolean" },
                                              "downloads_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "fork": { "type": "boolean" },
                                              "forks_count": {
                                                "type": "integer"
                                              },
                                              "forks_url": { "type": "string" },
                                              "full_name": { "type": "string" },
                                              "git_commits_url": {
                                                "type": "string"
                                              },
                                              "git_refs_url": {
                                                "type": "string"
                                              },
                                              "git_tags_url": {
                                                "type": "string"
                                              },
                                              "git_url": { "type": "string" },
                                              "has_downloads": {
                                                "type": "boolean"
                                              },
                                              "has_issues": {
                                                "type": "boolean"
                                              },
                                              "has_pages": {
                                                "type": "boolean"
                                              },
                                              "has_projects": {
                                                "type": "boolean"
                                              },
                                              "has_wiki": { "type": "boolean" },
                                              "homepage": { "type": "string" },
                                              "hooks_url": { "type": "string" },
                                              "html_url": { "type": "string" },
                                              "id": { "type": "integer" },
                                              "is_template": {
                                                "type": "boolean"
                                              },
                                              "issue_comment_url": {
                                                "type": "string"
                                              },
                                              "issue_events_url": {
                                                "type": "string"
                                              },
                                              "issues_url": {
                                                "type": "string"
                                              },
                                              "keys_url": { "type": "string" },
                                              "labels_url": {
                                                "type": "string"
                                              },
                                              "language": { "type": "string" },
                                              "languages_url": {
                                                "type": "string"
                                              },
                                              "merges_url": {
                                                "type": "string"
                                              },
                                              "milestones_url": {
                                                "type": "string"
                                              },
                                              "mirror_url": {
                                                "type": "string"
                                              },
                                              "name": { "type": "string" },
                                              "network_count": {
                                                "type": "integer"
                                              },
                                              "node_id": { "type": "string" },
                                              "notifications_url": {
                                                "type": "string"
                                              },
                                              "open_issues_count": {
                                                "type": "integer"
                                              },
                                              "owner": {
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "type": "string"
                                                  },
                                                  "id": { "type": "integer" },
                                                  "login": { "type": "string" },
                                                  "node_id": {
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_url": {
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string"
                                                  },
                                                  "type": { "type": "string" },
                                                  "url": { "type": "string" }
                                                },
                                                "type": "object"
                                              },
                                              "permissions": {
                                                "properties": {
                                                  "admin": {
                                                    "type": "boolean"
                                                  },
                                                  "maintain": {
                                                    "type": "boolean"
                                                  },
                                                  "pull": { "type": "boolean" },
                                                  "push": { "type": "boolean" },
                                                  "triage": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "private": { "type": "boolean" },
                                              "pulls_url": { "type": "string" },
                                              "pushed_at": { "type": "string" },
                                              "releases_url": {
                                                "type": "string"
                                              },
                                              "size": { "type": "integer" },
                                              "ssh_url": { "type": "string" },
                                              "stargazers_count": {
                                                "type": "integer"
                                              },
                                              "stargazers_url": {
                                                "type": "string"
                                              },
                                              "statuses_url": {
                                                "type": "string"
                                              },
                                              "subscribers_count": {
                                                "type": "integer"
                                              },
                                              "subscribers_url": {
                                                "type": "string"
                                              },
                                              "subscription_url": {
                                                "type": "string"
                                              },
                                              "svn_url": { "type": "string" },
                                              "tags_url": { "type": "string" },
                                              "teams_url": { "type": "string" },
                                              "temp_clone_token": {
                                                "type": "string"
                                              },
                                              "topics": {
                                                "items": { "type": "string" },
                                                "type": "array"
                                              },
                                              "trees_url": { "type": "string" },
                                              "updated_at": {
                                                "type": "string"
                                              },
                                              "url": { "type": "string" },
                                              "visibility": {
                                                "type": "string"
                                              },
                                              "watchers_count": {
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "topics": {
                                            "items": { "type": "string" },
                                            "type": "array"
                                          },
                                          "trees_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                            "type": "string"
                                          },
                                          "updated_at": {
                                            "example": "2011-01-26T19:14:43Z",
                                            "format": "date-time",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "url": {
                                            "example": "https://api.github.com/repos/octocat/Hello-World",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "visibility": {
                                            "default": "public",
                                            "description": "The repository visibility: public, private, or internal.",
                                            "type": "string"
                                          },
                                          "watchers": { "type": "integer" },
                                          "watchers_count": {
                                            "example": 80,
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "archive_url",
                                          "assignees_url",
                                          "blobs_url",
                                          "branches_url",
                                          "collaborators_url",
                                          "comments_url",
                                          "commits_url",
                                          "compare_url",
                                          "contents_url",
                                          "contributors_url",
                                          "deployments_url",
                                          "description",
                                          "downloads_url",
                                          "events_url",
                                          "fork",
                                          "forks_url",
                                          "full_name",
                                          "git_commits_url",
                                          "git_refs_url",
                                          "git_tags_url",
                                          "hooks_url",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "issue_comment_url",
                                          "issue_events_url",
                                          "issues_url",
                                          "keys_url",
                                          "labels_url",
                                          "languages_url",
                                          "merges_url",
                                          "milestones_url",
                                          "name",
                                          "notifications_url",
                                          "owner",
                                          "private",
                                          "pulls_url",
                                          "releases_url",
                                          "stargazers_url",
                                          "statuses_url",
                                          "subscribers_url",
                                          "subscription_url",
                                          "tags_url",
                                          "teams_url",
                                          "trees_url",
                                          "url",
                                          "clone_url",
                                          "default_branch",
                                          "forks",
                                          "forks_count",
                                          "git_url",
                                          "has_downloads",
                                          "has_issues",
                                          "has_projects",
                                          "has_wiki",
                                          "has_pages",
                                          "homepage",
                                          "language",
                                          "archived",
                                          "disabled",
                                          "mirror_url",
                                          "open_issues",
                                          "open_issues_count",
                                          "license",
                                          "pushed_at",
                                          "size",
                                          "ssh_url",
                                          "stargazers_count",
                                          "svn_url",
                                          "watchers",
                                          "watchers_count",
                                          "created_at",
                                          "updated_at"
                                        ],
                                        "title": "Repository",
                                        "type": "object"
                                      }
                                    ],
                                    "nullable": true,
                                    "type": "object"
                                  },
                                  "topics": {
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "trees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "example": "2011-01-26T19:14:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/repos/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "visibility": { "type": "string" },
                                  "watchers": {
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "watchers_count": { "type": "integer" }
                                },
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url"
                                ],
                                "title": "Minimal Repository",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/orgs/github/packages/container/super-linter",
                            "type": "string"
                          },
                          "version_count": {
                            "description": "The number of versions of the package.",
                            "example": 1,
                            "type": "integer"
                          },
                          "visibility": {
                            "enum": ["private", "public"],
                            "example": "private",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "package_type",
                          "visibility",
                          "url",
                          "html_url",
                          "version_count",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Package",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              }
            },
            "summary": "List packages for an organization",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/packages/{package_type}/{package_name}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes an entire package in an organization. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.\n\nTo use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:\n- If `package_type` is not `container`, your token must also include the `repo` scope.\n- If `package_type` is `container`, you must also have admin permissions to the container you want to delete.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#delete-a-package-for-an-organization"
            },
            "operationId": "packages/delete-package-for-org",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete a package for an organization",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Gets a specific package in an organization.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#get-a-package-for-an-organization"
            },
            "operationId": "packages/get-package-for-organization",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2020-05-19T22:19:11Z",
                          "html_url": "https://github.com/orgs/github/packages/container/package/hello_docker",
                          "id": 197,
                          "name": "hello_docker",
                          "owner": {
                            "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                            "events_url": "https://api.github.com/users/github/events{/privacy}",
                            "followers_url": "https://api.github.com/users/github/followers",
                            "following_url": "https://api.github.com/users/github/following{/other_user}",
                            "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/github",
                            "id": 9919,
                            "login": "github",
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                            "organizations_url": "https://api.github.com/users/github/orgs",
                            "received_events_url": "https://api.github.com/users/github/received_events",
                            "repos_url": "https://api.github.com/users/github/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                            "type": "Organization",
                            "url": "https://api.github.com/users/github"
                          },
                          "package_type": "container",
                          "updated_at": "2020-05-19T22:19:11Z",
                          "url": "https://api.github.com/orgs/github/packages/container/hello_docker",
                          "version_count": 1,
                          "visibility": "private"
                        }
                      }
                    },
                    "schema": {
                      "description": "A software package",
                      "properties": {
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "html_url": {
                          "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the package.",
                          "example": 1,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the package.",
                          "example": "super-linter",
                          "type": "string"
                        },
                        "owner": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "package_type": {
                          "enum": [
                            "npm",
                            "maven",
                            "rubygems",
                            "docker",
                            "nuget",
                            "container"
                          ],
                          "example": "docker",
                          "type": "string"
                        },
                        "repository": {
                          "allOf": [
                            {
                              "description": "Minimal Repository",
                              "properties": {
                                "archive_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                  "type": "string"
                                },
                                "archived": { "type": "boolean" },
                                "assignees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                  "type": "string"
                                },
                                "blobs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                  "type": "string"
                                },
                                "branches_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                  "type": "string"
                                },
                                "clone_url": { "type": "string" },
                                "code_of_conduct": {
                                  "description": "Code Of Conduct",
                                  "properties": {
                                    "body": {
                                      "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "format": "uri",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "key": {
                                      "example": "contributor_covenant",
                                      "type": "string"
                                    },
                                    "name": {
                                      "example": "Contributor Covenant",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "url",
                                    "html_url",
                                    "key",
                                    "name"
                                  ],
                                  "title": "Code Of Conduct",
                                  "type": "object"
                                },
                                "collaborators_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                  "type": "string"
                                },
                                "comments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                  "type": "string"
                                },
                                "commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                  "type": "string"
                                },
                                "compare_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                  "type": "string"
                                },
                                "contents_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                  "type": "string"
                                },
                                "contributors_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "created_at": {
                                  "example": "2011-01-26T19:01:12Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "default_branch": { "type": "string" },
                                "delete_branch_on_merge": { "type": "boolean" },
                                "deployments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "description": {
                                  "example": "This your first repo!",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "disabled": { "type": "boolean" },
                                "downloads_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "fork": { "type": "boolean" },
                                "forks": { "example": 0, "type": "integer" },
                                "forks_count": { "type": "integer" },
                                "forks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "full_name": {
                                  "example": "octocat/Hello-World",
                                  "type": "string"
                                },
                                "git_commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                  "type": "string"
                                },
                                "git_refs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                  "type": "string"
                                },
                                "git_tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                  "type": "string"
                                },
                                "git_url": { "type": "string" },
                                "has_downloads": { "type": "boolean" },
                                "has_issues": { "type": "boolean" },
                                "has_pages": { "type": "boolean" },
                                "has_projects": { "type": "boolean" },
                                "has_wiki": { "type": "boolean" },
                                "homepage": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "hooks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1296269, "type": "integer" },
                                "is_template": { "type": "boolean" },
                                "issue_comment_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                  "type": "string"
                                },
                                "issue_events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                  "type": "string"
                                },
                                "issues_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                  "type": "string"
                                },
                                "keys_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                  "type": "string"
                                },
                                "labels_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                  "type": "string"
                                },
                                "language": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "languages_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "license": {
                                  "nullable": true,
                                  "properties": {
                                    "key": { "type": "string" },
                                    "name": { "type": "string" },
                                    "node_id": { "type": "string" },
                                    "spdx_id": { "type": "string" },
                                    "url": { "type": "string" }
                                  },
                                  "type": "object"
                                },
                                "merges_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "milestones_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                  "type": "string"
                                },
                                "mirror_url": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "name": {
                                  "example": "Hello-World",
                                  "type": "string"
                                },
                                "network_count": { "type": "integer" },
                                "node_id": {
                                  "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                  "type": "string"
                                },
                                "notifications_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                  "type": "string"
                                },
                                "open_issues": {
                                  "example": 0,
                                  "type": "integer"
                                },
                                "open_issues_count": { "type": "integer" },
                                "owner": {
                                  "description": "Simple User",
                                  "nullable": true,
                                  "properties": {
                                    "avatar_url": {
                                      "example": "https://github.com/images/error/octocat_happy.gif",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "email": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "example": "https://api.github.com/users/octocat/events{/privacy}",
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "example": "https://api.github.com/users/octocat/followers",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "example": "https://api.github.com/users/octocat/following{/other_user}",
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "example": "41d064eb2195891e12d0413f63227ea7",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "example": "https://github.com/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "id": { "example": 1, "type": "integer" },
                                    "login": {
                                      "example": "octocat",
                                      "type": "string"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "example": "MDQ6VXNlcjE=",
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "example": "https://api.github.com/users/octocat/orgs",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "example": "https://api.github.com/users/octocat/received_events",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "example": "https://api.github.com/users/octocat/repos",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "site_admin": { "type": "boolean" },
                                    "starred_at": {
                                      "example": "\"2020-07-09T00:17:55Z\"",
                                      "type": "string"
                                    },
                                    "starred_url": {
                                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "example": "https://api.github.com/users/octocat/subscriptions",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": {
                                      "example": "User",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/users/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "title": "Simple User",
                                  "type": "object"
                                },
                                "permissions": {
                                  "properties": {
                                    "admin": { "type": "boolean" },
                                    "maintain": { "type": "boolean" },
                                    "pull": { "type": "boolean" },
                                    "push": { "type": "boolean" },
                                    "triage": { "type": "boolean" }
                                  },
                                  "type": "object"
                                },
                                "private": { "type": "boolean" },
                                "pulls_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                  "type": "string"
                                },
                                "pushed_at": {
                                  "example": "2011-01-26T19:06:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "releases_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                  "type": "string"
                                },
                                "size": { "type": "integer" },
                                "ssh_url": { "type": "string" },
                                "stargazers_count": { "type": "integer" },
                                "stargazers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "statuses_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                  "type": "string"
                                },
                                "subscribers_count": { "type": "integer" },
                                "subscribers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "subscription_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "svn_url": { "type": "string" },
                                "tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "teams_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "temp_clone_token": { "type": "string" },
                                "template_repository": {
                                  "allOf": [
                                    {
                                      "description": "A git repository",
                                      "properties": {
                                        "allow_auto_merge": {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "allow_merge_commit": {
                                          "default": true,
                                          "description": "Whether to allow merge commits for pull requests.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "allow_rebase_merge": {
                                          "default": true,
                                          "description": "Whether to allow rebase merges for pull requests.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "allow_squash_merge": {
                                          "default": true,
                                          "description": "Whether to allow squash merges for pull requests.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "archive_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                          "type": "string"
                                        },
                                        "archived": {
                                          "default": false,
                                          "description": "Whether the repository is archived.",
                                          "type": "boolean"
                                        },
                                        "assignees_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                          "type": "string"
                                        },
                                        "blobs_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                          "type": "string"
                                        },
                                        "branches_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                          "type": "string"
                                        },
                                        "clone_url": {
                                          "example": "https://github.com/octocat/Hello-World.git",
                                          "type": "string"
                                        },
                                        "collaborators_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                          "type": "string"
                                        },
                                        "comments_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                          "type": "string"
                                        },
                                        "commits_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                          "type": "string"
                                        },
                                        "compare_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                          "type": "string"
                                        },
                                        "contents_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                          "type": "string"
                                        },
                                        "contributors_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "created_at": {
                                          "example": "2011-01-26T19:01:12Z",
                                          "format": "date-time",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "default_branch": {
                                          "description": "The default branch of the repository.",
                                          "example": "master",
                                          "type": "string"
                                        },
                                        "delete_branch_on_merge": {
                                          "default": false,
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "deployments_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "description": {
                                          "example": "This your first repo!",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "disabled": {
                                          "description": "Returns whether or not this repository disabled.",
                                          "type": "boolean"
                                        },
                                        "downloads_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "fork": { "type": "boolean" },
                                        "forks": { "type": "integer" },
                                        "forks_count": {
                                          "example": 9,
                                          "type": "integer"
                                        },
                                        "forks_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "full_name": {
                                          "example": "octocat/Hello-World",
                                          "type": "string"
                                        },
                                        "git_commits_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                          "type": "string"
                                        },
                                        "git_refs_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                          "type": "string"
                                        },
                                        "git_tags_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                          "type": "string"
                                        },
                                        "git_url": {
                                          "example": "git:github.com/octocat/Hello-World.git",
                                          "type": "string"
                                        },
                                        "has_downloads": {
                                          "default": true,
                                          "description": "Whether downloads are enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "has_issues": {
                                          "default": true,
                                          "description": "Whether issues are enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "has_pages": { "type": "boolean" },
                                        "has_projects": {
                                          "default": true,
                                          "description": "Whether projects are enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "has_wiki": {
                                          "default": true,
                                          "description": "Whether the wiki is enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "homepage": {
                                          "example": "https://github.com",
                                          "format": "uri",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "hooks_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "example": "https://github.com/octocat/Hello-World",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Unique identifier of the repository",
                                          "example": 42,
                                          "type": "integer"
                                        },
                                        "is_template": {
                                          "default": false,
                                          "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "issue_comment_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                          "type": "string"
                                        },
                                        "issue_events_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                          "type": "string"
                                        },
                                        "issues_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                          "type": "string"
                                        },
                                        "keys_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                          "type": "string"
                                        },
                                        "labels_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                          "type": "string"
                                        },
                                        "language": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "languages_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "license": {
                                          "allOf": [
                                            {
                                              "description": "License Simple",
                                              "properties": {
                                                "html_url": {
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "example": "mit",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "example": "MIT License",
                                                  "type": "string"
                                                },
                                                "node_id": {
                                                  "example": "MDc6TGljZW5zZW1pdA==",
                                                  "type": "string"
                                                },
                                                "spdx_id": {
                                                  "example": "MIT",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "example": "https://api.github.com/licenses/mit",
                                                  "format": "uri",
                                                  "nullable": true,
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "key",
                                                "name",
                                                "url",
                                                "spdx_id",
                                                "node_id"
                                              ],
                                              "title": "License Simple",
                                              "type": "object"
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "master_branch": { "type": "string" },
                                        "merges_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "milestones_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                          "type": "string"
                                        },
                                        "mirror_url": {
                                          "example": "git:git.example.com/octocat/Hello-World",
                                          "format": "uri",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the repository.",
                                          "example": "Team Environment",
                                          "type": "string"
                                        },
                                        "network_count": { "type": "integer" },
                                        "node_id": {
                                          "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                          "type": "string"
                                        },
                                        "notifications_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                          "type": "string"
                                        },
                                        "open_issues": { "type": "integer" },
                                        "open_issues_count": {
                                          "example": 0,
                                          "type": "integer"
                                        },
                                        "organization": {
                                          "allOf": [
                                            {
                                              "description": "Simple User",
                                              "nullable": true,
                                              "properties": {
                                                "avatar_url": {
                                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "email": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "events_url": {
                                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                  "type": "string"
                                                },
                                                "followers_url": {
                                                  "example": "https://api.github.com/users/octocat/followers",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "following_url": {
                                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                  "type": "string"
                                                },
                                                "gists_url": {
                                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                  "type": "string"
                                                },
                                                "gravatar_id": {
                                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "example": "https://github.com/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "example": 1,
                                                  "type": "integer"
                                                },
                                                "login": {
                                                  "example": "octocat",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "node_id": {
                                                  "example": "MDQ6VXNlcjE=",
                                                  "type": "string"
                                                },
                                                "organizations_url": {
                                                  "example": "https://api.github.com/users/octocat/orgs",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "received_events_url": {
                                                  "example": "https://api.github.com/users/octocat/received_events",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "repos_url": {
                                                  "example": "https://api.github.com/users/octocat/repos",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "site_admin": {
                                                  "type": "boolean"
                                                },
                                                "starred_at": {
                                                  "example": "\"2020-07-09T00:17:55Z\"",
                                                  "type": "string"
                                                },
                                                "starred_url": {
                                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                  "type": "string"
                                                },
                                                "subscriptions_url": {
                                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "example": "User",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "example": "https://api.github.com/users/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "avatar_url",
                                                "events_url",
                                                "followers_url",
                                                "following_url",
                                                "gists_url",
                                                "gravatar_id",
                                                "html_url",
                                                "id",
                                                "node_id",
                                                "login",
                                                "organizations_url",
                                                "received_events_url",
                                                "repos_url",
                                                "site_admin",
                                                "starred_url",
                                                "subscriptions_url",
                                                "type",
                                                "url"
                                              ],
                                              "title": "Simple User",
                                              "type": "object"
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "owner": {
                                          "description": "Simple User",
                                          "nullable": true,
                                          "properties": {
                                            "avatar_url": {
                                              "example": "https://github.com/images/error/octocat_happy.gif",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "email": {
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "events_url": {
                                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                                              "type": "string"
                                            },
                                            "followers_url": {
                                              "example": "https://api.github.com/users/octocat/followers",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "following_url": {
                                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                                              "type": "string"
                                            },
                                            "gists_url": {
                                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                              "type": "string"
                                            },
                                            "gravatar_id": {
                                              "example": "41d064eb2195891e12d0413f63227ea7",
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "html_url": {
                                              "example": "https://github.com/octocat",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "id": {
                                              "example": 1,
                                              "type": "integer"
                                            },
                                            "login": {
                                              "example": "octocat",
                                              "type": "string"
                                            },
                                            "name": {
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "node_id": {
                                              "example": "MDQ6VXNlcjE=",
                                              "type": "string"
                                            },
                                            "organizations_url": {
                                              "example": "https://api.github.com/users/octocat/orgs",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "received_events_url": {
                                              "example": "https://api.github.com/users/octocat/received_events",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "repos_url": {
                                              "example": "https://api.github.com/users/octocat/repos",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "site_admin": { "type": "boolean" },
                                            "starred_at": {
                                              "example": "\"2020-07-09T00:17:55Z\"",
                                              "type": "string"
                                            },
                                            "starred_url": {
                                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                              "type": "string"
                                            },
                                            "subscriptions_url": {
                                              "example": "https://api.github.com/users/octocat/subscriptions",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "type": {
                                              "example": "User",
                                              "type": "string"
                                            },
                                            "url": {
                                              "example": "https://api.github.com/users/octocat",
                                              "format": "uri",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "avatar_url",
                                            "events_url",
                                            "followers_url",
                                            "following_url",
                                            "gists_url",
                                            "gravatar_id",
                                            "html_url",
                                            "id",
                                            "node_id",
                                            "login",
                                            "organizations_url",
                                            "received_events_url",
                                            "repos_url",
                                            "site_admin",
                                            "starred_url",
                                            "subscriptions_url",
                                            "type",
                                            "url"
                                          ],
                                          "title": "Simple User",
                                          "type": "object"
                                        },
                                        "permissions": {
                                          "properties": {
                                            "admin": { "type": "boolean" },
                                            "maintain": { "type": "boolean" },
                                            "pull": { "type": "boolean" },
                                            "push": { "type": "boolean" },
                                            "triage": { "type": "boolean" }
                                          },
                                          "required": ["admin", "pull", "push"],
                                          "type": "object"
                                        },
                                        "private": {
                                          "default": false,
                                          "description": "Whether the repository is private or public.",
                                          "type": "boolean"
                                        },
                                        "pulls_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                          "type": "string"
                                        },
                                        "pushed_at": {
                                          "example": "2011-01-26T19:06:43Z",
                                          "format": "date-time",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "releases_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                          "type": "string"
                                        },
                                        "size": {
                                          "example": 108,
                                          "type": "integer"
                                        },
                                        "ssh_url": {
                                          "example": "git@github.com:octocat/Hello-World.git",
                                          "type": "string"
                                        },
                                        "stargazers_count": {
                                          "example": 80,
                                          "type": "integer"
                                        },
                                        "stargazers_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "starred_at": {
                                          "example": "\"2020-07-09T00:17:42Z\"",
                                          "type": "string"
                                        },
                                        "statuses_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                          "type": "string"
                                        },
                                        "subscribers_count": {
                                          "type": "integer"
                                        },
                                        "subscribers_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "subscription_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "svn_url": {
                                          "example": "https://svn.github.com/octocat/Hello-World",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "tags_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "teams_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "temp_clone_token": {
                                          "type": "string"
                                        },
                                        "template_repository": {
                                          "nullable": true,
                                          "properties": {
                                            "allow_auto_merge": {
                                              "type": "boolean"
                                            },
                                            "allow_merge_commit": {
                                              "type": "boolean"
                                            },
                                            "allow_rebase_merge": {
                                              "type": "boolean"
                                            },
                                            "allow_squash_merge": {
                                              "type": "boolean"
                                            },
                                            "archive_url": { "type": "string" },
                                            "archived": { "type": "boolean" },
                                            "assignees_url": {
                                              "type": "string"
                                            },
                                            "blobs_url": { "type": "string" },
                                            "branches_url": {
                                              "type": "string"
                                            },
                                            "clone_url": { "type": "string" },
                                            "collaborators_url": {
                                              "type": "string"
                                            },
                                            "comments_url": {
                                              "type": "string"
                                            },
                                            "commits_url": { "type": "string" },
                                            "compare_url": { "type": "string" },
                                            "contents_url": {
                                              "type": "string"
                                            },
                                            "contributors_url": {
                                              "type": "string"
                                            },
                                            "created_at": { "type": "string" },
                                            "default_branch": {
                                              "type": "string"
                                            },
                                            "delete_branch_on_merge": {
                                              "type": "boolean"
                                            },
                                            "deployments_url": {
                                              "type": "string"
                                            },
                                            "description": { "type": "string" },
                                            "disabled": { "type": "boolean" },
                                            "downloads_url": {
                                              "type": "string"
                                            },
                                            "events_url": { "type": "string" },
                                            "fork": { "type": "boolean" },
                                            "forks_count": {
                                              "type": "integer"
                                            },
                                            "forks_url": { "type": "string" },
                                            "full_name": { "type": "string" },
                                            "git_commits_url": {
                                              "type": "string"
                                            },
                                            "git_refs_url": {
                                              "type": "string"
                                            },
                                            "git_tags_url": {
                                              "type": "string"
                                            },
                                            "git_url": { "type": "string" },
                                            "has_downloads": {
                                              "type": "boolean"
                                            },
                                            "has_issues": { "type": "boolean" },
                                            "has_pages": { "type": "boolean" },
                                            "has_projects": {
                                              "type": "boolean"
                                            },
                                            "has_wiki": { "type": "boolean" },
                                            "homepage": { "type": "string" },
                                            "hooks_url": { "type": "string" },
                                            "html_url": { "type": "string" },
                                            "id": { "type": "integer" },
                                            "is_template": {
                                              "type": "boolean"
                                            },
                                            "issue_comment_url": {
                                              "type": "string"
                                            },
                                            "issue_events_url": {
                                              "type": "string"
                                            },
                                            "issues_url": { "type": "string" },
                                            "keys_url": { "type": "string" },
                                            "labels_url": { "type": "string" },
                                            "language": { "type": "string" },
                                            "languages_url": {
                                              "type": "string"
                                            },
                                            "merges_url": { "type": "string" },
                                            "milestones_url": {
                                              "type": "string"
                                            },
                                            "mirror_url": { "type": "string" },
                                            "name": { "type": "string" },
                                            "network_count": {
                                              "type": "integer"
                                            },
                                            "node_id": { "type": "string" },
                                            "notifications_url": {
                                              "type": "string"
                                            },
                                            "open_issues_count": {
                                              "type": "integer"
                                            },
                                            "owner": {
                                              "properties": {
                                                "avatar_url": {
                                                  "type": "string"
                                                },
                                                "events_url": {
                                                  "type": "string"
                                                },
                                                "followers_url": {
                                                  "type": "string"
                                                },
                                                "following_url": {
                                                  "type": "string"
                                                },
                                                "gists_url": {
                                                  "type": "string"
                                                },
                                                "gravatar_id": {
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "type": "string"
                                                },
                                                "id": { "type": "integer" },
                                                "login": { "type": "string" },
                                                "node_id": { "type": "string" },
                                                "organizations_url": {
                                                  "type": "string"
                                                },
                                                "received_events_url": {
                                                  "type": "string"
                                                },
                                                "repos_url": {
                                                  "type": "string"
                                                },
                                                "site_admin": {
                                                  "type": "boolean"
                                                },
                                                "starred_url": {
                                                  "type": "string"
                                                },
                                                "subscriptions_url": {
                                                  "type": "string"
                                                },
                                                "type": { "type": "string" },
                                                "url": { "type": "string" }
                                              },
                                              "type": "object"
                                            },
                                            "permissions": {
                                              "properties": {
                                                "admin": { "type": "boolean" },
                                                "maintain": {
                                                  "type": "boolean"
                                                },
                                                "pull": { "type": "boolean" },
                                                "push": { "type": "boolean" },
                                                "triage": { "type": "boolean" }
                                              },
                                              "type": "object"
                                            },
                                            "private": { "type": "boolean" },
                                            "pulls_url": { "type": "string" },
                                            "pushed_at": { "type": "string" },
                                            "releases_url": {
                                              "type": "string"
                                            },
                                            "size": { "type": "integer" },
                                            "ssh_url": { "type": "string" },
                                            "stargazers_count": {
                                              "type": "integer"
                                            },
                                            "stargazers_url": {
                                              "type": "string"
                                            },
                                            "statuses_url": {
                                              "type": "string"
                                            },
                                            "subscribers_count": {
                                              "type": "integer"
                                            },
                                            "subscribers_url": {
                                              "type": "string"
                                            },
                                            "subscription_url": {
                                              "type": "string"
                                            },
                                            "svn_url": { "type": "string" },
                                            "tags_url": { "type": "string" },
                                            "teams_url": { "type": "string" },
                                            "temp_clone_token": {
                                              "type": "string"
                                            },
                                            "topics": {
                                              "items": { "type": "string" },
                                              "type": "array"
                                            },
                                            "trees_url": { "type": "string" },
                                            "updated_at": { "type": "string" },
                                            "url": { "type": "string" },
                                            "visibility": { "type": "string" },
                                            "watchers_count": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "topics": {
                                          "items": { "type": "string" },
                                          "type": "array"
                                        },
                                        "trees_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                          "type": "string"
                                        },
                                        "updated_at": {
                                          "example": "2011-01-26T19:14:43Z",
                                          "format": "date-time",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "url": {
                                          "example": "https://api.github.com/repos/octocat/Hello-World",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "visibility": {
                                          "default": "public",
                                          "description": "The repository visibility: public, private, or internal.",
                                          "type": "string"
                                        },
                                        "watchers": { "type": "integer" },
                                        "watchers_count": {
                                          "example": 80,
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "archive_url",
                                        "assignees_url",
                                        "blobs_url",
                                        "branches_url",
                                        "collaborators_url",
                                        "comments_url",
                                        "commits_url",
                                        "compare_url",
                                        "contents_url",
                                        "contributors_url",
                                        "deployments_url",
                                        "description",
                                        "downloads_url",
                                        "events_url",
                                        "fork",
                                        "forks_url",
                                        "full_name",
                                        "git_commits_url",
                                        "git_refs_url",
                                        "git_tags_url",
                                        "hooks_url",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "issue_comment_url",
                                        "issue_events_url",
                                        "issues_url",
                                        "keys_url",
                                        "labels_url",
                                        "languages_url",
                                        "merges_url",
                                        "milestones_url",
                                        "name",
                                        "notifications_url",
                                        "owner",
                                        "private",
                                        "pulls_url",
                                        "releases_url",
                                        "stargazers_url",
                                        "statuses_url",
                                        "subscribers_url",
                                        "subscription_url",
                                        "tags_url",
                                        "teams_url",
                                        "trees_url",
                                        "url",
                                        "clone_url",
                                        "default_branch",
                                        "forks",
                                        "forks_count",
                                        "git_url",
                                        "has_downloads",
                                        "has_issues",
                                        "has_projects",
                                        "has_wiki",
                                        "has_pages",
                                        "homepage",
                                        "language",
                                        "archived",
                                        "disabled",
                                        "mirror_url",
                                        "open_issues",
                                        "open_issues_count",
                                        "license",
                                        "pushed_at",
                                        "size",
                                        "ssh_url",
                                        "stargazers_count",
                                        "svn_url",
                                        "watchers",
                                        "watchers_count",
                                        "created_at",
                                        "updated_at"
                                      ],
                                      "title": "Repository",
                                      "type": "object"
                                    }
                                  ],
                                  "nullable": true,
                                  "type": "object"
                                },
                                "topics": {
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "trees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                  "type": "string"
                                },
                                "updated_at": {
                                  "example": "2011-01-26T19:14:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/repos/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "visibility": { "type": "string" },
                                "watchers": { "example": 0, "type": "integer" },
                                "watchers_count": { "type": "integer" }
                              },
                              "required": [
                                "archive_url",
                                "assignees_url",
                                "blobs_url",
                                "branches_url",
                                "collaborators_url",
                                "comments_url",
                                "commits_url",
                                "compare_url",
                                "contents_url",
                                "contributors_url",
                                "deployments_url",
                                "description",
                                "downloads_url",
                                "events_url",
                                "fork",
                                "forks_url",
                                "full_name",
                                "git_commits_url",
                                "git_refs_url",
                                "git_tags_url",
                                "hooks_url",
                                "html_url",
                                "id",
                                "node_id",
                                "issue_comment_url",
                                "issue_events_url",
                                "issues_url",
                                "keys_url",
                                "labels_url",
                                "languages_url",
                                "merges_url",
                                "milestones_url",
                                "name",
                                "notifications_url",
                                "owner",
                                "private",
                                "pulls_url",
                                "releases_url",
                                "stargazers_url",
                                "statuses_url",
                                "subscribers_url",
                                "subscription_url",
                                "tags_url",
                                "teams_url",
                                "trees_url",
                                "url"
                              ],
                              "title": "Minimal Repository",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/github/packages/container/super-linter",
                          "type": "string"
                        },
                        "version_count": {
                          "description": "The number of versions of the package.",
                          "example": 1,
                          "type": "integer"
                        },
                        "visibility": {
                          "enum": ["private", "public"],
                          "example": "private",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "package_type",
                        "visibility",
                        "url",
                        "html_url",
                        "version_count",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Package",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a package for an organization",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/packages/{package_type}/{package_name}/restore",
        {
          "post": {
            "deprecated": null,
            "description": "Restores an entire package in an organization.\n\nYou can restore a deleted package under the following conditions:\n  - The package was deleted within the last 30 days.\n  - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\nTo use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:\n- If `package_type` is not `container`, your token must also include the `repo` scope.\n- If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#restore-a-package-for-an-organization"
            },
            "operationId": "packages/restore-package-for-org",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "package token",
                "in": "query",
                "name": "token",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Restore a package for an organization",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/packages/{package_type}/{package_name}/versions",
        {
          "get": {
            "deprecated": null,
            "description": "Returns all package versions for a package owned by an organization.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#get-all-package-versions-for-a-package-owned-by-an-organization"
            },
            "operationId": "packages/get-all-package-versions-for-package-owned-by-org",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "The state of the package, either active or deleted.",
                "in": "query",
                "name": "state",
                "required": false,
                "schema": {
                  "default": "active",
                  "enum": ["active", "deleted"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2019-11-05T22:49:04Z",
                            "html_url": "https://github.com/octo-org/hello-world-npm/packages/43752?version=1.0.4",
                            "id": 245301,
                            "metadata": { "package_type": "npm" },
                            "name": "1.0.4",
                            "package_html_url": "https://github.com/octo-org/hello-world-npm/packages/43752",
                            "updated_at": "2019-11-05T22:49:04Z",
                            "url": "https://api.github.com/orgs/octo-org/packages/npm/hello-world-npm/versions/245301"
                          },
                          {
                            "created_at": "2019-10-29T15:42:11Z",
                            "html_url": "https://github.com/octo-org/hello-world-npm/packages/43752?version=1.0.3",
                            "id": 209672,
                            "metadata": { "package_type": "npm" },
                            "name": "1.0.3",
                            "package_html_url": "https://github.com/octo-org/hello-world-npm/packages/43752",
                            "updated_at": "2019-10-29T15:42:12Z",
                            "url": "https://api.github.com/orgs/octo-org/packages/npm/hello-world-npm/versions/209672"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "A version of a software package",
                        "properties": {
                          "created_at": {
                            "example": "2011-04-10T20:09:31Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deleted_at": {
                            "example": "2014-03-03T18:58:10Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": { "type": "string" },
                          "html_url": {
                            "example": "https://github.com/orgs/github/packages/container/super-linter/786068",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the package version.",
                            "example": 1,
                            "type": "integer"
                          },
                          "license": { "example": "MIT", "type": "string" },
                          "metadata": {
                            "properties": {
                              "container": {
                                "properties": { "tags": { "type": "array" } },
                                "required": ["tags"],
                                "title": "Container Metadata",
                                "type": "object"
                              },
                              "docker": {
                                "properties": { "tag": { "type": "array" } },
                                "required": ["tags"],
                                "title": "Docker Metadata",
                                "type": "object"
                              },
                              "package_type": {
                                "enum": [
                                  "npm",
                                  "maven",
                                  "rubygems",
                                  "docker",
                                  "nuget",
                                  "container"
                                ],
                                "example": "docker",
                                "type": "string"
                              }
                            },
                            "required": ["package_type"],
                            "title": "Package Version Metadata",
                            "type": "object"
                          },
                          "name": {
                            "description": "The name of the package version.",
                            "example": "latest",
                            "type": "string"
                          },
                          "package_html_url": {
                            "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                            "type": "string"
                          },
                          "updated_at": {
                            "example": "2014-03-03T18:58:10Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/orgs/github/packages/container/super-linter/versions/786068",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "url",
                          "package_html_url",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Package Version",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Get all package versions for a package owned by an organization",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {
              "changes": [
                {
                  "before": {
                    "operationId": "packages/get-all-package-versions-for-a-package-owned-by-an-org"
                  },
                  "date": "2021-03-24",
                  "type": "OPERATION"
                }
              ]
            }
          }
        }
      ],
      [
        "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes a specific package version in an organization. If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.\n\nTo use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:\n- If `package_type` is not `container`, your token must also include the `repo` scope.\n- If `package_type` is `container`, you must also have admin permissions to the container you want to delete.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#delete-a-package-version-for-an-organization"
            },
            "operationId": "packages/delete-package-version-for-org",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Unique identifier of the package version.",
                "in": "path",
                "name": "package_version_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete package version for an organization",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Gets a specific package version in an organization.\n\nYou must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#get-a-package-version-for-an-organization"
            },
            "operationId": "packages/get-package-version-for-organization",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Unique identifier of the package version.",
                "in": "path",
                "name": "package_version_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2020-05-19T22:19:11Z",
                          "html_url": "https://github.com/orgs/github/packages/container/hello_docker/836",
                          "id": 836,
                          "metadata": {
                            "container": { "tags": ["latest"] },
                            "package_type": "container"
                          },
                          "name": "sha256:b3d3e366b55f9a54599220198b3db5da8f53592acbbb7dc7e4e9878762fc5344",
                          "package_html_url": "https://github.com/orgs/github/packages/container/package/hello_docker",
                          "updated_at": "2020-05-19T22:19:11Z",
                          "url": "https://api.github.com/orgs/github/packages/container/hello_docker/versions/836"
                        }
                      }
                    },
                    "schema": {
                      "description": "A version of a software package",
                      "properties": {
                        "created_at": {
                          "example": "2011-04-10T20:09:31Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "deleted_at": {
                          "example": "2014-03-03T18:58:10Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": { "type": "string" },
                        "html_url": {
                          "example": "https://github.com/orgs/github/packages/container/super-linter/786068",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the package version.",
                          "example": 1,
                          "type": "integer"
                        },
                        "license": { "example": "MIT", "type": "string" },
                        "metadata": {
                          "properties": {
                            "container": {
                              "properties": { "tags": { "type": "array" } },
                              "required": ["tags"],
                              "title": "Container Metadata",
                              "type": "object"
                            },
                            "docker": {
                              "properties": { "tag": { "type": "array" } },
                              "required": ["tags"],
                              "title": "Docker Metadata",
                              "type": "object"
                            },
                            "package_type": {
                              "enum": [
                                "npm",
                                "maven",
                                "rubygems",
                                "docker",
                                "nuget",
                                "container"
                              ],
                              "example": "docker",
                              "type": "string"
                            }
                          },
                          "required": ["package_type"],
                          "title": "Package Version Metadata",
                          "type": "object"
                        },
                        "name": {
                          "description": "The name of the package version.",
                          "example": "latest",
                          "type": "string"
                        },
                        "package_html_url": {
                          "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                          "type": "string"
                        },
                        "updated_at": {
                          "example": "2014-03-03T18:58:10Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/github/packages/container/super-linter/versions/786068",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "url",
                        "package_html_url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Package Version",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a package version for an organization",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore",
        {
          "post": {
            "deprecated": null,
            "description": "Restores a specific package version in an organization.\n\nYou can restore a deleted package under the following conditions:\n  - The package was deleted within the last 30 days.\n  - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\nTo use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:\n- If `package_type` is not `container`, your token must also include the `repo` scope.\n- If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#restore-a-package-version-for-an-organization"
            },
            "operationId": "packages/restore-package-version-for-org",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Unique identifier of the package version.",
                "in": "path",
                "name": "package_version_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Restore package version for an organization",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/settings/billing/actions",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage returned includes any minute multipliers for macOS and Windows runners, and is rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAccess tokens must have the `repo` or `admin:org` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/billing#get-github-actions-billing-for-an-organization"
            },
            "operationId": "billing/get-github-actions-billing-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "included_minutes": 3000,
                          "minutes_used_breakdown": {
                            "MACOS": 10,
                            "UBUNTU": 205,
                            "WINDOWS": 90
                          },
                          "total_minutes_used": 305,
                          "total_paid_minutes_used": 0
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "included_minutes": {
                          "description": "The amount of free GitHub Actions minutes available.",
                          "type": "integer"
                        },
                        "minutes_used_breakdown": {
                          "properties": {
                            "MACOS": {
                              "description": "Total minutes used on macOS runner machines.",
                              "type": "integer"
                            },
                            "UBUNTU": {
                              "description": "Total minutes used on Ubuntu runner machines.",
                              "type": "integer"
                            },
                            "WINDOWS": {
                              "description": "Total minutes used on Windows runner machines.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "total_minutes_used": {
                          "description": "The sum of the free and paid GitHub Actions minutes used.",
                          "type": "integer"
                        },
                        "total_paid_minutes_used": {
                          "description": "The total paid GitHub Actions minutes used.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_minutes_used",
                        "total_paid_minutes_used",
                        "included_minutes",
                        "minutes_used_breakdown"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get GitHub Actions billing for an organization",
            "tags": ["billing"],
            "x-github": {
              "category": "billing",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/settings/billing/packages",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `repo` or `admin:org` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/billing#get-github-packages-billing-for-an-organization"
            },
            "operationId": "billing/get-github-packages-billing-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "included_gigabytes_bandwidth": 10,
                          "total_gigabytes_bandwidth_used": 50,
                          "total_paid_gigabytes_bandwidth_used": 40
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "included_gigabytes_bandwidth": {
                          "description": "Free storage space (GB) for GitHub Packages.",
                          "type": "integer"
                        },
                        "total_gigabytes_bandwidth_used": {
                          "description": "Sum of the free and paid storage space (GB) for GitHuub Packages.",
                          "type": "integer"
                        },
                        "total_paid_gigabytes_bandwidth_used": {
                          "description": "Total paid storage space (GB) for GitHuub Packages.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_gigabytes_bandwidth_used",
                        "total_paid_gigabytes_bandwidth_used",
                        "included_gigabytes_bandwidth"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get GitHub Packages billing for an organization",
            "tags": ["billing"],
            "x-github": {
              "category": "billing",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/settings/billing/shared-storage",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `repo` or `admin:org` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/billing#get-shared-storage-billing-for-an-organization"
            },
            "operationId": "billing/get-shared-storage-billing-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "days_left_in_billing_cycle": 20,
                          "estimated_paid_storage_for_month": 15,
                          "estimated_storage_for_month": 40
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "days_left_in_billing_cycle": {
                          "description": "Numbers of days left in billing cycle.",
                          "type": "integer"
                        },
                        "estimated_paid_storage_for_month": {
                          "description": "Estimated storage space (GB) used in billing cycle.",
                          "type": "integer"
                        },
                        "estimated_storage_for_month": {
                          "description": "Estimated sum of free and paid storage space (GB) used in billing cycle.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "days_left_in_billing_cycle",
                        "estimated_paid_storage_for_month",
                        "estimated_storage_for_month"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get shared storage billing for an organization",
            "tags": ["billing"],
            "x-github": {
              "category": "billing",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/team-sync/groups",
        {
          "get": {
            "deprecated": null,
            "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups available in an organization. You can limit your page results using the `per_page` parameter. GitHub generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"\n\nThe `per_page` parameter provides pagination for a list of IdP groups the authenticated user can access in an organization. For example, if the user `octocat` wants to see two groups per page in `octo-org` via cURL, it would look like this:",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/teams#list-idp-groups-for-an-organization"
            },
            "operationId": "teams/list-idp-groups-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page token",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "groups": [
                            {
                              "group_description": "The people who configure your octoworld.",
                              "group_id": "123",
                              "group_name": "Octocat admins"
                            },
                            {
                              "group_description": "The people who make your octoworld come to life.",
                              "group_id": "456",
                              "group_name": "Octocat docs members"
                            }
                          ]
                        }
                      }
                    },
                    "schema": {
                      "description": "External Groups to be mapped to a team for membership",
                      "properties": {
                        "groups": {
                          "description": "Array of groups to be mapped to this team",
                          "example": [
                            {
                              "group_description": "A group of Developers working on AzureAD SAML SSO",
                              "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "group_name": "saml-azuread-test"
                            },
                            {
                              "group_description": "Another group of Developers working on AzureAD SAML SSO",
                              "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                              "group_name": "saml-azuread-test2"
                            }
                          ],
                          "items": {
                            "properties": {
                              "group_description": {
                                "description": "a description of the group",
                                "example": "A group of Developers working on AzureAD SAML SSO",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "The ID of the group",
                                "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "The name of the group",
                                "example": "saml-azuread-test",
                                "type": "string"
                              },
                              "status": {
                                "description": "synchronization status for this group mapping",
                                "example": "unsynced",
                                "type": "string"
                              },
                              "synced_at": {
                                "description": "the time of the last sync for this group-mapping",
                                "example": "2019-06-03 22:27:15:000 -700",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "group_id",
                              "group_name",
                              "group_description"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "GroupMapping",
                      "type": "object"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?per_page=2&page=url-encoded-next-page-token>; rel=\"next\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              }
            },
            "summary": "List IdP groups for an organization",
            "tags": ["teams"],
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "team-sync"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/invitations",
        {
          "get": {
            "deprecated": null,
            "description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/invitations`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/teams#list-pending-team-invitations"
            },
            "operationId": "teams/list-pending-invitations-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "team_slug parameter",
                "in": "path",
                "name": "team_slug",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2016-11-30T06:46:10-08:00",
                            "email": "octocat@github.com",
                            "failed_at": "",
                            "failed_reason": "",
                            "id": 1,
                            "invitation_teams_url": "https://api.github.com/organizations/2/invitations/1/teams",
                            "inviter": {
                              "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                              "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                              "followers_url": "https://api.github.com/users/other_user/followers",
                              "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                              "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/other_user",
                              "id": 1,
                              "login": "other_user",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/other_user/orgs",
                              "received_events_url": "https://api.github.com/users/other_user/received_events",
                              "repos_url": "https://api.github.com/users/other_user/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/other_user"
                            },
                            "login": "monalisa",
                            "node_id": "MDQ6VXNlcjE=",
                            "role": "direct_member",
                            "team_count": 2
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Organization Invitation",
                        "properties": {
                          "created_at": { "type": "string" },
                          "email": { "nullable": true, "type": "string" },
                          "failed_at": { "nullable": true, "type": "string" },
                          "failed_reason": {
                            "nullable": true,
                            "type": "string"
                          },
                          "id": { "type": "integer" },
                          "invitation_teams_url": {
                            "example": "\"https://api.github.com/organizations/16/invitations/1/teams\"",
                            "type": "string"
                          },
                          "inviter": {
                            "description": "Simple User",
                            "nullable": true,
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": { "nullable": true, "type": "string" },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": { "example": 1, "type": "integer" },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": { "type": "boolean" },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": { "example": "User", "type": "string" },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "login": { "nullable": true, "type": "string" },
                          "node_id": {
                            "example": "\"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x\"",
                            "type": "string"
                          },
                          "role": { "type": "string" },
                          "team_count": { "type": "integer" }
                        },
                        "required": [
                          "id",
                          "login",
                          "email",
                          "role",
                          "created_at",
                          "inviter",
                          "team_count",
                          "invitation_teams_url",
                          "node_id"
                        ],
                        "title": "Organization Invitation",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              }
            },
            "summary": "List pending team invitations",
            "tags": ["teams"],
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "members"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/teams/{team_slug}/team-sync/group-mappings",
        {
          "get": {
            "deprecated": null,
            "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/teams#list-idp-groups-for-a-team"
            },
            "operationId": "teams/list-idp-groups-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "team_slug parameter",
                "in": "path",
                "name": "team_slug",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "groups": [
                            {
                              "group_description": "The people who configure your octoworld.",
                              "group_id": "123",
                              "group_name": "Octocat admins"
                            },
                            {
                              "group_description": "The people who make your octoworld come to life.",
                              "group_id": "456",
                              "group_name": "Octocat docs members"
                            }
                          ]
                        }
                      }
                    },
                    "schema": {
                      "description": "External Groups to be mapped to a team for membership",
                      "properties": {
                        "groups": {
                          "description": "Array of groups to be mapped to this team",
                          "example": [
                            {
                              "group_description": "A group of Developers working on AzureAD SAML SSO",
                              "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "group_name": "saml-azuread-test"
                            },
                            {
                              "group_description": "Another group of Developers working on AzureAD SAML SSO",
                              "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                              "group_name": "saml-azuread-test2"
                            }
                          ],
                          "items": {
                            "properties": {
                              "group_description": {
                                "description": "a description of the group",
                                "example": "A group of Developers working on AzureAD SAML SSO",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "The ID of the group",
                                "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "The name of the group",
                                "example": "saml-azuread-test",
                                "type": "string"
                              },
                              "status": {
                                "description": "synchronization status for this group mapping",
                                "example": "unsynced",
                                "type": "string"
                              },
                              "synced_at": {
                                "description": "the time of the last sync for this group-mapping",
                                "example": "2019-06-03 22:27:15:000 -700",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "group_id",
                              "group_name",
                              "group_description"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "GroupMapping",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List IdP groups for a team",
            "tags": ["teams"],
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": false,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "team-sync"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/teams#create-or-update-idp-group-connections"
            },
            "operationId": "teams/create-or-update-idp-group-connections-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "team_slug parameter",
                "in": "path",
                "name": "team_slug",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "groups": [
                      {
                        "group_description": "string",
                        "group_id": "123",
                        "group_name": "Octocat admins"
                      }
                    ]
                  },
                  "schema": {
                    "additionalProperties": false,
                    "properties": {
                      "groups": {
                        "description": "The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.",
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "Description of the IdP group.",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "ID of the IdP group.",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "Name of the IdP group.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "groups": [
                            {
                              "group_description": "The people who configure your octoworld.",
                              "group_id": "123",
                              "group_name": "Octocat admins"
                            },
                            {
                              "group_description": "The people who make your octoworld come to life.",
                              "group_id": "456",
                              "group_name": "Octocat docs members"
                            }
                          ]
                        }
                      }
                    },
                    "schema": {
                      "description": "External Groups to be mapped to a team for membership",
                      "properties": {
                        "groups": {
                          "description": "Array of groups to be mapped to this team",
                          "example": [
                            {
                              "group_description": "A group of Developers working on AzureAD SAML SSO",
                              "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "group_name": "saml-azuread-test"
                            },
                            {
                              "group_description": "Another group of Developers working on AzureAD SAML SSO",
                              "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                              "group_name": "saml-azuread-test2"
                            }
                          ],
                          "items": {
                            "properties": {
                              "group_description": {
                                "description": "a description of the group",
                                "example": "A group of Developers working on AzureAD SAML SSO",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "The ID of the group",
                                "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "The name of the group",
                                "example": "saml-azuread-test",
                                "type": "string"
                              },
                              "status": {
                                "description": "synchronization status for this group mapping",
                                "example": "unsynced",
                                "type": "string"
                              },
                              "synced_at": {
                                "description": "the time of the last sync for this group-mapping",
                                "example": "2019-06-03 22:27:15:000 -700",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "group_id",
                              "group_name",
                              "group_description"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "GroupMapping",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Create or update IdP group connections",
            "tags": ["teams"],
            "x-github": {
              "category": "teams",
              "enabledForGitHubApps": false,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "team-sync"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}/approvals",
        {
          "get": {
            "deprecated": null,
            "description": "Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#get-the-review-history-for-a-workflow-run"
            },
            "operationId": "actions/get-reviews-for-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "The id of the workflow run.",
                "in": "path",
                "name": "run_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "comment": "Ship it!",
                            "environments": [
                              {
                                "created_at": "2020-11-23T22:00:40Z",
                                "html_url": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                                "id": 161088068,
                                "name": "staging",
                                "node_id": "MDExOkVudmlyb25tZW50MTYxMDg4MDY4",
                                "updated_at": "2020-11-23T22:00:40Z",
                                "url": "https://api.github.com/repos/github/hello-world/environments/staging"
                              }
                            ],
                            "state": "approved",
                            "user": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            }
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "An entry in the reviews log for environment deployments",
                        "properties": {
                          "comment": {
                            "description": "The comment submitted with the deployment review",
                            "example": "Ship it!",
                            "type": "string"
                          },
                          "environments": {
                            "description": "The list of environments that were approved or rejected",
                            "items": {
                              "properties": {
                                "created_at": {
                                  "description": "The time that the environment was created, in ISO 8601 format.",
                                  "example": "2020-11-23T22:00:40Z",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "The id of the environment.",
                                  "example": 56780428,
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The name of the environment.",
                                  "example": "staging",
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDExOkVudmlyb25tZW50NTY3ODA0Mjg=",
                                  "type": "string"
                                },
                                "updated_at": {
                                  "description": "The time that the environment was last updated, in ISO 8601 format.",
                                  "example": "2020-11-23T22:00:40Z",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/repos/github/hello-world/environments/staging",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "state": {
                            "description": "Whether deployment to the environment(s) was approved or rejected",
                            "enum": ["approved", "rejected"],
                            "example": "approved",
                            "type": "string"
                          },
                          "user": {
                            "description": "Simple User",
                            "nullable": true,
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": { "nullable": true, "type": "string" },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": { "example": 1, "type": "integer" },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": { "type": "boolean" },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": { "example": "User", "type": "string" },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          }
                        },
                        "required": [
                          "environments",
                          "state",
                          "user",
                          "comment"
                        ],
                        "title": "Environment Approval",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get the review history for a workflow run",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}/approve",
        {
          "post": {
            "deprecated": null,
            "description": "Approves a workflow run for a pull request from a public fork of a first time contributor. For more information, see [\"Approving workflow runs from public forks](https://docs.github.com/actions/managing-workflow-runs/approving-workflow-runs-from-public-forks).\"\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#approve-a-workflow-run-for-a-fork-pull-request"
            },
            "operationId": "actions/approve-workflow-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "The id of the workflow run.",
                "in": "path",
                "name": "run_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "schema": {
                      "additionalProperties": false,
                      "description": "An object without any properties.",
                      "properties": {},
                      "title": "Empty Object",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Approve a workflow run for a fork pull request",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments",
        {
          "get": {
            "deprecated": null,
            "description": "Get all deployment environments for a workflow run that are waiting for protection rules to pass.\n\nAnyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#get-pending-deployments-for-a-workflow-run"
            },
            "operationId": "actions/get-pending-deployments-for-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "The id of the workflow run.",
                "in": "path",
                "name": "run_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "current_user_can_approve": true,
                            "environment": {
                              "html_url": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                              "id": 161088068,
                              "name": "staging",
                              "node_id": "MDExOkVudmlyb25tZW50MTYxMDg4MDY4",
                              "url": "https://api.github.com/repos/github/hello-world/environments/staging"
                            },
                            "reviewers": [
                              {
                                "reviewer": {
                                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                  "followers_url": "https://api.github.com/users/octocat/followers",
                                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "gravatar_id": "",
                                  "html_url": "https://github.com/octocat",
                                  "id": 1,
                                  "login": "octocat",
                                  "node_id": "MDQ6VXNlcjE=",
                                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                                  "repos_url": "https://api.github.com/users/octocat/repos",
                                  "site_admin": false,
                                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                  "type": "User",
                                  "url": "https://api.github.com/users/octocat"
                                },
                                "type": "User"
                              },
                              {
                                "reviewer": {
                                  "description": "A great team.",
                                  "html_url": "https://github.com/orgs/github/teams/justice-league",
                                  "id": 1,
                                  "members_url": "https://api.github.com/teams/1/members{/member}",
                                  "name": "Justice League",
                                  "node_id": "MDQ6VGVhbTE=",
                                  "parent": null,
                                  "permission": "admin",
                                  "privacy": "closed",
                                  "repositories_url": "https://api.github.com/teams/1/repos",
                                  "slug": "justice-league",
                                  "url": "https://api.github.com/teams/1"
                                },
                                "type": "Team"
                              }
                            ],
                            "wait_timer": 30,
                            "wait_timer_started_at": "2020-11-23T22:00:40Z"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Details of a deployment that is waiting for protection rules to pass",
                        "properties": {
                          "current_user_can_approve": {
                            "description": "Whether the currently authenticated user can approve the deployment",
                            "example": true,
                            "type": "boolean"
                          },
                          "environment": {
                            "properties": {
                              "html_url": {
                                "example": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the environment.",
                                "example": 56780428,
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the environment.",
                                "example": "staging",
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDExOkVudmlyb25tZW50NTY3ODA0Mjg=",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/repos/github/hello-world/environments/staging",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "reviewers": {
                            "description": "The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.",
                            "items": {
                              "properties": {
                                "reviewer": {
                                  "anyOf": [
                                    {
                                      "description": "Simple User",
                                      "nullable": true,
                                      "properties": {
                                        "avatar_url": {
                                          "example": "https://github.com/images/error/octocat_happy.gif",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "email": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "example": "https://api.github.com/users/octocat/events{/privacy}",
                                          "type": "string"
                                        },
                                        "followers_url": {
                                          "example": "https://api.github.com/users/octocat/followers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "following_url": {
                                          "example": "https://api.github.com/users/octocat/following{/other_user}",
                                          "type": "string"
                                        },
                                        "gists_url": {
                                          "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                          "type": "string"
                                        },
                                        "gravatar_id": {
                                          "example": "41d064eb2195891e12d0413f63227ea7",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "example": "https://github.com/octocat",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "example": 1,
                                          "type": "integer"
                                        },
                                        "login": {
                                          "example": "octocat",
                                          "type": "string"
                                        },
                                        "name": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "node_id": {
                                          "example": "MDQ6VXNlcjE=",
                                          "type": "string"
                                        },
                                        "organizations_url": {
                                          "example": "https://api.github.com/users/octocat/orgs",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "received_events_url": {
                                          "example": "https://api.github.com/users/octocat/received_events",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "repos_url": {
                                          "example": "https://api.github.com/users/octocat/repos",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "site_admin": { "type": "boolean" },
                                        "starred_at": {
                                          "example": "\"2020-07-09T00:17:55Z\"",
                                          "type": "string"
                                        },
                                        "starred_url": {
                                          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                          "type": "string"
                                        },
                                        "subscriptions_url": {
                                          "example": "https://api.github.com/users/octocat/subscriptions",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "type": {
                                          "example": "User",
                                          "type": "string"
                                        },
                                        "url": {
                                          "example": "https://api.github.com/users/octocat",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "avatar_url",
                                        "events_url",
                                        "followers_url",
                                        "following_url",
                                        "gists_url",
                                        "gravatar_id",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "login",
                                        "organizations_url",
                                        "received_events_url",
                                        "repos_url",
                                        "site_admin",
                                        "starred_url",
                                        "subscriptions_url",
                                        "type",
                                        "url"
                                      ],
                                      "title": "Simple User",
                                      "type": "object"
                                    },
                                    {
                                      "description": "Groups of organization members that gives permissions on specified repositories.",
                                      "properties": {
                                        "description": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "example": "https://github.com/orgs/rails/teams/core",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": { "type": "integer" },
                                        "members_url": { "type": "string" },
                                        "name": { "type": "string" },
                                        "node_id": { "type": "string" },
                                        "parent": {
                                          "allOf": [
                                            {
                                              "description": "Groups of organization members that gives permissions on specified repositories.",
                                              "nullable": true,
                                              "properties": {
                                                "description": {
                                                  "description": "Description of the team",
                                                  "example": "A great team.",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "example": "https://github.com/orgs/rails/teams/core",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "description": "Unique identifier of the team",
                                                  "example": 1,
                                                  "type": "integer"
                                                },
                                                "ldap_dn": {
                                                  "description": "Distinguished Name (DN) that team maps to within LDAP environment",
                                                  "example": "uid=example,ou=users,dc=github,dc=com",
                                                  "type": "string"
                                                },
                                                "members_url": {
                                                  "example": "https://api.github.com/organizations/1/team/1/members{/member}",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "description": "Name of the team",
                                                  "example": "Justice League",
                                                  "type": "string"
                                                },
                                                "node_id": {
                                                  "example": "MDQ6VGVhbTE=",
                                                  "type": "string"
                                                },
                                                "permission": {
                                                  "description": "Permission that the team will have for its repositories",
                                                  "example": "admin",
                                                  "type": "string"
                                                },
                                                "privacy": {
                                                  "description": "The level of privacy this team should have",
                                                  "example": "closed",
                                                  "type": "string"
                                                },
                                                "repositories_url": {
                                                  "example": "https://api.github.com/organizations/1/team/1/repos",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "slug": {
                                                  "example": "justice-league",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "description": "URL for the team",
                                                  "example": "https://api.github.com/organizations/1/team/1",
                                                  "format": "uri",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "node_id",
                                                "url",
                                                "members_url",
                                                "name",
                                                "description",
                                                "permission",
                                                "html_url",
                                                "repositories_url",
                                                "slug"
                                              ],
                                              "title": "Team Simple",
                                              "type": "object"
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "permission": { "type": "string" },
                                        "permissions": {
                                          "properties": {
                                            "admin": { "type": "boolean" },
                                            "maintain": { "type": "boolean" },
                                            "pull": { "type": "boolean" },
                                            "push": { "type": "boolean" },
                                            "triage": { "type": "boolean" }
                                          },
                                          "required": [
                                            "pull",
                                            "triage",
                                            "push",
                                            "maintain",
                                            "admin"
                                          ],
                                          "type": "object"
                                        },
                                        "privacy": { "type": "string" },
                                        "repositories_url": {
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "slug": { "type": "string" },
                                        "url": {
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "node_id",
                                        "url",
                                        "members_url",
                                        "name",
                                        "description",
                                        "permission",
                                        "html_url",
                                        "repositories_url",
                                        "slug",
                                        "parent"
                                      ],
                                      "title": "Team",
                                      "type": "object"
                                    }
                                  ]
                                },
                                "type": {
                                  "description": "The type of reviewer. Must be one of: `User` or `Team`",
                                  "enum": ["User", "Team"],
                                  "example": "User",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "wait_timer": {
                            "description": "The set duration of the wait timer",
                            "example": 30,
                            "type": "integer"
                          },
                          "wait_timer_started_at": {
                            "description": "The time that the wait timer began.",
                            "example": "2020-11-23T22:00:40Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "environment",
                          "wait_timer",
                          "wait_timer_started_at",
                          "current_user_can_approve",
                          "reviewers"
                        ],
                        "title": "Pending Deployment",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get pending deployments for a workflow run",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "Approve or reject pending deployments that are waiting on approval by a required reviewer.\n\nAnyone with read access to the repository contents and deployments can use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#review-pending-deployments-for-a-workflow-run"
            },
            "operationId": "actions/review-pending-deployments-for-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "The id of the workflow run.",
                "in": "path",
                "name": "run_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "comment": {
                        "description": "A comment to accompany the deployment review",
                        "example": "Ship it!",
                        "type": "string"
                      },
                      "environment_ids": {
                        "description": "The list of environment ids to approve or reject",
                        "example": [161171787, 161171795],
                        "items": { "example": 161171787, "type": "integer" },
                        "type": "array"
                      },
                      "state": {
                        "description": "Whether to approve or reject deployment to the specified environments. Must be one of: `approved` or `rejected`",
                        "enum": ["approved", "rejected"],
                        "example": "approved",
                        "type": "string"
                      }
                    },
                    "required": ["environment_ids", "state", "comment"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2012-07-20T01:19:13Z",
                            "creator": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "description": "Deploy request from hubot",
                            "environment": "production",
                            "id": 1,
                            "node_id": "MDEwOkRlcGxveW1lbnQx",
                            "original_environment": "staging",
                            "payload": {},
                            "production_environment": true,
                            "ref": "topic-branch",
                            "repository_url": "https://api.github.com/repos/octocat/example",
                            "sha": "a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d",
                            "statuses_url": "https://api.github.com/repos/octocat/example/deployments/1/statuses",
                            "task": "deploy",
                            "transient_environment": false,
                            "updated_at": "2012-07-20T01:19:13Z",
                            "url": "https://api.github.com/repos/octocat/example/deployments/1"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "A request for a specific ref(branch,sha,tag) to be deployed",
                        "properties": {
                          "created_at": {
                            "example": "2012-07-20T01:19:13Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "creator": {
                            "allOf": [
                              {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "description": {
                            "example": "Deploy request from hubot",
                            "nullable": true,
                            "type": "string"
                          },
                          "environment": {
                            "description": "Name for the target deployment environment.",
                            "example": "production",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the deployment",
                            "example": 42,
                            "type": "integer"
                          },
                          "node_id": {
                            "example": "MDEwOkRlcGxveW1lbnQx",
                            "type": "string"
                          },
                          "original_environment": {
                            "example": "staging",
                            "type": "string"
                          },
                          "payload": {
                            "oneOf": [
                              {
                                "additionalProperties": true,
                                "type": "object"
                              },
                              { "type": "string" }
                            ]
                          },
                          "performed_via_github_app": {
                            "allOf": [
                              {
                                "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
                                "nullable": true,
                                "properties": {
                                  "client_id": {
                                    "example": "\"Iv1.25b5d1e65ffc4022\"",
                                    "type": "string"
                                  },
                                  "client_secret": {
                                    "example": "\"1d4b2097ac622ba702d19de498f005747a8b21d3\"",
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "example": "2017-07-08T16:18:44-04:00",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "description": {
                                    "example": "The description of the app.",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events": {
                                    "description": "The list of events for the GitHub app",
                                    "example": ["label", "deployment"],
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "external_url": {
                                    "example": "https://example.com",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/apps/super-ci",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the GitHub app",
                                    "example": 37,
                                    "type": "integer"
                                  },
                                  "installations_count": {
                                    "description": "The number of installations associated with the GitHub app",
                                    "example": 5,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the GitHub app",
                                    "example": "Probot Owners",
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDExOkludGVncmF0aW9uMQ==",
                                    "type": "string"
                                  },
                                  "owner": {
                                    "allOf": [
                                      {
                                        "description": "Simple User",
                                        "nullable": true,
                                        "properties": {
                                          "avatar_url": {
                                            "example": "https://github.com/images/error/octocat_happy.gif",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "email": {
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                                            "type": "string"
                                          },
                                          "followers_url": {
                                            "example": "https://api.github.com/users/octocat/followers",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "following_url": {
                                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                                            "type": "string"
                                          },
                                          "gists_url": {
                                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                            "type": "string"
                                          },
                                          "gravatar_id": {
                                            "example": "41d064eb2195891e12d0413f63227ea7",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "example": "https://github.com/octocat",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "id": {
                                            "example": 1,
                                            "type": "integer"
                                          },
                                          "login": {
                                            "example": "octocat",
                                            "type": "string"
                                          },
                                          "name": {
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "node_id": {
                                            "example": "MDQ6VXNlcjE=",
                                            "type": "string"
                                          },
                                          "organizations_url": {
                                            "example": "https://api.github.com/users/octocat/orgs",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "received_events_url": {
                                            "example": "https://api.github.com/users/octocat/received_events",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "repos_url": {
                                            "example": "https://api.github.com/users/octocat/repos",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "site_admin": { "type": "boolean" },
                                          "starred_at": {
                                            "example": "\"2020-07-09T00:17:55Z\"",
                                            "type": "string"
                                          },
                                          "starred_url": {
                                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                            "type": "string"
                                          },
                                          "subscriptions_url": {
                                            "example": "https://api.github.com/users/octocat/subscriptions",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "type": {
                                            "example": "User",
                                            "type": "string"
                                          },
                                          "url": {
                                            "example": "https://api.github.com/users/octocat",
                                            "format": "uri",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "avatar_url",
                                          "events_url",
                                          "followers_url",
                                          "following_url",
                                          "gists_url",
                                          "gravatar_id",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "login",
                                          "organizations_url",
                                          "received_events_url",
                                          "repos_url",
                                          "site_admin",
                                          "starred_url",
                                          "subscriptions_url",
                                          "type",
                                          "url"
                                        ],
                                        "title": "Simple User",
                                        "type": "object"
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "pem": {
                                    "example": "\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\"",
                                    "type": "string"
                                  },
                                  "permissions": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "The set of permissions for the GitHub app",
                                    "example": {
                                      "deployments": "write",
                                      "issues": "read"
                                    },
                                    "properties": {
                                      "checks": { "type": "string" },
                                      "contents": { "type": "string" },
                                      "deployments": { "type": "string" },
                                      "issues": { "type": "string" },
                                      "metadata": { "type": "string" }
                                    },
                                    "type": "object"
                                  },
                                  "slug": {
                                    "description": "The slug name of the GitHub app",
                                    "example": "probot-owners",
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "example": "2017-07-08T16:18:44-04:00",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "webhook_secret": {
                                    "example": "\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\"",
                                    "nullable": true,
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "node_id",
                                  "owner",
                                  "name",
                                  "description",
                                  "external_url",
                                  "html_url",
                                  "created_at",
                                  "updated_at",
                                  "permissions",
                                  "events"
                                ],
                                "title": "GitHub app",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "production_environment": {
                            "description": "Specifies if the given environment is one that end-users directly interact with. Default: false.",
                            "example": true,
                            "type": "boolean"
                          },
                          "ref": {
                            "description": "The ref to deploy. This can be a branch, tag, or sha.",
                            "example": "topic-branch",
                            "type": "string"
                          },
                          "repository_url": {
                            "example": "https://api.github.com/repos/octocat/example",
                            "format": "uri",
                            "type": "string"
                          },
                          "sha": {
                            "example": "a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d",
                            "type": "string"
                          },
                          "statuses_url": {
                            "example": "https://api.github.com/repos/octocat/example/deployments/1/statuses",
                            "format": "uri",
                            "type": "string"
                          },
                          "task": {
                            "description": "Parameter to specify a task to execute",
                            "example": "deploy",
                            "type": "string"
                          },
                          "transient_environment": {
                            "description": "Specifies if the given environment is will no longer exist at some point in the future. Default: false.",
                            "example": true,
                            "type": "boolean"
                          },
                          "updated_at": {
                            "example": "2012-07-20T01:19:13Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/repos/octocat/example/deployments/1",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "node_id",
                          "sha",
                          "ref",
                          "task",
                          "environment",
                          "creator",
                          "payload",
                          "description",
                          "statuses_url",
                          "repository_url",
                          "url",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Deployment",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Review pending deployments for a workflow run",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}/timing",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#get-workflow-run-usage"
            },
            "operationId": "actions/get-workflow-run-usage",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "The id of the workflow run.",
                "in": "path",
                "name": "run_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "billable": {
                            "MACOS": { "jobs": 4, "total_ms": 240000 },
                            "UBUNTU": { "jobs": 1, "total_ms": 180000 },
                            "WINDOWS": { "jobs": 2, "total_ms": 300000 }
                          },
                          "run_duration_ms": 500000
                        }
                      }
                    },
                    "schema": {
                      "description": "Workflow Run Usage",
                      "properties": {
                        "billable": {
                          "properties": {
                            "MACOS": {
                              "properties": {
                                "jobs": { "type": "integer" },
                                "total_ms": { "type": "integer" }
                              },
                              "required": ["total_ms", "jobs"],
                              "type": "object"
                            },
                            "UBUNTU": {
                              "properties": {
                                "jobs": { "type": "integer" },
                                "total_ms": { "type": "integer" }
                              },
                              "required": ["total_ms", "jobs"],
                              "type": "object"
                            },
                            "WINDOWS": {
                              "properties": {
                                "jobs": { "type": "integer" },
                                "total_ms": { "type": "integer" }
                              },
                              "required": ["total_ms", "jobs"],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "run_duration_ms": { "type": "integer" }
                      },
                      "required": ["billable"],
                      "title": "Workflow Run Usage",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get workflow run usage",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nYou can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#get-workflow-usage"
            },
            "operationId": "actions/get-workflow-usage",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
                "in": "path",
                "name": "workflow_id",
                "required": true,
                "schema": {
                  "oneOf": [{ "type": "integer" }, { "type": "string" }]
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "billable": {
                            "MACOS": { "total_ms": 240000 },
                            "UBUNTU": { "total_ms": 180000 },
                            "WINDOWS": { "total_ms": 300000 }
                          }
                        }
                      }
                    },
                    "schema": {
                      "description": "Workflow Usage",
                      "properties": {
                        "billable": {
                          "properties": {
                            "MACOS": {
                              "properties": {
                                "total_ms": { "type": "integer" }
                              },
                              "type": "object"
                            },
                            "UBUNTU": {
                              "properties": {
                                "total_ms": { "type": "integer" }
                              },
                              "type": "object"
                            },
                            "WINDOWS": {
                              "properties": {
                                "total_ms": { "type": "integer" }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "required": ["billable"],
                      "title": "Workflow Usage",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get workflow usage",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflows"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/autolinks",
        {
          "get": {
            "deprecated": null,
            "description": "This returns a list of autolinks configured for the given repository.\n\nInformation about autolinks are only available to repository administrators.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/v3/repos#list-autolinks"
            },
            "operationId": "repos/list-autolinks",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "id": 1,
                            "key_prefix": "TICKET-",
                            "url_template": "https://example.com/TICKET?query=<num>"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "An autolink reference.",
                        "properties": {
                          "id": { "example": 3, "type": "integer" },
                          "key_prefix": {
                            "description": "The prefix of a key that is linkified.",
                            "example": "TICKET-",
                            "type": "string"
                          },
                          "url_template": {
                            "description": "A template for the target URL that is generated if a key was found.",
                            "example": "https://example.com/TICKET?query=<num>",
                            "type": "string"
                          }
                        },
                        "required": ["id", "key_prefix", "url_template"],
                        "title": "Autolink reference",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List all autolinks of a repository",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "autolinks"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "Users with admin access to the repository can create an autolink.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/v3/repos#create-an-autolink"
            },
            "operationId": "repos/create-autolink",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "key_prefix": "TICKET-",
                    "url_template": "https://example.com/TICKET?query=<num>"
                  },
                  "schema": {
                    "properties": {
                      "key_prefix": {
                        "description": "The prefix appended by a number will generate a link any time it is found in an issue, pull request, or commit.",
                        "type": "string"
                      },
                      "url_template": {
                        "description": "The URL must contain <num> for the reference number.",
                        "type": "string"
                      }
                    },
                    "required": ["key_prefix", "url_template"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "id": 1,
                          "key_prefix": "TICKET-",
                          "url_template": "https://example.com/TICKET?query=<num>"
                        }
                      }
                    },
                    "schema": {
                      "description": "An autolink reference.",
                      "properties": {
                        "id": { "example": 3, "type": "integer" },
                        "key_prefix": {
                          "description": "The prefix of a key that is linkified.",
                          "example": "TICKET-",
                          "type": "string"
                        },
                        "url_template": {
                          "description": "A template for the target URL that is generated if a key was found.",
                          "example": "https://example.com/TICKET?query=<num>",
                          "type": "string"
                        }
                      },
                      "required": ["id", "key_prefix", "url_template"],
                      "title": "Autolink reference",
                      "type": "object"
                    }
                  }
                },
                "description": "response",
                "headers": {
                  "Location": {
                    "example": "https://api.github.com/repos/octocat/Hello-World/autolinks/1",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Create an autolink reference for a repository",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "autolinks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/autolinks/{autolink_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "This deletes a single autolink reference by ID that was configured for the given repository.\n\nInformation about autolinks are only available to repository administrators.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/v3/repos#delete-autolink"
            },
            "operationId": "repos/delete-autolink",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "autolink_id parameter",
                "in": "path",
                "name": "autolink_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete an autolink reference from a repository",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "autolinks"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "This returns a single autolink reference by ID that was configured for the given repository.\n\nInformation about autolinks are only available to repository administrators.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/v3/repos#get-autolink"
            },
            "operationId": "repos/get-autolink",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "autolink_id parameter",
                "in": "path",
                "name": "autolink_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "id": 1,
                          "key_prefix": "TICKET-",
                          "url_template": "https://example.com/TICKET?query=<num>"
                        }
                      }
                    },
                    "schema": {
                      "description": "An autolink reference.",
                      "properties": {
                        "id": { "example": 3, "type": "integer" },
                        "key_prefix": {
                          "description": "The prefix of a key that is linkified.",
                          "example": "TICKET-",
                          "type": "string"
                        },
                        "url_template": {
                          "description": "A template for the target URL that is generated if a key was found.",
                          "example": "https://example.com/TICKET?query=<num>",
                          "type": "string"
                        }
                      },
                      "required": ["id", "key_prefix", "url_template"],
                      "title": "Autolink reference",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Get an autolink reference of a repository",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "autolinks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/automated-security-fixes",
        {
          "delete": {
            "deprecated": null,
            "description": "Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\".",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#disable-automated-security-fixes"
            },
            "operationId": "repos/disable-automated-security-fixes",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Disable automated security fixes",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "london",
                  "note": "Enabling or disabling automated security fixes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.london-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\".",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#enable-automated-security-fixes"
            },
            "operationId": "repos/enable-automated-security-fixes",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Enable automated security fixes",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "london",
                  "note": "Enabling or disabling automated security fixes is currently available for developers to preview. To access this new endpoint during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.london-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/community/code_of_conduct",
        {
          "get": {
            "deprecated": null,
            "description": "Returns the contents of the repository's code of conduct file, if one is detected.\n\nA code of conduct is detected if there is a file named `CODE_OF_CONDUCT` in the root directory of the repository. GitHub detects which code of conduct it is using fuzzy matching.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/codes-of-conduct#get-the-code-of-conduct-for-a-repository"
            },
            "operationId": "codes-of-conduct/get-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "body": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\nto any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\nposting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at lindseyb@github.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                          "html_url": "https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md",
                          "key": "contributor_covenant",
                          "name": "Contributor Covenant",
                          "url": "https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md"
                        }
                      }
                    },
                    "schema": {
                      "description": "Code Of Conduct",
                      "properties": {
                        "body": {
                          "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                          "type": "string"
                        },
                        "html_url": {
                          "format": "uri",
                          "nullable": true,
                          "type": "string"
                        },
                        "key": {
                          "example": "contributor_covenant",
                          "type": "string"
                        },
                        "name": {
                          "example": "Contributor Covenant",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": ["url", "html_url", "key", "name"],
                      "title": "Code Of Conduct",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get the code of conduct for a repository",
            "tags": ["codes-of-conduct"],
            "x-github": {
              "category": "codes-of-conduct",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "scarlet-witch",
                  "note": "The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.scarlet-witch-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/community/profile",
        {
          "get": {
            "deprecated": null,
            "description": "This endpoint will return all community profile metrics, including an\noverall health score, repository description, the presence of documentation, detected\ncode of conduct, detected license, and the presence of ISSUE\\_TEMPLATE, PULL\\_REQUEST\\_TEMPLATE,\nREADME, and CONTRIBUTING files.\n\nThe `health_percentage` score is defined as a percentage of how many of\nthese four documents are present: README, CONTRIBUTING, LICENSE, and\nCODE_OF_CONDUCT. For example, if all four documents are present, then\nthe `health_percentage` is `100`. If only one is present, then the\n`health_percentage` is `25`.\n\n`content_reports_enabled` is only returned for organization-owned repositories.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#get-community-profile-metrics"
            },
            "operationId": "repos/get-community-profile-metrics",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "content_reports_enabled": true,
                          "description": "My first repository on GitHub!",
                          "documentation": null,
                          "files": {
                            "code_of_conduct": {
                              "html_url": "https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md",
                              "key": "contributor_covenant",
                              "name": "Contributor Covenant",
                              "url": "https://api.github.com/codes_of_conduct/contributor_covenant"
                            },
                            "code_of_conduct_file": {
                              "html_url": "https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md",
                              "url": "https://api.github.com/repos/octocat/Hello-World/contents/CODE_OF_CONDUCT.md"
                            },
                            "contributing": {
                              "html_url": "https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING",
                              "url": "https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING"
                            },
                            "issue_template": {
                              "html_url": "https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE",
                              "url": "https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE"
                            },
                            "license": {
                              "html_url": "https://github.com/octocat/Hello-World/blob/master/LICENSE",
                              "key": "mit",
                              "name": "MIT License",
                              "node_id": "MDc6TGljZW5zZW1pdA==",
                              "spdx_id": "MIT",
                              "url": "https://api.github.com/licenses/mit"
                            },
                            "pull_request_template": {
                              "html_url": "https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE",
                              "url": "https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE"
                            },
                            "readme": {
                              "html_url": "https://github.com/octocat/Hello-World/blob/master/README.md",
                              "url": "https://api.github.com/repos/octocat/Hello-World/contents/README.md"
                            }
                          },
                          "health_percentage": 100,
                          "updated_at": "2017-02-28T19:09:29Z"
                        }
                      }
                    },
                    "schema": {
                      "description": "Community Profile",
                      "properties": {
                        "content_reports_enabled": {
                          "example": true,
                          "type": "boolean"
                        },
                        "description": {
                          "example": "My first repository on GitHub!",
                          "nullable": true,
                          "type": "string"
                        },
                        "documentation": {
                          "example": "example.com",
                          "nullable": true,
                          "type": "string"
                        },
                        "files": {
                          "properties": {
                            "code_of_conduct": {
                              "allOf": [
                                {
                                  "description": "Code of Conduct Simple",
                                  "properties": {
                                    "html_url": {
                                      "example": "https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md",
                                      "format": "uri",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "key": {
                                      "example": "citizen_code_of_conduct",
                                      "type": "string"
                                    },
                                    "name": {
                                      "example": "Citizen Code of Conduct",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/repos/github/docs/community/code_of_conduct",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "url",
                                    "key",
                                    "name",
                                    "html_url"
                                  ],
                                  "title": "Code Of Conduct Simple",
                                  "type": "object"
                                }
                              ],
                              "nullable": true
                            },
                            "code_of_conduct_file": {
                              "allOf": [
                                {
                                  "properties": {
                                    "html_url": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "url": { "format": "uri", "type": "string" }
                                  },
                                  "required": ["url", "html_url"],
                                  "title": "Community Health File",
                                  "type": "object"
                                }
                              ],
                              "nullable": true
                            },
                            "contributing": {
                              "allOf": [
                                {
                                  "properties": {
                                    "html_url": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "url": { "format": "uri", "type": "string" }
                                  },
                                  "required": ["url", "html_url"],
                                  "title": "Community Health File",
                                  "type": "object"
                                }
                              ],
                              "nullable": true
                            },
                            "issue_template": {
                              "allOf": [
                                {
                                  "properties": {
                                    "html_url": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "url": { "format": "uri", "type": "string" }
                                  },
                                  "required": ["url", "html_url"],
                                  "title": "Community Health File",
                                  "type": "object"
                                }
                              ],
                              "nullable": true
                            },
                            "license": {
                              "allOf": [
                                {
                                  "description": "License Simple",
                                  "properties": {
                                    "html_url": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "key": {
                                      "example": "mit",
                                      "type": "string"
                                    },
                                    "name": {
                                      "example": "MIT License",
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "example": "MDc6TGljZW5zZW1pdA==",
                                      "type": "string"
                                    },
                                    "spdx_id": {
                                      "example": "MIT",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/licenses/mit",
                                      "format": "uri",
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "name",
                                    "url",
                                    "spdx_id",
                                    "node_id"
                                  ],
                                  "title": "License Simple",
                                  "type": "object"
                                }
                              ],
                              "nullable": true
                            },
                            "pull_request_template": {
                              "allOf": [
                                {
                                  "properties": {
                                    "html_url": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "url": { "format": "uri", "type": "string" }
                                  },
                                  "required": ["url", "html_url"],
                                  "title": "Community Health File",
                                  "type": "object"
                                }
                              ],
                              "nullable": true
                            },
                            "readme": {
                              "allOf": [
                                {
                                  "properties": {
                                    "html_url": {
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "url": { "format": "uri", "type": "string" }
                                  },
                                  "required": ["url", "html_url"],
                                  "title": "Community Health File",
                                  "type": "object"
                                }
                              ],
                              "nullable": true
                            }
                          },
                          "required": [
                            "code_of_conduct",
                            "code_of_conduct_file",
                            "license",
                            "contributing",
                            "readme",
                            "issue_template",
                            "pull_request_template"
                          ],
                          "type": "object"
                        },
                        "health_percentage": {
                          "example": 100,
                          "type": "integer"
                        },
                        "updated_at": {
                          "example": "2017-02-28T19:09:29Z",
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "health_percentage",
                        "description",
                        "documentation",
                        "files",
                        "updated_at"
                      ],
                      "title": "Community Profile",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get community profile metrics",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "subcategory": "community"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/environments",
        {
          "get": {
            "deprecated": null,
            "description": "Get all environments for a repository.\n\nAnyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#get-all-environments"
            },
            "operationId": "repos/get-all-environments",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "environments": [
                            {
                              "created_at": "2020-11-23T22:00:40Z",
                              "deployment_branch_policy": {
                                "custom_branch_policies": true,
                                "protected_branches": false
                              },
                              "html_url": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                              "id": 161088068,
                              "name": "staging",
                              "node_id": "MDExOkVudmlyb25tZW50MTYxMDg4MDY4",
                              "protection_rules": [
                                {
                                  "id": 3736,
                                  "node_id": "MDQ6R2F0ZTM3MzY=",
                                  "type": "wait_timer",
                                  "wait_timer": 30
                                },
                                {
                                  "id": 3755,
                                  "node_id": "MDQ6R2F0ZTM3NTU=",
                                  "reviewers": [
                                    {
                                      "reviewer": {
                                        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                        "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                        "followers_url": "https://api.github.com/users/octocat/followers",
                                        "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                        "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "gravatar_id": "",
                                        "html_url": "https://github.com/octocat",
                                        "id": 1,
                                        "login": "octocat",
                                        "node_id": "MDQ6VXNlcjE=",
                                        "organizations_url": "https://api.github.com/users/octocat/orgs",
                                        "received_events_url": "https://api.github.com/users/octocat/received_events",
                                        "repos_url": "https://api.github.com/users/octocat/repos",
                                        "site_admin": false,
                                        "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                        "type": "User",
                                        "url": "https://api.github.com/users/octocat"
                                      },
                                      "type": "User"
                                    },
                                    {
                                      "reviewer": {
                                        "description": "A great team.",
                                        "html_url": "https://github.com/orgs/github/teams/justice-league",
                                        "id": 1,
                                        "members_url": "https://api.github.com/teams/1/members{/member}",
                                        "name": "Justice League",
                                        "node_id": "MDQ6VGVhbTE=",
                                        "parent": null,
                                        "permission": "admin",
                                        "privacy": "closed",
                                        "repositories_url": "https://api.github.com/teams/1/repos",
                                        "slug": "justice-league",
                                        "url": "https://api.github.com/teams/1"
                                      },
                                      "type": "Team"
                                    }
                                  ],
                                  "type": "required_reviewers"
                                },
                                {
                                  "id": 3756,
                                  "node_id": "MDQ6R2F0ZTM3NTY=",
                                  "type": "branch_policy"
                                }
                              ],
                              "updated_at": "2020-11-23T22:00:40Z",
                              "url": "https://api.github.com/repos/github/hello-world/environments/staging"
                            }
                          ],
                          "total_count": 1
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "environments": {
                          "items": {
                            "description": "Details of a deployment environment",
                            "properties": {
                              "created_at": {
                                "description": "The time that the environment was created, in ISO 8601 format.",
                                "example": "2020-11-23T22:00:40Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "deployment_branch_policy": {
                                "description": "The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.",
                                "nullable": true,
                                "properties": {
                                  "custom_branch_policies": {
                                    "description": "Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.",
                                    "type": "boolean"
                                  },
                                  "protected_branches": {
                                    "description": "Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "protected_branches",
                                  "custom_branch_policies"
                                ],
                                "type": "object"
                              },
                              "html_url": {
                                "example": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                                "type": "string"
                              },
                              "id": {
                                "description": "The id of the environment.",
                                "example": 56780428,
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the environment.",
                                "example": "staging",
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDExOkVudmlyb25tZW50NTY3ODA0Mjg=",
                                "type": "string"
                              },
                              "protection_rules": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "properties": {
                                        "id": {
                                          "example": 3515,
                                          "type": "integer"
                                        },
                                        "node_id": {
                                          "example": "MDQ6R2F0ZTM1MTU=",
                                          "type": "string"
                                        },
                                        "type": {
                                          "example": "wait_timer",
                                          "type": "string"
                                        },
                                        "wait_timer": {
                                          "description": "The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).",
                                          "example": 30,
                                          "type": "integer"
                                        }
                                      },
                                      "required": ["id", "node_id", "type"],
                                      "type": "object"
                                    },
                                    {
                                      "properties": {
                                        "id": {
                                          "example": 3755,
                                          "type": "integer"
                                        },
                                        "node_id": {
                                          "example": "MDQ6R2F0ZTM3NTU=",
                                          "type": "string"
                                        },
                                        "reviewers": {
                                          "description": "The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.",
                                          "items": {
                                            "properties": {
                                              "reviewer": {
                                                "anyOf": [
                                                  {
                                                    "description": "Simple User",
                                                    "nullable": true,
                                                    "properties": {
                                                      "avatar_url": {
                                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                                        "format": "uri",
                                                        "type": "string"
                                                      },
                                                      "email": {
                                                        "nullable": true,
                                                        "type": "string"
                                                      },
                                                      "events_url": {
                                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                        "type": "string"
                                                      },
                                                      "followers_url": {
                                                        "example": "https://api.github.com/users/octocat/followers",
                                                        "format": "uri",
                                                        "type": "string"
                                                      },
                                                      "following_url": {
                                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                        "type": "string"
                                                      },
                                                      "gists_url": {
                                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                        "type": "string"
                                                      },
                                                      "gravatar_id": {
                                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                                        "nullable": true,
                                                        "type": "string"
                                                      },
                                                      "html_url": {
                                                        "example": "https://github.com/octocat",
                                                        "format": "uri",
                                                        "type": "string"
                                                      },
                                                      "id": {
                                                        "example": 1,
                                                        "type": "integer"
                                                      },
                                                      "login": {
                                                        "example": "octocat",
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "nullable": true,
                                                        "type": "string"
                                                      },
                                                      "node_id": {
                                                        "example": "MDQ6VXNlcjE=",
                                                        "type": "string"
                                                      },
                                                      "organizations_url": {
                                                        "example": "https://api.github.com/users/octocat/orgs",
                                                        "format": "uri",
                                                        "type": "string"
                                                      },
                                                      "received_events_url": {
                                                        "example": "https://api.github.com/users/octocat/received_events",
                                                        "format": "uri",
                                                        "type": "string"
                                                      },
                                                      "repos_url": {
                                                        "example": "https://api.github.com/users/octocat/repos",
                                                        "format": "uri",
                                                        "type": "string"
                                                      },
                                                      "site_admin": {
                                                        "type": "boolean"
                                                      },
                                                      "starred_at": {
                                                        "example": "\"2020-07-09T00:17:55Z\"",
                                                        "type": "string"
                                                      },
                                                      "starred_url": {
                                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                        "type": "string"
                                                      },
                                                      "subscriptions_url": {
                                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                                        "format": "uri",
                                                        "type": "string"
                                                      },
                                                      "type": {
                                                        "example": "User",
                                                        "type": "string"
                                                      },
                                                      "url": {
                                                        "example": "https://api.github.com/users/octocat",
                                                        "format": "uri",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "avatar_url",
                                                      "events_url",
                                                      "followers_url",
                                                      "following_url",
                                                      "gists_url",
                                                      "gravatar_id",
                                                      "html_url",
                                                      "id",
                                                      "node_id",
                                                      "login",
                                                      "organizations_url",
                                                      "received_events_url",
                                                      "repos_url",
                                                      "site_admin",
                                                      "starred_url",
                                                      "subscriptions_url",
                                                      "type",
                                                      "url"
                                                    ],
                                                    "title": "Simple User",
                                                    "type": "object"
                                                  },
                                                  {
                                                    "description": "Groups of organization members that gives permissions on specified repositories.",
                                                    "properties": {
                                                      "description": {
                                                        "nullable": true,
                                                        "type": "string"
                                                      },
                                                      "html_url": {
                                                        "example": "https://github.com/orgs/rails/teams/core",
                                                        "format": "uri",
                                                        "type": "string"
                                                      },
                                                      "id": {
                                                        "type": "integer"
                                                      },
                                                      "members_url": {
                                                        "type": "string"
                                                      },
                                                      "name": {
                                                        "type": "string"
                                                      },
                                                      "node_id": {
                                                        "type": "string"
                                                      },
                                                      "parent": {
                                                        "allOf": [
                                                          {
                                                            "description": "Groups of organization members that gives permissions on specified repositories.",
                                                            "nullable": true,
                                                            "properties": {
                                                              "description": {
                                                                "description": "Description of the team",
                                                                "example": "A great team.",
                                                                "nullable": true,
                                                                "type": "string"
                                                              },
                                                              "html_url": {
                                                                "example": "https://github.com/orgs/rails/teams/core",
                                                                "format": "uri",
                                                                "type": "string"
                                                              },
                                                              "id": {
                                                                "description": "Unique identifier of the team",
                                                                "example": 1,
                                                                "type": "integer"
                                                              },
                                                              "ldap_dn": {
                                                                "description": "Distinguished Name (DN) that team maps to within LDAP environment",
                                                                "example": "uid=example,ou=users,dc=github,dc=com",
                                                                "type": "string"
                                                              },
                                                              "members_url": {
                                                                "example": "https://api.github.com/organizations/1/team/1/members{/member}",
                                                                "type": "string"
                                                              },
                                                              "name": {
                                                                "description": "Name of the team",
                                                                "example": "Justice League",
                                                                "type": "string"
                                                              },
                                                              "node_id": {
                                                                "example": "MDQ6VGVhbTE=",
                                                                "type": "string"
                                                              },
                                                              "permission": {
                                                                "description": "Permission that the team will have for its repositories",
                                                                "example": "admin",
                                                                "type": "string"
                                                              },
                                                              "privacy": {
                                                                "description": "The level of privacy this team should have",
                                                                "example": "closed",
                                                                "type": "string"
                                                              },
                                                              "repositories_url": {
                                                                "example": "https://api.github.com/organizations/1/team/1/repos",
                                                                "format": "uri",
                                                                "type": "string"
                                                              },
                                                              "slug": {
                                                                "example": "justice-league",
                                                                "type": "string"
                                                              },
                                                              "url": {
                                                                "description": "URL for the team",
                                                                "example": "https://api.github.com/organizations/1/team/1",
                                                                "format": "uri",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "id",
                                                              "node_id",
                                                              "url",
                                                              "members_url",
                                                              "name",
                                                              "description",
                                                              "permission",
                                                              "html_url",
                                                              "repositories_url",
                                                              "slug"
                                                            ],
                                                            "title": "Team Simple",
                                                            "type": "object"
                                                          }
                                                        ],
                                                        "nullable": true
                                                      },
                                                      "permission": {
                                                        "type": "string"
                                                      },
                                                      "permissions": {
                                                        "properties": {
                                                          "admin": {
                                                            "type": "boolean"
                                                          },
                                                          "maintain": {
                                                            "type": "boolean"
                                                          },
                                                          "pull": {
                                                            "type": "boolean"
                                                          },
                                                          "push": {
                                                            "type": "boolean"
                                                          },
                                                          "triage": {
                                                            "type": "boolean"
                                                          }
                                                        },
                                                        "required": [
                                                          "pull",
                                                          "triage",
                                                          "push",
                                                          "maintain",
                                                          "admin"
                                                        ],
                                                        "type": "object"
                                                      },
                                                      "privacy": {
                                                        "type": "string"
                                                      },
                                                      "repositories_url": {
                                                        "format": "uri",
                                                        "type": "string"
                                                      },
                                                      "slug": {
                                                        "type": "string"
                                                      },
                                                      "url": {
                                                        "format": "uri",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "required": [
                                                      "id",
                                                      "node_id",
                                                      "url",
                                                      "members_url",
                                                      "name",
                                                      "description",
                                                      "permission",
                                                      "html_url",
                                                      "repositories_url",
                                                      "slug",
                                                      "parent"
                                                    ],
                                                    "title": "Team",
                                                    "type": "object"
                                                  }
                                                ]
                                              },
                                              "type": {
                                                "description": "The type of reviewer. Must be one of: `User` or `Team`",
                                                "enum": ["User", "Team"],
                                                "example": "User",
                                                "type": "string"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "type": {
                                          "example": "required_reviewers",
                                          "type": "string"
                                        }
                                      },
                                      "required": ["id", "node_id", "type"],
                                      "type": "object"
                                    },
                                    {
                                      "properties": {
                                        "id": {
                                          "example": 3515,
                                          "type": "integer"
                                        },
                                        "node_id": {
                                          "example": "MDQ6R2F0ZTM1MTU=",
                                          "type": "string"
                                        },
                                        "type": {
                                          "example": "branch_policy",
                                          "type": "string"
                                        }
                                      },
                                      "required": ["id", "node_id", "type"],
                                      "type": "object"
                                    }
                                  ]
                                },
                                "type": "array"
                              },
                              "updated_at": {
                                "description": "The time that the environment was last updated, in ISO 8601 format.",
                                "example": "2020-11-23T22:00:40Z",
                                "format": "date-time",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/repos/github/hello-world/environments/staging",
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "node_id",
                              "name",
                              "url",
                              "html_url",
                              "created_at",
                              "updated_at"
                            ],
                            "title": "Environment",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_count": {
                          "description": "The number of environments in this repository",
                          "example": 5,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get all environments",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "environments"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/environments/{environment_name}",
        {
          "delete": {
            "deprecated": null,
            "description": "You must authenticate using an access token with the repo scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#delete-an-environment"
            },
            "operationId": "repos/delete-an-environment",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "The name of the environment",
                "in": "path",
                "name": "environment_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Default response" } },
            "summary": "Delete an environment",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "environments"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Anyone with read access to the repository can use this endpoint. If the repository is private, you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#get-an-environment"
            },
            "operationId": "repos/get-environment",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "The name of the environment",
                "in": "path",
                "name": "environment_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2020-11-23T22:00:40Z",
                          "deployment_branch_policy": {
                            "custom_branch_policies": true,
                            "protected_branches": false
                          },
                          "html_url": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                          "id": 161088068,
                          "name": "staging",
                          "node_id": "MDExOkVudmlyb25tZW50MTYxMDg4MDY4",
                          "protection_rules": [
                            {
                              "id": 3736,
                              "node_id": "MDQ6R2F0ZTM3MzY=",
                              "type": "wait_timer",
                              "wait_timer": 30
                            },
                            {
                              "id": 3755,
                              "node_id": "MDQ6R2F0ZTM3NTU=",
                              "reviewers": [
                                {
                                  "reviewer": {
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "gravatar_id": "",
                                    "html_url": "https://github.com/octocat",
                                    "id": 1,
                                    "login": "octocat",
                                    "node_id": "MDQ6VXNlcjE=",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "site_admin": false,
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "type": "User",
                                    "url": "https://api.github.com/users/octocat"
                                  },
                                  "type": "User"
                                },
                                {
                                  "reviewer": {
                                    "description": "A great team.",
                                    "html_url": "https://github.com/orgs/github/teams/justice-league",
                                    "id": 1,
                                    "members_url": "https://api.github.com/teams/1/members{/member}",
                                    "name": "Justice League",
                                    "node_id": "MDQ6VGVhbTE=",
                                    "parent": null,
                                    "permission": "admin",
                                    "privacy": "closed",
                                    "repositories_url": "https://api.github.com/teams/1/repos",
                                    "slug": "justice-league",
                                    "url": "https://api.github.com/teams/1"
                                  },
                                  "type": "Team"
                                }
                              ],
                              "type": "required_reviewers"
                            },
                            {
                              "id": 3756,
                              "node_id": "MDQ6R2F0ZTM3NTY=",
                              "type": "branch_policy"
                            }
                          ],
                          "updated_at": "2020-11-23T22:00:40Z",
                          "url": "https://api.github.com/repos/github/hello-world/environments/staging"
                        }
                      }
                    },
                    "schema": {
                      "description": "Details of a deployment environment",
                      "properties": {
                        "created_at": {
                          "description": "The time that the environment was created, in ISO 8601 format.",
                          "example": "2020-11-23T22:00:40Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "deployment_branch_policy": {
                          "description": "The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.",
                          "nullable": true,
                          "properties": {
                            "custom_branch_policies": {
                              "description": "Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.",
                              "type": "boolean"
                            },
                            "protected_branches": {
                              "description": "Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "protected_branches",
                            "custom_branch_policies"
                          ],
                          "type": "object"
                        },
                        "html_url": {
                          "example": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                          "type": "string"
                        },
                        "id": {
                          "description": "The id of the environment.",
                          "example": 56780428,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the environment.",
                          "example": "staging",
                          "type": "string"
                        },
                        "node_id": {
                          "example": "MDExOkVudmlyb25tZW50NTY3ODA0Mjg=",
                          "type": "string"
                        },
                        "protection_rules": {
                          "items": {
                            "anyOf": [
                              {
                                "properties": {
                                  "id": { "example": 3515, "type": "integer" },
                                  "node_id": {
                                    "example": "MDQ6R2F0ZTM1MTU=",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "wait_timer",
                                    "type": "string"
                                  },
                                  "wait_timer": {
                                    "description": "The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).",
                                    "example": 30,
                                    "type": "integer"
                                  }
                                },
                                "required": ["id", "node_id", "type"],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "id": { "example": 3755, "type": "integer" },
                                  "node_id": {
                                    "example": "MDQ6R2F0ZTM3NTU=",
                                    "type": "string"
                                  },
                                  "reviewers": {
                                    "description": "The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.",
                                    "items": {
                                      "properties": {
                                        "reviewer": {
                                          "anyOf": [
                                            {
                                              "description": "Simple User",
                                              "nullable": true,
                                              "properties": {
                                                "avatar_url": {
                                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "email": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "events_url": {
                                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                  "type": "string"
                                                },
                                                "followers_url": {
                                                  "example": "https://api.github.com/users/octocat/followers",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "following_url": {
                                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                  "type": "string"
                                                },
                                                "gists_url": {
                                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                  "type": "string"
                                                },
                                                "gravatar_id": {
                                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "example": "https://github.com/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "example": 1,
                                                  "type": "integer"
                                                },
                                                "login": {
                                                  "example": "octocat",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "node_id": {
                                                  "example": "MDQ6VXNlcjE=",
                                                  "type": "string"
                                                },
                                                "organizations_url": {
                                                  "example": "https://api.github.com/users/octocat/orgs",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "received_events_url": {
                                                  "example": "https://api.github.com/users/octocat/received_events",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "repos_url": {
                                                  "example": "https://api.github.com/users/octocat/repos",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "site_admin": {
                                                  "type": "boolean"
                                                },
                                                "starred_at": {
                                                  "example": "\"2020-07-09T00:17:55Z\"",
                                                  "type": "string"
                                                },
                                                "starred_url": {
                                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                  "type": "string"
                                                },
                                                "subscriptions_url": {
                                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "example": "User",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "example": "https://api.github.com/users/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "avatar_url",
                                                "events_url",
                                                "followers_url",
                                                "following_url",
                                                "gists_url",
                                                "gravatar_id",
                                                "html_url",
                                                "id",
                                                "node_id",
                                                "login",
                                                "organizations_url",
                                                "received_events_url",
                                                "repos_url",
                                                "site_admin",
                                                "starred_url",
                                                "subscriptions_url",
                                                "type",
                                                "url"
                                              ],
                                              "title": "Simple User",
                                              "type": "object"
                                            },
                                            {
                                              "description": "Groups of organization members that gives permissions on specified repositories.",
                                              "properties": {
                                                "description": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "example": "https://github.com/orgs/rails/teams/core",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "id": { "type": "integer" },
                                                "members_url": {
                                                  "type": "string"
                                                },
                                                "name": { "type": "string" },
                                                "node_id": { "type": "string" },
                                                "parent": {
                                                  "allOf": [
                                                    {
                                                      "description": "Groups of organization members that gives permissions on specified repositories.",
                                                      "nullable": true,
                                                      "properties": {
                                                        "description": {
                                                          "description": "Description of the team",
                                                          "example": "A great team.",
                                                          "nullable": true,
                                                          "type": "string"
                                                        },
                                                        "html_url": {
                                                          "example": "https://github.com/orgs/rails/teams/core",
                                                          "format": "uri",
                                                          "type": "string"
                                                        },
                                                        "id": {
                                                          "description": "Unique identifier of the team",
                                                          "example": 1,
                                                          "type": "integer"
                                                        },
                                                        "ldap_dn": {
                                                          "description": "Distinguished Name (DN) that team maps to within LDAP environment",
                                                          "example": "uid=example,ou=users,dc=github,dc=com",
                                                          "type": "string"
                                                        },
                                                        "members_url": {
                                                          "example": "https://api.github.com/organizations/1/team/1/members{/member}",
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "description": "Name of the team",
                                                          "example": "Justice League",
                                                          "type": "string"
                                                        },
                                                        "node_id": {
                                                          "example": "MDQ6VGVhbTE=",
                                                          "type": "string"
                                                        },
                                                        "permission": {
                                                          "description": "Permission that the team will have for its repositories",
                                                          "example": "admin",
                                                          "type": "string"
                                                        },
                                                        "privacy": {
                                                          "description": "The level of privacy this team should have",
                                                          "example": "closed",
                                                          "type": "string"
                                                        },
                                                        "repositories_url": {
                                                          "example": "https://api.github.com/organizations/1/team/1/repos",
                                                          "format": "uri",
                                                          "type": "string"
                                                        },
                                                        "slug": {
                                                          "example": "justice-league",
                                                          "type": "string"
                                                        },
                                                        "url": {
                                                          "description": "URL for the team",
                                                          "example": "https://api.github.com/organizations/1/team/1",
                                                          "format": "uri",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "node_id",
                                                        "url",
                                                        "members_url",
                                                        "name",
                                                        "description",
                                                        "permission",
                                                        "html_url",
                                                        "repositories_url",
                                                        "slug"
                                                      ],
                                                      "title": "Team Simple",
                                                      "type": "object"
                                                    }
                                                  ],
                                                  "nullable": true
                                                },
                                                "permission": {
                                                  "type": "string"
                                                },
                                                "permissions": {
                                                  "properties": {
                                                    "admin": {
                                                      "type": "boolean"
                                                    },
                                                    "maintain": {
                                                      "type": "boolean"
                                                    },
                                                    "pull": {
                                                      "type": "boolean"
                                                    },
                                                    "push": {
                                                      "type": "boolean"
                                                    },
                                                    "triage": {
                                                      "type": "boolean"
                                                    }
                                                  },
                                                  "required": [
                                                    "pull",
                                                    "triage",
                                                    "push",
                                                    "maintain",
                                                    "admin"
                                                  ],
                                                  "type": "object"
                                                },
                                                "privacy": { "type": "string" },
                                                "repositories_url": {
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "slug": { "type": "string" },
                                                "url": {
                                                  "format": "uri",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "node_id",
                                                "url",
                                                "members_url",
                                                "name",
                                                "description",
                                                "permission",
                                                "html_url",
                                                "repositories_url",
                                                "slug",
                                                "parent"
                                              ],
                                              "title": "Team",
                                              "type": "object"
                                            }
                                          ]
                                        },
                                        "type": {
                                          "description": "The type of reviewer. Must be one of: `User` or `Team`",
                                          "enum": ["User", "Team"],
                                          "example": "User",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "type": {
                                    "example": "required_reviewers",
                                    "type": "string"
                                  }
                                },
                                "required": ["id", "node_id", "type"],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "id": { "example": 3515, "type": "integer" },
                                  "node_id": {
                                    "example": "MDQ6R2F0ZTM1MTU=",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "branch_policy",
                                    "type": "string"
                                  }
                                },
                                "required": ["id", "node_id", "type"],
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        },
                        "updated_at": {
                          "description": "The time that the environment was last updated, in ISO 8601 format.",
                          "example": "2020-11-23T22:00:40Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/repos/github/hello-world/environments/staging",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "node_id",
                        "name",
                        "url",
                        "html_url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Environment",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get an environment",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "environments"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "Create or update an environment with protection rules, such as required reviewers. For more information about environment protection rules, see \"[Environments](/actions/reference/environments#environment-protection-rules).\"\n\n**Note:** Although you can use this operation to specify that only branches that match specified name patterns can deploy to this environment, you must use the UI to set the name patterns. For more information, see \"[Environments](/actions/reference/environments#deployment-branches).\"\n\n**Note:** To create or update secrets for an environment, see \"[Secrets](/rest/reference/actions#secrets).\"\n\nYou must authenticate using an access token with the repo scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#create-or-update-an-environment"
            },
            "operationId": "repos/create-or-update-environment",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "The name of the environment",
                "in": "path",
                "name": "environment_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": false,
                    "nullable": true,
                    "properties": {
                      "deployment_branch_policy": {
                        "description": "The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.",
                        "nullable": true,
                        "properties": {
                          "custom_branch_policies": {
                            "description": "Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.",
                            "type": "boolean"
                          },
                          "protected_branches": {
                            "description": "Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "protected_branches",
                          "custom_branch_policies"
                        ],
                        "type": "object"
                      },
                      "reviewers": {
                        "description": "The people or teams that may review jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.",
                        "items": {
                          "properties": {
                            "id": {
                              "description": "The id of the user or team who can review the deployment",
                              "example": 4532992,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of reviewer. Must be one of: `User` or `Team`",
                              "enum": ["User", "Team"],
                              "example": "User",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "wait_timer": {
                        "description": "The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).",
                        "example": 30,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2020-11-23T22:00:40Z",
                          "deployment_branch_policy": {
                            "custom_branch_policies": true,
                            "protected_branches": false
                          },
                          "html_url": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                          "id": 161088068,
                          "name": "staging",
                          "node_id": "MDExOkVudmlyb25tZW50MTYxMDg4MDY4",
                          "protection_rules": [
                            {
                              "id": 3736,
                              "node_id": "MDQ6R2F0ZTM3MzY=",
                              "type": "wait_timer",
                              "wait_timer": 30
                            },
                            {
                              "id": 3755,
                              "node_id": "MDQ6R2F0ZTM3NTU=",
                              "reviewers": [
                                {
                                  "reviewer": {
                                    "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                    "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                    "followers_url": "https://api.github.com/users/octocat/followers",
                                    "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                    "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "gravatar_id": "",
                                    "html_url": "https://github.com/octocat",
                                    "id": 1,
                                    "login": "octocat",
                                    "node_id": "MDQ6VXNlcjE=",
                                    "organizations_url": "https://api.github.com/users/octocat/orgs",
                                    "received_events_url": "https://api.github.com/users/octocat/received_events",
                                    "repos_url": "https://api.github.com/users/octocat/repos",
                                    "site_admin": false,
                                    "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                    "type": "User",
                                    "url": "https://api.github.com/users/octocat"
                                  },
                                  "type": "User"
                                },
                                {
                                  "reviewer": {
                                    "description": "A great team.",
                                    "html_url": "https://github.com/orgs/github/teams/justice-league",
                                    "id": 1,
                                    "members_url": "https://api.github.com/teams/1/members{/member}",
                                    "name": "Justice League",
                                    "node_id": "MDQ6VGVhbTE=",
                                    "parent": null,
                                    "permission": "admin",
                                    "privacy": "closed",
                                    "repositories_url": "https://api.github.com/teams/1/repos",
                                    "slug": "justice-league",
                                    "url": "https://api.github.com/teams/1"
                                  },
                                  "type": "Team"
                                }
                              ],
                              "type": "required_reviewers"
                            },
                            {
                              "id": 3756,
                              "node_id": "MDQ6R2F0ZTM3NTY=",
                              "type": "branch_policy"
                            }
                          ],
                          "updated_at": "2020-11-23T22:00:40Z",
                          "url": "https://api.github.com/repos/github/hello-world/environments/staging"
                        }
                      }
                    },
                    "schema": {
                      "description": "Details of a deployment environment",
                      "properties": {
                        "created_at": {
                          "description": "The time that the environment was created, in ISO 8601 format.",
                          "example": "2020-11-23T22:00:40Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "deployment_branch_policy": {
                          "description": "The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.",
                          "nullable": true,
                          "properties": {
                            "custom_branch_policies": {
                              "description": "Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.",
                              "type": "boolean"
                            },
                            "protected_branches": {
                              "description": "Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "protected_branches",
                            "custom_branch_policies"
                          ],
                          "type": "object"
                        },
                        "html_url": {
                          "example": "https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging",
                          "type": "string"
                        },
                        "id": {
                          "description": "The id of the environment.",
                          "example": 56780428,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the environment.",
                          "example": "staging",
                          "type": "string"
                        },
                        "node_id": {
                          "example": "MDExOkVudmlyb25tZW50NTY3ODA0Mjg=",
                          "type": "string"
                        },
                        "protection_rules": {
                          "items": {
                            "anyOf": [
                              {
                                "properties": {
                                  "id": { "example": 3515, "type": "integer" },
                                  "node_id": {
                                    "example": "MDQ6R2F0ZTM1MTU=",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "wait_timer",
                                    "type": "string"
                                  },
                                  "wait_timer": {
                                    "description": "The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).",
                                    "example": 30,
                                    "type": "integer"
                                  }
                                },
                                "required": ["id", "node_id", "type"],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "id": { "example": 3755, "type": "integer" },
                                  "node_id": {
                                    "example": "MDQ6R2F0ZTM3NTU=",
                                    "type": "string"
                                  },
                                  "reviewers": {
                                    "description": "The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.",
                                    "items": {
                                      "properties": {
                                        "reviewer": {
                                          "anyOf": [
                                            {
                                              "description": "Simple User",
                                              "nullable": true,
                                              "properties": {
                                                "avatar_url": {
                                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "email": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "events_url": {
                                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                  "type": "string"
                                                },
                                                "followers_url": {
                                                  "example": "https://api.github.com/users/octocat/followers",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "following_url": {
                                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                  "type": "string"
                                                },
                                                "gists_url": {
                                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                  "type": "string"
                                                },
                                                "gravatar_id": {
                                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "example": "https://github.com/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "example": 1,
                                                  "type": "integer"
                                                },
                                                "login": {
                                                  "example": "octocat",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "node_id": {
                                                  "example": "MDQ6VXNlcjE=",
                                                  "type": "string"
                                                },
                                                "organizations_url": {
                                                  "example": "https://api.github.com/users/octocat/orgs",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "received_events_url": {
                                                  "example": "https://api.github.com/users/octocat/received_events",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "repos_url": {
                                                  "example": "https://api.github.com/users/octocat/repos",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "site_admin": {
                                                  "type": "boolean"
                                                },
                                                "starred_at": {
                                                  "example": "\"2020-07-09T00:17:55Z\"",
                                                  "type": "string"
                                                },
                                                "starred_url": {
                                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                  "type": "string"
                                                },
                                                "subscriptions_url": {
                                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "example": "User",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "example": "https://api.github.com/users/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "avatar_url",
                                                "events_url",
                                                "followers_url",
                                                "following_url",
                                                "gists_url",
                                                "gravatar_id",
                                                "html_url",
                                                "id",
                                                "node_id",
                                                "login",
                                                "organizations_url",
                                                "received_events_url",
                                                "repos_url",
                                                "site_admin",
                                                "starred_url",
                                                "subscriptions_url",
                                                "type",
                                                "url"
                                              ],
                                              "title": "Simple User",
                                              "type": "object"
                                            },
                                            {
                                              "description": "Groups of organization members that gives permissions on specified repositories.",
                                              "properties": {
                                                "description": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "example": "https://github.com/orgs/rails/teams/core",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "id": { "type": "integer" },
                                                "members_url": {
                                                  "type": "string"
                                                },
                                                "name": { "type": "string" },
                                                "node_id": { "type": "string" },
                                                "parent": {
                                                  "allOf": [
                                                    {
                                                      "description": "Groups of organization members that gives permissions on specified repositories.",
                                                      "nullable": true,
                                                      "properties": {
                                                        "description": {
                                                          "description": "Description of the team",
                                                          "example": "A great team.",
                                                          "nullable": true,
                                                          "type": "string"
                                                        },
                                                        "html_url": {
                                                          "example": "https://github.com/orgs/rails/teams/core",
                                                          "format": "uri",
                                                          "type": "string"
                                                        },
                                                        "id": {
                                                          "description": "Unique identifier of the team",
                                                          "example": 1,
                                                          "type": "integer"
                                                        },
                                                        "ldap_dn": {
                                                          "description": "Distinguished Name (DN) that team maps to within LDAP environment",
                                                          "example": "uid=example,ou=users,dc=github,dc=com",
                                                          "type": "string"
                                                        },
                                                        "members_url": {
                                                          "example": "https://api.github.com/organizations/1/team/1/members{/member}",
                                                          "type": "string"
                                                        },
                                                        "name": {
                                                          "description": "Name of the team",
                                                          "example": "Justice League",
                                                          "type": "string"
                                                        },
                                                        "node_id": {
                                                          "example": "MDQ6VGVhbTE=",
                                                          "type": "string"
                                                        },
                                                        "permission": {
                                                          "description": "Permission that the team will have for its repositories",
                                                          "example": "admin",
                                                          "type": "string"
                                                        },
                                                        "privacy": {
                                                          "description": "The level of privacy this team should have",
                                                          "example": "closed",
                                                          "type": "string"
                                                        },
                                                        "repositories_url": {
                                                          "example": "https://api.github.com/organizations/1/team/1/repos",
                                                          "format": "uri",
                                                          "type": "string"
                                                        },
                                                        "slug": {
                                                          "example": "justice-league",
                                                          "type": "string"
                                                        },
                                                        "url": {
                                                          "description": "URL for the team",
                                                          "example": "https://api.github.com/organizations/1/team/1",
                                                          "format": "uri",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "id",
                                                        "node_id",
                                                        "url",
                                                        "members_url",
                                                        "name",
                                                        "description",
                                                        "permission",
                                                        "html_url",
                                                        "repositories_url",
                                                        "slug"
                                                      ],
                                                      "title": "Team Simple",
                                                      "type": "object"
                                                    }
                                                  ],
                                                  "nullable": true
                                                },
                                                "permission": {
                                                  "type": "string"
                                                },
                                                "permissions": {
                                                  "properties": {
                                                    "admin": {
                                                      "type": "boolean"
                                                    },
                                                    "maintain": {
                                                      "type": "boolean"
                                                    },
                                                    "pull": {
                                                      "type": "boolean"
                                                    },
                                                    "push": {
                                                      "type": "boolean"
                                                    },
                                                    "triage": {
                                                      "type": "boolean"
                                                    }
                                                  },
                                                  "required": [
                                                    "pull",
                                                    "triage",
                                                    "push",
                                                    "maintain",
                                                    "admin"
                                                  ],
                                                  "type": "object"
                                                },
                                                "privacy": { "type": "string" },
                                                "repositories_url": {
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "slug": { "type": "string" },
                                                "url": {
                                                  "format": "uri",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "node_id",
                                                "url",
                                                "members_url",
                                                "name",
                                                "description",
                                                "permission",
                                                "html_url",
                                                "repositories_url",
                                                "slug",
                                                "parent"
                                              ],
                                              "title": "Team",
                                              "type": "object"
                                            }
                                          ]
                                        },
                                        "type": {
                                          "description": "The type of reviewer. Must be one of: `User` or `Team`",
                                          "enum": ["User", "Team"],
                                          "example": "User",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "type": {
                                    "example": "required_reviewers",
                                    "type": "string"
                                  }
                                },
                                "required": ["id", "node_id", "type"],
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "id": { "example": 3515, "type": "integer" },
                                  "node_id": {
                                    "example": "MDQ6R2F0ZTM1MTU=",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "branch_policy",
                                    "type": "string"
                                  }
                                },
                                "required": ["id", "node_id", "type"],
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        },
                        "updated_at": {
                          "description": "The time that the environment was last updated, in ISO 8601 format.",
                          "example": "2020-11-23T22:00:40Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/repos/github/hello-world/environments/staging",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "node_id",
                        "name",
                        "url",
                        "html_url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Environment",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation error when the environment name is invalid or when `protected_branches` and `custom_branch_policies` in `deployment_branch_policy` are set to the same value"
              }
            },
            "summary": "Create or update an environment",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "environments"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
        {
          "get": {
            "deprecated": null,
            "description": "Returns a list of webhook deliveries for a webhook configured in a repository.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#list-deliveries-for-a-repository-webhook"
            },
            "operationId": "repos/list-webhook-deliveries",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for the next and previous page cursors.",
                "in": "query",
                "name": "cursor",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "action": "opened",
                            "delivered_at": "2019-06-03T00:57:16Z",
                            "duration": 0.27,
                            "event": "issues",
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "id": 12345678,
                            "installation_id": 123,
                            "redelivery": false,
                            "repository_id": 456,
                            "status": "OK",
                            "status_code": 200
                          },
                          {
                            "action": "opened",
                            "delivered_at": "2019-06-04T00:57:16Z",
                            "duration": 0.28,
                            "event": "issues",
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "id": 123456789,
                            "installation_id": 123,
                            "redelivery": true,
                            "repository_id": 456,
                            "status": "OK",
                            "status_code": 200
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Delivery made by a webhook, without request and response information.",
                        "properties": {
                          "action": {
                            "description": "The type of activity for the event that triggered the delivery.",
                            "example": "opened",
                            "nullable": true,
                            "type": "string"
                          },
                          "delivered_at": {
                            "description": "Time when the webhook delivery occurred.",
                            "example": "2021-05-12T20:33:44Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Time spent delivering.",
                            "example": 0.03,
                            "type": "number"
                          },
                          "event": {
                            "description": "The event that triggered the delivery.",
                            "example": "issues",
                            "type": "string"
                          },
                          "guid": {
                            "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
                            "example": "58474f00-b361-11eb-836d-0e4f3503ccbe",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the webhook delivery.",
                            "example": 42,
                            "type": "integer"
                          },
                          "installation_id": {
                            "description": "The id of the GitHub App installation associated with this event.",
                            "example": 123,
                            "nullable": true,
                            "type": "integer"
                          },
                          "redelivery": {
                            "description": "Whether the webhook delivery is a redelivery.",
                            "example": false,
                            "type": "boolean"
                          },
                          "repository_id": {
                            "description": "The id of the repository associated with this event.",
                            "example": 123,
                            "nullable": true,
                            "type": "integer"
                          },
                          "status": {
                            "description": "Describes the response returned after attempting the delivery.",
                            "example": "failed to connect",
                            "type": "string"
                          },
                          "status_code": {
                            "description": "Status code received when delivery was made.",
                            "example": 502,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "id",
                          "guid",
                          "delivered_at",
                          "redelivery",
                          "duration",
                          "status",
                          "status_code",
                          "event",
                          "action",
                          "installation_id",
                          "repository_id"
                        ],
                        "title": "Simple webhook delivery",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "List deliveries for a repository webhook",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}",
        {
          "get": {
            "deprecated": null,
            "description": "Returns a delivery for a webhook configured in a repository.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#get-a-delivery-for-a-repository-webhook"
            },
            "operationId": "repos/get-webhook-delivery",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "delivery_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "action": "opened",
                          "delivered_at": "2019-06-03T00:57:16Z",
                          "duration": 0.27,
                          "event": "issues",
                          "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "id": 12345678,
                          "installation_id": 123,
                          "redelivery": false,
                          "repository_id": 456,
                          "request": {
                            "headers": {
                              "Accept": "*/*",
                              "User-Agent": "GitHub-Hookshot/b8c71d8",
                              "X-GitHub-Delivery": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                              "X-GitHub-Event": "issues",
                              "X-GitHub-Hook-ID": "42",
                              "X-GitHub-Hook-Installation-Target-ID": "123",
                              "X-GitHub-Hook-Installation-Target-Type": "repository",
                              "X-Hub-Signature": "sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d",
                              "X-Hub-Signature-256": "sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e",
                              "content-type": "application/json"
                            },
                            "payload": {
                              "action": "opened",
                              "issue": { "body": "foo" },
                              "repository": { "id": 123 }
                            }
                          },
                          "response": {
                            "headers": {
                              "Content-Type": "text/html;charset=utf-8"
                            },
                            "payload": "ok"
                          },
                          "status": "OK",
                          "status_code": 200,
                          "url": "https://www.example.com"
                        }
                      }
                    },
                    "schema": {
                      "description": "Delivery made by a webhook.",
                      "properties": {
                        "action": {
                          "description": "The type of activity for the event that triggered the delivery.",
                          "example": "opened",
                          "nullable": true,
                          "type": "string"
                        },
                        "delivered_at": {
                          "description": "Time when the delivery was delivered.",
                          "example": "2021-05-12T20:33:44Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Time spent delivering.",
                          "example": 0.03,
                          "type": "number"
                        },
                        "event": {
                          "description": "The event that triggered the delivery.",
                          "example": "issues",
                          "type": "string"
                        },
                        "guid": {
                          "description": "Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).",
                          "example": "58474f00-b361-11eb-836d-0e4f3503ccbe",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the delivery.",
                          "example": 42,
                          "type": "integer"
                        },
                        "installation_id": {
                          "description": "The id of the GitHub App installation associated with this event.",
                          "example": 123,
                          "nullable": true,
                          "type": "integer"
                        },
                        "redelivery": {
                          "description": "Whether the delivery is a redelivery.",
                          "example": false,
                          "type": "boolean"
                        },
                        "repository_id": {
                          "description": "The id of the repository associated with this event.",
                          "example": 123,
                          "nullable": true,
                          "type": "integer"
                        },
                        "request": {
                          "properties": {
                            "headers": {
                              "additionalProperties": true,
                              "description": "The request headers sent with the webhook delivery.",
                              "nullable": true,
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "The webhook payload.",
                              "nullable": true,
                              "type": "object"
                            }
                          },
                          "required": ["headers", "payload"],
                          "type": "object"
                        },
                        "response": {
                          "properties": {
                            "headers": {
                              "additionalProperties": true,
                              "description": "The response headers received when the delivery was made.",
                              "nullable": true,
                              "type": "object"
                            },
                            "payload": {
                              "additionalProperties": true,
                              "description": "The response payload received.",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": ["headers", "payload"],
                          "type": "object"
                        },
                        "status": {
                          "description": "Description of the status of the attempted delivery",
                          "example": "failed to connect",
                          "type": "string"
                        },
                        "status_code": {
                          "description": "Status code received when delivery was made.",
                          "example": 502,
                          "type": "integer"
                        },
                        "url": {
                          "description": "The URL target of the delivery.",
                          "example": "https://www.example.com",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "guid",
                        "delivered_at",
                        "redelivery",
                        "duration",
                        "status",
                        "status_code",
                        "event",
                        "action",
                        "installation_id",
                        "repository_id",
                        "request",
                        "response"
                      ],
                      "title": "Webhook delivery",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Get a delivery for a repository webhook",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
        {
          "post": {
            "deprecated": null,
            "description": "Redeliver a webhook delivery for a webhook configured in a repository.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#redeliver-a-delivery-for-a-repository-webhook"
            },
            "operationId": "repos/redeliver-webhook-delivery",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "hook_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "delivery_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "202": {
                "content": {
                  "application/json": { "schema": { "type": "object" } }
                },
                "description": "Accepted"
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Redeliver a delivery for a repository webhook",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "webhooks"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/import",
        {
          "delete": {
            "deprecated": null,
            "description": "Stop an import for a repository.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#cancel-an-import"
            },
            "operationId": "migrations/cancel-import",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Cancel an import",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "source-imports"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "View the progress of an import.\n\n**Import status**\n\nThis section includes details about the possible values of the `status` field of the Import Progress response.\n\nAn import that does not have errors will progress through these steps:\n\n*   `detecting` - the \"detection\" step of the import is in progress because the request did not include a `vcs` parameter. The import is identifying the type of source control present at the URL.\n*   `importing` - the \"raw\" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include `commit_count` (the total number of raw commits that will be imported) and `percent` (0 - 100, the current progress through the import).\n*   `mapping` - the \"rewrite\" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.\n*   `pushing` - the \"push\" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include `push_percent`, which is the percent value reported by `git push` when it is \"Writing objects\".\n*   `complete` - the import is complete, and the repository is ready on GitHub.\n\nIf there are problems, you will see one of these in the `status` field:\n\n*   `auth_failed` - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.\n*   `error` - the import encountered an error. The import progress response will include the `failed_step` and an error message. Contact [GitHub Support](https://support.github.com/contact?tags=rest-api) for more information.\n*   `detection_needs_auth` - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.\n*   `detection_found_nothing` - the importer didn't recognize any source control at the URL. To resolve, [Cancel the import](https://docs.github.com/rest/reference/migrations#cancel-an-import) and [retry](https://docs.github.com/rest/reference/migrations#start-an-import) with the correct URL.\n*   `detection_found_multiple` - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a `project_choices` field with the possible project choices as values. To update project choice, please see the [Update an import](https://docs.github.com/rest/reference/migrations#update-an-import) section.\n\n**The project_choices field**\n\nWhen multiple projects are found at the provided URL, the response hash will include a `project_choices` field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type.\n\n**Git LFS related fields**\n\nThis section includes details about Git LFS related fields that may be present in the Import Progress response.\n\n*   `use_lfs` - describes whether the import has been opted in or out of using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if no action has been taken.\n*   `has_large_files` - the boolean value describing whether files larger than 100MB were found during the `importing` step.\n*   `large_files_size` - the total size in gigabytes of files larger than 100MB found in the originating repository.\n*   `large_files_count` - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a \"Get Large Files\" request.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#get-an-import-status"
            },
            "operationId": "migrations/get-import-status",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "authors_count": 4,
                          "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                          "has_large_files": true,
                          "html_url": "https://import.github.com/octocat/socm/import",
                          "large_files_count": 1,
                          "large_files_size": 132331036,
                          "repository_url": "https://api.github.com/repos/octocat/socm",
                          "status": "complete",
                          "status_text": "Done",
                          "url": "https://api.github.com/repos/octocat/socm/import",
                          "use_lfs": true,
                          "vcs": "subversion",
                          "vcs_url": "http://svn.mycompany.com/svn/myproject"
                        }
                      }
                    },
                    "schema": {
                      "description": "A repository import from an external source.",
                      "properties": {
                        "authors_count": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "authors_url": { "format": "uri", "type": "string" },
                        "commit_count": { "nullable": true, "type": "integer" },
                        "error_message": { "nullable": true, "type": "string" },
                        "failed_step": { "nullable": true, "type": "string" },
                        "has_large_files": { "type": "boolean" },
                        "html_url": { "format": "uri", "type": "string" },
                        "import_percent": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "large_files_count": { "type": "integer" },
                        "large_files_size": { "type": "integer" },
                        "message": { "type": "string" },
                        "project_choices": {
                          "items": {
                            "properties": {
                              "human_name": { "type": "string" },
                              "tfvc_project": { "type": "string" },
                              "vcs": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "push_percent": { "nullable": true, "type": "integer" },
                        "repository_url": { "format": "uri", "type": "string" },
                        "status": {
                          "enum": [
                            "auth",
                            "error",
                            "none",
                            "detecting",
                            "choose",
                            "auth_failed",
                            "importing",
                            "mapping",
                            "waiting_to_push",
                            "pushing",
                            "complete",
                            "setup",
                            "unknown",
                            "detection_found_multiple",
                            "detection_found_nothing",
                            "detection_needs_auth"
                          ],
                          "type": "string"
                        },
                        "status_text": { "nullable": true, "type": "string" },
                        "svc_root": { "type": "string" },
                        "svn_root": { "type": "string" },
                        "tfvc_project": { "type": "string" },
                        "url": { "format": "uri", "type": "string" },
                        "use_lfs": { "type": "boolean" },
                        "vcs": { "nullable": true, "type": "string" },
                        "vcs_url": {
                          "description": "The URL of the originating repository.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "vcs",
                        "vcs_url",
                        "status",
                        "url",
                        "repository_url",
                        "html_url",
                        "authors_url"
                      ],
                      "title": "Import",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Get an import status",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "source-imports"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API\nrequest. If no parameters are provided, the import will be restarted.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#update-an-import"
            },
            "operationId": "migrations/update-import",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "example-1": {
                      "summary": "Example 1",
                      "value": {
                        "vcs_password": "secret",
                        "vcs_username": "octocat"
                      }
                    }
                  },
                  "schema": {
                    "nullable": true,
                    "properties": {
                      "tfvc_project": {
                        "example": "\"project1\"",
                        "type": "string"
                      },
                      "vcs": { "example": "\"git\"", "type": "string" },
                      "vcs_password": {
                        "description": "The password to provide to the originating repository.",
                        "type": "string"
                      },
                      "vcs_username": {
                        "description": "The username to provide to the originating repository.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "example-1": {
                        "summary": "Example 1",
                        "value": {
                          "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                          "html_url": "https://import.github.com/octocat/socm/import",
                          "repository_url": "https://api.github.com/repos/octocat/socm",
                          "status": "detecting",
                          "url": "https://api.github.com/repos/octocat/socm/import",
                          "use_lfs": true,
                          "vcs": "subversion",
                          "vcs_url": "http://svn.mycompany.com/svn/myproject"
                        }
                      },
                      "example-2": {
                        "summary": "Example 2",
                        "value": {
                          "authors_count": 0,
                          "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                          "commit_count": 1042,
                          "has_large_files": false,
                          "html_url": "https://import.github.com/octocat/socm/import",
                          "large_files_count": 0,
                          "large_files_size": 0,
                          "repository_url": "https://api.github.com/repos/octocat/socm",
                          "status": "importing",
                          "status_text": "Importing...",
                          "tfvc_project": "project1",
                          "url": "https://api.github.com/repos/octocat/socm/import",
                          "use_lfs": true,
                          "vcs": "tfvc",
                          "vcs_url": "http://tfs.mycompany.com/tfs/myproject"
                        }
                      },
                      "response": {
                        "summary": "Response",
                        "value": {
                          "authors_count": 0,
                          "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                          "commit_count": 1042,
                          "has_large_files": false,
                          "html_url": "https://import.github.com/octocat/socm/import",
                          "large_files_count": 0,
                          "large_files_size": 0,
                          "repository_url": "https://api.github.com/repos/octocat/socm",
                          "status": "importing",
                          "status_text": "Importing...",
                          "url": "https://api.github.com/repos/octocat/socm/import",
                          "use_lfs": true,
                          "vcs": "subversion",
                          "vcs_url": "http://svn.mycompany.com/svn/myproject"
                        }
                      }
                    },
                    "schema": {
                      "description": "A repository import from an external source.",
                      "properties": {
                        "authors_count": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "authors_url": { "format": "uri", "type": "string" },
                        "commit_count": { "nullable": true, "type": "integer" },
                        "error_message": { "nullable": true, "type": "string" },
                        "failed_step": { "nullable": true, "type": "string" },
                        "has_large_files": { "type": "boolean" },
                        "html_url": { "format": "uri", "type": "string" },
                        "import_percent": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "large_files_count": { "type": "integer" },
                        "large_files_size": { "type": "integer" },
                        "message": { "type": "string" },
                        "project_choices": {
                          "items": {
                            "properties": {
                              "human_name": { "type": "string" },
                              "tfvc_project": { "type": "string" },
                              "vcs": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "push_percent": { "nullable": true, "type": "integer" },
                        "repository_url": { "format": "uri", "type": "string" },
                        "status": {
                          "enum": [
                            "auth",
                            "error",
                            "none",
                            "detecting",
                            "choose",
                            "auth_failed",
                            "importing",
                            "mapping",
                            "waiting_to_push",
                            "pushing",
                            "complete",
                            "setup",
                            "unknown",
                            "detection_found_multiple",
                            "detection_found_nothing",
                            "detection_needs_auth"
                          ],
                          "type": "string"
                        },
                        "status_text": { "nullable": true, "type": "string" },
                        "svc_root": { "type": "string" },
                        "svn_root": { "type": "string" },
                        "tfvc_project": { "type": "string" },
                        "url": { "format": "uri", "type": "string" },
                        "use_lfs": { "type": "boolean" },
                        "vcs": { "nullable": true, "type": "string" },
                        "vcs_url": {
                          "description": "The URL of the originating repository.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "vcs",
                        "vcs_url",
                        "status",
                        "url",
                        "repository_url",
                        "html_url",
                        "authors_url"
                      ],
                      "title": "Import",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update an import",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "source-imports"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "Start a source import to a GitHub repository using GitHub Importer.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#start-an-import"
            },
            "operationId": "migrations/start-import",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "vcs": "subversion",
                    "vcs_password": "secret",
                    "vcs_url": "http://svn.mycompany.com/svn/myproject",
                    "vcs_username": "octocat"
                  },
                  "schema": {
                    "properties": {
                      "tfvc_project": {
                        "description": "For a tfvc import, the name of the project that is being imported.",
                        "type": "string"
                      },
                      "vcs": {
                        "description": "The originating VCS type. Can be one of `subversion`, `git`, `mercurial`, or `tfvc`. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.",
                        "enum": ["subversion", "git", "mercurial", "tfvc"],
                        "type": "string"
                      },
                      "vcs_password": {
                        "description": "If authentication is required, the password to provide to `vcs_url`.",
                        "type": "string"
                      },
                      "vcs_url": {
                        "description": "The URL of the originating repository.",
                        "type": "string"
                      },
                      "vcs_username": {
                        "description": "If authentication is required, the username to provide to `vcs_url`.",
                        "type": "string"
                      }
                    },
                    "required": ["vcs_url"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "authors_count": 0,
                          "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                          "commit_count": 1042,
                          "has_large_files": false,
                          "html_url": "https://import.github.com/octocat/socm/import",
                          "large_files_count": 0,
                          "large_files_size": 0,
                          "repository_url": "https://api.github.com/repos/octocat/socm",
                          "status": "importing",
                          "status_text": "Importing...",
                          "url": "https://api.github.com/repos/octocat/socm/import",
                          "use_lfs": true,
                          "vcs": "subversion",
                          "vcs_url": "http://svn.mycompany.com/svn/myproject"
                        }
                      }
                    },
                    "schema": {
                      "description": "A repository import from an external source.",
                      "properties": {
                        "authors_count": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "authors_url": { "format": "uri", "type": "string" },
                        "commit_count": { "nullable": true, "type": "integer" },
                        "error_message": { "nullable": true, "type": "string" },
                        "failed_step": { "nullable": true, "type": "string" },
                        "has_large_files": { "type": "boolean" },
                        "html_url": { "format": "uri", "type": "string" },
                        "import_percent": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "large_files_count": { "type": "integer" },
                        "large_files_size": { "type": "integer" },
                        "message": { "type": "string" },
                        "project_choices": {
                          "items": {
                            "properties": {
                              "human_name": { "type": "string" },
                              "tfvc_project": { "type": "string" },
                              "vcs": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "push_percent": { "nullable": true, "type": "integer" },
                        "repository_url": { "format": "uri", "type": "string" },
                        "status": {
                          "enum": [
                            "auth",
                            "error",
                            "none",
                            "detecting",
                            "choose",
                            "auth_failed",
                            "importing",
                            "mapping",
                            "waiting_to_push",
                            "pushing",
                            "complete",
                            "setup",
                            "unknown",
                            "detection_found_multiple",
                            "detection_found_nothing",
                            "detection_needs_auth"
                          ],
                          "type": "string"
                        },
                        "status_text": { "nullable": true, "type": "string" },
                        "svc_root": { "type": "string" },
                        "svn_root": { "type": "string" },
                        "tfvc_project": { "type": "string" },
                        "url": { "format": "uri", "type": "string" },
                        "use_lfs": { "type": "boolean" },
                        "vcs": { "nullable": true, "type": "string" },
                        "vcs_url": {
                          "description": "The URL of the originating repository.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "vcs",
                        "vcs_url",
                        "status",
                        "url",
                        "repository_url",
                        "html_url",
                        "authors_url"
                      ],
                      "title": "Import",
                      "type": "object"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Location": {
                    "example": "https://api.github.com/repos/spraints/socm/import",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Start an import",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "source-imports"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/import/authors",
        {
          "get": {
            "deprecated": null,
            "description": "Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.\n\nThis endpoint and the [Map a commit author](https://docs.github.com/rest/reference/migrations#map-a-commit-author) endpoint allow you to provide correct Git author information.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#get-commit-authors"
            },
            "operationId": "migrations/get-commit-authors",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "A user ID. Only return users with an ID greater than this ID.",
                "in": "query",
                "name": "since",
                "required": false,
                "schema": { "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "email": "hubot@github.com",
                            "id": 2268557,
                            "import_url": "https://api.github.com/repos/octocat/socm/import",
                            "name": "Hubot",
                            "remote_id": "nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "remote_name": "nobody",
                            "url": "https://api.github.com/repos/octocat/socm/import/authors/2268557"
                          },
                          {
                            "email": "svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "id": 2268558,
                            "import_url": "https://api.github.com/repos/octocat/socm/import",
                            "name": "svner",
                            "remote_id": "svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "remote_name": "svner",
                            "url": "https://api.github.com/repos/octocat/socm/import/authors/2268558"
                          },
                          {
                            "email": "svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "id": 2268559,
                            "import_url": "https://api.github.com/repos/octocat/socm/import",
                            "name": "svner@example.com",
                            "remote_id": "svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                            "remote_name": "svner@example.com",
                            "url": "https://api.github.com/repos/octocat/socm/import/authors/2268559"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Porter Author",
                        "properties": {
                          "email": { "type": "string" },
                          "id": { "type": "integer" },
                          "import_url": { "format": "uri", "type": "string" },
                          "name": { "type": "string" },
                          "remote_id": { "type": "string" },
                          "remote_name": { "type": "string" },
                          "url": { "format": "uri", "type": "string" }
                        },
                        "required": [
                          "id",
                          "remote_id",
                          "remote_name",
                          "email",
                          "name",
                          "url",
                          "import_url"
                        ],
                        "title": "Porter Author",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Get commit authors",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "source-imports"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/import/authors/{author_id}",
        {
          "patch": {
            "deprecated": null,
            "description": "Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#map-a-commit-author"
            },
            "operationId": "migrations/map-commit-author",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "author_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "email": "hubot@github.com",
                    "name": "Hubot the Robot"
                  },
                  "schema": {
                    "additionalProperties": false,
                    "properties": {
                      "email": {
                        "description": "The new Git author email.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The new Git author name.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "email": "hubot@github.com",
                          "id": 2268557,
                          "import_url": "https://api.github.com/repos/octocat/socm/import",
                          "name": "Hubot",
                          "remote_id": "nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef",
                          "remote_name": "nobody",
                          "url": "https://api.github.com/repos/octocat/socm/import/authors/2268557"
                        }
                      }
                    },
                    "schema": {
                      "description": "Porter Author",
                      "properties": {
                        "email": { "type": "string" },
                        "id": { "type": "integer" },
                        "import_url": { "format": "uri", "type": "string" },
                        "name": { "type": "string" },
                        "remote_id": { "type": "string" },
                        "remote_name": { "type": "string" },
                        "url": { "format": "uri", "type": "string" }
                      },
                      "required": [
                        "id",
                        "remote_id",
                        "remote_name",
                        "email",
                        "name",
                        "url",
                        "import_url"
                      ],
                      "title": "Porter Author",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Map a commit author",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "source-imports"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/import/large_files",
        {
          "get": {
            "deprecated": null,
            "description": "List files larger than 100MB found during the import",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#get-large-files"
            },
            "operationId": "migrations/get-large-files",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "oid": "d3d9446802a44259755d38e6d163e820",
                            "path": "foo/bar/1",
                            "ref_name": "refs/heads/master",
                            "size": 10485760
                          },
                          {
                            "oid": "6512bd43d9caa6e02c990b0a82652dca",
                            "path": "foo/bar/2",
                            "ref_name": "refs/heads/master",
                            "size": 11534336
                          },
                          {
                            "oid": "c20ad4d76fe97759aa27a0c99bff6710",
                            "path": "foo/bar/3",
                            "ref_name": "refs/heads/master",
                            "size": 12582912
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Porter Large File",
                        "properties": {
                          "oid": { "type": "string" },
                          "path": { "type": "string" },
                          "ref_name": { "type": "string" },
                          "size": { "type": "integer" }
                        },
                        "required": ["oid", "path", "ref_name", "size"],
                        "title": "Porter Large File",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get large files",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "source-imports"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/import/lfs",
        {
          "patch": {
            "deprecated": null,
            "description": "You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://help.github.com/articles/versioning-large-files/).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#update-git-lfs-preference"
            },
            "operationId": "migrations/set-lfs-preference",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": { "use_lfs": "opt_in" },
                  "schema": {
                    "properties": {
                      "use_lfs": {
                        "description": "Can be one of `opt_in` (large files will be stored using Git LFS) or `opt_out` (large files will be removed during the import).",
                        "enum": ["opt_in", "opt_out"],
                        "type": "string"
                      }
                    },
                    "required": ["use_lfs"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "authors_count": 4,
                          "authors_url": "https://api.github.com/repos/octocat/socm/import/authors",
                          "has_large_files": true,
                          "html_url": "https://import.github.com/octocat/socm/import",
                          "large_files_count": 1,
                          "large_files_size": 132331036,
                          "repository_url": "https://api.github.com/repos/octocat/socm",
                          "status": "complete",
                          "status_text": "Done",
                          "url": "https://api.github.com/repos/octocat/socm/import",
                          "use_lfs": true,
                          "vcs": "subversion",
                          "vcs_url": "http://svn.mycompany.com/svn/myproject"
                        }
                      }
                    },
                    "schema": {
                      "description": "A repository import from an external source.",
                      "properties": {
                        "authors_count": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "authors_url": { "format": "uri", "type": "string" },
                        "commit_count": { "nullable": true, "type": "integer" },
                        "error_message": { "nullable": true, "type": "string" },
                        "failed_step": { "nullable": true, "type": "string" },
                        "has_large_files": { "type": "boolean" },
                        "html_url": { "format": "uri", "type": "string" },
                        "import_percent": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "large_files_count": { "type": "integer" },
                        "large_files_size": { "type": "integer" },
                        "message": { "type": "string" },
                        "project_choices": {
                          "items": {
                            "properties": {
                              "human_name": { "type": "string" },
                              "tfvc_project": { "type": "string" },
                              "vcs": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "push_percent": { "nullable": true, "type": "integer" },
                        "repository_url": { "format": "uri", "type": "string" },
                        "status": {
                          "enum": [
                            "auth",
                            "error",
                            "none",
                            "detecting",
                            "choose",
                            "auth_failed",
                            "importing",
                            "mapping",
                            "waiting_to_push",
                            "pushing",
                            "complete",
                            "setup",
                            "unknown",
                            "detection_found_multiple",
                            "detection_found_nothing",
                            "detection_needs_auth"
                          ],
                          "type": "string"
                        },
                        "status_text": { "nullable": true, "type": "string" },
                        "svc_root": { "type": "string" },
                        "svn_root": { "type": "string" },
                        "tfvc_project": { "type": "string" },
                        "url": { "format": "uri", "type": "string" },
                        "use_lfs": { "type": "boolean" },
                        "vcs": { "nullable": true, "type": "string" },
                        "vcs_url": {
                          "description": "The URL of the originating repository.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "vcs",
                        "vcs_url",
                        "status",
                        "url",
                        "repository_url",
                        "html_url",
                        "authors_url"
                      ],
                      "title": "Import",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Update Git LFS preference",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "source-imports"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/interaction-limits",
        {
          "delete": {
            "deprecated": null,
            "description": "Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions. If the interaction limit is set for the user or organization that owns this repository, you will receive a `409 Conflict` response and will not be able to use this endpoint to change the interaction limit for a single repository.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-for-a-repository"
            },
            "operationId": "interactions/remove-restrictions-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "409": { "description": "Response" }
            },
            "summary": "Remove interaction restrictions for a repository",
            "tags": ["interactions"],
            "x-github": {
              "category": "interactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "repos"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Shows which type of GitHub user can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-a-repository"
            },
            "operationId": "interactions/get-restrictions-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2018-08-17T04:18:39Z",
                          "limit": "collaborators_only",
                          "origin": "repository"
                        }
                      }
                    },
                    "schema": {
                      "anyOf": [
                        {
                          "description": "Interaction limit settings.",
                          "properties": {
                            "expires_at": {
                              "example": "2018-08-17T04:18:39Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "limit": {
                              "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
                              "enum": [
                                "existing_users",
                                "contributors_only",
                                "collaborators_only"
                              ],
                              "example": "collaborators_only",
                              "type": "string"
                            },
                            "origin": {
                              "example": "repository",
                              "type": "string"
                            }
                          },
                          "required": ["limit", "origin", "expires_at"],
                          "title": "Interaction Limits",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object"
                        }
                      ]
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get interaction restrictions for a repository",
            "tags": ["interactions"],
            "x-github": {
              "category": "interactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "repos"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "Temporarily restricts interactions to a certain type of GitHub user within the given repository. You must have owner or admin access to set these restrictions. If an interaction limit is set for the user or organization that owns this repository, you will receive a `409 Conflict` response and will not be able to use this endpoint to change the interaction limit for a single repository.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-a-repository"
            },
            "operationId": "interactions/set-restrictions-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Limit interactions to a specific type of user for a specified duration",
                    "properties": {
                      "expiry": {
                        "description": "The duration of the interaction restriction. Can be one of: `one_day`, `three_days`, `one_week`, `one_month`, `six_months`. Default: `one_day`.",
                        "enum": [
                          "one_day",
                          "three_days",
                          "one_week",
                          "one_month",
                          "six_months"
                        ],
                        "example": "one_month",
                        "type": "string"
                      },
                      "limit": {
                        "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
                        "enum": [
                          "existing_users",
                          "contributors_only",
                          "collaborators_only"
                        ],
                        "example": "collaborators_only",
                        "type": "string"
                      }
                    },
                    "required": ["limit"],
                    "title": "Interaction Restrictions",
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2018-08-17T04:18:39Z",
                          "limit": "collaborators_only",
                          "origin": "repository"
                        }
                      }
                    },
                    "schema": {
                      "description": "Interaction limit settings.",
                      "properties": {
                        "expires_at": {
                          "example": "2018-08-17T04:18:39Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "limit": {
                          "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
                          "enum": [
                            "existing_users",
                            "contributors_only",
                            "collaborators_only"
                          ],
                          "example": "collaborators_only",
                          "type": "string"
                        },
                        "origin": { "example": "repository", "type": "string" }
                      },
                      "required": ["limit", "origin", "expires_at"],
                      "title": "Interaction Limits",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "409": { "description": "Response" }
            },
            "summary": "Set interaction restrictions for a repository",
            "tags": ["interactions"],
            "x-github": {
              "category": "interactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "repos"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/pages/health",
        {
          "get": {
            "deprecated": null,
            "description": "Gets a health check of the DNS settings for the `CNAME` record configured for a repository's GitHub Pages.\n\nThe first request to this endpoint returns a `202 Accepted` status and starts an asynchronous background task to get the results for the domain. After the background task completes, subsequent requests to this endpoint return a `200 OK` status with the health check results in the response.\n\nUsers must have admin or owner permissions. GitHub Apps must have the `pages:write` and `administration:write` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#get-a-dns-health-check-for-github-pages"
            },
            "operationId": "repos/get-pages-health-check",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "alt_domain": {
                            "caa_error": null,
                            "dns_resolves": true,
                            "enforces_https": true,
                            "has_cname_record": false,
                            "has_mx_records_present": false,
                            "host": "www.example.com",
                            "https_error": null,
                            "is_a_record": true,
                            "is_apex_domain": true,
                            "is_cloudflare_ip": false,
                            "is_cname_to_fastly": false,
                            "is_cname_to_github_user_domain": false,
                            "is_cname_to_pages_dot_github_dot_com": false,
                            "is_fastly_ip": false,
                            "is_https_eligible": true,
                            "is_non_github_pages_ip_present": false,
                            "is_old_ip_address": false,
                            "is_pages_domain": false,
                            "is_pointed_to_github_pages_ip": true,
                            "is_proxied": false,
                            "is_served_by_pages": true,
                            "is_valid": true,
                            "is_valid_domain": true,
                            "nameservers": "default",
                            "reason": null,
                            "responds_to_https": true,
                            "should_be_a_record": true,
                            "uri": "http://www.example.com/"
                          },
                          "domain": {
                            "caa_error": null,
                            "dns_resolves": true,
                            "enforces_https": true,
                            "has_cname_record": false,
                            "has_mx_records_present": false,
                            "host": "example.com",
                            "https_error": null,
                            "is_a_record": true,
                            "is_apex_domain": true,
                            "is_cloudflare_ip": false,
                            "is_cname_to_fastly": false,
                            "is_cname_to_github_user_domain": false,
                            "is_cname_to_pages_dot_github_dot_com": false,
                            "is_fastly_ip": false,
                            "is_https_eligible": true,
                            "is_non_github_pages_ip_present": false,
                            "is_old_ip_address": false,
                            "is_pages_domain": false,
                            "is_pointed_to_github_pages_ip": true,
                            "is_proxied": false,
                            "is_served_by_pages": true,
                            "is_valid": true,
                            "is_valid_domain": true,
                            "nameservers": "default",
                            "reason": null,
                            "responds_to_https": true,
                            "should_be_a_record": true,
                            "uri": "http://example.com/"
                          }
                        }
                      }
                    },
                    "schema": {
                      "description": "Pages Health Check Status",
                      "properties": {
                        "alt_domain": {
                          "nullable": true,
                          "properties": {
                            "caa_error": { "nullable": true, "type": "string" },
                            "dns_resolves": { "type": "boolean" },
                            "enforces_https": { "type": "boolean" },
                            "has_cname_record": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "has_mx_records_present": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "host": { "type": "string" },
                            "https_error": {
                              "nullable": true,
                              "type": "string"
                            },
                            "is_a_record": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_apex_domain": { "type": "boolean" },
                            "is_cloudflare_ip": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_cname_to_fastly": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_cname_to_github_user_domain": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_cname_to_pages_dot_github_dot_com": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_fastly_ip": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_https_eligible": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_non_github_pages_ip_present": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_old_ip_address": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_pages_domain": { "type": "boolean" },
                            "is_pointed_to_github_pages_ip": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_proxied": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_served_by_pages": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_valid": { "type": "boolean" },
                            "is_valid_domain": { "type": "boolean" },
                            "nameservers": { "type": "string" },
                            "reason": { "nullable": true, "type": "string" },
                            "responds_to_https": { "type": "boolean" },
                            "should_be_a_record": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "uri": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "domain": {
                          "properties": {
                            "caa_error": { "nullable": true, "type": "string" },
                            "dns_resolves": { "type": "boolean" },
                            "enforces_https": { "type": "boolean" },
                            "has_cname_record": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "has_mx_records_present": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "host": { "type": "string" },
                            "https_error": {
                              "nullable": true,
                              "type": "string"
                            },
                            "is_a_record": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_apex_domain": { "type": "boolean" },
                            "is_cloudflare_ip": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_cname_to_fastly": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_cname_to_github_user_domain": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_cname_to_pages_dot_github_dot_com": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_fastly_ip": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_https_eligible": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_non_github_pages_ip_present": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_old_ip_address": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_pages_domain": { "type": "boolean" },
                            "is_pointed_to_github_pages_ip": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_proxied": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_served_by_pages": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "is_valid": { "type": "boolean" },
                            "is_valid_domain": { "type": "boolean" },
                            "nameservers": { "type": "string" },
                            "reason": { "nullable": true, "type": "string" },
                            "responds_to_https": { "type": "boolean" },
                            "should_be_a_record": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "uri": { "type": "string" }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Pages Health Check Status",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "202": {
                "content": {
                  "application/json": {
                    "schema": {
                      "additionalProperties": false,
                      "description": "An object without any properties.",
                      "properties": {},
                      "title": "Empty Object",
                      "type": "object"
                    }
                  }
                },
                "description": "Empty response"
              },
              "400": {
                "description": "Custom domains are not available for GitHub Pages"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "422": { "description": "There isn't a CNAME for this page" }
            },
            "summary": "Get a DNS health check for GitHub Pages",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "subcategory": "pages"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/releases/{release_id}/reactions",
        {
          "post": {
            "deprecated": null,
            "description": "Create a reaction to a [release](https://docs.github.com/rest/reference/repos#releases). A response with a `Status: 200 OK` means that you already added the reaction type to this release.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/reactions/#create-reaction-for-a-release"
            },
            "operationId": "reactions/create-for-release",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "release_id parameter",
                "in": "path",
                "name": "release_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": { "content": "heart" },
                  "schema": {
                    "properties": {
                      "content": {
                        "description": "The [reaction type](https://docs.github.com/rest/reference/reactions#reaction-types) to add to the release.",
                        "enum": [
                          "+1",
                          "laugh",
                          "heart",
                          "hooray",
                          "rocket",
                          "eyes"
                        ],
                        "type": "string"
                      }
                    },
                    "required": ["content"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "content": "heart",
                          "created_at": "2016-05-20T20:09:31Z",
                          "id": 1,
                          "node_id": "MDg6UmVhY3Rpb24x",
                          "user": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        }
                      }
                    },
                    "schema": {
                      "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
                      "properties": {
                        "content": {
                          "description": "The reaction to use",
                          "enum": [
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "rocket",
                            "eyes"
                          ],
                          "example": "heart",
                          "type": "string"
                        },
                        "created_at": {
                          "example": "2016-05-20T20:09:31Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": { "example": 1, "type": "integer" },
                        "node_id": {
                          "example": "MDg6UmVhY3Rpb24x",
                          "type": "string"
                        },
                        "user": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "node_id",
                        "user",
                        "content",
                        "created_at"
                      ],
                      "title": "Reaction",
                      "type": "object"
                    }
                  }
                },
                "description": "Reaction exists"
              },
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "content": "heart",
                          "created_at": "2016-05-20T20:09:31Z",
                          "id": 1,
                          "node_id": "MDg6UmVhY3Rpb24x",
                          "user": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        }
                      }
                    },
                    "schema": {
                      "description": "Reactions to conversations provide a way to help people express their feelings more simply and effectively.",
                      "properties": {
                        "content": {
                          "description": "The reaction to use",
                          "enum": [
                            "+1",
                            "-1",
                            "laugh",
                            "confused",
                            "heart",
                            "hooray",
                            "rocket",
                            "eyes"
                          ],
                          "example": "heart",
                          "type": "string"
                        },
                        "created_at": {
                          "example": "2016-05-20T20:09:31Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": { "example": 1, "type": "integer" },
                        "node_id": {
                          "example": "MDg6UmVhY3Rpb24x",
                          "type": "string"
                        },
                        "user": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        }
                      },
                      "required": [
                        "id",
                        "node_id",
                        "user",
                        "content",
                        "created_at"
                      ],
                      "title": "Reaction",
                      "type": "object"
                    }
                  }
                },
                "description": "Reaction created"
              },
              "415": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "type": "object"
                    }
                  }
                },
                "description": "Preview header missing"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Create reaction for a release",
            "tags": ["reactions"],
            "x-github": {
              "category": "reactions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "squirrel-girl",
                  "note": "An additional `reactions` object in the issue comment payload is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2016-05-12-reactions-api-preview) for full details.\n\nTo access the API you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.squirrel-girl-preview\n```\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://docs.github.com/rest/reference/reactions) reactions.",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/traffic/clones",
        {
          "get": {
            "deprecated": null,
            "description": "Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#get-repository-clones"
            },
            "operationId": "repos/get-clones",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Must be one of: `day`, `week`.",
                "in": "query",
                "name": "per",
                "required": false,
                "schema": {
                  "default": "day",
                  "enum": ["", "day", "week"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "clones": [
                            {
                              "count": 2,
                              "timestamp": "2016-10-10T00:00:00Z",
                              "uniques": 1
                            },
                            {
                              "count": 17,
                              "timestamp": "2016-10-11T00:00:00Z",
                              "uniques": 16
                            },
                            {
                              "count": 21,
                              "timestamp": "2016-10-12T00:00:00Z",
                              "uniques": 15
                            },
                            {
                              "count": 8,
                              "timestamp": "2016-10-13T00:00:00Z",
                              "uniques": 7
                            },
                            {
                              "count": 5,
                              "timestamp": "2016-10-14T00:00:00Z",
                              "uniques": 5
                            },
                            {
                              "count": 2,
                              "timestamp": "2016-10-15T00:00:00Z",
                              "uniques": 2
                            },
                            {
                              "count": 8,
                              "timestamp": "2016-10-16T00:00:00Z",
                              "uniques": 7
                            },
                            {
                              "count": 26,
                              "timestamp": "2016-10-17T00:00:00Z",
                              "uniques": 15
                            },
                            {
                              "count": 19,
                              "timestamp": "2016-10-18T00:00:00Z",
                              "uniques": 17
                            },
                            {
                              "count": 19,
                              "timestamp": "2016-10-19T00:00:00Z",
                              "uniques": 14
                            },
                            {
                              "count": 19,
                              "timestamp": "2016-10-20T00:00:00Z",
                              "uniques": 15
                            },
                            {
                              "count": 9,
                              "timestamp": "2016-10-21T00:00:00Z",
                              "uniques": 7
                            },
                            {
                              "count": 5,
                              "timestamp": "2016-10-22T00:00:00Z",
                              "uniques": 5
                            },
                            {
                              "count": 6,
                              "timestamp": "2016-10-23T00:00:00Z",
                              "uniques": 5
                            },
                            {
                              "count": 7,
                              "timestamp": "2016-10-24T00:00:00Z",
                              "uniques": 5
                            }
                          ],
                          "count": 173,
                          "uniques": 128
                        }
                      }
                    },
                    "schema": {
                      "description": "Clone Traffic",
                      "properties": {
                        "clones": {
                          "items": {
                            "properties": {
                              "count": { "type": "integer" },
                              "timestamp": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "uniques": { "type": "integer" }
                            },
                            "required": ["timestamp", "uniques", "count"],
                            "title": "Traffic",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "count": { "example": 173, "type": "integer" },
                        "uniques": { "example": 128, "type": "integer" }
                      },
                      "required": ["uniques", "count", "clones"],
                      "title": "Clone Traffic",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              }
            },
            "summary": "Get repository clones",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "traffic"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/traffic/popular/paths",
        {
          "get": {
            "deprecated": null,
            "description": "Get the top 10 popular contents over the last 14 days.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#get-top-referral-paths"
            },
            "operationId": "repos/get-top-paths",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "count": 3542,
                            "path": "/github/hubot",
                            "title": "github/hubot: A customizable life embetterment robot.",
                            "uniques": 2225
                          },
                          {
                            "count": 1707,
                            "path": "/github/hubot/blob/master/docs/scripting.md",
                            "title": "hubot/scripting.md at master · github/hubot · GitHub",
                            "uniques": 804
                          },
                          {
                            "count": 685,
                            "path": "/github/hubot/tree/master/docs",
                            "title": "hubot/docs at master · github/hubot · GitHub",
                            "uniques": 435
                          },
                          {
                            "count": 577,
                            "path": "/github/hubot/tree/master/src",
                            "title": "hubot/src at master · github/hubot · GitHub",
                            "uniques": 347
                          },
                          {
                            "count": 379,
                            "path": "/github/hubot/blob/master/docs/index.md",
                            "title": "hubot/index.md at master · github/hubot · GitHub",
                            "uniques": 259
                          },
                          {
                            "count": 354,
                            "path": "/github/hubot/blob/master/docs/adapters.md",
                            "title": "hubot/adapters.md at master · github/hubot · GitHub",
                            "uniques": 201
                          },
                          {
                            "count": 340,
                            "path": "/github/hubot/tree/master/examples",
                            "title": "hubot/examples at master · github/hubot · GitHub",
                            "uniques": 260
                          },
                          {
                            "count": 324,
                            "path": "/github/hubot/blob/master/docs/deploying/heroku.md",
                            "title": "hubot/heroku.md at master · github/hubot · GitHub",
                            "uniques": 217
                          },
                          {
                            "count": 293,
                            "path": "/github/hubot/blob/master/src/robot.coffee",
                            "title": "hubot/robot.coffee at master · github/hubot · GitHub",
                            "uniques": 191
                          },
                          {
                            "count": 281,
                            "path": "/github/hubot/blob/master/LICENSE.md",
                            "title": "hubot/LICENSE.md at master · github/hubot · GitHub",
                            "uniques": 222
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Content Traffic",
                        "properties": {
                          "count": { "example": 3542, "type": "integer" },
                          "path": {
                            "example": "/github/hubot",
                            "type": "string"
                          },
                          "title": {
                            "example": "github/hubot: A customizable life embetterment robot.",
                            "type": "string"
                          },
                          "uniques": { "example": 2225, "type": "integer" }
                        },
                        "required": ["path", "title", "uniques", "count"],
                        "title": "Content Traffic",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              }
            },
            "summary": "Get top referral paths",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "traffic"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/traffic/popular/referrers",
        {
          "get": {
            "deprecated": null,
            "description": "Get the top 10 referrers over the last 14 days.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#get-top-referral-sources"
            },
            "operationId": "repos/get-top-referrers",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          { "count": 4, "referrer": "Google", "uniques": 3 },
                          {
                            "count": 2,
                            "referrer": "stackoverflow.com",
                            "uniques": 2
                          },
                          {
                            "count": 1,
                            "referrer": "eggsonbread.com",
                            "uniques": 1
                          },
                          { "count": 1, "referrer": "yandex.ru", "uniques": 1 }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Referrer Traffic",
                        "properties": {
                          "count": { "example": 4, "type": "integer" },
                          "referrer": { "example": "Google", "type": "string" },
                          "uniques": { "example": 3, "type": "integer" }
                        },
                        "required": ["referrer", "uniques", "count"],
                        "title": "Referrer Traffic",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              }
            },
            "summary": "Get top referral sources",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "traffic"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/traffic/views",
        {
          "get": {
            "deprecated": null,
            "description": "Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#get-page-views"
            },
            "operationId": "repos/get-views",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Must be one of: `day`, `week`.",
                "in": "query",
                "name": "per",
                "required": false,
                "schema": {
                  "default": "day",
                  "enum": ["", "day", "week"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "count": 14850,
                          "uniques": 3782,
                          "views": [
                            {
                              "count": 440,
                              "timestamp": "2016-10-10T00:00:00Z",
                              "uniques": 143
                            },
                            {
                              "count": 1308,
                              "timestamp": "2016-10-11T00:00:00Z",
                              "uniques": 414
                            },
                            {
                              "count": 1486,
                              "timestamp": "2016-10-12T00:00:00Z",
                              "uniques": 452
                            },
                            {
                              "count": 1170,
                              "timestamp": "2016-10-13T00:00:00Z",
                              "uniques": 401
                            },
                            {
                              "count": 868,
                              "timestamp": "2016-10-14T00:00:00Z",
                              "uniques": 266
                            },
                            {
                              "count": 495,
                              "timestamp": "2016-10-15T00:00:00Z",
                              "uniques": 157
                            },
                            {
                              "count": 524,
                              "timestamp": "2016-10-16T00:00:00Z",
                              "uniques": 175
                            },
                            {
                              "count": 1263,
                              "timestamp": "2016-10-17T00:00:00Z",
                              "uniques": 412
                            },
                            {
                              "count": 1402,
                              "timestamp": "2016-10-18T00:00:00Z",
                              "uniques": 417
                            },
                            {
                              "count": 1394,
                              "timestamp": "2016-10-19T00:00:00Z",
                              "uniques": 424
                            },
                            {
                              "count": 1492,
                              "timestamp": "2016-10-20T00:00:00Z",
                              "uniques": 448
                            },
                            {
                              "count": 1153,
                              "timestamp": "2016-10-21T00:00:00Z",
                              "uniques": 332
                            },
                            {
                              "count": 566,
                              "timestamp": "2016-10-22T00:00:00Z",
                              "uniques": 168
                            },
                            {
                              "count": 675,
                              "timestamp": "2016-10-23T00:00:00Z",
                              "uniques": 184
                            },
                            {
                              "count": 614,
                              "timestamp": "2016-10-24T00:00:00Z",
                              "uniques": 237
                            }
                          ]
                        }
                      }
                    },
                    "schema": {
                      "description": "View Traffic",
                      "properties": {
                        "count": { "example": 14850, "type": "integer" },
                        "uniques": { "example": 3782, "type": "integer" },
                        "views": {
                          "items": {
                            "properties": {
                              "count": { "type": "integer" },
                              "timestamp": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "uniques": { "type": "integer" }
                            },
                            "required": ["timestamp", "uniques", "count"],
                            "title": "Traffic",
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": ["uniques", "count", "views"],
                      "title": "View Traffic",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              }
            },
            "summary": "Get page views",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "traffic"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/vulnerability-alerts",
        {
          "delete": {
            "deprecated": null,
            "description": "Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#disable-vulnerability-alerts"
            },
            "operationId": "repos/disable-vulnerability-alerts",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Disable vulnerability alerts",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "dorian",
                  "note": "Enabling and disabling dependency alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.dorian-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#check-if-vulnerability-alerts-are-enabled-for-a-repository"
            },
            "operationId": "repos/check-vulnerability-alerts",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response if repository is enabled with vulnerability alerts"
              },
              "404": {
                "description": "Not Found if repository is not enabled with vulnerability alerts"
              }
            },
            "summary": "Check if vulnerability alerts are enabled for a repository",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "dorian",
                  "note": "Enabling and disabling dependency alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.dorian-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\".",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/repos#enable-vulnerability-alerts"
            },
            "operationId": "repos/enable-vulnerability-alerts",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Enable vulnerability alerts",
            "tags": ["repos"],
            "x-github": {
              "category": "repos",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "dorian",
                  "note": "Enabling and disabling dependency alerts for a repository using the REST API is currently available for developers to preview. To access these new endpoints during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.dorian-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repositories/{repository_id}/environments/{environment_name}/secrets",
        {
          "get": {
            "deprecated": null,
            "description": "Lists all secrets available in an environment without revealing their encrypted values. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#list-environment-secrets"
            },
            "operationId": "actions/list-environment-secrets",
            "parameters": [
              {
                "in": "path",
                "name": "repository_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "description": "The name of the environment",
                "in": "path",
                "name": "environment_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "secrets": [
                            {
                              "created_at": "2019-08-10T14:59:22Z",
                              "name": "GH_TOKEN",
                              "updated_at": "2020-01-10T14:59:22Z"
                            },
                            {
                              "created_at": "2020-01-10T10:59:22Z",
                              "name": "GIST_ID",
                              "updated_at": "2020-01-11T11:59:22Z"
                            }
                          ],
                          "total_count": 2
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "secrets": {
                          "items": {
                            "description": "Set secrets for GitHub Actions.",
                            "properties": {
                              "created_at": {
                                "format": "date-time",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the secret.",
                                "example": "SECRET_TOKEN",
                                "type": "string"
                              },
                              "updated_at": {
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "required": ["name", "created_at", "updated_at"],
                            "title": "Actions Secret",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_count": { "type": "integer" }
                      },
                      "required": ["total_count", "secrets"],
                      "type": "object"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              }
            },
            "summary": "List environment secrets",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repositories/{repository_id}/environments/{environment_name}/secrets/public-key",
        {
          "get": {
            "deprecated": null,
            "description": "Get the public key for an environment, which you need to encrypt environment secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#get-an-environment-public-key"
            },
            "operationId": "actions/get-environment-public-key",
            "parameters": [
              {
                "in": "path",
                "name": "repository_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "description": "The name of the environment",
                "in": "path",
                "name": "environment_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "key": "2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234",
                          "key_id": "012345678912345678"
                        }
                      }
                    },
                    "schema": {
                      "description": "The public key used for setting Actions Secrets.",
                      "properties": {
                        "created_at": {
                          "example": "2011-01-26T19:01:12Z",
                          "type": "string"
                        },
                        "id": { "example": 2, "type": "integer" },
                        "key": {
                          "description": "The Base64 encoded public key.",
                          "example": "hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs=",
                          "type": "string"
                        },
                        "key_id": {
                          "description": "The identifier for the key.",
                          "example": "1234567",
                          "type": "string"
                        },
                        "title": {
                          "example": "ssh-rsa AAAAB3NzaC1yc2EAAA",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/user/keys/2",
                          "type": "string"
                        }
                      },
                      "required": ["key_id", "key"],
                      "title": "ActionsPublicKey",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get an environment public key",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes a secret in an environment using the secret name. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#delete-an-environment-secret"
            },
            "operationId": "actions/delete-environment-secret",
            "parameters": [
              {
                "in": "path",
                "name": "repository_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "description": "The name of the environment",
                "in": "path",
                "name": "environment_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "secret_name parameter",
                "in": "path",
                "name": "secret_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Default response" } },
            "summary": "Delete an environment secret",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Gets a single environment secret without revealing its encrypted value. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#get-an-environment-secret"
            },
            "operationId": "actions/get-environment-secret",
            "parameters": [
              {
                "in": "path",
                "name": "repository_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "description": "The name of the environment",
                "in": "path",
                "name": "environment_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "secret_name parameter",
                "in": "path",
                "name": "secret_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2019-08-10T14:59:22Z",
                          "name": "GH_TOKEN",
                          "updated_at": "2020-01-10T14:59:22Z"
                        }
                      }
                    },
                    "schema": {
                      "description": "Set secrets for GitHub Actions.",
                      "properties": {
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the secret.",
                          "example": "SECRET_TOKEN",
                          "type": "string"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "required": ["name", "created_at", "updated_at"],
                      "title": "Actions Secret",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get an environment secret",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "Creates or updates an environment secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use\nthis endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n```\nconst sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n```\n\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/actions#create-or-update-an-environment-secret"
            },
            "operationId": "actions/create-or-update-environment-secret",
            "parameters": [
              {
                "in": "path",
                "name": "repository_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "description": "The name of the environment",
                "in": "path",
                "name": "environment_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "secret_name parameter",
                "in": "path",
                "name": "secret_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "encrypted_value": "c2VjcmV0",
                    "key_id": "012345678912345678"
                  },
                  "schema": {
                    "properties": {
                      "encrypted_value": {
                        "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an environment public key](https://docs.github.com/rest/reference/actions#get-an-environment-public-key) endpoint.",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$",
                        "type": "string"
                      },
                      "key_id": {
                        "description": "ID of the key you used to encrypt the secret.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "schema": {
                      "additionalProperties": false,
                      "description": "An object without any properties.",
                      "properties": {},
                      "title": "Empty Object",
                      "type": "object"
                    }
                  }
                },
                "description": "Response when creating a secret"
              },
              "204": { "description": "Response when updating a secret" }
            },
            "summary": "Create or update an environment secret",
            "tags": ["actions"],
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/scim/v2/enterprises/{enterprise}/Groups",
        {
          "get": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#list-provisioned-scim-groups-for-an-enterprise"
            },
            "operationId": "enterprise-admin/list-provisioned-groups-enterprise",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Used for pagination: the index of the first result to return.",
                "in": "query",
                "name": "startIndex",
                "required": false,
                "schema": { "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Used for pagination: the number of results to return.",
                "in": "query",
                "name": "count",
                "required": false,
                "schema": { "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "filter results",
                "in": "query",
                "name": "filter",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "attributes to exclude",
                "in": "query",
                "name": "excludedAttributes",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "Resources": [
                            {
                              "displayName": "octo-org",
                              "externalId": null,
                              "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                              "members": [
                                {
                                  "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                                  "display": "octocat@github.com",
                                  "value": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc"
                                },
                                {
                                  "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5",
                                  "display": "hubot@example.com",
                                  "value": "aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5"
                                }
                              ],
                              "meta": {
                                "created": "2020-06-09T03:10:17.000+10:00",
                                "lastModified": "2020-06-09T03:10:17.000+10:00",
                                "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Groups/abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                                "resourceType": "Group"
                              },
                              "schemas": [
                                "urn:ietf:params:scim:schemas:core:2.0:Group"
                              ]
                            },
                            {
                              "displayName": "octo-docs-org",
                              "externalId": null,
                              "id": "5e75bbbb-aa1a-11ea-8644-75ff655cdddd",
                              "members": [
                                {
                                  "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                                  "display": "octocat@github.com",
                                  "value": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc"
                                }
                              ],
                              "meta": {
                                "created": "2020-06-09T16:28:01.000+10:00",
                                "lastModified": "2020-06-09T16:28:01.000+10:00",
                                "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Groups/5e75bbbb-aa1a-11ea-8644-75ff655cdddd",
                                "resourceType": "Group"
                              },
                              "schemas": [
                                "urn:ietf:params:scim:schemas:core:2.0:Group"
                              ]
                            }
                          ],
                          "itemsPerPage": 2,
                          "schemas": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                          ],
                          "startIndex": 1,
                          "totalResults": 2
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "Resources": {
                          "items": {
                            "properties": {
                              "displayName": { "type": "string" },
                              "externalId": {
                                "nullable": true,
                                "type": "string"
                              },
                              "id": { "type": "string" },
                              "members": {
                                "items": {
                                  "properties": {
                                    "$ref": { "type": "string" },
                                    "display": { "type": "string" },
                                    "value": { "type": "string" }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "meta": {
                                "properties": {
                                  "created": { "type": "string" },
                                  "lastModified": { "type": "string" },
                                  "location": { "type": "string" },
                                  "resourceType": { "type": "string" }
                                },
                                "type": "object"
                              },
                              "schemas": {
                                "items": { "type": "string" },
                                "type": "array"
                              }
                            },
                            "required": ["schemas", "id"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "itemsPerPage": { "type": "number" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "startIndex": { "type": "number" },
                        "totalResults": { "type": "number" }
                      },
                      "required": [
                        "schemas",
                        "totalResults",
                        "itemsPerPage",
                        "startIndex",
                        "Resources"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List provisioned SCIM groups for an enterprise",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nProvision an enterprise group, and invite users to the group. This sends invitation emails to the email address of the invited users to join the GitHub organization that the SCIM group corresponds to.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#provision-a-scim-enterprise-group-and-invite-users"
            },
            "operationId": "enterprise-admin/provision-and-invite-enterprise-group",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "displayName": "octo-org",
                    "members": [
                      { "value": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc" },
                      { "value": "aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5" }
                    ],
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Group"]
                  },
                  "schema": {
                    "properties": {
                      "displayName": {
                        "description": "The name of the SCIM group. This must match the GitHub organization that the group maps to.",
                        "type": "string"
                      },
                      "members": {
                        "items": {
                          "properties": {
                            "value": {
                              "description": "The SCIM user ID for a user.",
                              "type": "string"
                            }
                          },
                          "required": ["value"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "schemas": {
                        "description": "The SCIM schema URIs.",
                        "items": { "type": "string" },
                        "type": "array"
                      }
                    },
                    "required": ["schemas", "displayName"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "displayName": "octo-org",
                          "externalId": null,
                          "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                          "members": [
                            {
                              "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                              "display": "octocat@github.com",
                              "value": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc"
                            },
                            {
                              "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5",
                              "display": "hubot@example.com",
                              "value": "aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5"
                            }
                          ],
                          "meta": {
                            "created": "2020-06-09T03:10:17.000+10:0",
                            "lastModified": "2020-06-09T03:10:17.000+10:00",
                            "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Groups/abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                            "resourceType": "Group"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:Group"
                          ]
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "displayName": { "type": "string" },
                        "externalId": { "nullable": true, "type": "string" },
                        "id": { "type": "string" },
                        "members": {
                          "items": {
                            "properties": {
                              "$ref": { "type": "string" },
                              "display": { "type": "string" },
                              "value": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "created": { "type": "string" },
                            "lastModified": { "type": "string" },
                            "location": { "type": "string" },
                            "resourceType": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        }
                      },
                      "required": ["schemas", "id"],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Provision a SCIM enterprise group and invite users",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/scim/v2/enterprises/{enterprise}/Groups/{scim_group_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#delete-a-scim-group-from-an-enterprise"
            },
            "operationId": "enterprise-admin/delete-scim-group-from-enterprise",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Identifier generated by the GitHub SCIM endpoint.",
                "in": "path",
                "name": "scim_group_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Delete a SCIM group from an enterprise",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#get-scim-provisioning-information-for-an-enterprise-group"
            },
            "operationId": "enterprise-admin/get-provisioning-information-for-enterprise-group",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Identifier generated by the GitHub SCIM endpoint.",
                "in": "path",
                "name": "scim_group_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Attributes to exclude.",
                "in": "query",
                "name": "excludedAttributes",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "displayName": "octo-org",
                          "externalId": null,
                          "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                          "members": [
                            {
                              "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                              "display": "octocat@github.com",
                              "value": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc"
                            },
                            {
                              "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5",
                              "display": "hubot@example.com",
                              "value": "aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5"
                            }
                          ],
                          "meta": {
                            "created": "2020-06-09T03:10:17.000+10:0",
                            "lastModified": "2020-06-09T03:10:17.000+10:00",
                            "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Groups/abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                            "resourceType": "Group"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:Group"
                          ]
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "displayName": { "type": "string" },
                        "externalId": { "nullable": true, "type": "string" },
                        "id": { "type": "string" },
                        "members": {
                          "items": {
                            "properties": {
                              "$ref": { "type": "string" },
                              "display": { "type": "string" },
                              "value": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "created": { "type": "string" },
                            "lastModified": { "type": "string" },
                            "location": { "type": "string" },
                            "resourceType": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        }
                      },
                      "required": ["schemas", "id"],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get SCIM provisioning information for an enterprise group",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nAllows you to change a provisioned group’s individual attributes. To change a group’s values, you must provide a specific Operations JSON format that contains at least one of the add, remove, or replace operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#update-an-attribute-for-a-scim-enterprise-group"
            },
            "operationId": "enterprise-admin/update-attribute-for-enterprise-group",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Identifier generated by the GitHub SCIM endpoint.",
                "in": "path",
                "name": "scim_group_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "Operations": [
                      {
                        "op": "remove",
                        "path": "members",
                        "value": [
                          { "value": "aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5" }
                        ]
                      }
                    ],
                    "schemas": ["urn:ietf:params:scim:api:messages:2.0:PatchOp"]
                  },
                  "schema": {
                    "properties": {
                      "Operations": {
                        "description": "Array of [SCIM operations](https://tools.ietf.org/html/rfc7644#section-3.5.2).",
                        "items": {
                          "properties": {
                            "op": {
                              "enum": [
                                "add",
                                "Add",
                                "remove",
                                "Remove",
                                "replace",
                                "Replace"
                              ],
                              "type": "string"
                            },
                            "path": { "type": "string" },
                            "value": {
                              "oneOf": [
                                { "type": "string" },
                                { "type": "object" },
                                { "type": "array" }
                              ]
                            }
                          },
                          "required": ["op"],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "schemas": {
                        "description": "The SCIM schema URIs.",
                        "items": { "type": "string" },
                        "type": "array"
                      }
                    },
                    "required": ["schemas", "Operations"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "displayName": "octo-org",
                          "externalId": null,
                          "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                          "members": [
                            {
                              "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                              "display": "octocat@github.com",
                              "value": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc"
                            }
                          ],
                          "meta": {
                            "created": "2020-06-09T03:10:17.000+10:00",
                            "lastModified": "2020-06-09T03:10:17.000+10:00",
                            "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Groups/abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                            "resourceType": "Group"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:Group"
                          ]
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "displayName": { "type": "string" },
                        "externalId": { "nullable": true, "type": "string" },
                        "id": { "type": "string" },
                        "members": {
                          "items": {
                            "properties": {
                              "$ref": { "type": "string" },
                              "display": { "type": "string" },
                              "value": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "created": { "type": "string" },
                            "lastModified": { "type": "string" },
                            "location": { "type": "string" },
                            "resourceType": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        }
                      },
                      "required": ["schemas", "id"],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update an attribute for a SCIM enterprise group",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nReplaces an existing provisioned group’s information. You must provide all the information required for the group as if you were provisioning it for the first time. Any existing group information that you don't provide will be removed, including group membership. If you want to only update a specific attribute, use the [Update an attribute for a SCIM enterprise group](#update-an-attribute-for-a-scim-enterprise-group) endpoint instead.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#set-scim-information-for-a-provisioned-enterprise-group"
            },
            "operationId": "enterprise-admin/set-information-for-provisioned-enterprise-group",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Identifier generated by the GitHub SCIM endpoint.",
                "in": "path",
                "name": "scim_group_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "displayName": "octo-org",
                    "members": [
                      { "value": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc" },
                      { "value": "aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5" }
                    ],
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:Group"]
                  },
                  "schema": {
                    "properties": {
                      "displayName": {
                        "description": "The name of the SCIM group. This must match the GitHub organization that the group maps to.",
                        "type": "string"
                      },
                      "members": {
                        "items": {
                          "properties": {
                            "value": {
                              "description": "The SCIM user ID for a user.",
                              "type": "string"
                            }
                          },
                          "required": ["value"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "schemas": {
                        "description": "The SCIM schema URIs.",
                        "items": { "type": "string" },
                        "type": "array"
                      }
                    },
                    "required": ["schemas", "displayName"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "displayName": "octo-org",
                          "externalId": null,
                          "id": "abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                          "members": [
                            {
                              "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                              "display": "octocat@github.com",
                              "value": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc"
                            },
                            {
                              "$ref": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5",
                              "display": "hubot@example.com",
                              "value": "aaaa8c34-a6b2-11ea-9d70-bbbbbd1c8fd5"
                            }
                          ],
                          "meta": {
                            "created": "2020-06-09T03:10:17.000+10:0",
                            "lastModified": "2020-06-09T03:10:17.000+10:00",
                            "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Groups/abcd27f8-a9aa-11ea-8221-f59b2be9cccc",
                            "resourceType": "Group"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:Group"
                          ]
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "displayName": { "type": "string" },
                        "externalId": { "nullable": true, "type": "string" },
                        "id": { "type": "string" },
                        "members": {
                          "items": {
                            "properties": {
                              "$ref": { "type": "string" },
                              "display": { "type": "string" },
                              "value": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "meta": {
                          "properties": {
                            "created": { "type": "string" },
                            "lastModified": { "type": "string" },
                            "location": { "type": "string" },
                            "resourceType": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        }
                      },
                      "required": ["schemas", "id"],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Set SCIM information for a provisioned enterprise group",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/scim/v2/enterprises/{enterprise}/Users",
        {
          "get": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nRetrieves a paginated list of all provisioned enterprise members, including pending invitations.\n\nWhen a user with a SAML-provisioned external identity leaves (or is removed from) an enterprise, the account's metadata is immediately removed. However, the returned list of user accounts might not always match the organization or enterprise member list you see on GitHub. This can happen in certain cases where an external identity associated with an organization will not match an organization member:\n  - When a user with a SCIM-provisioned external identity is removed from an enterprise, the account's metadata is preserved to allow the user to re-join the organization in the future.\n  - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).\n  - When a user is invited over SCIM, an external identity is created that matches with the invitee's email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.\n\nThe returned list of external identities can include an entry for a `null` user. These are unlinked SAML identities that are created when a user goes through the following Single Sign-On (SSO) process but does not sign in to their GitHub account after completing SSO:\n\n1. The user is granted access by the IdP and is not a member of the GitHub enterprise.\n\n1. The user attempts to access the GitHub enterprise and initiates the SAML SSO process, and is not currently signed in to their GitHub account.\n\n1. After successfully authenticating with the SAML SSO IdP, the `null` external identity entry is created and the user is prompted to sign in to their GitHub account:\n   - If the user signs in, their GitHub account is linked to this entry.\n   - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub enterprise, and the external identity `null` entry remains in place.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#list-scim-provisioned-identities-for-an-enterprise"
            },
            "operationId": "enterprise-admin/list-provisioned-identities-enterprise",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Used for pagination: the index of the first result to return.",
                "in": "query",
                "name": "startIndex",
                "required": false,
                "schema": { "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Used for pagination: the number of results to return.",
                "in": "query",
                "name": "count",
                "required": false,
                "schema": { "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "filter results",
                "in": "query",
                "name": "filter",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "Resources": [
                            {
                              "active": true,
                              "emails": [
                                {
                                  "primary": true,
                                  "type": "work",
                                  "value": "octocat@github.com"
                                }
                              ],
                              "externalId": "00dowz5dr9oSfDFRA0h7",
                              "groups": [
                                {
                                  "value": "468dd3fa-a1d6-11ea-9031-15a1f0d7811d"
                                }
                              ],
                              "id": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                              "meta": {
                                "created": "2020-05-30T04:02:34.000+10:00",
                                "lastModified": "2020-05-30T04:05:04.000+10:00",
                                "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                                "resourceType": "User"
                              },
                              "name": {
                                "familyName": "Octocat",
                                "givenName": "Mona"
                              },
                              "schemas": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                              ],
                              "userName": "octocat@github.com"
                            },
                            {
                              "active": true,
                              "emails": [
                                {
                                  "primary": true,
                                  "type": "work",
                                  "value": "hubot@example.com"
                                }
                              ],
                              "externalId": "sdfoiausdofiua",
                              "groups": [],
                              "id": "e18b8c34-a6b2-11ea-9d70-54abbd1c8fd5",
                              "meta": {
                                "created": "2020-06-05T08:29:40.000+10:00",
                                "lastModified": "2020-06-05T08:30:19.000+10:00",
                                "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/e18b8c34-a6b2-11ea-9d70-54abbd1c8fd5",
                                "resourceType": "User"
                              },
                              "name": {
                                "familyName": "bot",
                                "givenName": "hu"
                              },
                              "schemas": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                              ],
                              "userName": "hubot@example.com"
                            }
                          ],
                          "itemsPerPage": 2,
                          "schemas": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                          ],
                          "startIndex": 1,
                          "totalResults": 2
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "Resources": {
                          "items": {
                            "properties": {
                              "active": { "type": "boolean" },
                              "emails": {
                                "items": {
                                  "properties": {
                                    "primary": { "type": "boolean" },
                                    "type": { "type": "string" },
                                    "value": { "type": "string" }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "externalId": { "type": "string" },
                              "groups": {
                                "items": {
                                  "properties": {
                                    "value": { "type": "string" }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "id": { "type": "string" },
                              "meta": {
                                "properties": {
                                  "created": { "type": "string" },
                                  "lastModified": { "type": "string" },
                                  "location": { "type": "string" },
                                  "resourceType": { "type": "string" }
                                },
                                "type": "object"
                              },
                              "name": {
                                "properties": {
                                  "familyName": { "type": "string" },
                                  "givenName": { "type": "string" }
                                },
                                "type": "object"
                              },
                              "schemas": {
                                "items": { "type": "string" },
                                "type": "array"
                              },
                              "userName": { "type": "string" }
                            },
                            "required": ["schemas", "id"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "itemsPerPage": { "type": "number" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "startIndex": { "type": "number" },
                        "totalResults": { "type": "number" }
                      },
                      "required": [
                        "schemas",
                        "totalResults",
                        "itemsPerPage",
                        "startIndex",
                        "Resources"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List SCIM provisioned identities for an enterprise",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nProvision enterprise membership for a user, and send organization invitation emails to the email address.\n\nYou can optionally include the groups a user will be invited to join. If you do not provide a list of `groups`, the user is provisioned for the enterprise, but no organization invitation emails will be sent.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#provision-and-invite-a-scim-enterprise-user"
            },
            "operationId": "enterprise-admin/provision-and-invite-enterprise-user",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "emails": [
                      {
                        "primary": true,
                        "type": "work",
                        "value": "mona.octocat@okta.example.com"
                      }
                    ],
                    "groups": [
                      { "value": "468dd3fa-a1d6-11ea-9031-15a1f0d7811d" }
                    ],
                    "name": { "familyName": "Octocat", "givenName": "Mona" },
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
                    "userName": "mona.octocat@okta.example.com"
                  },
                  "schema": {
                    "properties": {
                      "emails": {
                        "description": "List of user emails.",
                        "items": {
                          "properties": {
                            "primary": {
                              "description": "Whether this email address is the primary address.",
                              "type": "boolean"
                            },
                            "type": {
                              "description": "The type of email address.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The email address.",
                              "type": "string"
                            }
                          },
                          "required": ["value", "type", "primary"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "groups": {
                        "description": "List of SCIM group IDs the user is a member of.",
                        "items": {
                          "properties": { "value": { "type": "string" } },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "properties": {
                          "familyName": {
                            "description": "The last name of the user.",
                            "type": "string"
                          },
                          "givenName": {
                            "description": "The first name of the user.",
                            "type": "string"
                          }
                        },
                        "required": ["givenName", "familyName"],
                        "type": "object"
                      },
                      "schemas": {
                        "description": "The SCIM schema URIs.",
                        "items": { "type": "string" },
                        "type": "array"
                      },
                      "userName": {
                        "description": "The username for the user.",
                        "type": "string"
                      }
                    },
                    "required": ["schemas", "userName", "name", "emails"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "emails": [
                            {
                              "primary": true,
                              "type": "work",
                              "value": "mona.octocat@okta.example.com"
                            }
                          ],
                          "externalId": "00dowz5dr9oSfDFRA0h7",
                          "groups": [
                            { "value": "468dd3fa-a1d6-11ea-9031-15a1f0d7811d" }
                          ],
                          "id": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                          "meta": {
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                            "resourceType": "User"
                          },
                          "name": {
                            "familyName": "Octocat",
                            "givenName": "Mona"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                          ],
                          "userName": "mona.octocat@okta.example.com"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "active": { "type": "boolean" },
                        "emails": {
                          "items": {
                            "properties": {
                              "primary": { "type": "boolean" },
                              "type": { "type": "string" },
                              "value": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "externalId": { "type": "string" },
                        "groups": {
                          "items": {
                            "properties": { "value": { "type": "string" } },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": { "type": "string" },
                        "meta": {
                          "properties": {
                            "created": { "type": "string" },
                            "lastModified": { "type": "string" },
                            "location": { "type": "string" },
                            "resourceType": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "name": {
                          "properties": {
                            "familyName": { "type": "string" },
                            "givenName": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "userName": { "type": "string" }
                      },
                      "required": ["schemas", "id"],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Provision and invite a SCIM enterprise user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/scim/v2/enterprises/{enterprise}/Users/{scim_user_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#delete-a-scim-user-from-an-enterprise"
            },
            "operationId": "enterprise-admin/delete-user-from-enterprise",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "scim_user_id parameter",
                "in": "path",
                "name": "scim_user_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": { "204": { "description": "Response" } },
            "summary": "Delete a SCIM user from an enterprise",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#get-scim-provisioning-information-for-an-enterprise-user"
            },
            "operationId": "enterprise-admin/get-provisioning-information-for-enterprise-user",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "scim_user_id parameter",
                "in": "path",
                "name": "scim_user_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "emails": [
                            {
                              "primary": true,
                              "type": "work",
                              "value": "mona.octocat@okta.example.com"
                            }
                          ],
                          "externalId": "00dowz5dr9oSfDFRA0h7",
                          "groups": [
                            { "value": "468dd3fa-a1d6-11ea-9031-15a1f0d7811d" }
                          ],
                          "id": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                          "meta": {
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                            "resourceType": "User"
                          },
                          "name": {
                            "familyName": "Octocat",
                            "givenName": "Mona"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                          ],
                          "userName": "mona.octocat@okta.example.com"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "active": { "type": "boolean" },
                        "emails": {
                          "items": {
                            "properties": {
                              "primary": { "type": "boolean" },
                              "type": { "type": "string" },
                              "value": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "externalId": { "type": "string" },
                        "groups": {
                          "items": {
                            "properties": { "value": { "type": "string" } },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": { "type": "string" },
                        "meta": {
                          "properties": {
                            "created": { "type": "string" },
                            "lastModified": { "type": "string" },
                            "location": { "type": "string" },
                            "resourceType": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "name": {
                          "properties": {
                            "familyName": { "type": "string" },
                            "givenName": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "userName": { "type": "string" }
                      },
                      "required": ["schemas", "id"],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get SCIM provisioning information for an enterprise user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nAllows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the enterprise, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#update-an-attribute-for-a-scim-enterprise-user"
            },
            "operationId": "enterprise-admin/update-attribute-for-enterprise-user",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "scim_user_id parameter",
                "in": "path",
                "name": "scim_user_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "Operations": [
                      {
                        "op": "add",
                        "path": "emails",
                        "value": [
                          {
                            "type": "home",
                            "value": "monalisa@octocat.github.com"
                          }
                        ]
                      },
                      {
                        "op": "replace",
                        "path": "name.givenName",
                        "value": "Monalisa"
                      }
                    ],
                    "schemas": ["urn:ietf:params:scim:api:messages:2.0:PatchOp"]
                  },
                  "schema": {
                    "properties": {
                      "Operations": {
                        "description": "Array of [SCIM operations](https://tools.ietf.org/html/rfc7644#section-3.5.2).",
                        "items": { "type": "object" },
                        "type": "array"
                      },
                      "schemas": {
                        "description": "The SCIM schema URIs.",
                        "items": { "type": "string" },
                        "type": "array"
                      }
                    },
                    "required": ["schemas", "Operations"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "emails": [
                            {
                              "primary": true,
                              "type": "work",
                              "value": "mona.octocat@okta.example.com"
                            },
                            {
                              "type": "home",
                              "value": "monalisa@octocat.github.com"
                            }
                          ],
                          "externalId": "00dowz5dr9oSfDFRA0h7",
                          "groups": [
                            { "value": "468dd3fa-a1d6-11ea-9031-15a1f0d7811d" }
                          ],
                          "id": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                          "meta": {
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                            "resourceType": "User"
                          },
                          "name": {
                            "familyName": "Octocat",
                            "givenName": "Monalisa"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                          ],
                          "userName": "mona.octocat@okta.example.com"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "active": { "type": "boolean" },
                        "emails": {
                          "items": {
                            "properties": {
                              "primary": { "type": "boolean" },
                              "type": { "type": "string" },
                              "value": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "externalId": { "type": "string" },
                        "groups": {
                          "items": {
                            "properties": { "value": { "type": "string" } },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": { "type": "string" },
                        "meta": {
                          "properties": {
                            "created": { "type": "string" },
                            "lastModified": { "type": "string" },
                            "location": { "type": "string" },
                            "resourceType": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "name": {
                          "properties": {
                            "familyName": { "type": "string" },
                            "givenName": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "userName": { "type": "string" }
                      },
                      "required": ["schemas", "id"],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update an attribute for a SCIM enterprise user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "**Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.\n\nReplaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](#update-an-attribute-for-an-enterprise-scim-user) endpoint instead.\n\nYou must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the enterprise, deletes the external identity, and deletes the associated `{scim_user_id}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/enterprise-admin#set-scim-information-for-a-provisioned-enterprise-user"
            },
            "operationId": "enterprise-admin/set-information-for-provisioned-enterprise-user",
            "parameters": [
              {
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "in": "path",
                "name": "enterprise",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "scim_user_id parameter",
                "in": "path",
                "name": "scim_user_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "emails": [
                      {
                        "primary": true,
                        "type": "work",
                        "value": "mona.octocat@okta.example.com"
                      }
                    ],
                    "groups": [
                      { "value": "468dd3fa-a1d6-11ea-9031-15a1f0d7811d" }
                    ],
                    "name": { "familyName": "Octocat", "givenName": "Mona" },
                    "schemas": ["urn:ietf:params:scim:schemas:core:2.0:User"],
                    "userName": "mona.octocat@okta.example.com"
                  },
                  "schema": {
                    "properties": {
                      "emails": {
                        "description": "List of user emails.",
                        "items": {
                          "properties": {
                            "primary": {
                              "description": "Whether this email address is the primary address.",
                              "type": "boolean"
                            },
                            "type": {
                              "description": "The type of email address.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The email address.",
                              "type": "string"
                            }
                          },
                          "required": ["value", "type", "primary"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "groups": {
                        "description": "List of SCIM group IDs the user is a member of.",
                        "items": {
                          "properties": { "value": { "type": "string" } },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "properties": {
                          "familyName": {
                            "description": "The last name of the user.",
                            "type": "string"
                          },
                          "givenName": {
                            "description": "The first name of the user.",
                            "type": "string"
                          }
                        },
                        "required": ["givenName", "familyName"],
                        "type": "object"
                      },
                      "schemas": {
                        "description": "The SCIM schema URIs.",
                        "items": { "type": "string" },
                        "type": "array"
                      },
                      "userName": {
                        "description": "The username for the user.",
                        "type": "string"
                      }
                    },
                    "required": ["schemas", "userName", "name", "emails"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "emails": [
                            {
                              "primary": true,
                              "type": "work",
                              "value": "mona.octocat@okta.example.com"
                            }
                          ],
                          "externalId": "00dowz5dr9oSfDFRA0h7",
                          "groups": [
                            { "value": "468dd3fa-a1d6-11ea-9031-15a1f0d7811d" }
                          ],
                          "id": "92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                          "meta": {
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/enterprises/octo-corp/Users/92b58aaa-a1d6-11ea-8227-b9ce9e023ccc",
                            "resourceType": "User"
                          },
                          "name": {
                            "familyName": "Octocat",
                            "givenName": "Mona"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                          ],
                          "userName": "mona.octocat@okta.example.com"
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "active": { "type": "boolean" },
                        "emails": {
                          "items": {
                            "properties": {
                              "primary": { "type": "boolean" },
                              "type": { "type": "string" },
                              "value": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "externalId": { "type": "string" },
                        "groups": {
                          "items": {
                            "properties": { "value": { "type": "string" } },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "id": { "type": "string" },
                        "meta": {
                          "properties": {
                            "created": { "type": "string" },
                            "lastModified": { "type": "string" },
                            "location": { "type": "string" },
                            "resourceType": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "name": {
                          "properties": {
                            "familyName": { "type": "string" },
                            "givenName": { "type": "string" }
                          },
                          "type": "object"
                        },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "userName": { "type": "string" }
                      },
                      "required": ["schemas", "id"],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Set SCIM information for a provisioned enterprise user",
            "tags": ["enterprise-admin"],
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "scim"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/scim/v2/organizations/{org}/Users",
        {
          "get": {
            "deprecated": null,
            "description": "Retrieves a paginated list of all provisioned organization members, including pending invitations. If you provide the `filter` parameter, the resources for all matching provisions members are returned.\n\nWhen a user with a SAML-provisioned external identity leaves (or is removed from) an organization, the account's metadata is immediately removed. However, the returned list of user accounts might not always match the organization or enterprise member list you see on GitHub. This can happen in certain cases where an external identity associated with an organization will not match an organization member:\n  - When a user with a SCIM-provisioned external identity is removed from an organization, the account's metadata is preserved to allow the user to re-join the organization in the future.\n  - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).\n  - When a user is invited over SCIM, an external identity is created that matches with the invitee's email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.\n\nThe returned list of external identities can include an entry for a `null` user. These are unlinked SAML identities that are created when a user goes through the following Single Sign-On (SSO) process but does not sign in to their GitHub account after completing SSO:\n\n1. The user is granted access by the IdP and is not a member of the GitHub organization.\n\n1. The user attempts to access the GitHub organization and initiates the SAML SSO process, and is not currently signed in to their GitHub account.\n\n1. After successfully authenticating with the SAML SSO IdP, the `null` external identity entry is created and the user is prompted to sign in to their GitHub account:\n   - If the user signs in, their GitHub account is linked to this entry.\n   - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub organization, and the external identity `null` entry remains in place.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/scim#list-scim-provisioned-identities"
            },
            "operationId": "scim/list-provisioned-identities",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Used for pagination: the index of the first result to return.",
                "in": "query",
                "name": "startIndex",
                "required": false,
                "schema": { "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Used for pagination: the number of results to return.",
                "in": "query",
                "name": "count",
                "required": false,
                "schema": { "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query:\n\n`?filter=userName%20eq%20\\\"Octocat\\\"`.\n\nTo filter results for the identity with the email `octocat@github.com`, you would use this query:\n\n`?filter=emails%20eq%20\\\"octocat@github.com\\\"`.",
                "in": "query",
                "name": "filter",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/scim+json": {
                    "examples": {
                      "response-with-filter": {
                        "summary": "Response with filter",
                        "value": {
                          "Resources": [
                            {
                              "active": true,
                              "displayName": "Mona Octocat",
                              "emails": [
                                {
                                  "primary": true,
                                  "value": "octocat@github.com"
                                }
                              ],
                              "externalId": "00u1dhhb1fkIGP7RL1d8",
                              "id": "5fc0c238-1112-11e8-8e45-920c87bdbd75",
                              "meta": {
                                "created": "2018-02-13T15:05:24.000-08:00",
                                "lastModified": "2018-02-13T15:05:55.000-08:00",
                                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/5fc0c238-1112-11e8-8e45-920c87bdbd75",
                                "resourceType": "User"
                              },
                              "name": {
                                "familyName": "Octocat",
                                "formatted": "Mona Octocat",
                                "givenName": "Mona"
                              },
                              "schemas": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                              ],
                              "userName": "octocat@github.com"
                            }
                          ],
                          "itemsPerPage": 1,
                          "schemas": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                          ],
                          "startIndex": 1,
                          "totalResults": 1
                        }
                      },
                      "response-without-filter": {
                        "summary": "Response without filter",
                        "value": {
                          "Resources": [
                            {
                              "active": true,
                              "displayName": "Mona Octocat",
                              "emails": [
                                {
                                  "primary": true,
                                  "value": "mona.octocat@okta.example.com"
                                }
                              ],
                              "externalId": "a7d0f98382",
                              "id": "edefdfedf-050c-11e7-8d32",
                              "meta": {
                                "created": "2017-03-09T16:11:13-05:00",
                                "lastModified": "2017-03-09T16:11:13-05:00",
                                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                                "resourceType": "User"
                              },
                              "name": {
                                "familyName": "Octocat",
                                "formatted": "Mona Octocat",
                                "givenName": "Mona"
                              },
                              "schemas": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                              ],
                              "userName": "mona.octocat@okta.example.com"
                            },
                            {
                              "active": true,
                              "displayName": "hu bot",
                              "emails": [
                                {
                                  "primary": true,
                                  "value": "hubot@example.com"
                                }
                              ],
                              "externalId": "sdfoiausdofiua",
                              "id": "77563764-eb6-24-0598234-958243",
                              "meta": {
                                "created": "2017-03-09T16:11:13-05:00",
                                "lastModified": "2017-03-09T16:11:13-05:00",
                                "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/77563764-eb6-24-0598234-958243",
                                "resourceType": "User"
                              },
                              "name": {
                                "familyName": "bot",
                                "formatted": "hu bot",
                                "givenName": "hu"
                              },
                              "schemas": [
                                "urn:ietf:params:scim:schemas:core:2.0:User"
                              ],
                              "userName": "hubot@example.com"
                            }
                          ],
                          "itemsPerPage": 2,
                          "schemas": [
                            "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                          ],
                          "startIndex": 1,
                          "totalResults": 2
                        }
                      }
                    },
                    "schema": {
                      "description": "SCIM User List",
                      "properties": {
                        "Resources": {
                          "items": {
                            "description": "SCIM /Users provisioning endpoints",
                            "properties": {
                              "active": {
                                "description": "The active status of the User.",
                                "example": true,
                                "type": "boolean"
                              },
                              "displayName": {
                                "description": "The name of the user, suitable for display to end-users",
                                "example": "Jon Doe",
                                "nullable": true,
                                "type": "string"
                              },
                              "emails": {
                                "description": "user emails",
                                "example": [
                                  {
                                    "primary": true,
                                    "value": "someone@example.com"
                                  },
                                  {
                                    "primary": false,
                                    "value": "another@example.com"
                                  }
                                ],
                                "items": {
                                  "properties": {
                                    "primary": { "type": "boolean" },
                                    "value": { "type": "string" }
                                  },
                                  "required": ["value"],
                                  "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                              },
                              "externalId": {
                                "description": "The ID of the User.",
                                "example": "a7b0f98395",
                                "nullable": true,
                                "type": "string"
                              },
                              "groups": {
                                "description": "associated groups",
                                "items": {
                                  "properties": {
                                    "display": { "type": "string" },
                                    "value": { "type": "string" }
                                  }
                                },
                                "type": "array"
                              },
                              "id": {
                                "description": "Unique identifier of an external identity",
                                "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                                "type": "string"
                              },
                              "meta": {
                                "properties": {
                                  "created": {
                                    "example": "2019-01-24T22:45:36.000Z",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "lastModified": {
                                    "example": "2019-01-24T22:45:36.000Z",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "location": {
                                    "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "resourceType": {
                                    "example": "User",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "name": {
                                "example": {
                                  "familyName": "User",
                                  "givenName": "Jane"
                                },
                                "properties": {
                                  "familyName": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "formatted": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "givenName": {
                                    "nullable": true,
                                    "type": "string"
                                  }
                                },
                                "required": ["givenName", "familyName"],
                                "type": "object"
                              },
                              "operations": {
                                "description": "Set of operations to be performed",
                                "example": [
                                  {
                                    "op": "replace",
                                    "value": { "active": false }
                                  }
                                ],
                                "items": {
                                  "properties": {
                                    "op": {
                                      "enum": ["add", "remove", "replace"],
                                      "type": "string"
                                    },
                                    "path": { "type": "string" },
                                    "value": {
                                      "oneOf": [
                                        { "type": "string" },
                                        { "type": "object" },
                                        { "items": {}, "type": "array" }
                                      ]
                                    }
                                  },
                                  "required": ["op"],
                                  "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                              },
                              "organization_id": {
                                "description": "The ID of the organization.",
                                "type": "integer"
                              },
                              "schemas": {
                                "description": "SCIM schema used.",
                                "items": {
                                  "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                                  "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                              },
                              "userName": {
                                "description": "Configured by the admin. Could be an email, login, or username",
                                "example": "someone@example.com",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "schemas",
                              "externalId",
                              "userName",
                              "name",
                              "emails",
                              "active",
                              "meta"
                            ],
                            "title": "SCIM /Users",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "itemsPerPage": { "example": 10, "type": "integer" },
                        "schemas": {
                          "description": "SCIM schema used.",
                          "items": {
                            "example": "urn:ietf:params:scim:api:messages:2.0:ListResponse",
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "startIndex": { "example": 1, "type": "integer" },
                        "totalResults": { "example": 3, "type": "integer" }
                      },
                      "required": [
                        "schemas",
                        "totalResults",
                        "itemsPerPage",
                        "startIndex",
                        "Resources"
                      ],
                      "title": "SCIM User List",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "304": { "description": "Not modified" },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "List SCIM provisioned identities",
            "tags": ["scim"],
            "x-github": {
              "category": "scim",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "Provision organization membership for a user, and send an activation email to the email address.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/scim#provision-and-invite-a-scim-user"
            },
            "operationId": "scim/provision-and-invite-user",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "active": { "type": "boolean" },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          { "primary": true, "value": "someone@example.com" },
                          { "primary": false, "value": "another@example.com" }
                        ],
                        "items": {
                          "properties": {
                            "primary": { "type": "boolean" },
                            "type": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["value"],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "externalId": { "type": "string" },
                      "groups": {
                        "items": { "type": "string" },
                        "type": "array"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": { "type": "string" },
                          "formatted": { "type": "string" },
                          "givenName": { "type": "string" }
                        },
                        "required": ["givenName", "familyName"],
                        "type": "object"
                      },
                      "schemas": {
                        "items": { "type": "string" },
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "type": "string"
                      }
                    },
                    "required": ["userName", "name", "emails"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/scim+json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "displayName": "Monalisa Octocat",
                          "emails": [
                            {
                              "primary": true,
                              "value": "mona.octocat@okta.example.com"
                            },
                            { "value": "monalisa@octocat.github.com" }
                          ],
                          "externalId": "a7d0f98382",
                          "id": "edefdfedf-050c-11e7-8d32",
                          "meta": {
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                            "resourceType": "User"
                          },
                          "name": {
                            "familyName": "Octocat",
                            "formatted": "Monalisa Octocat",
                            "givenName": "Monalisa"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                          ],
                          "userName": "mona.octocat@okta.example.com"
                        }
                      }
                    },
                    "schema": {
                      "description": "SCIM /Users provisioning endpoints",
                      "properties": {
                        "active": {
                          "description": "The active status of the User.",
                          "example": true,
                          "type": "boolean"
                        },
                        "displayName": {
                          "description": "The name of the user, suitable for display to end-users",
                          "example": "Jon Doe",
                          "nullable": true,
                          "type": "string"
                        },
                        "emails": {
                          "description": "user emails",
                          "example": [
                            { "primary": true, "value": "someone@example.com" },
                            { "primary": false, "value": "another@example.com" }
                          ],
                          "items": {
                            "properties": {
                              "primary": { "type": "boolean" },
                              "value": { "type": "string" }
                            },
                            "required": ["value"],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "externalId": {
                          "description": "The ID of the User.",
                          "example": "a7b0f98395",
                          "nullable": true,
                          "type": "string"
                        },
                        "groups": {
                          "description": "associated groups",
                          "items": {
                            "properties": {
                              "display": { "type": "string" },
                              "value": { "type": "string" }
                            }
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Unique identifier of an external identity",
                          "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                          "type": "string"
                        },
                        "meta": {
                          "properties": {
                            "created": {
                              "example": "2019-01-24T22:45:36.000Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "lastModified": {
                              "example": "2019-01-24T22:45:36.000Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "location": {
                              "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                              "format": "uri",
                              "type": "string"
                            },
                            "resourceType": {
                              "example": "User",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "name": {
                          "example": {
                            "familyName": "User",
                            "givenName": "Jane"
                          },
                          "properties": {
                            "familyName": {
                              "nullable": true,
                              "type": "string"
                            },
                            "formatted": { "nullable": true, "type": "string" },
                            "givenName": { "nullable": true, "type": "string" }
                          },
                          "required": ["givenName", "familyName"],
                          "type": "object"
                        },
                        "operations": {
                          "description": "Set of operations to be performed",
                          "example": [
                            { "op": "replace", "value": { "active": false } }
                          ],
                          "items": {
                            "properties": {
                              "op": {
                                "enum": ["add", "remove", "replace"],
                                "type": "string"
                              },
                              "path": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "type": "string" },
                                  { "type": "object" },
                                  { "items": {}, "type": "array" }
                                ]
                              }
                            },
                            "required": ["op"],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "organization_id": {
                          "description": "The ID of the organization.",
                          "type": "integer"
                        },
                        "schemas": {
                          "description": "SCIM schema used.",
                          "items": {
                            "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "userName": {
                          "description": "Configured by the admin. Could be an email, login, or username",
                          "example": "someone@example.com",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "schemas",
                        "externalId",
                        "userName",
                        "name",
                        "emails",
                        "active",
                        "meta"
                      ],
                      "title": "SCIM /Users",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "304": { "description": "Not modified" },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "409": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Conflict"
              },
              "500": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Internal Error"
              }
            },
            "summary": "Provision and invite a SCIM user",
            "tags": ["scim"],
            "x-github": {
              "category": "scim",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/scim/v2/organizations/{org}/Users/{scim_user_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/scim#delete-a-scim-user-from-an-organization"
            },
            "operationId": "scim/delete-user-from-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "scim_user_id parameter",
                "in": "path",
                "name": "scim_user_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "304": { "description": "Not modified" },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete a SCIM user from an organization",
            "tags": ["scim"],
            "x-github": {
              "category": "scim",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/scim#get-scim-provisioning-information-for-a-user"
            },
            "operationId": "scim/get-provisioning-information-for-user",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "scim_user_id parameter",
                "in": "path",
                "name": "scim_user_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/scim+json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "displayName": "Monalisa Octocat",
                          "emails": [
                            {
                              "primary": true,
                              "value": "mona.octocat@okta.example.com"
                            },
                            { "value": "monalisa@octocat.github.com" }
                          ],
                          "externalId": "a7d0f98382",
                          "id": "edefdfedf-050c-11e7-8d32",
                          "meta": {
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                            "resourceType": "User"
                          },
                          "name": {
                            "familyName": "Octocat",
                            "formatted": "Monalisa Octocat",
                            "givenName": "Monalisa"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                          ],
                          "userName": "mona.octocat@okta.example.com"
                        }
                      }
                    },
                    "schema": {
                      "description": "SCIM /Users provisioning endpoints",
                      "properties": {
                        "active": {
                          "description": "The active status of the User.",
                          "example": true,
                          "type": "boolean"
                        },
                        "displayName": {
                          "description": "The name of the user, suitable for display to end-users",
                          "example": "Jon Doe",
                          "nullable": true,
                          "type": "string"
                        },
                        "emails": {
                          "description": "user emails",
                          "example": [
                            { "primary": true, "value": "someone@example.com" },
                            { "primary": false, "value": "another@example.com" }
                          ],
                          "items": {
                            "properties": {
                              "primary": { "type": "boolean" },
                              "value": { "type": "string" }
                            },
                            "required": ["value"],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "externalId": {
                          "description": "The ID of the User.",
                          "example": "a7b0f98395",
                          "nullable": true,
                          "type": "string"
                        },
                        "groups": {
                          "description": "associated groups",
                          "items": {
                            "properties": {
                              "display": { "type": "string" },
                              "value": { "type": "string" }
                            }
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Unique identifier of an external identity",
                          "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                          "type": "string"
                        },
                        "meta": {
                          "properties": {
                            "created": {
                              "example": "2019-01-24T22:45:36.000Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "lastModified": {
                              "example": "2019-01-24T22:45:36.000Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "location": {
                              "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                              "format": "uri",
                              "type": "string"
                            },
                            "resourceType": {
                              "example": "User",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "name": {
                          "example": {
                            "familyName": "User",
                            "givenName": "Jane"
                          },
                          "properties": {
                            "familyName": {
                              "nullable": true,
                              "type": "string"
                            },
                            "formatted": { "nullable": true, "type": "string" },
                            "givenName": { "nullable": true, "type": "string" }
                          },
                          "required": ["givenName", "familyName"],
                          "type": "object"
                        },
                        "operations": {
                          "description": "Set of operations to be performed",
                          "example": [
                            { "op": "replace", "value": { "active": false } }
                          ],
                          "items": {
                            "properties": {
                              "op": {
                                "enum": ["add", "remove", "replace"],
                                "type": "string"
                              },
                              "path": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "type": "string" },
                                  { "type": "object" },
                                  { "items": {}, "type": "array" }
                                ]
                              }
                            },
                            "required": ["op"],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "organization_id": {
                          "description": "The ID of the organization.",
                          "type": "integer"
                        },
                        "schemas": {
                          "description": "SCIM schema used.",
                          "items": {
                            "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "userName": {
                          "description": "Configured by the admin. Could be an email, login, or username",
                          "example": "someone@example.com",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "schemas",
                        "externalId",
                        "userName",
                        "name",
                        "emails",
                        "active",
                        "meta"
                      ],
                      "title": "SCIM /Users",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "304": { "description": "Not modified" },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Get SCIM provisioning information for a user",
            "tags": ["scim"],
            "x-github": {
              "category": "scim",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": null,
            "description": "Allows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/scim#update-an-attribute-for-a-scim-user"
            },
            "operationId": "scim/update-attribute-for-user",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "scim_user_id parameter",
                "in": "path",
                "name": "scim_user_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "Operations": {
                        "description": "Set of operations to be performed",
                        "example": [
                          { "op": "replace", "value": { "active": false } }
                        ],
                        "items": {
                          "properties": {
                            "op": {
                              "enum": ["add", "remove", "replace"],
                              "type": "string"
                            },
                            "path": { "type": "string" },
                            "value": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "active": {
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "externalId": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "familyName": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "givenName": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "userName": {
                                      "nullable": true,
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                {
                                  "items": {
                                    "properties": {
                                      "primary": { "type": "boolean" },
                                      "value": { "type": "string" }
                                    },
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                { "type": "string" }
                              ]
                            }
                          },
                          "required": ["op"],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "schemas": {
                        "items": { "type": "string" },
                        "type": "array"
                      }
                    },
                    "required": ["Operations"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/scim+json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "displayName": "Monalisa Octocat",
                          "emails": [
                            {
                              "primary": true,
                              "value": "mona.octocat@okta.example.com"
                            },
                            { "value": "monalisa@octocat.github.com" }
                          ],
                          "externalId": "a7d0f98382",
                          "id": "edefdfedf-050c-11e7-8d32",
                          "meta": {
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                            "resourceType": "User"
                          },
                          "name": {
                            "familyName": "Octocat",
                            "formatted": "Monalisa Octocat",
                            "givenName": "Monalisa"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                          ],
                          "userName": "mona.octocat@okta.example.com"
                        }
                      }
                    },
                    "schema": {
                      "description": "SCIM /Users provisioning endpoints",
                      "properties": {
                        "active": {
                          "description": "The active status of the User.",
                          "example": true,
                          "type": "boolean"
                        },
                        "displayName": {
                          "description": "The name of the user, suitable for display to end-users",
                          "example": "Jon Doe",
                          "nullable": true,
                          "type": "string"
                        },
                        "emails": {
                          "description": "user emails",
                          "example": [
                            { "primary": true, "value": "someone@example.com" },
                            { "primary": false, "value": "another@example.com" }
                          ],
                          "items": {
                            "properties": {
                              "primary": { "type": "boolean" },
                              "value": { "type": "string" }
                            },
                            "required": ["value"],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "externalId": {
                          "description": "The ID of the User.",
                          "example": "a7b0f98395",
                          "nullable": true,
                          "type": "string"
                        },
                        "groups": {
                          "description": "associated groups",
                          "items": {
                            "properties": {
                              "display": { "type": "string" },
                              "value": { "type": "string" }
                            }
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Unique identifier of an external identity",
                          "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                          "type": "string"
                        },
                        "meta": {
                          "properties": {
                            "created": {
                              "example": "2019-01-24T22:45:36.000Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "lastModified": {
                              "example": "2019-01-24T22:45:36.000Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "location": {
                              "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                              "format": "uri",
                              "type": "string"
                            },
                            "resourceType": {
                              "example": "User",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "name": {
                          "example": {
                            "familyName": "User",
                            "givenName": "Jane"
                          },
                          "properties": {
                            "familyName": {
                              "nullable": true,
                              "type": "string"
                            },
                            "formatted": { "nullable": true, "type": "string" },
                            "givenName": { "nullable": true, "type": "string" }
                          },
                          "required": ["givenName", "familyName"],
                          "type": "object"
                        },
                        "operations": {
                          "description": "Set of operations to be performed",
                          "example": [
                            { "op": "replace", "value": { "active": false } }
                          ],
                          "items": {
                            "properties": {
                              "op": {
                                "enum": ["add", "remove", "replace"],
                                "type": "string"
                              },
                              "path": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "type": "string" },
                                  { "type": "object" },
                                  { "items": {}, "type": "array" }
                                ]
                              }
                            },
                            "required": ["op"],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "organization_id": {
                          "description": "The ID of the organization.",
                          "type": "integer"
                        },
                        "schemas": {
                          "description": "SCIM schema used.",
                          "items": {
                            "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "userName": {
                          "description": "Configured by the admin. Could be an email, login, or username",
                          "example": "someone@example.com",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "schemas",
                        "externalId",
                        "userName",
                        "name",
                        "emails",
                        "active",
                        "meta"
                      ],
                      "title": "SCIM /Users",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "304": { "description": "Not modified" },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Bad Request"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "429": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Update an attribute for a SCIM user",
            "tags": ["scim"],
            "x-github": {
              "category": "scim",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](https://docs.github.com/rest/reference/scim#update-an-attribute-for-a-scim-user) endpoint instead.\n\nYou must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `{scim_user_id}`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/scim#set-scim-information-for-a-provisioned-user"
            },
            "operationId": "scim/set-information-for-provisioned-user",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "scim_user_id parameter",
                "in": "path",
                "name": "scim_user_id",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "active": { "type": "boolean" },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          { "primary": true, "value": "someone@example.com" },
                          { "primary": false, "value": "another@example.com" }
                        ],
                        "items": {
                          "properties": {
                            "primary": { "type": "boolean" },
                            "type": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["value"],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "externalId": { "type": "string" },
                      "groups": {
                        "items": { "type": "string" },
                        "type": "array"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": { "type": "string" },
                          "formatted": { "type": "string" },
                          "givenName": { "type": "string" }
                        },
                        "required": ["givenName", "familyName"],
                        "type": "object"
                      },
                      "schemas": {
                        "items": { "type": "string" },
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "type": "string"
                      }
                    },
                    "required": ["userName", "name", "emails"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/scim+json": {
                    "examples": {
                      "default": {
                        "value": {
                          "active": true,
                          "displayName": "Monalisa Octocat",
                          "emails": [
                            {
                              "primary": true,
                              "value": "mona.octocat@okta.example.com"
                            },
                            { "value": "monalisa@octocat.github.com" }
                          ],
                          "externalId": "a7d0f98382",
                          "id": "edefdfedf-050c-11e7-8d32",
                          "meta": {
                            "created": "2017-03-09T16:11:13-05:00",
                            "lastModified": "2017-03-09T16:11:13-05:00",
                            "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                            "resourceType": "User"
                          },
                          "name": {
                            "familyName": "Octocat",
                            "formatted": "Monalisa Octocat",
                            "givenName": "Monalisa"
                          },
                          "schemas": [
                            "urn:ietf:params:scim:schemas:core:2.0:User"
                          ],
                          "userName": "mona.octocat@okta.example.com"
                        }
                      }
                    },
                    "schema": {
                      "description": "SCIM /Users provisioning endpoints",
                      "properties": {
                        "active": {
                          "description": "The active status of the User.",
                          "example": true,
                          "type": "boolean"
                        },
                        "displayName": {
                          "description": "The name of the user, suitable for display to end-users",
                          "example": "Jon Doe",
                          "nullable": true,
                          "type": "string"
                        },
                        "emails": {
                          "description": "user emails",
                          "example": [
                            { "primary": true, "value": "someone@example.com" },
                            { "primary": false, "value": "another@example.com" }
                          ],
                          "items": {
                            "properties": {
                              "primary": { "type": "boolean" },
                              "value": { "type": "string" }
                            },
                            "required": ["value"],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "externalId": {
                          "description": "The ID of the User.",
                          "example": "a7b0f98395",
                          "nullable": true,
                          "type": "string"
                        },
                        "groups": {
                          "description": "associated groups",
                          "items": {
                            "properties": {
                              "display": { "type": "string" },
                              "value": { "type": "string" }
                            }
                          },
                          "type": "array"
                        },
                        "id": {
                          "description": "Unique identifier of an external identity",
                          "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                          "type": "string"
                        },
                        "meta": {
                          "properties": {
                            "created": {
                              "example": "2019-01-24T22:45:36.000Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "lastModified": {
                              "example": "2019-01-24T22:45:36.000Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "location": {
                              "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                              "format": "uri",
                              "type": "string"
                            },
                            "resourceType": {
                              "example": "User",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "name": {
                          "example": {
                            "familyName": "User",
                            "givenName": "Jane"
                          },
                          "properties": {
                            "familyName": {
                              "nullable": true,
                              "type": "string"
                            },
                            "formatted": { "nullable": true, "type": "string" },
                            "givenName": { "nullable": true, "type": "string" }
                          },
                          "required": ["givenName", "familyName"],
                          "type": "object"
                        },
                        "operations": {
                          "description": "Set of operations to be performed",
                          "example": [
                            { "op": "replace", "value": { "active": false } }
                          ],
                          "items": {
                            "properties": {
                              "op": {
                                "enum": ["add", "remove", "replace"],
                                "type": "string"
                              },
                              "path": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "type": "string" },
                                  { "type": "object" },
                                  { "items": {}, "type": "array" }
                                ]
                              }
                            },
                            "required": ["op"],
                            "type": "object"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "organization_id": {
                          "description": "The ID of the organization.",
                          "type": "integer"
                        },
                        "schemas": {
                          "description": "SCIM schema used.",
                          "items": {
                            "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                            "type": "string"
                          },
                          "minItems": 1,
                          "type": "array"
                        },
                        "userName": {
                          "description": "Configured by the admin. Could be an email, login, or username",
                          "example": "someone@example.com",
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "schemas",
                        "externalId",
                        "userName",
                        "name",
                        "emails",
                        "active",
                        "meta"
                      ],
                      "title": "SCIM /Users",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "304": { "description": "Not modified" },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  },
                  "application/scim+json": {
                    "schema": {
                      "description": "Scim Error",
                      "properties": {
                        "detail": { "nullable": true, "type": "string" },
                        "documentation_url": {
                          "nullable": true,
                          "type": "string"
                        },
                        "message": { "nullable": true, "type": "string" },
                        "schemas": {
                          "items": { "type": "string" },
                          "type": "array"
                        },
                        "scimType": { "nullable": true, "type": "string" },
                        "status": { "type": "integer" }
                      },
                      "title": "Scim Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Update a provisioned organization membership",
            "tags": ["scim"],
            "x-github": {
              "category": "scim",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/teams/{team_id}/invitations",
        {
          "get": {
            "deprecated": true,
            "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List pending team invitations`](https://docs.github.com/rest/reference/teams#list-pending-team-invitations) endpoint.\n\nThe return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/teams#list-pending-team-invitations-legacy"
            },
            "operationId": "teams/list-pending-invitations-legacy",
            "parameters": [
              {
                "in": "path",
                "name": "team_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2016-11-30T06:46:10-08:00",
                            "email": "octocat@github.com",
                            "failed_at": "",
                            "failed_reason": "",
                            "id": 1,
                            "invitation_teams_url": "https://api.github.com/organizations/2/invitations/1/teams",
                            "inviter": {
                              "avatar_url": "https://github.com/images/error/other_user_happy.gif",
                              "events_url": "https://api.github.com/users/other_user/events{/privacy}",
                              "followers_url": "https://api.github.com/users/other_user/followers",
                              "following_url": "https://api.github.com/users/other_user/following{/other_user}",
                              "gists_url": "https://api.github.com/users/other_user/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/other_user",
                              "id": 1,
                              "login": "other_user",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/other_user/orgs",
                              "received_events_url": "https://api.github.com/users/other_user/received_events",
                              "repos_url": "https://api.github.com/users/other_user/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/other_user/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/other_user/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/other_user"
                            },
                            "login": "monalisa",
                            "node_id": "MDQ6VXNlcjE=",
                            "role": "direct_member",
                            "team_count": 2
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Organization Invitation",
                        "properties": {
                          "created_at": { "type": "string" },
                          "email": { "nullable": true, "type": "string" },
                          "failed_at": { "nullable": true, "type": "string" },
                          "failed_reason": {
                            "nullable": true,
                            "type": "string"
                          },
                          "id": { "type": "integer" },
                          "invitation_teams_url": {
                            "example": "\"https://api.github.com/organizations/16/invitations/1/teams\"",
                            "type": "string"
                          },
                          "inviter": {
                            "description": "Simple User",
                            "nullable": true,
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": { "nullable": true, "type": "string" },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": { "example": 1, "type": "integer" },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": { "type": "boolean" },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": { "example": "User", "type": "string" },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "login": { "nullable": true, "type": "string" },
                          "node_id": {
                            "example": "\"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x\"",
                            "type": "string"
                          },
                          "role": { "type": "string" },
                          "team_count": { "type": "integer" }
                        },
                        "required": [
                          "id",
                          "login",
                          "email",
                          "role",
                          "created_at",
                          "inviter",
                          "team_count",
                          "invitation_teams_url",
                          "node_id"
                        ],
                        "title": "Organization Invitation",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              }
            },
            "summary": "List pending team invitations (Legacy)",
            "tags": ["teams"],
            "x-github": {
              "category": "teams",
              "deprecationDate": "2020-01-21",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "removalDate": "2021-02-01",
              "subcategory": "members"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/teams/{team_id}/team-sync/group-mappings",
        {
          "get": {
            "deprecated": true,
            "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List IdP groups for a team`](https://docs.github.com/rest/reference/teams#list-idp-groups-for-a-team) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/teams#list-idp-groups-for-a-team-legacy"
            },
            "operationId": "teams/list-idp-groups-for-legacy",
            "parameters": [
              {
                "in": "path",
                "name": "team_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "groups": [
                            {
                              "group_description": "The people who configure your octoworld.",
                              "group_id": "123",
                              "group_name": "Octocat admins"
                            },
                            {
                              "group_description": "The people who make your octoworld come to life.",
                              "group_id": "456",
                              "group_name": "Octocat docs members"
                            }
                          ]
                        }
                      }
                    },
                    "schema": {
                      "description": "External Groups to be mapped to a team for membership",
                      "properties": {
                        "groups": {
                          "description": "Array of groups to be mapped to this team",
                          "example": [
                            {
                              "group_description": "A group of Developers working on AzureAD SAML SSO",
                              "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "group_name": "saml-azuread-test"
                            },
                            {
                              "group_description": "Another group of Developers working on AzureAD SAML SSO",
                              "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                              "group_name": "saml-azuread-test2"
                            }
                          ],
                          "items": {
                            "properties": {
                              "group_description": {
                                "description": "a description of the group",
                                "example": "A group of Developers working on AzureAD SAML SSO",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "The ID of the group",
                                "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "The name of the group",
                                "example": "saml-azuread-test",
                                "type": "string"
                              },
                              "status": {
                                "description": "synchronization status for this group mapping",
                                "example": "unsynced",
                                "type": "string"
                              },
                              "synced_at": {
                                "description": "the time of the last sync for this group-mapping",
                                "example": "2019-06-03 22:27:15:000 -700",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "group_id",
                              "group_name",
                              "group_description"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "GroupMapping",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "List IdP groups for a team (Legacy)",
            "tags": ["teams"],
            "x-github": {
              "category": "teams",
              "deprecationDate": "2020-01-21",
              "enabledForGitHubApps": false,
              "githubCloudOnly": true,
              "previews": [],
              "removalDate": "2021-02-01",
              "subcategory": "team-sync"
            },
            "x-octokit": {}
          },
          "patch": {
            "deprecated": true,
            "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create or update IdP group connections`](https://docs.github.com/rest/reference/teams#create-or-update-idp-group-connections) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/teams#create-or-update-idp-group-connections-legacy"
            },
            "operationId": "teams/create-or-update-idp-group-connections-legacy",
            "parameters": [
              {
                "in": "path",
                "name": "team_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "example": {
                    "groups": [
                      {
                        "description": "The people who configure your octoworld.",
                        "group_description": "string",
                        "group_id": "123",
                        "group_name": "Octocat admins"
                      }
                    ]
                  },
                  "schema": {
                    "properties": {
                      "groups": {
                        "description": "The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.",
                        "items": {
                          "properties": {
                            "description": {
                              "example": "\"moar cheese pleese\"",
                              "type": "string"
                            },
                            "group_description": {
                              "description": "Description of the IdP group.",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "ID of the IdP group.",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "Name of the IdP group.",
                              "type": "string"
                            },
                            "id": {
                              "example": "\"caceab43fc9ffa20081c\"",
                              "type": "string"
                            },
                            "name": {
                              "example": "\"external-team-6c13e7288ef7\"",
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "synced_at": {
                        "example": "\"I am not a timestamp\"",
                        "type": "string"
                      }
                    },
                    "required": ["groups"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "groups": [
                            {
                              "group_description": "The people who configure your octoworld.",
                              "group_id": "123",
                              "group_name": "Octocat admins"
                            }
                          ]
                        }
                      }
                    },
                    "schema": {
                      "description": "External Groups to be mapped to a team for membership",
                      "properties": {
                        "groups": {
                          "description": "Array of groups to be mapped to this team",
                          "example": [
                            {
                              "group_description": "A group of Developers working on AzureAD SAML SSO",
                              "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "group_name": "saml-azuread-test"
                            },
                            {
                              "group_description": "Another group of Developers working on AzureAD SAML SSO",
                              "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                              "group_name": "saml-azuread-test2"
                            }
                          ],
                          "items": {
                            "properties": {
                              "group_description": {
                                "description": "a description of the group",
                                "example": "A group of Developers working on AzureAD SAML SSO",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "The ID of the group",
                                "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "The name of the group",
                                "example": "saml-azuread-test",
                                "type": "string"
                              },
                              "status": {
                                "description": "synchronization status for this group mapping",
                                "example": "unsynced",
                                "type": "string"
                              },
                              "synced_at": {
                                "description": "the time of the last sync for this group-mapping",
                                "example": "2019-06-03 22:27:15:000 -700",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "group_id",
                              "group_name",
                              "group_description"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "title": "GroupMapping",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Create or update IdP group connections (Legacy)",
            "tags": ["teams"],
            "x-github": {
              "category": "teams",
              "deprecationDate": "2020-01-21",
              "enabledForGitHubApps": false,
              "githubCloudOnly": true,
              "previews": [],
              "removalDate": "2021-02-01",
              "subcategory": "team-sync"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/blocks",
        {
          "get": {
            "deprecated": null,
            "description": "List the users you've blocked on your personal account.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/users#list-users-blocked-by-the-authenticated-user"
            },
            "operationId": "users/list-blocked-by-authenticated",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Simple User",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": { "nullable": true, "type": "string" },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": { "example": 1, "type": "integer" },
                          "login": { "example": "octocat", "type": "string" },
                          "name": { "nullable": true, "type": "string" },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": { "type": "boolean" },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": { "example": "User", "type": "string" },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "415": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "type": "object"
                    }
                  }
                },
                "description": "Preview header missing"
              }
            },
            "summary": "List users blocked by the authenticated user",
            "tags": ["users"],
            "x-github": {
              "category": "users",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "blocking"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/blocks/{username}",
        {
          "delete": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/users#unblock-a-user"
            },
            "operationId": "users/unblock",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Unblock a user",
            "tags": ["users"],
            "x-github": {
              "category": "users",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "blocking"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/users#check-if-a-user-is-blocked-by-the-authenticated-user"
            },
            "operationId": "users/check-blocked",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "If the user is blocked:" },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "If the user is not blocked:"
              }
            },
            "summary": "Check if a user is blocked by the authenticated user",
            "tags": ["users"],
            "x-github": {
              "category": "users",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "blocking"
            },
            "x-octokit": {}
          },
          "put": {
            "deprecated": null,
            "description": "",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/users#block-a-user"
            },
            "operationId": "users/block",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Block a user",
            "tags": ["users"],
            "x-github": {
              "category": "users",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "blocking"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/email/visibility",
        {
          "patch": {
            "deprecated": null,
            "description": "Sets the visibility for your primary email addresses.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user"
            },
            "operationId": "users/set-primary-email-visibility-for-authenticated",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "visibility": {
                        "description": "Denotes whether an email is publicly visible.",
                        "enum": ["public", "private"],
                        "type": "string"
                      }
                    },
                    "required": ["visibility"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "email": "octocat@github.com",
                            "primary": true,
                            "verified": true,
                            "visibility": "private"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Email",
                        "properties": {
                          "email": {
                            "example": "octocat@github.com",
                            "format": "email",
                            "type": "string"
                          },
                          "primary": { "example": true, "type": "boolean" },
                          "verified": { "example": true, "type": "boolean" },
                          "visibility": {
                            "example": "public",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "email",
                          "primary",
                          "verified",
                          "visibility"
                        ],
                        "title": "Email",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Set primary email visibility for the authenticated user",
            "tags": ["users"],
            "x-github": {
              "category": "users",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "emails"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/interaction-limits",
        {
          "delete": {
            "deprecated": null,
            "description": "Removes any interaction restrictions from your public repositories.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/interactions#remove-interaction-restrictions-from-your-public-repositories"
            },
            "operationId": "interactions/remove-restrictions-for-authenticated-user",
            "responses": { "204": { "description": "Response" } },
            "summary": "Remove interaction restrictions from your public repositories",
            "tags": ["interactions"],
            "x-github": {
              "category": "interactions",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "user"
            },
            "x-octokit": {
              "changes": [
                {
                  "before": {
                    "operationId": "interactions/remove-restrictions-for-your-public-repos"
                  },
                  "date": "2021-02-02",
                  "type": "OPERATION"
                }
              ]
            }
          },
          "get": {
            "deprecated": null,
            "description": "Shows which type of GitHub user can interact with your public repositories and when the restriction expires.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/interactions#get-interaction-restrictions-for-your-public-repositories"
            },
            "operationId": "interactions/get-restrictions-for-authenticated-user",
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2018-08-17T04:18:39Z",
                          "limit": "collaborators_only",
                          "origin": "organization"
                        }
                      }
                    },
                    "schema": {
                      "anyOf": [
                        {
                          "description": "Interaction limit settings.",
                          "properties": {
                            "expires_at": {
                              "example": "2018-08-17T04:18:39Z",
                              "format": "date-time",
                              "type": "string"
                            },
                            "limit": {
                              "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
                              "enum": [
                                "existing_users",
                                "contributors_only",
                                "collaborators_only"
                              ],
                              "example": "collaborators_only",
                              "type": "string"
                            },
                            "origin": {
                              "example": "repository",
                              "type": "string"
                            }
                          },
                          "required": ["limit", "origin", "expires_at"],
                          "title": "Interaction Limits",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {},
                          "type": "object"
                        }
                      ]
                    }
                  }
                },
                "description": "Default response"
              },
              "204": {
                "description": "Response when there are no restrictions"
              }
            },
            "summary": "Get interaction restrictions for your public repositories",
            "tags": ["interactions"],
            "x-github": {
              "category": "interactions",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "user"
            },
            "x-octokit": {
              "changes": [
                {
                  "before": {
                    "operationId": "interactions/get-restrictions-for-your-public-repos"
                  },
                  "date": "2021-02-02",
                  "type": "OPERATION"
                }
              ]
            }
          },
          "put": {
            "deprecated": null,
            "description": "Temporarily restricts which type of GitHub user can interact with your public repositories. Setting the interaction limit at the user level will overwrite any interaction limits that are set for individual repositories owned by the user.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/interactions#set-interaction-restrictions-for-your-public-repositories"
            },
            "operationId": "interactions/set-restrictions-for-authenticated-user",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Limit interactions to a specific type of user for a specified duration",
                    "properties": {
                      "expiry": {
                        "description": "The duration of the interaction restriction. Can be one of: `one_day`, `three_days`, `one_week`, `one_month`, `six_months`. Default: `one_day`.",
                        "enum": [
                          "one_day",
                          "three_days",
                          "one_week",
                          "one_month",
                          "six_months"
                        ],
                        "example": "one_month",
                        "type": "string"
                      },
                      "limit": {
                        "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
                        "enum": [
                          "existing_users",
                          "contributors_only",
                          "collaborators_only"
                        ],
                        "example": "collaborators_only",
                        "type": "string"
                      }
                    },
                    "required": ["limit"],
                    "title": "Interaction Restrictions",
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2018-08-17T04:18:39Z",
                          "limit": "collaborators_only",
                          "origin": "user"
                        }
                      }
                    },
                    "schema": {
                      "description": "Interaction limit settings.",
                      "properties": {
                        "expires_at": {
                          "example": "2018-08-17T04:18:39Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "limit": {
                          "description": "The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect. Can be one of: `existing_users`, `contributors_only`, `collaborators_only`.",
                          "enum": [
                            "existing_users",
                            "contributors_only",
                            "collaborators_only"
                          ],
                          "example": "collaborators_only",
                          "type": "string"
                        },
                        "origin": { "example": "repository", "type": "string" }
                      },
                      "required": ["limit", "origin", "expires_at"],
                      "title": "Interaction Limits",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Set interaction restrictions for your public repositories",
            "tags": ["interactions"],
            "x-github": {
              "category": "interactions",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "user"
            },
            "x-octokit": {
              "changes": [
                {
                  "before": {
                    "operationId": "interactions/set-restrictions-for-your-public-repos"
                  },
                  "date": "2021-02-02",
                  "type": "OPERATION"
                }
              ]
            }
          }
        }
      ],
      [
        "/user/marketplace_purchases",
        {
          "get": {
            "deprecated": null,
            "description": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user"
            },
            "operationId": "apps/list-subscriptions-for-authenticated-user",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "account": {
                              "email": null,
                              "id": 4,
                              "login": "github",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                              "organization_billing_email": "billing@github.com",
                              "type": "Organization",
                              "url": "https://api.github.com/orgs/github"
                            },
                            "billing_cycle": "monthly",
                            "free_trial_ends_on": "2017-11-11T00:00:00Z",
                            "next_billing_date": "2017-11-11T00:00:00Z",
                            "on_free_trial": true,
                            "plan": {
                              "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                              "bullets": [
                                "Up to 25 private repositories",
                                "11 concurrent builds"
                              ],
                              "description": "A professional-grade CI solution",
                              "has_free_trial": true,
                              "id": 1313,
                              "monthly_price_in_cents": 1099,
                              "name": "Pro",
                              "number": 3,
                              "price_model": "flat-rate",
                              "state": "published",
                              "unit_name": null,
                              "url": "https://api.github.com/marketplace_listing/plans/1313",
                              "yearly_price_in_cents": 11870
                            },
                            "unit_count": null,
                            "updated_at": "2017-11-02T01:12:12Z"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "User Marketplace Purchase",
                        "properties": {
                          "account": {
                            "properties": {
                              "email": {
                                "format": "email",
                                "nullable": true,
                                "type": "string"
                              },
                              "id": { "type": "integer" },
                              "login": { "type": "string" },
                              "node_id": { "type": "string" },
                              "organization_billing_email": {
                                "format": "email",
                                "nullable": true,
                                "type": "string"
                              },
                              "type": { "type": "string" },
                              "url": { "format": "uri", "type": "string" }
                            },
                            "required": ["url", "id", "type", "login"],
                            "title": "Marketplace Account",
                            "type": "object"
                          },
                          "billing_cycle": {
                            "example": "monthly",
                            "type": "string"
                          },
                          "free_trial_ends_on": {
                            "example": "2017-11-11T00:00:00Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "next_billing_date": {
                            "example": "2017-11-11T00:00:00Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "on_free_trial": {
                            "example": true,
                            "type": "boolean"
                          },
                          "plan": {
                            "description": "Marketplace Listing Plan",
                            "properties": {
                              "accounts_url": {
                                "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                "format": "uri",
                                "type": "string"
                              },
                              "bullets": {
                                "example": [
                                  "Up to 25 private repositories",
                                  "11 concurrent builds"
                                ],
                                "items": { "type": "string" },
                                "type": "array"
                              },
                              "description": {
                                "example": "A professional-grade CI solution",
                                "type": "string"
                              },
                              "has_free_trial": {
                                "example": true,
                                "type": "boolean"
                              },
                              "id": { "example": 1313, "type": "integer" },
                              "monthly_price_in_cents": {
                                "example": 1099,
                                "type": "integer"
                              },
                              "name": { "example": "Pro", "type": "string" },
                              "number": { "example": 3, "type": "integer" },
                              "price_model": {
                                "example": "flat-rate",
                                "type": "string"
                              },
                              "state": {
                                "example": "published",
                                "type": "string"
                              },
                              "unit_name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/marketplace_listing/plans/1313",
                                "format": "uri",
                                "type": "string"
                              },
                              "yearly_price_in_cents": {
                                "example": 11870,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "url",
                              "accounts_url",
                              "id",
                              "number",
                              "name",
                              "description",
                              "has_free_trial",
                              "price_model",
                              "unit_name",
                              "monthly_price_in_cents",
                              "state",
                              "yearly_price_in_cents",
                              "bullets"
                            ],
                            "title": "Marketplace Listing Plan",
                            "type": "object"
                          },
                          "unit_count": { "nullable": true, "type": "integer" },
                          "updated_at": {
                            "example": "2017-11-02T01:12:12Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "billing_cycle",
                          "next_billing_date",
                          "unit_count",
                          "updated_at",
                          "on_free_trial",
                          "free_trial_ends_on",
                          "account",
                          "plan"
                        ],
                        "title": "User Marketplace Purchase",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "List subscriptions for the authenticated user",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "marketplace"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/marketplace_purchases/stubbed",
        {
          "get": {
            "deprecated": null,
            "description": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://docs.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/apps#list-subscriptions-for-the-authenticated-user-stubbed"
            },
            "operationId": "apps/list-subscriptions-for-authenticated-user-stubbed",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "account": {
                              "email": null,
                              "id": 4,
                              "login": "github",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                              "organization_billing_email": "billing@github.com",
                              "type": "Organization",
                              "url": "https://api.github.com/orgs/github"
                            },
                            "billing_cycle": "monthly",
                            "free_trial_ends_on": "2017-11-11T00:00:00Z",
                            "next_billing_date": "2017-11-11T00:00:00Z",
                            "on_free_trial": true,
                            "plan": {
                              "accounts_url": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                              "bullets": [
                                "Up to 25 private repositories",
                                "11 concurrent builds"
                              ],
                              "description": "A professional-grade CI solution",
                              "has_free_trial": true,
                              "id": 1313,
                              "monthly_price_in_cents": 1099,
                              "name": "Pro",
                              "number": 3,
                              "price_model": "flat-rate",
                              "state": "published",
                              "unit_name": null,
                              "url": "https://api.github.com/marketplace_listing/plans/1313",
                              "yearly_price_in_cents": 11870
                            },
                            "unit_count": null,
                            "updated_at": "2017-11-02T01:12:12Z"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "User Marketplace Purchase",
                        "properties": {
                          "account": {
                            "properties": {
                              "email": {
                                "format": "email",
                                "nullable": true,
                                "type": "string"
                              },
                              "id": { "type": "integer" },
                              "login": { "type": "string" },
                              "node_id": { "type": "string" },
                              "organization_billing_email": {
                                "format": "email",
                                "nullable": true,
                                "type": "string"
                              },
                              "type": { "type": "string" },
                              "url": { "format": "uri", "type": "string" }
                            },
                            "required": ["url", "id", "type", "login"],
                            "title": "Marketplace Account",
                            "type": "object"
                          },
                          "billing_cycle": {
                            "example": "monthly",
                            "type": "string"
                          },
                          "free_trial_ends_on": {
                            "example": "2017-11-11T00:00:00Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "next_billing_date": {
                            "example": "2017-11-11T00:00:00Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "on_free_trial": {
                            "example": true,
                            "type": "boolean"
                          },
                          "plan": {
                            "description": "Marketplace Listing Plan",
                            "properties": {
                              "accounts_url": {
                                "example": "https://api.github.com/marketplace_listing/plans/1313/accounts",
                                "format": "uri",
                                "type": "string"
                              },
                              "bullets": {
                                "example": [
                                  "Up to 25 private repositories",
                                  "11 concurrent builds"
                                ],
                                "items": { "type": "string" },
                                "type": "array"
                              },
                              "description": {
                                "example": "A professional-grade CI solution",
                                "type": "string"
                              },
                              "has_free_trial": {
                                "example": true,
                                "type": "boolean"
                              },
                              "id": { "example": 1313, "type": "integer" },
                              "monthly_price_in_cents": {
                                "example": 1099,
                                "type": "integer"
                              },
                              "name": { "example": "Pro", "type": "string" },
                              "number": { "example": 3, "type": "integer" },
                              "price_model": {
                                "example": "flat-rate",
                                "type": "string"
                              },
                              "state": {
                                "example": "published",
                                "type": "string"
                              },
                              "unit_name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/marketplace_listing/plans/1313",
                                "format": "uri",
                                "type": "string"
                              },
                              "yearly_price_in_cents": {
                                "example": 11870,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "url",
                              "accounts_url",
                              "id",
                              "number",
                              "name",
                              "description",
                              "has_free_trial",
                              "price_model",
                              "unit_name",
                              "monthly_price_in_cents",
                              "state",
                              "yearly_price_in_cents",
                              "bullets"
                            ],
                            "title": "Marketplace Listing Plan",
                            "type": "object"
                          },
                          "unit_count": { "nullable": true, "type": "integer" },
                          "updated_at": {
                            "example": "2017-11-02T01:12:12Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "billing_cycle",
                          "next_billing_date",
                          "unit_count",
                          "updated_at",
                          "on_free_trial",
                          "free_trial_ends_on",
                          "account",
                          "plan"
                        ],
                        "title": "User Marketplace Purchase",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              }
            },
            "summary": "List subscriptions for the authenticated user (stubbed)",
            "tags": ["apps"],
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "marketplace"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/migrations",
        {
          "get": {
            "deprecated": null,
            "description": "Lists all migrations a user has started.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#list-user-migrations"
            },
            "operationId": "migrations/list-for-authenticated-user",
            "parameters": [
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2015-07-06T15:33:38-07:00",
                            "exclude_attachments": false,
                            "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "id": 79,
                            "lock_repositories": true,
                            "node_id": "MDQ6VXNlcjE=",
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "repositories": [
                              {
                                "allow_auto_merge": false,
                                "allow_merge_commit": true,
                                "allow_rebase_merge": true,
                                "allow_squash_merge": true,
                                "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "archived": false,
                                "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "clone_url": "https://github.com/octocat/Hello-World.git",
                                "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                                "created_at": "2011-01-26T19:01:12Z",
                                "default_branch": "master",
                                "delete_branch_on_merge": true,
                                "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                                "description": "This your first repo!",
                                "disabled": false,
                                "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                                "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                                "fork": false,
                                "forks": 1,
                                "forks_count": 9,
                                "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                                "full_name": "octocat/Hello-World",
                                "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "git_url": "git:github.com/octocat/Hello-World.git",
                                "has_downloads": true,
                                "has_issues": true,
                                "has_pages": false,
                                "has_projects": true,
                                "has_wiki": true,
                                "homepage": "https://github.com",
                                "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                                "html_url": "https://github.com/octocat/Hello-World",
                                "id": 1296269,
                                "is_template": true,
                                "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "language": null,
                                "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                                "license": {
                                  "html_url": "https://api.github.com/licenses/mit",
                                  "key": "mit",
                                  "name": "MIT License",
                                  "node_id": "MDc6TGljZW5zZW1pdA==",
                                  "spdx_id": "MIT",
                                  "url": "https://api.github.com/licenses/mit"
                                },
                                "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                                "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "mirror_url": "git:git.example.com/octocat/Hello-World",
                                "name": "Hello-World",
                                "network_count": 0,
                                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "open_issues": 1,
                                "open_issues_count": 0,
                                "owner": {
                                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                  "followers_url": "https://api.github.com/users/octocat/followers",
                                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "gravatar_id": "",
                                  "html_url": "https://github.com/octocat",
                                  "id": 1,
                                  "login": "octocat",
                                  "node_id": "MDQ6VXNlcjE=",
                                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                                  "repos_url": "https://api.github.com/users/octocat/repos",
                                  "site_admin": false,
                                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                  "type": "User",
                                  "url": "https://api.github.com/users/octocat"
                                },
                                "permissions": {
                                  "admin": false,
                                  "pull": true,
                                  "push": false
                                },
                                "private": false,
                                "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "pushed_at": "2011-01-26T19:06:43Z",
                                "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "size": 108,
                                "ssh_url": "git@github.com:octocat/Hello-World.git",
                                "stargazers_count": 80,
                                "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "subscribers_count": 42,
                                "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                                "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                                "svn_url": "https://svn.github.com/octocat/Hello-World",
                                "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                                "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                                "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                                "template_repository": null,
                                "topics": [
                                  "octocat",
                                  "atom",
                                  "electron",
                                  "api"
                                ],
                                "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "updated_at": "2011-01-26T19:14:43Z",
                                "url": "https://api.github.com/repos/octocat/Hello-World",
                                "visibility": "public",
                                "watchers": 1,
                                "watchers_count": 80
                              }
                            ],
                            "state": "pending",
                            "updated_at": "2015-07-06T15:33:38-07:00",
                            "url": "https://api.github.com/orgs/octo-org/migrations/79"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "A migration.",
                        "properties": {
                          "archive_url": { "format": "uri", "type": "string" },
                          "created_at": {
                            "example": "2015-07-06T15:33:38-07:00",
                            "format": "date-time",
                            "type": "string"
                          },
                          "exclude": { "items": {}, "type": "array" },
                          "exclude_attachments": { "type": "boolean" },
                          "guid": {
                            "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                            "type": "string"
                          },
                          "id": { "example": 79, "type": "integer" },
                          "lock_repositories": {
                            "example": true,
                            "type": "boolean"
                          },
                          "node_id": { "type": "string" },
                          "owner": {
                            "allOf": [
                              {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "repositories": {
                            "items": {
                              "description": "A git repository",
                              "properties": {
                                "allow_auto_merge": {
                                  "default": false,
                                  "description": "Whether to allow Auto-merge to be used on pull requests.",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "allow_merge_commit": {
                                  "default": true,
                                  "description": "Whether to allow merge commits for pull requests.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "allow_rebase_merge": {
                                  "default": true,
                                  "description": "Whether to allow rebase merges for pull requests.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "allow_squash_merge": {
                                  "default": true,
                                  "description": "Whether to allow squash merges for pull requests.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "archive_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                  "type": "string"
                                },
                                "archived": {
                                  "default": false,
                                  "description": "Whether the repository is archived.",
                                  "type": "boolean"
                                },
                                "assignees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                  "type": "string"
                                },
                                "blobs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                  "type": "string"
                                },
                                "branches_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                  "type": "string"
                                },
                                "clone_url": {
                                  "example": "https://github.com/octocat/Hello-World.git",
                                  "type": "string"
                                },
                                "collaborators_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                  "type": "string"
                                },
                                "comments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                  "type": "string"
                                },
                                "commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                  "type": "string"
                                },
                                "compare_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                  "type": "string"
                                },
                                "contents_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                  "type": "string"
                                },
                                "contributors_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "created_at": {
                                  "example": "2011-01-26T19:01:12Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "default_branch": {
                                  "description": "The default branch of the repository.",
                                  "example": "master",
                                  "type": "string"
                                },
                                "delete_branch_on_merge": {
                                  "default": false,
                                  "description": "Whether to delete head branches when pull requests are merged",
                                  "example": false,
                                  "type": "boolean"
                                },
                                "deployments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "description": {
                                  "example": "This your first repo!",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "disabled": {
                                  "description": "Returns whether or not this repository disabled.",
                                  "type": "boolean"
                                },
                                "downloads_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "fork": { "type": "boolean" },
                                "forks": { "type": "integer" },
                                "forks_count": {
                                  "example": 9,
                                  "type": "integer"
                                },
                                "forks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "full_name": {
                                  "example": "octocat/Hello-World",
                                  "type": "string"
                                },
                                "git_commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                  "type": "string"
                                },
                                "git_refs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                  "type": "string"
                                },
                                "git_tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                  "type": "string"
                                },
                                "git_url": {
                                  "example": "git:github.com/octocat/Hello-World.git",
                                  "type": "string"
                                },
                                "has_downloads": {
                                  "default": true,
                                  "description": "Whether downloads are enabled.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "has_issues": {
                                  "default": true,
                                  "description": "Whether issues are enabled.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "has_pages": { "type": "boolean" },
                                "has_projects": {
                                  "default": true,
                                  "description": "Whether projects are enabled.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "has_wiki": {
                                  "default": true,
                                  "description": "Whether the wiki is enabled.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "homepage": {
                                  "example": "https://github.com",
                                  "format": "uri",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "hooks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Unique identifier of the repository",
                                  "example": 42,
                                  "type": "integer"
                                },
                                "is_template": {
                                  "default": false,
                                  "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                  "example": true,
                                  "type": "boolean"
                                },
                                "issue_comment_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                  "type": "string"
                                },
                                "issue_events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                  "type": "string"
                                },
                                "issues_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                  "type": "string"
                                },
                                "keys_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                  "type": "string"
                                },
                                "labels_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                  "type": "string"
                                },
                                "language": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "languages_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "license": {
                                  "allOf": [
                                    {
                                      "description": "License Simple",
                                      "properties": {
                                        "html_url": {
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "key": {
                                          "example": "mit",
                                          "type": "string"
                                        },
                                        "name": {
                                          "example": "MIT License",
                                          "type": "string"
                                        },
                                        "node_id": {
                                          "example": "MDc6TGljZW5zZW1pdA==",
                                          "type": "string"
                                        },
                                        "spdx_id": {
                                          "example": "MIT",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "url": {
                                          "example": "https://api.github.com/licenses/mit",
                                          "format": "uri",
                                          "nullable": true,
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "key",
                                        "name",
                                        "url",
                                        "spdx_id",
                                        "node_id"
                                      ],
                                      "title": "License Simple",
                                      "type": "object"
                                    }
                                  ],
                                  "nullable": true
                                },
                                "master_branch": { "type": "string" },
                                "merges_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "milestones_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                  "type": "string"
                                },
                                "mirror_url": {
                                  "example": "git:git.example.com/octocat/Hello-World",
                                  "format": "uri",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the repository.",
                                  "example": "Team Environment",
                                  "type": "string"
                                },
                                "network_count": { "type": "integer" },
                                "node_id": {
                                  "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                  "type": "string"
                                },
                                "notifications_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                  "type": "string"
                                },
                                "open_issues": { "type": "integer" },
                                "open_issues_count": {
                                  "example": 0,
                                  "type": "integer"
                                },
                                "organization": {
                                  "allOf": [
                                    {
                                      "description": "Simple User",
                                      "nullable": true,
                                      "properties": {
                                        "avatar_url": {
                                          "example": "https://github.com/images/error/octocat_happy.gif",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "email": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "example": "https://api.github.com/users/octocat/events{/privacy}",
                                          "type": "string"
                                        },
                                        "followers_url": {
                                          "example": "https://api.github.com/users/octocat/followers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "following_url": {
                                          "example": "https://api.github.com/users/octocat/following{/other_user}",
                                          "type": "string"
                                        },
                                        "gists_url": {
                                          "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                          "type": "string"
                                        },
                                        "gravatar_id": {
                                          "example": "41d064eb2195891e12d0413f63227ea7",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "example": "https://github.com/octocat",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "example": 1,
                                          "type": "integer"
                                        },
                                        "login": {
                                          "example": "octocat",
                                          "type": "string"
                                        },
                                        "name": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "node_id": {
                                          "example": "MDQ6VXNlcjE=",
                                          "type": "string"
                                        },
                                        "organizations_url": {
                                          "example": "https://api.github.com/users/octocat/orgs",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "received_events_url": {
                                          "example": "https://api.github.com/users/octocat/received_events",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "repos_url": {
                                          "example": "https://api.github.com/users/octocat/repos",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "site_admin": { "type": "boolean" },
                                        "starred_at": {
                                          "example": "\"2020-07-09T00:17:55Z\"",
                                          "type": "string"
                                        },
                                        "starred_url": {
                                          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                          "type": "string"
                                        },
                                        "subscriptions_url": {
                                          "example": "https://api.github.com/users/octocat/subscriptions",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "type": {
                                          "example": "User",
                                          "type": "string"
                                        },
                                        "url": {
                                          "example": "https://api.github.com/users/octocat",
                                          "format": "uri",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "avatar_url",
                                        "events_url",
                                        "followers_url",
                                        "following_url",
                                        "gists_url",
                                        "gravatar_id",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "login",
                                        "organizations_url",
                                        "received_events_url",
                                        "repos_url",
                                        "site_admin",
                                        "starred_url",
                                        "subscriptions_url",
                                        "type",
                                        "url"
                                      ],
                                      "title": "Simple User",
                                      "type": "object"
                                    }
                                  ],
                                  "nullable": true
                                },
                                "owner": {
                                  "description": "Simple User",
                                  "nullable": true,
                                  "properties": {
                                    "avatar_url": {
                                      "example": "https://github.com/images/error/octocat_happy.gif",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "email": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "example": "https://api.github.com/users/octocat/events{/privacy}",
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "example": "https://api.github.com/users/octocat/followers",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "example": "https://api.github.com/users/octocat/following{/other_user}",
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "example": "41d064eb2195891e12d0413f63227ea7",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "example": "https://github.com/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "id": { "example": 1, "type": "integer" },
                                    "login": {
                                      "example": "octocat",
                                      "type": "string"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "example": "MDQ6VXNlcjE=",
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "example": "https://api.github.com/users/octocat/orgs",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "example": "https://api.github.com/users/octocat/received_events",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "example": "https://api.github.com/users/octocat/repos",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "site_admin": { "type": "boolean" },
                                    "starred_at": {
                                      "example": "\"2020-07-09T00:17:55Z\"",
                                      "type": "string"
                                    },
                                    "starred_url": {
                                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "example": "https://api.github.com/users/octocat/subscriptions",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": {
                                      "example": "User",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/users/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "title": "Simple User",
                                  "type": "object"
                                },
                                "permissions": {
                                  "properties": {
                                    "admin": { "type": "boolean" },
                                    "maintain": { "type": "boolean" },
                                    "pull": { "type": "boolean" },
                                    "push": { "type": "boolean" },
                                    "triage": { "type": "boolean" }
                                  },
                                  "required": ["admin", "pull", "push"],
                                  "type": "object"
                                },
                                "private": {
                                  "default": false,
                                  "description": "Whether the repository is private or public.",
                                  "type": "boolean"
                                },
                                "pulls_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                  "type": "string"
                                },
                                "pushed_at": {
                                  "example": "2011-01-26T19:06:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "releases_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                  "type": "string"
                                },
                                "size": { "example": 108, "type": "integer" },
                                "ssh_url": {
                                  "example": "git@github.com:octocat/Hello-World.git",
                                  "type": "string"
                                },
                                "stargazers_count": {
                                  "example": 80,
                                  "type": "integer"
                                },
                                "stargazers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:42Z\"",
                                  "type": "string"
                                },
                                "statuses_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                  "type": "string"
                                },
                                "subscribers_count": { "type": "integer" },
                                "subscribers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "subscription_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "svn_url": {
                                  "example": "https://svn.github.com/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "teams_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "temp_clone_token": { "type": "string" },
                                "template_repository": {
                                  "nullable": true,
                                  "properties": {
                                    "allow_auto_merge": { "type": "boolean" },
                                    "allow_merge_commit": { "type": "boolean" },
                                    "allow_rebase_merge": { "type": "boolean" },
                                    "allow_squash_merge": { "type": "boolean" },
                                    "archive_url": { "type": "string" },
                                    "archived": { "type": "boolean" },
                                    "assignees_url": { "type": "string" },
                                    "blobs_url": { "type": "string" },
                                    "branches_url": { "type": "string" },
                                    "clone_url": { "type": "string" },
                                    "collaborators_url": { "type": "string" },
                                    "comments_url": { "type": "string" },
                                    "commits_url": { "type": "string" },
                                    "compare_url": { "type": "string" },
                                    "contents_url": { "type": "string" },
                                    "contributors_url": { "type": "string" },
                                    "created_at": { "type": "string" },
                                    "default_branch": { "type": "string" },
                                    "delete_branch_on_merge": {
                                      "type": "boolean"
                                    },
                                    "deployments_url": { "type": "string" },
                                    "description": { "type": "string" },
                                    "disabled": { "type": "boolean" },
                                    "downloads_url": { "type": "string" },
                                    "events_url": { "type": "string" },
                                    "fork": { "type": "boolean" },
                                    "forks_count": { "type": "integer" },
                                    "forks_url": { "type": "string" },
                                    "full_name": { "type": "string" },
                                    "git_commits_url": { "type": "string" },
                                    "git_refs_url": { "type": "string" },
                                    "git_tags_url": { "type": "string" },
                                    "git_url": { "type": "string" },
                                    "has_downloads": { "type": "boolean" },
                                    "has_issues": { "type": "boolean" },
                                    "has_pages": { "type": "boolean" },
                                    "has_projects": { "type": "boolean" },
                                    "has_wiki": { "type": "boolean" },
                                    "homepage": { "type": "string" },
                                    "hooks_url": { "type": "string" },
                                    "html_url": { "type": "string" },
                                    "id": { "type": "integer" },
                                    "is_template": { "type": "boolean" },
                                    "issue_comment_url": { "type": "string" },
                                    "issue_events_url": { "type": "string" },
                                    "issues_url": { "type": "string" },
                                    "keys_url": { "type": "string" },
                                    "labels_url": { "type": "string" },
                                    "language": { "type": "string" },
                                    "languages_url": { "type": "string" },
                                    "merges_url": { "type": "string" },
                                    "milestones_url": { "type": "string" },
                                    "mirror_url": { "type": "string" },
                                    "name": { "type": "string" },
                                    "network_count": { "type": "integer" },
                                    "node_id": { "type": "string" },
                                    "notifications_url": { "type": "string" },
                                    "open_issues_count": { "type": "integer" },
                                    "owner": {
                                      "properties": {
                                        "avatar_url": { "type": "string" },
                                        "events_url": { "type": "string" },
                                        "followers_url": { "type": "string" },
                                        "following_url": { "type": "string" },
                                        "gists_url": { "type": "string" },
                                        "gravatar_id": { "type": "string" },
                                        "html_url": { "type": "string" },
                                        "id": { "type": "integer" },
                                        "login": { "type": "string" },
                                        "node_id": { "type": "string" },
                                        "organizations_url": {
                                          "type": "string"
                                        },
                                        "received_events_url": {
                                          "type": "string"
                                        },
                                        "repos_url": { "type": "string" },
                                        "site_admin": { "type": "boolean" },
                                        "starred_url": { "type": "string" },
                                        "subscriptions_url": {
                                          "type": "string"
                                        },
                                        "type": { "type": "string" },
                                        "url": { "type": "string" }
                                      },
                                      "type": "object"
                                    },
                                    "permissions": {
                                      "properties": {
                                        "admin": { "type": "boolean" },
                                        "maintain": { "type": "boolean" },
                                        "pull": { "type": "boolean" },
                                        "push": { "type": "boolean" },
                                        "triage": { "type": "boolean" }
                                      },
                                      "type": "object"
                                    },
                                    "private": { "type": "boolean" },
                                    "pulls_url": { "type": "string" },
                                    "pushed_at": { "type": "string" },
                                    "releases_url": { "type": "string" },
                                    "size": { "type": "integer" },
                                    "ssh_url": { "type": "string" },
                                    "stargazers_count": { "type": "integer" },
                                    "stargazers_url": { "type": "string" },
                                    "statuses_url": { "type": "string" },
                                    "subscribers_count": { "type": "integer" },
                                    "subscribers_url": { "type": "string" },
                                    "subscription_url": { "type": "string" },
                                    "svn_url": { "type": "string" },
                                    "tags_url": { "type": "string" },
                                    "teams_url": { "type": "string" },
                                    "temp_clone_token": { "type": "string" },
                                    "topics": {
                                      "items": { "type": "string" },
                                      "type": "array"
                                    },
                                    "trees_url": { "type": "string" },
                                    "updated_at": { "type": "string" },
                                    "url": { "type": "string" },
                                    "visibility": { "type": "string" },
                                    "watchers_count": { "type": "integer" }
                                  },
                                  "type": "object"
                                },
                                "topics": {
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "trees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                  "type": "string"
                                },
                                "updated_at": {
                                  "example": "2011-01-26T19:14:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/repos/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "visibility": {
                                  "default": "public",
                                  "description": "The repository visibility: public, private, or internal.",
                                  "type": "string"
                                },
                                "watchers": { "type": "integer" },
                                "watchers_count": {
                                  "example": 80,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "archive_url",
                                "assignees_url",
                                "blobs_url",
                                "branches_url",
                                "collaborators_url",
                                "comments_url",
                                "commits_url",
                                "compare_url",
                                "contents_url",
                                "contributors_url",
                                "deployments_url",
                                "description",
                                "downloads_url",
                                "events_url",
                                "fork",
                                "forks_url",
                                "full_name",
                                "git_commits_url",
                                "git_refs_url",
                                "git_tags_url",
                                "hooks_url",
                                "html_url",
                                "id",
                                "node_id",
                                "issue_comment_url",
                                "issue_events_url",
                                "issues_url",
                                "keys_url",
                                "labels_url",
                                "languages_url",
                                "merges_url",
                                "milestones_url",
                                "name",
                                "notifications_url",
                                "owner",
                                "private",
                                "pulls_url",
                                "releases_url",
                                "stargazers_url",
                                "statuses_url",
                                "subscribers_url",
                                "subscription_url",
                                "tags_url",
                                "teams_url",
                                "trees_url",
                                "url",
                                "clone_url",
                                "default_branch",
                                "forks",
                                "forks_count",
                                "git_url",
                                "has_downloads",
                                "has_issues",
                                "has_projects",
                                "has_wiki",
                                "has_pages",
                                "homepage",
                                "language",
                                "archived",
                                "disabled",
                                "mirror_url",
                                "open_issues",
                                "open_issues_count",
                                "license",
                                "pushed_at",
                                "size",
                                "ssh_url",
                                "stargazers_count",
                                "svn_url",
                                "watchers",
                                "watchers_count",
                                "created_at",
                                "updated_at"
                              ],
                              "title": "Repository",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "state": { "example": "pending", "type": "string" },
                          "updated_at": {
                            "example": "2015-07-06T15:33:38-07:00",
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/orgs/octo-org/migrations/79",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "node_id",
                          "owner",
                          "guid",
                          "state",
                          "lock_repositories",
                          "exclude_attachments",
                          "repositories",
                          "url",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Migration",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              }
            },
            "summary": "List user migrations",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "users"
            },
            "x-octokit": {}
          },
          "post": {
            "deprecated": null,
            "description": "Initiates the generation of a user migration archive.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#start-a-user-migration"
            },
            "operationId": "migrations/start-for-authenticated-user",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "exclude": {
                        "description": "Exclude attributes from the API response to improve performance",
                        "example": ["repositories"],
                        "items": {
                          "description": "Allowed values that can be passed to the exclude param.",
                          "enum": ["repositories"],
                          "example": "repositories",
                          "type": "string"
                        },
                        "readOnly": false,
                        "type": "array"
                      },
                      "exclude_attachments": {
                        "description": "Do not include attachments in the migration",
                        "example": true,
                        "readOnly": false,
                        "type": "boolean"
                      },
                      "lock_repositories": {
                        "description": "Lock the repositories being migrated at the start of the migration",
                        "example": true,
                        "readOnly": false,
                        "type": "boolean"
                      },
                      "repositories": {
                        "items": {
                          "description": "Repository path, owner and name",
                          "example": "acme/widgets",
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": ["repositories"],
                    "type": "object"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2015-07-06T15:33:38-07:00",
                          "exclude_attachments": false,
                          "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "id": 79,
                          "lock_repositories": true,
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                          "owner": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "repositories": [
                            {
                              "allow_auto_merge": false,
                              "allow_merge_commit": true,
                              "allow_rebase_merge": true,
                              "allow_squash_merge": true,
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "archived": false,
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "clone_url": "https://github.com/octocat/Hello-World.git",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                              "created_at": "2011-01-26T19:01:12Z",
                              "default_branch": "master",
                              "delete_branch_on_merge": true,
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                              "description": "This your first repo!",
                              "disabled": false,
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                              "fork": false,
                              "forks": 1,
                              "forks_count": 9,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                              "full_name": "octocat/Hello-World",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World.git",
                              "has_downloads": true,
                              "has_issues": true,
                              "has_pages": false,
                              "has_projects": true,
                              "has_wiki": true,
                              "homepage": "https://github.com",
                              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                              "html_url": "https://github.com/octocat/Hello-World",
                              "id": 1296269,
                              "is_template": true,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "language": null,
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                              "license": {
                                "html_url": "https://api.github.com/licenses/mit",
                                "key": "mit",
                                "name": "MIT License",
                                "node_id": "MDc6TGljZW5zZW1pdA==",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit"
                              },
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "mirror_url": "git:git.example.com/octocat/Hello-World",
                              "name": "Hello-World",
                              "network_count": 0,
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "open_issues": 1,
                              "open_issues_count": 0,
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "gravatar_id": "",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "permissions": {
                                "admin": false,
                                "pull": true,
                                "push": false
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "pushed_at": "2011-01-26T19:06:43Z",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "size": 108,
                              "ssh_url": "git@github.com:octocat/Hello-World.git",
                              "stargazers_count": 80,
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "subscribers_count": 42,
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                              "svn_url": "https://svn.github.com/octocat/Hello-World",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                              "template_repository": null,
                              "topics": ["octocat", "atom", "electron", "api"],
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "updated_at": "2011-01-26T19:14:43Z",
                              "url": "https://api.github.com/repos/octocat/Hello-World",
                              "visibility": "public",
                              "watchers": 1,
                              "watchers_count": 80
                            }
                          ],
                          "state": "pending",
                          "updated_at": "2015-07-06T15:33:38-07:00",
                          "url": "https://api.github.com/orgs/octo-org/migrations/79"
                        }
                      }
                    },
                    "schema": {
                      "description": "A migration.",
                      "properties": {
                        "archive_url": { "format": "uri", "type": "string" },
                        "created_at": {
                          "example": "2015-07-06T15:33:38-07:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "exclude": { "items": {}, "type": "array" },
                        "exclude_attachments": { "type": "boolean" },
                        "guid": {
                          "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "type": "string"
                        },
                        "id": { "example": 79, "type": "integer" },
                        "lock_repositories": {
                          "example": true,
                          "type": "boolean"
                        },
                        "node_id": { "type": "string" },
                        "owner": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "repositories": {
                          "items": {
                            "description": "A git repository",
                            "properties": {
                              "allow_auto_merge": {
                                "default": false,
                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                "example": false,
                                "type": "boolean"
                              },
                              "allow_merge_commit": {
                                "default": true,
                                "description": "Whether to allow merge commits for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "allow_rebase_merge": {
                                "default": true,
                                "description": "Whether to allow rebase merges for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "allow_squash_merge": {
                                "default": true,
                                "description": "Whether to allow squash merges for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "archive_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "type": "string"
                              },
                              "archived": {
                                "default": false,
                                "description": "Whether the repository is archived.",
                                "type": "boolean"
                              },
                              "assignees_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "type": "string"
                              },
                              "blobs_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "type": "string"
                              },
                              "branches_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "type": "string"
                              },
                              "clone_url": {
                                "example": "https://github.com/octocat/Hello-World.git",
                                "type": "string"
                              },
                              "collaborators_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "type": "string"
                              },
                              "comments_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "type": "string"
                              },
                              "commits_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "type": "string"
                              },
                              "compare_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "type": "string"
                              },
                              "contents_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "type": "string"
                              },
                              "contributors_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                "format": "uri",
                                "type": "string"
                              },
                              "created_at": {
                                "example": "2011-01-26T19:01:12Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "example": "master",
                                "type": "string"
                              },
                              "delete_branch_on_merge": {
                                "default": false,
                                "description": "Whether to delete head branches when pull requests are merged",
                                "example": false,
                                "type": "boolean"
                              },
                              "deployments_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                "format": "uri",
                                "type": "string"
                              },
                              "description": {
                                "example": "This your first repo!",
                                "nullable": true,
                                "type": "string"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                "format": "uri",
                                "type": "string"
                              },
                              "events_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                "format": "uri",
                                "type": "string"
                              },
                              "fork": { "type": "boolean" },
                              "forks": { "type": "integer" },
                              "forks_count": {
                                "example": 9,
                                "type": "integer"
                              },
                              "forks_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                "format": "uri",
                                "type": "string"
                              },
                              "full_name": {
                                "example": "octocat/Hello-World",
                                "type": "string"
                              },
                              "git_commits_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "type": "string"
                              },
                              "git_refs_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "type": "string"
                              },
                              "git_tags_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "type": "string"
                              },
                              "git_url": {
                                "example": "git:github.com/octocat/Hello-World.git",
                                "type": "string"
                              },
                              "has_downloads": {
                                "default": true,
                                "description": "Whether downloads are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_issues": {
                                "default": true,
                                "description": "Whether issues are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_pages": { "type": "boolean" },
                              "has_projects": {
                                "default": true,
                                "description": "Whether projects are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_wiki": {
                                "default": true,
                                "description": "Whether the wiki is enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "homepage": {
                                "example": "https://github.com",
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "hooks_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "format": "uri",
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "example": 42,
                                "type": "integer"
                              },
                              "is_template": {
                                "default": false,
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "example": true,
                                "type": "boolean"
                              },
                              "issue_comment_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "type": "string"
                              },
                              "issue_events_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "type": "string"
                              },
                              "issues_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "type": "string"
                              },
                              "keys_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "type": "string"
                              },
                              "labels_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "type": "string"
                              },
                              "language": {
                                "nullable": true,
                                "type": "string"
                              },
                              "languages_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                "format": "uri",
                                "type": "string"
                              },
                              "license": {
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "properties": {
                                      "html_url": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "key": {
                                        "example": "mit",
                                        "type": "string"
                                      },
                                      "name": {
                                        "example": "MIT License",
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDc6TGljZW5zZW1pdA==",
                                        "type": "string"
                                      },
                                      "spdx_id": {
                                        "example": "MIT",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/licenses/mit",
                                        "format": "uri",
                                        "nullable": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "title": "License Simple",
                                    "type": "object"
                                  }
                                ],
                                "nullable": true
                              },
                              "master_branch": { "type": "string" },
                              "merges_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                "format": "uri",
                                "type": "string"
                              },
                              "milestones_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "type": "string"
                              },
                              "mirror_url": {
                                "example": "git:git.example.com/octocat/Hello-World",
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "example": "Team Environment",
                                "type": "string"
                              },
                              "network_count": { "type": "integer" },
                              "node_id": {
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "type": "string"
                              },
                              "notifications_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "type": "string"
                              },
                              "open_issues": { "type": "integer" },
                              "open_issues_count": {
                                "example": 0,
                                "type": "integer"
                              },
                              "organization": {
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  }
                                ],
                                "nullable": true
                              },
                              "owner": {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              },
                              "permissions": {
                                "properties": {
                                  "admin": { "type": "boolean" },
                                  "maintain": { "type": "boolean" },
                                  "pull": { "type": "boolean" },
                                  "push": { "type": "boolean" },
                                  "triage": { "type": "boolean" }
                                },
                                "required": ["admin", "pull", "push"],
                                "type": "object"
                              },
                              "private": {
                                "default": false,
                                "description": "Whether the repository is private or public.",
                                "type": "boolean"
                              },
                              "pulls_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "type": "string"
                              },
                              "pushed_at": {
                                "example": "2011-01-26T19:06:43Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "releases_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "type": "string"
                              },
                              "size": { "example": 108, "type": "integer" },
                              "ssh_url": {
                                "example": "git@github.com:octocat/Hello-World.git",
                                "type": "string"
                              },
                              "stargazers_count": {
                                "example": 80,
                                "type": "integer"
                              },
                              "stargazers_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                "format": "uri",
                                "type": "string"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:42Z\"",
                                "type": "string"
                              },
                              "statuses_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "type": "string"
                              },
                              "subscribers_count": { "type": "integer" },
                              "subscribers_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                "format": "uri",
                                "type": "string"
                              },
                              "subscription_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                "format": "uri",
                                "type": "string"
                              },
                              "svn_url": {
                                "example": "https://svn.github.com/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "tags_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                "format": "uri",
                                "type": "string"
                              },
                              "teams_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                "format": "uri",
                                "type": "string"
                              },
                              "temp_clone_token": { "type": "string" },
                              "template_repository": {
                                "nullable": true,
                                "properties": {
                                  "allow_auto_merge": { "type": "boolean" },
                                  "allow_merge_commit": { "type": "boolean" },
                                  "allow_rebase_merge": { "type": "boolean" },
                                  "allow_squash_merge": { "type": "boolean" },
                                  "archive_url": { "type": "string" },
                                  "archived": { "type": "boolean" },
                                  "assignees_url": { "type": "string" },
                                  "blobs_url": { "type": "string" },
                                  "branches_url": { "type": "string" },
                                  "clone_url": { "type": "string" },
                                  "collaborators_url": { "type": "string" },
                                  "comments_url": { "type": "string" },
                                  "commits_url": { "type": "string" },
                                  "compare_url": { "type": "string" },
                                  "contents_url": { "type": "string" },
                                  "contributors_url": { "type": "string" },
                                  "created_at": { "type": "string" },
                                  "default_branch": { "type": "string" },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": { "type": "string" },
                                  "description": { "type": "string" },
                                  "disabled": { "type": "boolean" },
                                  "downloads_url": { "type": "string" },
                                  "events_url": { "type": "string" },
                                  "fork": { "type": "boolean" },
                                  "forks_count": { "type": "integer" },
                                  "forks_url": { "type": "string" },
                                  "full_name": { "type": "string" },
                                  "git_commits_url": { "type": "string" },
                                  "git_refs_url": { "type": "string" },
                                  "git_tags_url": { "type": "string" },
                                  "git_url": { "type": "string" },
                                  "has_downloads": { "type": "boolean" },
                                  "has_issues": { "type": "boolean" },
                                  "has_pages": { "type": "boolean" },
                                  "has_projects": { "type": "boolean" },
                                  "has_wiki": { "type": "boolean" },
                                  "homepage": { "type": "string" },
                                  "hooks_url": { "type": "string" },
                                  "html_url": { "type": "string" },
                                  "id": { "type": "integer" },
                                  "is_template": { "type": "boolean" },
                                  "issue_comment_url": { "type": "string" },
                                  "issue_events_url": { "type": "string" },
                                  "issues_url": { "type": "string" },
                                  "keys_url": { "type": "string" },
                                  "labels_url": { "type": "string" },
                                  "language": { "type": "string" },
                                  "languages_url": { "type": "string" },
                                  "merges_url": { "type": "string" },
                                  "milestones_url": { "type": "string" },
                                  "mirror_url": { "type": "string" },
                                  "name": { "type": "string" },
                                  "network_count": { "type": "integer" },
                                  "node_id": { "type": "string" },
                                  "notifications_url": { "type": "string" },
                                  "open_issues_count": { "type": "integer" },
                                  "owner": {
                                    "properties": {
                                      "avatar_url": { "type": "string" },
                                      "events_url": { "type": "string" },
                                      "followers_url": { "type": "string" },
                                      "following_url": { "type": "string" },
                                      "gists_url": { "type": "string" },
                                      "gravatar_id": { "type": "string" },
                                      "html_url": { "type": "string" },
                                      "id": { "type": "integer" },
                                      "login": { "type": "string" },
                                      "node_id": { "type": "string" },
                                      "organizations_url": { "type": "string" },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": { "type": "string" },
                                      "site_admin": { "type": "boolean" },
                                      "starred_url": { "type": "string" },
                                      "subscriptions_url": { "type": "string" },
                                      "type": { "type": "string" },
                                      "url": { "type": "string" }
                                    },
                                    "type": "object"
                                  },
                                  "permissions": {
                                    "properties": {
                                      "admin": { "type": "boolean" },
                                      "maintain": { "type": "boolean" },
                                      "pull": { "type": "boolean" },
                                      "push": { "type": "boolean" },
                                      "triage": { "type": "boolean" }
                                    },
                                    "type": "object"
                                  },
                                  "private": { "type": "boolean" },
                                  "pulls_url": { "type": "string" },
                                  "pushed_at": { "type": "string" },
                                  "releases_url": { "type": "string" },
                                  "size": { "type": "integer" },
                                  "ssh_url": { "type": "string" },
                                  "stargazers_count": { "type": "integer" },
                                  "stargazers_url": { "type": "string" },
                                  "statuses_url": { "type": "string" },
                                  "subscribers_count": { "type": "integer" },
                                  "subscribers_url": { "type": "string" },
                                  "subscription_url": { "type": "string" },
                                  "svn_url": { "type": "string" },
                                  "tags_url": { "type": "string" },
                                  "teams_url": { "type": "string" },
                                  "temp_clone_token": { "type": "string" },
                                  "topics": {
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "trees_url": { "type": "string" },
                                  "updated_at": { "type": "string" },
                                  "url": { "type": "string" },
                                  "visibility": { "type": "string" },
                                  "watchers_count": { "type": "integer" }
                                },
                                "type": "object"
                              },
                              "topics": {
                                "items": { "type": "string" },
                                "type": "array"
                              },
                              "trees_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "type": "string"
                              },
                              "updated_at": {
                                "example": "2011-01-26T19:14:43Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/repos/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "visibility": {
                                "default": "public",
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string"
                              },
                              "watchers": { "type": "integer" },
                              "watchers_count": {
                                "example": 80,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "title": "Repository",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "state": { "example": "pending", "type": "string" },
                        "updated_at": {
                          "example": "2015-07-06T15:33:38-07:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/octo-org/migrations/79",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "node_id",
                        "owner",
                        "guid",
                        "state",
                        "lock_repositories",
                        "exclude_attachments",
                        "repositories",
                        "url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Migration",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "422": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Validation Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "errors": {
                          "items": {
                            "properties": {
                              "code": { "type": "string" },
                              "field": { "type": "string" },
                              "index": { "type": "integer" },
                              "message": { "type": "string" },
                              "resource": { "type": "string" },
                              "value": {
                                "oneOf": [
                                  { "nullable": true, "type": "string" },
                                  { "nullable": true, "type": "integer" },
                                  {
                                    "items": { "type": "string" },
                                    "nullable": true,
                                    "type": "array"
                                  }
                                ]
                              }
                            },
                            "required": ["code"],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "message": { "type": "string" }
                      },
                      "required": ["message", "documentation_url"],
                      "title": "Validation Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Validation failed"
              }
            },
            "summary": "Start a user migration",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/migrations/{migration_id}",
        {
          "get": {
            "deprecated": null,
            "description": "Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:\n\n*   `pending` - the migration hasn't started yet.\n*   `exporting` - the migration is in progress.\n*   `exported` - the migration finished successfully.\n*   `failed` - the migration failed.\n\nOnce the migration has been `exported` you can [download the migration archive](https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#get-a-user-migration-status"
            },
            "operationId": "migrations/get-status-for-authenticated-user",
            "parameters": [
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "in": "query",
                "name": "exclude",
                "required": false,
                "schema": { "items": { "type": "string" }, "type": "array" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2015-07-06T15:33:38-07:00",
                          "exclude_attachments": false,
                          "guid": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "id": 79,
                          "lock_repositories": true,
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                          "owner": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "repositories": [
                            {
                              "allow_auto_merge": false,
                              "allow_merge_commit": true,
                              "allow_rebase_merge": true,
                              "allow_squash_merge": true,
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "archived": false,
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "clone_url": "https://github.com/octocat/Hello-World.git",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                              "created_at": "2011-01-26T19:01:12Z",
                              "default_branch": "master",
                              "delete_branch_on_merge": true,
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                              "description": "This your first repo!",
                              "disabled": false,
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                              "fork": false,
                              "forks": 1,
                              "forks_count": 9,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                              "full_name": "octocat/Hello-World",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World.git",
                              "has_downloads": true,
                              "has_issues": true,
                              "has_pages": false,
                              "has_projects": true,
                              "has_wiki": true,
                              "homepage": "https://github.com",
                              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                              "html_url": "https://github.com/octocat/Hello-World",
                              "id": 1296269,
                              "is_template": true,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "language": null,
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                              "license": {
                                "html_url": "https://api.github.com/licenses/mit",
                                "key": "mit",
                                "name": "MIT License",
                                "node_id": "MDc6TGljZW5zZW1pdA==",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit"
                              },
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "mirror_url": "git:git.example.com/octocat/Hello-World",
                              "name": "Hello-World",
                              "network_count": 0,
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "open_issues": 1,
                              "open_issues_count": 0,
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "gravatar_id": "",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "permissions": {
                                "admin": false,
                                "pull": true,
                                "push": false
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "pushed_at": "2011-01-26T19:06:43Z",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "size": 108,
                              "ssh_url": "git@github.com:octocat/Hello-World.git",
                              "stargazers_count": 80,
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "subscribers_count": 42,
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                              "svn_url": "https://svn.github.com/octocat/Hello-World",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                              "template_repository": null,
                              "topics": ["octocat", "atom", "electron", "api"],
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "updated_at": "2011-01-26T19:14:43Z",
                              "url": "https://api.github.com/repos/octocat/Hello-World",
                              "visibility": "public",
                              "watchers": 1,
                              "watchers_count": 80
                            }
                          ],
                          "state": "exported",
                          "updated_at": "2015-07-06T15:33:38-07:00",
                          "url": "https://api.github.com/orgs/octo-org/migrations/79"
                        }
                      }
                    },
                    "schema": {
                      "description": "A migration.",
                      "properties": {
                        "archive_url": { "format": "uri", "type": "string" },
                        "created_at": {
                          "example": "2015-07-06T15:33:38-07:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "exclude": { "items": {}, "type": "array" },
                        "exclude_attachments": { "type": "boolean" },
                        "guid": {
                          "example": "0b989ba4-242f-11e5-81e1-c7b6966d2516",
                          "type": "string"
                        },
                        "id": { "example": 79, "type": "integer" },
                        "lock_repositories": {
                          "example": true,
                          "type": "boolean"
                        },
                        "node_id": { "type": "string" },
                        "owner": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "repositories": {
                          "items": {
                            "description": "A git repository",
                            "properties": {
                              "allow_auto_merge": {
                                "default": false,
                                "description": "Whether to allow Auto-merge to be used on pull requests.",
                                "example": false,
                                "type": "boolean"
                              },
                              "allow_merge_commit": {
                                "default": true,
                                "description": "Whether to allow merge commits for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "allow_rebase_merge": {
                                "default": true,
                                "description": "Whether to allow rebase merges for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "allow_squash_merge": {
                                "default": true,
                                "description": "Whether to allow squash merges for pull requests.",
                                "example": true,
                                "type": "boolean"
                              },
                              "archive_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "type": "string"
                              },
                              "archived": {
                                "default": false,
                                "description": "Whether the repository is archived.",
                                "type": "boolean"
                              },
                              "assignees_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "type": "string"
                              },
                              "blobs_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "type": "string"
                              },
                              "branches_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "type": "string"
                              },
                              "clone_url": {
                                "example": "https://github.com/octocat/Hello-World.git",
                                "type": "string"
                              },
                              "collaborators_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "type": "string"
                              },
                              "comments_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "type": "string"
                              },
                              "commits_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "type": "string"
                              },
                              "compare_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "type": "string"
                              },
                              "contents_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "type": "string"
                              },
                              "contributors_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                "format": "uri",
                                "type": "string"
                              },
                              "created_at": {
                                "example": "2011-01-26T19:01:12Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "example": "master",
                                "type": "string"
                              },
                              "delete_branch_on_merge": {
                                "default": false,
                                "description": "Whether to delete head branches when pull requests are merged",
                                "example": false,
                                "type": "boolean"
                              },
                              "deployments_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                "format": "uri",
                                "type": "string"
                              },
                              "description": {
                                "example": "This your first repo!",
                                "nullable": true,
                                "type": "string"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                "format": "uri",
                                "type": "string"
                              },
                              "events_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                "format": "uri",
                                "type": "string"
                              },
                              "fork": { "type": "boolean" },
                              "forks": { "type": "integer" },
                              "forks_count": {
                                "example": 9,
                                "type": "integer"
                              },
                              "forks_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                "format": "uri",
                                "type": "string"
                              },
                              "full_name": {
                                "example": "octocat/Hello-World",
                                "type": "string"
                              },
                              "git_commits_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "type": "string"
                              },
                              "git_refs_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "type": "string"
                              },
                              "git_tags_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "type": "string"
                              },
                              "git_url": {
                                "example": "git:github.com/octocat/Hello-World.git",
                                "type": "string"
                              },
                              "has_downloads": {
                                "default": true,
                                "description": "Whether downloads are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_issues": {
                                "default": true,
                                "description": "Whether issues are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_pages": { "type": "boolean" },
                              "has_projects": {
                                "default": true,
                                "description": "Whether projects are enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "has_wiki": {
                                "default": true,
                                "description": "Whether the wiki is enabled.",
                                "example": true,
                                "type": "boolean"
                              },
                              "homepage": {
                                "example": "https://github.com",
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "hooks_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "format": "uri",
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "example": 42,
                                "type": "integer"
                              },
                              "is_template": {
                                "default": false,
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "example": true,
                                "type": "boolean"
                              },
                              "issue_comment_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "type": "string"
                              },
                              "issue_events_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "type": "string"
                              },
                              "issues_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "type": "string"
                              },
                              "keys_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "type": "string"
                              },
                              "labels_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "type": "string"
                              },
                              "language": {
                                "nullable": true,
                                "type": "string"
                              },
                              "languages_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                "format": "uri",
                                "type": "string"
                              },
                              "license": {
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "properties": {
                                      "html_url": {
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "key": {
                                        "example": "mit",
                                        "type": "string"
                                      },
                                      "name": {
                                        "example": "MIT License",
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDc6TGljZW5zZW1pdA==",
                                        "type": "string"
                                      },
                                      "spdx_id": {
                                        "example": "MIT",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/licenses/mit",
                                        "format": "uri",
                                        "nullable": true,
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "title": "License Simple",
                                    "type": "object"
                                  }
                                ],
                                "nullable": true
                              },
                              "master_branch": { "type": "string" },
                              "merges_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                "format": "uri",
                                "type": "string"
                              },
                              "milestones_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "type": "string"
                              },
                              "mirror_url": {
                                "example": "git:git.example.com/octocat/Hello-World",
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "example": "Team Environment",
                                "type": "string"
                              },
                              "network_count": { "type": "integer" },
                              "node_id": {
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "type": "string"
                              },
                              "notifications_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "type": "string"
                              },
                              "open_issues": { "type": "integer" },
                              "open_issues_count": {
                                "example": 0,
                                "type": "integer"
                              },
                              "organization": {
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  }
                                ],
                                "nullable": true
                              },
                              "owner": {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              },
                              "permissions": {
                                "properties": {
                                  "admin": { "type": "boolean" },
                                  "maintain": { "type": "boolean" },
                                  "pull": { "type": "boolean" },
                                  "push": { "type": "boolean" },
                                  "triage": { "type": "boolean" }
                                },
                                "required": ["admin", "pull", "push"],
                                "type": "object"
                              },
                              "private": {
                                "default": false,
                                "description": "Whether the repository is private or public.",
                                "type": "boolean"
                              },
                              "pulls_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "type": "string"
                              },
                              "pushed_at": {
                                "example": "2011-01-26T19:06:43Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "releases_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "type": "string"
                              },
                              "size": { "example": 108, "type": "integer" },
                              "ssh_url": {
                                "example": "git@github.com:octocat/Hello-World.git",
                                "type": "string"
                              },
                              "stargazers_count": {
                                "example": 80,
                                "type": "integer"
                              },
                              "stargazers_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                "format": "uri",
                                "type": "string"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:42Z\"",
                                "type": "string"
                              },
                              "statuses_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "type": "string"
                              },
                              "subscribers_count": { "type": "integer" },
                              "subscribers_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                "format": "uri",
                                "type": "string"
                              },
                              "subscription_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                "format": "uri",
                                "type": "string"
                              },
                              "svn_url": {
                                "example": "https://svn.github.com/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "tags_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                "format": "uri",
                                "type": "string"
                              },
                              "teams_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                "format": "uri",
                                "type": "string"
                              },
                              "temp_clone_token": { "type": "string" },
                              "template_repository": {
                                "nullable": true,
                                "properties": {
                                  "allow_auto_merge": { "type": "boolean" },
                                  "allow_merge_commit": { "type": "boolean" },
                                  "allow_rebase_merge": { "type": "boolean" },
                                  "allow_squash_merge": { "type": "boolean" },
                                  "archive_url": { "type": "string" },
                                  "archived": { "type": "boolean" },
                                  "assignees_url": { "type": "string" },
                                  "blobs_url": { "type": "string" },
                                  "branches_url": { "type": "string" },
                                  "clone_url": { "type": "string" },
                                  "collaborators_url": { "type": "string" },
                                  "comments_url": { "type": "string" },
                                  "commits_url": { "type": "string" },
                                  "compare_url": { "type": "string" },
                                  "contents_url": { "type": "string" },
                                  "contributors_url": { "type": "string" },
                                  "created_at": { "type": "string" },
                                  "default_branch": { "type": "string" },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": { "type": "string" },
                                  "description": { "type": "string" },
                                  "disabled": { "type": "boolean" },
                                  "downloads_url": { "type": "string" },
                                  "events_url": { "type": "string" },
                                  "fork": { "type": "boolean" },
                                  "forks_count": { "type": "integer" },
                                  "forks_url": { "type": "string" },
                                  "full_name": { "type": "string" },
                                  "git_commits_url": { "type": "string" },
                                  "git_refs_url": { "type": "string" },
                                  "git_tags_url": { "type": "string" },
                                  "git_url": { "type": "string" },
                                  "has_downloads": { "type": "boolean" },
                                  "has_issues": { "type": "boolean" },
                                  "has_pages": { "type": "boolean" },
                                  "has_projects": { "type": "boolean" },
                                  "has_wiki": { "type": "boolean" },
                                  "homepage": { "type": "string" },
                                  "hooks_url": { "type": "string" },
                                  "html_url": { "type": "string" },
                                  "id": { "type": "integer" },
                                  "is_template": { "type": "boolean" },
                                  "issue_comment_url": { "type": "string" },
                                  "issue_events_url": { "type": "string" },
                                  "issues_url": { "type": "string" },
                                  "keys_url": { "type": "string" },
                                  "labels_url": { "type": "string" },
                                  "language": { "type": "string" },
                                  "languages_url": { "type": "string" },
                                  "merges_url": { "type": "string" },
                                  "milestones_url": { "type": "string" },
                                  "mirror_url": { "type": "string" },
                                  "name": { "type": "string" },
                                  "network_count": { "type": "integer" },
                                  "node_id": { "type": "string" },
                                  "notifications_url": { "type": "string" },
                                  "open_issues_count": { "type": "integer" },
                                  "owner": {
                                    "properties": {
                                      "avatar_url": { "type": "string" },
                                      "events_url": { "type": "string" },
                                      "followers_url": { "type": "string" },
                                      "following_url": { "type": "string" },
                                      "gists_url": { "type": "string" },
                                      "gravatar_id": { "type": "string" },
                                      "html_url": { "type": "string" },
                                      "id": { "type": "integer" },
                                      "login": { "type": "string" },
                                      "node_id": { "type": "string" },
                                      "organizations_url": { "type": "string" },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": { "type": "string" },
                                      "site_admin": { "type": "boolean" },
                                      "starred_url": { "type": "string" },
                                      "subscriptions_url": { "type": "string" },
                                      "type": { "type": "string" },
                                      "url": { "type": "string" }
                                    },
                                    "type": "object"
                                  },
                                  "permissions": {
                                    "properties": {
                                      "admin": { "type": "boolean" },
                                      "maintain": { "type": "boolean" },
                                      "pull": { "type": "boolean" },
                                      "push": { "type": "boolean" },
                                      "triage": { "type": "boolean" }
                                    },
                                    "type": "object"
                                  },
                                  "private": { "type": "boolean" },
                                  "pulls_url": { "type": "string" },
                                  "pushed_at": { "type": "string" },
                                  "releases_url": { "type": "string" },
                                  "size": { "type": "integer" },
                                  "ssh_url": { "type": "string" },
                                  "stargazers_count": { "type": "integer" },
                                  "stargazers_url": { "type": "string" },
                                  "statuses_url": { "type": "string" },
                                  "subscribers_count": { "type": "integer" },
                                  "subscribers_url": { "type": "string" },
                                  "subscription_url": { "type": "string" },
                                  "svn_url": { "type": "string" },
                                  "tags_url": { "type": "string" },
                                  "teams_url": { "type": "string" },
                                  "temp_clone_token": { "type": "string" },
                                  "topics": {
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "trees_url": { "type": "string" },
                                  "updated_at": { "type": "string" },
                                  "url": { "type": "string" },
                                  "visibility": { "type": "string" },
                                  "watchers_count": { "type": "integer" }
                                },
                                "type": "object"
                              },
                              "topics": {
                                "items": { "type": "string" },
                                "type": "array"
                              },
                              "trees_url": {
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "type": "string"
                              },
                              "updated_at": {
                                "example": "2011-01-26T19:14:43Z",
                                "format": "date-time",
                                "nullable": true,
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/repos/octocat/Hello-World",
                                "format": "uri",
                                "type": "string"
                              },
                              "visibility": {
                                "default": "public",
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string"
                              },
                              "watchers": { "type": "integer" },
                              "watchers_count": {
                                "example": 80,
                                "type": "integer"
                              }
                            },
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "title": "Repository",
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "state": { "example": "pending", "type": "string" },
                        "updated_at": {
                          "example": "2015-07-06T15:33:38-07:00",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/octo-org/migrations/79",
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "node_id",
                        "owner",
                        "guid",
                        "state",
                        "lock_repositories",
                        "exclude_attachments",
                        "repositories",
                        "url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Migration",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Get a user migration status",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/migrations/{migration_id}/archive",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migration metadata, which is returned in the [List user migrations](https://docs.github.com/rest/reference/migrations#list-user-migrations) and [Get a user migration status](https://docs.github.com/rest/reference/migrations#get-a-user-migration-status) endpoints, will continue to be available even after an archive is deleted.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#delete-a-user-migration-archive"
            },
            "operationId": "migrations/delete-archive-for-authenticated-user",
            "parameters": [
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete a user migration archive",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "users"
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:\n\n*   attachments\n*   bases\n*   commit\\_comments\n*   issue\\_comments\n*   issue\\_events\n*   issues\n*   milestones\n*   organizations\n*   projects\n*   protected\\_branches\n*   pull\\_request\\_reviews\n*   pull\\_requests\n*   releases\n*   repositories\n*   review\\_comments\n*   schema\n*   users\n\nThe archive will also contain an `attachments` directory that includes all attachment files uploaded to GitHub.com and a `repositories` directory that contains the repository's Git data.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#download-a-user-migration-archive"
            },
            "operationId": "migrations/get-archive-for-authenticated-user",
            "parameters": [
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "302": { "description": "Response" },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              }
            },
            "summary": "Download a user migration archive",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/migrations/{migration_id}/repos/{repo_name}/lock",
        {
          "delete": {
            "deprecated": null,
            "description": "Unlocks a repository. You can lock repositories when you [start a user migration](https://docs.github.com/rest/reference/migrations#start-a-user-migration). Once the migration is complete you can unlock each repository to begin using it again or [delete the repository](https://docs.github.com/rest/reference/repos#delete-a-repository) if you no longer need the source data. Returns a status of `404 Not Found` if the repository is not locked.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#unlock-a-user-repository"
            },
            "operationId": "migrations/unlock-repo-for-authenticated-user",
            "parameters": [
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "description": "repo_name parameter",
                "in": "path",
                "name": "repo_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "304": { "description": "Not modified" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Unlock a user repository",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/migrations/{migration_id}/repositories",
        {
          "get": {
            "deprecated": null,
            "description": "Lists all the repositories for this user migration.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/migrations#list-repositories-for-a-user-migration"
            },
            "operationId": "migrations/list-repos-for-user",
            "parameters": [
              {
                "description": "migration_id parameter",
                "in": "path",
                "name": "migration_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "archived": false,
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "clone_url": "https://github.com/octocat/Hello-World.git",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                            "created_at": "2011-01-26T19:01:12Z",
                            "default_branch": "master",
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                            "description": "This your first repo!",
                            "disabled": false,
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                            "fork": false,
                            "forks_count": 9,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                            "full_name": "octocat/Hello-World",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "git_url": "git:github.com/octocat/Hello-World.git",
                            "has_downloads": true,
                            "has_issues": true,
                            "has_pages": false,
                            "has_projects": true,
                            "has_wiki": true,
                            "homepage": "https://github.com",
                            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                            "html_url": "https://github.com/octocat/Hello-World",
                            "id": 1296269,
                            "is_template": false,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "language": null,
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "mirror_url": "git:git.example.com/octocat/Hello-World",
                            "name": "Hello-World",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "open_issues_count": 0,
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "permissions": {
                              "admin": false,
                              "pull": true,
                              "push": false
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "pushed_at": "2011-01-26T19:06:43Z",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "size": 108,
                            "ssh_url": "git@github.com:octocat/Hello-World.git",
                            "stargazers_count": 80,
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                            "svn_url": "https://svn.github.com/octocat/Hello-World",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                            "template_repository": {
                              "allow_auto_merge": false,
                              "allow_merge_commit": true,
                              "allow_rebase_merge": true,
                              "allow_squash_merge": true,
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
                              "archived": false,
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
                              "clone_url": "https://github.com/octocat/Hello-World-Template.git",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
                              "created_at": "2011-01-26T19:01:12Z",
                              "default_branch": "master",
                              "delete_branch_on_merge": true,
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
                              "description": "This your first repo!",
                              "disabled": false,
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
                              "fork": false,
                              "forks": 9,
                              "forks_count": 9,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
                              "full_name": "octocat/Hello-World-Template",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World-Template.git",
                              "has_downloads": true,
                              "has_issues": true,
                              "has_pages": false,
                              "has_projects": true,
                              "has_wiki": true,
                              "homepage": "https://github.com",
                              "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
                              "html_url": "https://github.com/octocat/Hello-World-Template",
                              "id": 1296269,
                              "is_template": true,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
                              "language": null,
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
                              "license": {
                                "html_url": "https://api.github.com/licenses/mit",
                                "key": "mit",
                                "name": "MIT License",
                                "node_id": "MDc6TGljZW5zZW1pdA==",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit"
                              },
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
                              "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
                              "name": "Hello-World-Template",
                              "network_count": 0,
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
                              "open_issues": 0,
                              "open_issues_count": 0,
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "gravatar_id": "",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "permissions": {
                                "admin": false,
                                "pull": true,
                                "push": false
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
                              "pushed_at": "2011-01-26T19:06:43Z",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
                              "size": 108,
                              "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
                              "stargazers_count": 80,
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
                              "subscribers_count": 42,
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
                              "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
                              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                              "topics": ["octocat", "atom", "electron", "api"],
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
                              "updated_at": "2011-01-26T19:14:43Z",
                              "url": "https://api.github.com/repos/octocat/Hello-World-Template",
                              "visibility": "public",
                              "watchers": 80,
                              "watchers_count": 80
                            },
                            "topics": ["octocat", "atom", "electron", "api"],
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "updated_at": "2011-01-26T19:14:43Z",
                            "url": "https://api.github.com/repos/octocat/Hello-World",
                            "visibility": "public",
                            "watchers_count": 80
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "Minimal Repository",
                        "properties": {
                          "archive_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "type": "string"
                          },
                          "archived": { "type": "boolean" },
                          "assignees_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "type": "string"
                          },
                          "blobs_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "type": "string"
                          },
                          "branches_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "type": "string"
                          },
                          "clone_url": { "type": "string" },
                          "code_of_conduct": {
                            "description": "Code Of Conduct",
                            "properties": {
                              "body": {
                                "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                                "type": "string"
                              },
                              "html_url": {
                                "format": "uri",
                                "nullable": true,
                                "type": "string"
                              },
                              "key": {
                                "example": "contributor_covenant",
                                "type": "string"
                              },
                              "name": {
                                "example": "Contributor Covenant",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": ["url", "html_url", "key", "name"],
                            "title": "Code Of Conduct",
                            "type": "object"
                          },
                          "collaborators_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "type": "string"
                          },
                          "comments_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "type": "string"
                          },
                          "commits_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "type": "string"
                          },
                          "compare_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "type": "string"
                          },
                          "contents_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "type": "string"
                          },
                          "contributors_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                            "format": "uri",
                            "type": "string"
                          },
                          "created_at": {
                            "example": "2011-01-26T19:01:12Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "default_branch": { "type": "string" },
                          "delete_branch_on_merge": { "type": "boolean" },
                          "deployments_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                            "format": "uri",
                            "type": "string"
                          },
                          "description": {
                            "example": "This your first repo!",
                            "nullable": true,
                            "type": "string"
                          },
                          "disabled": { "type": "boolean" },
                          "downloads_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                            "format": "uri",
                            "type": "string"
                          },
                          "events_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/events",
                            "format": "uri",
                            "type": "string"
                          },
                          "fork": { "type": "boolean" },
                          "forks": { "example": 0, "type": "integer" },
                          "forks_count": { "type": "integer" },
                          "forks_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                            "format": "uri",
                            "type": "string"
                          },
                          "full_name": {
                            "example": "octocat/Hello-World",
                            "type": "string"
                          },
                          "git_commits_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "type": "string"
                          },
                          "git_refs_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "type": "string"
                          },
                          "git_tags_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "type": "string"
                          },
                          "git_url": { "type": "string" },
                          "has_downloads": { "type": "boolean" },
                          "has_issues": { "type": "boolean" },
                          "has_pages": { "type": "boolean" },
                          "has_projects": { "type": "boolean" },
                          "has_wiki": { "type": "boolean" },
                          "homepage": { "nullable": true, "type": "string" },
                          "hooks_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                            "format": "uri",
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat/Hello-World",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": { "example": 1296269, "type": "integer" },
                          "is_template": { "type": "boolean" },
                          "issue_comment_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "type": "string"
                          },
                          "issue_events_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "type": "string"
                          },
                          "issues_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "type": "string"
                          },
                          "keys_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "type": "string"
                          },
                          "labels_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "type": "string"
                          },
                          "language": { "nullable": true, "type": "string" },
                          "languages_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                            "format": "uri",
                            "type": "string"
                          },
                          "license": {
                            "nullable": true,
                            "properties": {
                              "key": { "type": "string" },
                              "name": { "type": "string" },
                              "node_id": { "type": "string" },
                              "spdx_id": { "type": "string" },
                              "url": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "merges_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                            "format": "uri",
                            "type": "string"
                          },
                          "milestones_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "type": "string"
                          },
                          "mirror_url": { "nullable": true, "type": "string" },
                          "name": {
                            "example": "Hello-World",
                            "type": "string"
                          },
                          "network_count": { "type": "integer" },
                          "node_id": {
                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "type": "string"
                          },
                          "notifications_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "type": "string"
                          },
                          "open_issues": { "example": 0, "type": "integer" },
                          "open_issues_count": { "type": "integer" },
                          "owner": {
                            "description": "Simple User",
                            "nullable": true,
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": { "nullable": true, "type": "string" },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": { "example": 1, "type": "integer" },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": { "nullable": true, "type": "string" },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": { "type": "boolean" },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": { "example": "User", "type": "string" },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "permissions": {
                            "properties": {
                              "admin": { "type": "boolean" },
                              "maintain": { "type": "boolean" },
                              "pull": { "type": "boolean" },
                              "push": { "type": "boolean" },
                              "triage": { "type": "boolean" }
                            },
                            "type": "object"
                          },
                          "private": { "type": "boolean" },
                          "pulls_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "type": "string"
                          },
                          "pushed_at": {
                            "example": "2011-01-26T19:06:43Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "releases_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "type": "string"
                          },
                          "size": { "type": "integer" },
                          "ssh_url": { "type": "string" },
                          "stargazers_count": { "type": "integer" },
                          "stargazers_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                            "format": "uri",
                            "type": "string"
                          },
                          "statuses_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "type": "string"
                          },
                          "subscribers_count": { "type": "integer" },
                          "subscribers_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                            "format": "uri",
                            "type": "string"
                          },
                          "subscription_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                            "format": "uri",
                            "type": "string"
                          },
                          "svn_url": { "type": "string" },
                          "tags_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                            "format": "uri",
                            "type": "string"
                          },
                          "teams_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                            "format": "uri",
                            "type": "string"
                          },
                          "temp_clone_token": { "type": "string" },
                          "template_repository": {
                            "allOf": [
                              {
                                "description": "A git repository",
                                "properties": {
                                  "allow_auto_merge": {
                                    "default": false,
                                    "description": "Whether to allow Auto-merge to be used on pull requests.",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "allow_merge_commit": {
                                    "default": true,
                                    "description": "Whether to allow merge commits for pull requests.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "allow_rebase_merge": {
                                    "default": true,
                                    "description": "Whether to allow rebase merges for pull requests.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "allow_squash_merge": {
                                    "default": true,
                                    "description": "Whether to allow squash merges for pull requests.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                    "type": "string"
                                  },
                                  "archived": {
                                    "default": false,
                                    "description": "Whether the repository is archived.",
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                    "type": "string"
                                  },
                                  "clone_url": {
                                    "example": "https://github.com/octocat/Hello-World.git",
                                    "type": "string"
                                  },
                                  "collaborators_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "example": "2011-01-26T19:01:12Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "default_branch": {
                                    "description": "The default branch of the repository.",
                                    "example": "master",
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "default": false,
                                    "description": "Whether to delete head branches when pull requests are merged",
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "description": {
                                    "example": "This your first repo!",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "description": "Returns whether or not this repository disabled.",
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "fork": { "type": "boolean" },
                                  "forks": { "type": "integer" },
                                  "forks_count": {
                                    "example": 9,
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "example": "octocat/Hello-World",
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                    "type": "string"
                                  },
                                  "git_url": {
                                    "example": "git:github.com/octocat/Hello-World.git",
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "default": true,
                                    "description": "Whether downloads are enabled.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "default": true,
                                    "description": "Whether issues are enabled.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "has_pages": { "type": "boolean" },
                                  "has_projects": {
                                    "default": true,
                                    "description": "Whether projects are enabled.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "default": true,
                                    "description": "Whether the wiki is enabled.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "example": "https://github.com",
                                    "format": "uri",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "Unique identifier of the repository",
                                    "example": 42,
                                    "type": "integer"
                                  },
                                  "is_template": {
                                    "default": false,
                                    "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                    "example": true,
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                    "type": "string"
                                  },
                                  "language": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "license": {
                                    "allOf": [
                                      {
                                        "description": "License Simple",
                                        "properties": {
                                          "html_url": {
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "key": {
                                            "example": "mit",
                                            "type": "string"
                                          },
                                          "name": {
                                            "example": "MIT License",
                                            "type": "string"
                                          },
                                          "node_id": {
                                            "example": "MDc6TGljZW5zZW1pdA==",
                                            "type": "string"
                                          },
                                          "spdx_id": {
                                            "example": "MIT",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "url": {
                                            "example": "https://api.github.com/licenses/mit",
                                            "format": "uri",
                                            "nullable": true,
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "key",
                                          "name",
                                          "url",
                                          "spdx_id",
                                          "node_id"
                                        ],
                                        "title": "License Simple",
                                        "type": "object"
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "master_branch": { "type": "string" },
                                  "merges_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "example": "git:git.example.com/octocat/Hello-World",
                                    "format": "uri",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the repository.",
                                    "example": "Team Environment",
                                    "type": "string"
                                  },
                                  "network_count": { "type": "integer" },
                                  "node_id": {
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                    "type": "string"
                                  },
                                  "open_issues": { "type": "integer" },
                                  "open_issues_count": {
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "organization": {
                                    "allOf": [
                                      {
                                        "description": "Simple User",
                                        "nullable": true,
                                        "properties": {
                                          "avatar_url": {
                                            "example": "https://github.com/images/error/octocat_happy.gif",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "email": {
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                                            "type": "string"
                                          },
                                          "followers_url": {
                                            "example": "https://api.github.com/users/octocat/followers",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "following_url": {
                                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                                            "type": "string"
                                          },
                                          "gists_url": {
                                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                            "type": "string"
                                          },
                                          "gravatar_id": {
                                            "example": "41d064eb2195891e12d0413f63227ea7",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "example": "https://github.com/octocat",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "id": {
                                            "example": 1,
                                            "type": "integer"
                                          },
                                          "login": {
                                            "example": "octocat",
                                            "type": "string"
                                          },
                                          "name": {
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "node_id": {
                                            "example": "MDQ6VXNlcjE=",
                                            "type": "string"
                                          },
                                          "organizations_url": {
                                            "example": "https://api.github.com/users/octocat/orgs",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "received_events_url": {
                                            "example": "https://api.github.com/users/octocat/received_events",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "repos_url": {
                                            "example": "https://api.github.com/users/octocat/repos",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "site_admin": { "type": "boolean" },
                                          "starred_at": {
                                            "example": "\"2020-07-09T00:17:55Z\"",
                                            "type": "string"
                                          },
                                          "starred_url": {
                                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                            "type": "string"
                                          },
                                          "subscriptions_url": {
                                            "example": "https://api.github.com/users/octocat/subscriptions",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "type": {
                                            "example": "User",
                                            "type": "string"
                                          },
                                          "url": {
                                            "example": "https://api.github.com/users/octocat",
                                            "format": "uri",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "avatar_url",
                                          "events_url",
                                          "followers_url",
                                          "following_url",
                                          "gists_url",
                                          "gravatar_id",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "login",
                                          "organizations_url",
                                          "received_events_url",
                                          "repos_url",
                                          "site_admin",
                                          "starred_url",
                                          "subscriptions_url",
                                          "type",
                                          "url"
                                        ],
                                        "title": "Simple User",
                                        "type": "object"
                                      }
                                    ],
                                    "nullable": true
                                  },
                                  "owner": {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  },
                                  "permissions": {
                                    "properties": {
                                      "admin": { "type": "boolean" },
                                      "maintain": { "type": "boolean" },
                                      "pull": { "type": "boolean" },
                                      "push": { "type": "boolean" },
                                      "triage": { "type": "boolean" }
                                    },
                                    "required": ["admin", "pull", "push"],
                                    "type": "object"
                                  },
                                  "private": {
                                    "default": false,
                                    "description": "Whether the repository is private or public.",
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "example": "2011-01-26T19:06:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                    "type": "string"
                                  },
                                  "size": { "example": 108, "type": "integer" },
                                  "ssh_url": {
                                    "example": "git@github.com:octocat/Hello-World.git",
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "example": 80,
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:42Z\"",
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                    "type": "string"
                                  },
                                  "subscribers_count": { "type": "integer" },
                                  "subscribers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "svn_url": {
                                    "example": "https://svn.github.com/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "temp_clone_token": { "type": "string" },
                                  "template_repository": {
                                    "nullable": true,
                                    "properties": {
                                      "allow_auto_merge": { "type": "boolean" },
                                      "allow_merge_commit": {
                                        "type": "boolean"
                                      },
                                      "allow_rebase_merge": {
                                        "type": "boolean"
                                      },
                                      "allow_squash_merge": {
                                        "type": "boolean"
                                      },
                                      "archive_url": { "type": "string" },
                                      "archived": { "type": "boolean" },
                                      "assignees_url": { "type": "string" },
                                      "blobs_url": { "type": "string" },
                                      "branches_url": { "type": "string" },
                                      "clone_url": { "type": "string" },
                                      "collaborators_url": { "type": "string" },
                                      "comments_url": { "type": "string" },
                                      "commits_url": { "type": "string" },
                                      "compare_url": { "type": "string" },
                                      "contents_url": { "type": "string" },
                                      "contributors_url": { "type": "string" },
                                      "created_at": { "type": "string" },
                                      "default_branch": { "type": "string" },
                                      "delete_branch_on_merge": {
                                        "type": "boolean"
                                      },
                                      "deployments_url": { "type": "string" },
                                      "description": { "type": "string" },
                                      "disabled": { "type": "boolean" },
                                      "downloads_url": { "type": "string" },
                                      "events_url": { "type": "string" },
                                      "fork": { "type": "boolean" },
                                      "forks_count": { "type": "integer" },
                                      "forks_url": { "type": "string" },
                                      "full_name": { "type": "string" },
                                      "git_commits_url": { "type": "string" },
                                      "git_refs_url": { "type": "string" },
                                      "git_tags_url": { "type": "string" },
                                      "git_url": { "type": "string" },
                                      "has_downloads": { "type": "boolean" },
                                      "has_issues": { "type": "boolean" },
                                      "has_pages": { "type": "boolean" },
                                      "has_projects": { "type": "boolean" },
                                      "has_wiki": { "type": "boolean" },
                                      "homepage": { "type": "string" },
                                      "hooks_url": { "type": "string" },
                                      "html_url": { "type": "string" },
                                      "id": { "type": "integer" },
                                      "is_template": { "type": "boolean" },
                                      "issue_comment_url": { "type": "string" },
                                      "issue_events_url": { "type": "string" },
                                      "issues_url": { "type": "string" },
                                      "keys_url": { "type": "string" },
                                      "labels_url": { "type": "string" },
                                      "language": { "type": "string" },
                                      "languages_url": { "type": "string" },
                                      "merges_url": { "type": "string" },
                                      "milestones_url": { "type": "string" },
                                      "mirror_url": { "type": "string" },
                                      "name": { "type": "string" },
                                      "network_count": { "type": "integer" },
                                      "node_id": { "type": "string" },
                                      "notifications_url": { "type": "string" },
                                      "open_issues_count": {
                                        "type": "integer"
                                      },
                                      "owner": {
                                        "properties": {
                                          "avatar_url": { "type": "string" },
                                          "events_url": { "type": "string" },
                                          "followers_url": { "type": "string" },
                                          "following_url": { "type": "string" },
                                          "gists_url": { "type": "string" },
                                          "gravatar_id": { "type": "string" },
                                          "html_url": { "type": "string" },
                                          "id": { "type": "integer" },
                                          "login": { "type": "string" },
                                          "node_id": { "type": "string" },
                                          "organizations_url": {
                                            "type": "string"
                                          },
                                          "received_events_url": {
                                            "type": "string"
                                          },
                                          "repos_url": { "type": "string" },
                                          "site_admin": { "type": "boolean" },
                                          "starred_url": { "type": "string" },
                                          "subscriptions_url": {
                                            "type": "string"
                                          },
                                          "type": { "type": "string" },
                                          "url": { "type": "string" }
                                        },
                                        "type": "object"
                                      },
                                      "permissions": {
                                        "properties": {
                                          "admin": { "type": "boolean" },
                                          "maintain": { "type": "boolean" },
                                          "pull": { "type": "boolean" },
                                          "push": { "type": "boolean" },
                                          "triage": { "type": "boolean" }
                                        },
                                        "type": "object"
                                      },
                                      "private": { "type": "boolean" },
                                      "pulls_url": { "type": "string" },
                                      "pushed_at": { "type": "string" },
                                      "releases_url": { "type": "string" },
                                      "size": { "type": "integer" },
                                      "ssh_url": { "type": "string" },
                                      "stargazers_count": { "type": "integer" },
                                      "stargazers_url": { "type": "string" },
                                      "statuses_url": { "type": "string" },
                                      "subscribers_count": {
                                        "type": "integer"
                                      },
                                      "subscribers_url": { "type": "string" },
                                      "subscription_url": { "type": "string" },
                                      "svn_url": { "type": "string" },
                                      "tags_url": { "type": "string" },
                                      "teams_url": { "type": "string" },
                                      "temp_clone_token": { "type": "string" },
                                      "topics": {
                                        "items": { "type": "string" },
                                        "type": "array"
                                      },
                                      "trees_url": { "type": "string" },
                                      "updated_at": { "type": "string" },
                                      "url": { "type": "string" },
                                      "visibility": { "type": "string" },
                                      "watchers_count": { "type": "integer" }
                                    },
                                    "type": "object"
                                  },
                                  "topics": {
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "trees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "example": "2011-01-26T19:14:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/repos/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "visibility": {
                                    "default": "public",
                                    "description": "The repository visibility: public, private, or internal.",
                                    "type": "string"
                                  },
                                  "watchers": { "type": "integer" },
                                  "watchers_count": {
                                    "example": 80,
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url",
                                  "clone_url",
                                  "default_branch",
                                  "forks",
                                  "forks_count",
                                  "git_url",
                                  "has_downloads",
                                  "has_issues",
                                  "has_projects",
                                  "has_wiki",
                                  "has_pages",
                                  "homepage",
                                  "language",
                                  "archived",
                                  "disabled",
                                  "mirror_url",
                                  "open_issues",
                                  "open_issues_count",
                                  "license",
                                  "pushed_at",
                                  "size",
                                  "ssh_url",
                                  "stargazers_count",
                                  "svn_url",
                                  "watchers",
                                  "watchers_count",
                                  "created_at",
                                  "updated_at"
                                ],
                                "title": "Repository",
                                "type": "object"
                              }
                            ],
                            "nullable": true,
                            "type": "object"
                          },
                          "topics": {
                            "items": { "type": "string" },
                            "type": "array"
                          },
                          "trees_url": {
                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "type": "string"
                          },
                          "updated_at": {
                            "example": "2011-01-26T19:14:43Z",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/repos/octocat/Hello-World",
                            "format": "uri",
                            "type": "string"
                          },
                          "visibility": { "type": "string" },
                          "watchers": { "example": 0, "type": "integer" },
                          "watchers_count": { "type": "integer" }
                        },
                        "required": [
                          "archive_url",
                          "assignees_url",
                          "blobs_url",
                          "branches_url",
                          "collaborators_url",
                          "comments_url",
                          "commits_url",
                          "compare_url",
                          "contents_url",
                          "contributors_url",
                          "deployments_url",
                          "description",
                          "downloads_url",
                          "events_url",
                          "fork",
                          "forks_url",
                          "full_name",
                          "git_commits_url",
                          "git_refs_url",
                          "git_tags_url",
                          "hooks_url",
                          "html_url",
                          "id",
                          "node_id",
                          "issue_comment_url",
                          "issue_events_url",
                          "issues_url",
                          "keys_url",
                          "labels_url",
                          "languages_url",
                          "merges_url",
                          "milestones_url",
                          "name",
                          "notifications_url",
                          "owner",
                          "private",
                          "pulls_url",
                          "releases_url",
                          "stargazers_url",
                          "statuses_url",
                          "subscribers_url",
                          "subscription_url",
                          "tags_url",
                          "teams_url",
                          "trees_url",
                          "url"
                        ],
                        "title": "Minimal Repository",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response",
                "headers": {
                  "Link": {
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                    "required": null,
                    "schema": { "type": "string" },
                    "style": "simple"
                  }
                }
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "List repositories for a user migration",
            "tags": ["migrations"],
            "x-github": {
              "category": "migrations",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [
                {
                  "name": "wyandotte",
                  "note": "To access the Migrations API, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.wyandotte-preview+json\n```",
                  "required": true
                }
              ],
              "subcategory": "users"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/packages",
        {
          "get": {
            "deprecated": null,
            "description": "Lists packages owned by the authenticated user within the user's namespace.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#list-packages-for-the-authenticated-user"
            },
            "operationId": "packages/list-packages-for-authenticated-user",
            "parameters": [
              {
                "allowReserved": null,
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "query",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "The selected visibility of the packages. Can be one of `public`, `private`, or `internal`. Only `container` package_types currently support `internal` visibility properly. For other ecosystems `internal` is synonymous with `private`. This parameter is optional and only filters an existing result set.",
                "in": "query",
                "name": "visibility",
                "required": false,
                "schema": {
                  "enum": ["public", "private", "internal"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2020-05-19T22:19:11Z",
                            "html_url": "https://github.com/orgs/github/packages/container/package/hello_docker",
                            "id": 197,
                            "name": "hello_docker",
                            "owner": {
                              "avatar_url": "https://avatars.monalisausercontent.com/u/9919?v=4",
                              "events_url": "https://api.github.com/users/github/events{/privacy}",
                              "followers_url": "https://api.github.com/users/github/followers",
                              "following_url": "https://api.github.com/users/github/following{/other_user}",
                              "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/github",
                              "id": 9919,
                              "login": "monalisa",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                              "organizations_url": "https://api.github.com/users/github/orgs",
                              "received_events_url": "https://api.github.com/users/github/received_events",
                              "repos_url": "https://api.github.com/users/github/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/monalisa"
                            },
                            "package_type": "container",
                            "updated_at": "2020-05-19T22:19:11Z",
                            "url": "https://api.github.com/orgs/github/packages/container/hello_docker",
                            "version_count": 1,
                            "visibility": "private"
                          },
                          {
                            "created_at": "2020-05-20T22:19:11Z",
                            "html_url": "https://github.com/user/monalisa/packages/container/package/goodbye_docker",
                            "id": 198,
                            "name": "goodbye_docker",
                            "owner": {
                              "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                              "events_url": "https://api.github.com/users/github/events{/privacy}",
                              "followers_url": "https://api.github.com/users/github/followers",
                              "following_url": "https://api.github.com/users/github/following{/other_user}",
                              "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/github",
                              "id": 9919,
                              "login": "github",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                              "organizations_url": "https://api.github.com/users/github/orgs",
                              "received_events_url": "https://api.github.com/users/github/received_events",
                              "repos_url": "https://api.github.com/users/github/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/monalisa"
                            },
                            "package_type": "container",
                            "updated_at": "2020-05-20T22:19:11Z",
                            "url": "https://api.github.com/user/monalisa/packages/container/goodbye_docker",
                            "version_count": 2,
                            "visibility": "private"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "A software package",
                        "properties": {
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the package.",
                            "example": 1,
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the package.",
                            "example": "super-linter",
                            "type": "string"
                          },
                          "owner": {
                            "allOf": [
                              {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "package_type": {
                            "enum": [
                              "npm",
                              "maven",
                              "rubygems",
                              "docker",
                              "nuget",
                              "container"
                            ],
                            "example": "docker",
                            "type": "string"
                          },
                          "repository": {
                            "allOf": [
                              {
                                "description": "Minimal Repository",
                                "properties": {
                                  "archive_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                    "type": "string"
                                  },
                                  "archived": { "type": "boolean" },
                                  "assignees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                    "type": "string"
                                  },
                                  "clone_url": { "type": "string" },
                                  "code_of_conduct": {
                                    "description": "Code Of Conduct",
                                    "properties": {
                                      "body": {
                                        "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "format": "uri",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "key": {
                                        "example": "contributor_covenant",
                                        "type": "string"
                                      },
                                      "name": {
                                        "example": "Contributor Covenant",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "url",
                                      "html_url",
                                      "key",
                                      "name"
                                    ],
                                    "title": "Code Of Conduct",
                                    "type": "object"
                                  },
                                  "collaborators_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "example": "2011-01-26T19:01:12Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "default_branch": { "type": "string" },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "description": {
                                    "example": "This your first repo!",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "disabled": { "type": "boolean" },
                                  "downloads_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "fork": { "type": "boolean" },
                                  "forks": { "example": 0, "type": "integer" },
                                  "forks_count": { "type": "integer" },
                                  "forks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "example": "octocat/Hello-World",
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                    "type": "string"
                                  },
                                  "git_url": { "type": "string" },
                                  "has_downloads": { "type": "boolean" },
                                  "has_issues": { "type": "boolean" },
                                  "has_pages": { "type": "boolean" },
                                  "has_projects": { "type": "boolean" },
                                  "has_wiki": { "type": "boolean" },
                                  "homepage": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "example": 1296269,
                                    "type": "integer"
                                  },
                                  "is_template": { "type": "boolean" },
                                  "issue_comment_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                    "type": "string"
                                  },
                                  "language": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "license": {
                                    "nullable": true,
                                    "properties": {
                                      "key": { "type": "string" },
                                      "name": { "type": "string" },
                                      "node_id": { "type": "string" },
                                      "spdx_id": { "type": "string" },
                                      "url": { "type": "string" }
                                    },
                                    "type": "object"
                                  },
                                  "merges_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "Hello-World",
                                    "type": "string"
                                  },
                                  "network_count": { "type": "integer" },
                                  "node_id": {
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                    "type": "string"
                                  },
                                  "open_issues": {
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "open_issues_count": { "type": "integer" },
                                  "owner": {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  },
                                  "permissions": {
                                    "properties": {
                                      "admin": { "type": "boolean" },
                                      "maintain": { "type": "boolean" },
                                      "pull": { "type": "boolean" },
                                      "push": { "type": "boolean" },
                                      "triage": { "type": "boolean" }
                                    },
                                    "type": "object"
                                  },
                                  "private": { "type": "boolean" },
                                  "pulls_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "example": "2011-01-26T19:06:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                    "type": "string"
                                  },
                                  "size": { "type": "integer" },
                                  "ssh_url": { "type": "string" },
                                  "stargazers_count": { "type": "integer" },
                                  "stargazers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                    "type": "string"
                                  },
                                  "subscribers_count": { "type": "integer" },
                                  "subscribers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "svn_url": { "type": "string" },
                                  "tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "temp_clone_token": { "type": "string" },
                                  "template_repository": {
                                    "allOf": [
                                      {
                                        "description": "A git repository",
                                        "properties": {
                                          "allow_auto_merge": {
                                            "default": false,
                                            "description": "Whether to allow Auto-merge to be used on pull requests.",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "allow_merge_commit": {
                                            "default": true,
                                            "description": "Whether to allow merge commits for pull requests.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "allow_rebase_merge": {
                                            "default": true,
                                            "description": "Whether to allow rebase merges for pull requests.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "allow_squash_merge": {
                                            "default": true,
                                            "description": "Whether to allow squash merges for pull requests.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "archive_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                            "type": "string"
                                          },
                                          "archived": {
                                            "default": false,
                                            "description": "Whether the repository is archived.",
                                            "type": "boolean"
                                          },
                                          "assignees_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                            "type": "string"
                                          },
                                          "blobs_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                            "type": "string"
                                          },
                                          "branches_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                            "type": "string"
                                          },
                                          "clone_url": {
                                            "example": "https://github.com/octocat/Hello-World.git",
                                            "type": "string"
                                          },
                                          "collaborators_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                            "type": "string"
                                          },
                                          "comments_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                            "type": "string"
                                          },
                                          "commits_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                            "type": "string"
                                          },
                                          "compare_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                            "type": "string"
                                          },
                                          "contents_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                            "type": "string"
                                          },
                                          "contributors_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "created_at": {
                                            "example": "2011-01-26T19:01:12Z",
                                            "format": "date-time",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "default_branch": {
                                            "description": "The default branch of the repository.",
                                            "example": "master",
                                            "type": "string"
                                          },
                                          "delete_branch_on_merge": {
                                            "default": false,
                                            "description": "Whether to delete head branches when pull requests are merged",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "deployments_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "description": {
                                            "example": "This your first repo!",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "disabled": {
                                            "description": "Returns whether or not this repository disabled.",
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "fork": { "type": "boolean" },
                                          "forks": { "type": "integer" },
                                          "forks_count": {
                                            "example": 9,
                                            "type": "integer"
                                          },
                                          "forks_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "full_name": {
                                            "example": "octocat/Hello-World",
                                            "type": "string"
                                          },
                                          "git_commits_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                            "type": "string"
                                          },
                                          "git_refs_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                            "type": "string"
                                          },
                                          "git_tags_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                            "type": "string"
                                          },
                                          "git_url": {
                                            "example": "git:github.com/octocat/Hello-World.git",
                                            "type": "string"
                                          },
                                          "has_downloads": {
                                            "default": true,
                                            "description": "Whether downloads are enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "has_issues": {
                                            "default": true,
                                            "description": "Whether issues are enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "has_pages": { "type": "boolean" },
                                          "has_projects": {
                                            "default": true,
                                            "description": "Whether projects are enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "has_wiki": {
                                            "default": true,
                                            "description": "Whether the wiki is enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "homepage": {
                                            "example": "https://github.com",
                                            "format": "uri",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "hooks_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "example": "https://github.com/octocat/Hello-World",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Unique identifier of the repository",
                                            "example": 42,
                                            "type": "integer"
                                          },
                                          "is_template": {
                                            "default": false,
                                            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "issue_comment_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                            "type": "string"
                                          },
                                          "issue_events_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                            "type": "string"
                                          },
                                          "issues_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                            "type": "string"
                                          },
                                          "keys_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                            "type": "string"
                                          },
                                          "labels_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                            "type": "string"
                                          },
                                          "language": {
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "languages_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "license": {
                                            "allOf": [
                                              {
                                                "description": "License Simple",
                                                "properties": {
                                                  "html_url": {
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "key": {
                                                    "example": "mit",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "example": "MIT License",
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "example": "MDc6TGljZW5zZW1pdA==",
                                                    "type": "string"
                                                  },
                                                  "spdx_id": {
                                                    "example": "MIT",
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "example": "https://api.github.com/licenses/mit",
                                                    "format": "uri",
                                                    "nullable": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "key",
                                                  "name",
                                                  "url",
                                                  "spdx_id",
                                                  "node_id"
                                                ],
                                                "title": "License Simple",
                                                "type": "object"
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "master_branch": { "type": "string" },
                                          "merges_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "milestones_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                            "type": "string"
                                          },
                                          "mirror_url": {
                                            "example": "git:git.example.com/octocat/Hello-World",
                                            "format": "uri",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the repository.",
                                            "example": "Team Environment",
                                            "type": "string"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                            "type": "string"
                                          },
                                          "notifications_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                            "type": "string"
                                          },
                                          "open_issues": { "type": "integer" },
                                          "open_issues_count": {
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "organization": {
                                            "allOf": [
                                              {
                                                "description": "Simple User",
                                                "nullable": true,
                                                "properties": {
                                                  "avatar_url": {
                                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "email": {
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "example": "https://api.github.com/users/octocat/followers",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "example": "https://github.com/octocat",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "example": 1,
                                                    "type": "integer"
                                                  },
                                                  "login": {
                                                    "example": "octocat",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "example": "MDQ6VXNlcjE=",
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "example": "https://api.github.com/users/octocat/orgs",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "example": "https://api.github.com/users/octocat/received_events",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "example": "https://api.github.com/users/octocat/repos",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_at": {
                                                    "example": "\"2020-07-09T00:17:55Z\"",
                                                    "type": "string"
                                                  },
                                                  "starred_url": {
                                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "example": "User",
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "example": "https://api.github.com/users/octocat",
                                                    "format": "uri",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "avatar_url",
                                                  "events_url",
                                                  "followers_url",
                                                  "following_url",
                                                  "gists_url",
                                                  "gravatar_id",
                                                  "html_url",
                                                  "id",
                                                  "node_id",
                                                  "login",
                                                  "organizations_url",
                                                  "received_events_url",
                                                  "repos_url",
                                                  "site_admin",
                                                  "starred_url",
                                                  "subscriptions_url",
                                                  "type",
                                                  "url"
                                                ],
                                                "title": "Simple User",
                                                "type": "object"
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "owner": {
                                            "description": "Simple User",
                                            "nullable": true,
                                            "properties": {
                                              "avatar_url": {
                                                "example": "https://github.com/images/error/octocat_happy.gif",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "email": {
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                "type": "string"
                                              },
                                              "followers_url": {
                                                "example": "https://api.github.com/users/octocat/followers",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "following_url": {
                                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                "type": "string"
                                              },
                                              "gists_url": {
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                "type": "string"
                                              },
                                              "gravatar_id": {
                                                "example": "41d064eb2195891e12d0413f63227ea7",
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "example": "https://github.com/octocat",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "id": {
                                                "example": 1,
                                                "type": "integer"
                                              },
                                              "login": {
                                                "example": "octocat",
                                                "type": "string"
                                              },
                                              "name": {
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "node_id": {
                                                "example": "MDQ6VXNlcjE=",
                                                "type": "string"
                                              },
                                              "organizations_url": {
                                                "example": "https://api.github.com/users/octocat/orgs",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "received_events_url": {
                                                "example": "https://api.github.com/users/octocat/received_events",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "repos_url": {
                                                "example": "https://api.github.com/users/octocat/repos",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "example": "\"2020-07-09T00:17:55Z\"",
                                                "type": "string"
                                              },
                                              "starred_url": {
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                "type": "string"
                                              },
                                              "subscriptions_url": {
                                                "example": "https://api.github.com/users/octocat/subscriptions",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "type": {
                                                "example": "User",
                                                "type": "string"
                                              },
                                              "url": {
                                                "example": "https://api.github.com/users/octocat",
                                                "format": "uri",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "title": "Simple User",
                                            "type": "object"
                                          },
                                          "permissions": {
                                            "properties": {
                                              "admin": { "type": "boolean" },
                                              "maintain": { "type": "boolean" },
                                              "pull": { "type": "boolean" },
                                              "push": { "type": "boolean" },
                                              "triage": { "type": "boolean" }
                                            },
                                            "required": [
                                              "admin",
                                              "pull",
                                              "push"
                                            ],
                                            "type": "object"
                                          },
                                          "private": {
                                            "default": false,
                                            "description": "Whether the repository is private or public.",
                                            "type": "boolean"
                                          },
                                          "pulls_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                            "type": "string"
                                          },
                                          "pushed_at": {
                                            "example": "2011-01-26T19:06:43Z",
                                            "format": "date-time",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "releases_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                            "type": "string"
                                          },
                                          "size": {
                                            "example": 108,
                                            "type": "integer"
                                          },
                                          "ssh_url": {
                                            "example": "git@github.com:octocat/Hello-World.git",
                                            "type": "string"
                                          },
                                          "stargazers_count": {
                                            "example": 80,
                                            "type": "integer"
                                          },
                                          "stargazers_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "starred_at": {
                                            "example": "\"2020-07-09T00:17:42Z\"",
                                            "type": "string"
                                          },
                                          "statuses_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                            "type": "string"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "subscription_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "svn_url": {
                                            "example": "https://svn.github.com/octocat/Hello-World",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "tags_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "teams_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "temp_clone_token": {
                                            "type": "string"
                                          },
                                          "template_repository": {
                                            "nullable": true,
                                            "properties": {
                                              "allow_auto_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_merge_commit": {
                                                "type": "boolean"
                                              },
                                              "allow_rebase_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_squash_merge": {
                                                "type": "boolean"
                                              },
                                              "archive_url": {
                                                "type": "string"
                                              },
                                              "archived": { "type": "boolean" },
                                              "assignees_url": {
                                                "type": "string"
                                              },
                                              "blobs_url": { "type": "string" },
                                              "branches_url": {
                                                "type": "string"
                                              },
                                              "clone_url": { "type": "string" },
                                              "collaborators_url": {
                                                "type": "string"
                                              },
                                              "comments_url": {
                                                "type": "string"
                                              },
                                              "commits_url": {
                                                "type": "string"
                                              },
                                              "compare_url": {
                                                "type": "string"
                                              },
                                              "contents_url": {
                                                "type": "string"
                                              },
                                              "contributors_url": {
                                                "type": "string"
                                              },
                                              "created_at": {
                                                "type": "string"
                                              },
                                              "default_branch": {
                                                "type": "string"
                                              },
                                              "delete_branch_on_merge": {
                                                "type": "boolean"
                                              },
                                              "deployments_url": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "disabled": { "type": "boolean" },
                                              "downloads_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "fork": { "type": "boolean" },
                                              "forks_count": {
                                                "type": "integer"
                                              },
                                              "forks_url": { "type": "string" },
                                              "full_name": { "type": "string" },
                                              "git_commits_url": {
                                                "type": "string"
                                              },
                                              "git_refs_url": {
                                                "type": "string"
                                              },
                                              "git_tags_url": {
                                                "type": "string"
                                              },
                                              "git_url": { "type": "string" },
                                              "has_downloads": {
                                                "type": "boolean"
                                              },
                                              "has_issues": {
                                                "type": "boolean"
                                              },
                                              "has_pages": {
                                                "type": "boolean"
                                              },
                                              "has_projects": {
                                                "type": "boolean"
                                              },
                                              "has_wiki": { "type": "boolean" },
                                              "homepage": { "type": "string" },
                                              "hooks_url": { "type": "string" },
                                              "html_url": { "type": "string" },
                                              "id": { "type": "integer" },
                                              "is_template": {
                                                "type": "boolean"
                                              },
                                              "issue_comment_url": {
                                                "type": "string"
                                              },
                                              "issue_events_url": {
                                                "type": "string"
                                              },
                                              "issues_url": {
                                                "type": "string"
                                              },
                                              "keys_url": { "type": "string" },
                                              "labels_url": {
                                                "type": "string"
                                              },
                                              "language": { "type": "string" },
                                              "languages_url": {
                                                "type": "string"
                                              },
                                              "merges_url": {
                                                "type": "string"
                                              },
                                              "milestones_url": {
                                                "type": "string"
                                              },
                                              "mirror_url": {
                                                "type": "string"
                                              },
                                              "name": { "type": "string" },
                                              "network_count": {
                                                "type": "integer"
                                              },
                                              "node_id": { "type": "string" },
                                              "notifications_url": {
                                                "type": "string"
                                              },
                                              "open_issues_count": {
                                                "type": "integer"
                                              },
                                              "owner": {
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "type": "string"
                                                  },
                                                  "id": { "type": "integer" },
                                                  "login": { "type": "string" },
                                                  "node_id": {
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_url": {
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string"
                                                  },
                                                  "type": { "type": "string" },
                                                  "url": { "type": "string" }
                                                },
                                                "type": "object"
                                              },
                                              "permissions": {
                                                "properties": {
                                                  "admin": {
                                                    "type": "boolean"
                                                  },
                                                  "maintain": {
                                                    "type": "boolean"
                                                  },
                                                  "pull": { "type": "boolean" },
                                                  "push": { "type": "boolean" },
                                                  "triage": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "private": { "type": "boolean" },
                                              "pulls_url": { "type": "string" },
                                              "pushed_at": { "type": "string" },
                                              "releases_url": {
                                                "type": "string"
                                              },
                                              "size": { "type": "integer" },
                                              "ssh_url": { "type": "string" },
                                              "stargazers_count": {
                                                "type": "integer"
                                              },
                                              "stargazers_url": {
                                                "type": "string"
                                              },
                                              "statuses_url": {
                                                "type": "string"
                                              },
                                              "subscribers_count": {
                                                "type": "integer"
                                              },
                                              "subscribers_url": {
                                                "type": "string"
                                              },
                                              "subscription_url": {
                                                "type": "string"
                                              },
                                              "svn_url": { "type": "string" },
                                              "tags_url": { "type": "string" },
                                              "teams_url": { "type": "string" },
                                              "temp_clone_token": {
                                                "type": "string"
                                              },
                                              "topics": {
                                                "items": { "type": "string" },
                                                "type": "array"
                                              },
                                              "trees_url": { "type": "string" },
                                              "updated_at": {
                                                "type": "string"
                                              },
                                              "url": { "type": "string" },
                                              "visibility": {
                                                "type": "string"
                                              },
                                              "watchers_count": {
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "topics": {
                                            "items": { "type": "string" },
                                            "type": "array"
                                          },
                                          "trees_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                            "type": "string"
                                          },
                                          "updated_at": {
                                            "example": "2011-01-26T19:14:43Z",
                                            "format": "date-time",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "url": {
                                            "example": "https://api.github.com/repos/octocat/Hello-World",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "visibility": {
                                            "default": "public",
                                            "description": "The repository visibility: public, private, or internal.",
                                            "type": "string"
                                          },
                                          "watchers": { "type": "integer" },
                                          "watchers_count": {
                                            "example": 80,
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "archive_url",
                                          "assignees_url",
                                          "blobs_url",
                                          "branches_url",
                                          "collaborators_url",
                                          "comments_url",
                                          "commits_url",
                                          "compare_url",
                                          "contents_url",
                                          "contributors_url",
                                          "deployments_url",
                                          "description",
                                          "downloads_url",
                                          "events_url",
                                          "fork",
                                          "forks_url",
                                          "full_name",
                                          "git_commits_url",
                                          "git_refs_url",
                                          "git_tags_url",
                                          "hooks_url",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "issue_comment_url",
                                          "issue_events_url",
                                          "issues_url",
                                          "keys_url",
                                          "labels_url",
                                          "languages_url",
                                          "merges_url",
                                          "milestones_url",
                                          "name",
                                          "notifications_url",
                                          "owner",
                                          "private",
                                          "pulls_url",
                                          "releases_url",
                                          "stargazers_url",
                                          "statuses_url",
                                          "subscribers_url",
                                          "subscription_url",
                                          "tags_url",
                                          "teams_url",
                                          "trees_url",
                                          "url",
                                          "clone_url",
                                          "default_branch",
                                          "forks",
                                          "forks_count",
                                          "git_url",
                                          "has_downloads",
                                          "has_issues",
                                          "has_projects",
                                          "has_wiki",
                                          "has_pages",
                                          "homepage",
                                          "language",
                                          "archived",
                                          "disabled",
                                          "mirror_url",
                                          "open_issues",
                                          "open_issues_count",
                                          "license",
                                          "pushed_at",
                                          "size",
                                          "ssh_url",
                                          "stargazers_count",
                                          "svn_url",
                                          "watchers",
                                          "watchers_count",
                                          "created_at",
                                          "updated_at"
                                        ],
                                        "title": "Repository",
                                        "type": "object"
                                      }
                                    ],
                                    "nullable": true,
                                    "type": "object"
                                  },
                                  "topics": {
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "trees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "example": "2011-01-26T19:14:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/repos/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "visibility": { "type": "string" },
                                  "watchers": {
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "watchers_count": { "type": "integer" }
                                },
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url"
                                ],
                                "title": "Minimal Repository",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/orgs/github/packages/container/super-linter",
                            "type": "string"
                          },
                          "version_count": {
                            "description": "The number of versions of the package.",
                            "example": 1,
                            "type": "integer"
                          },
                          "visibility": {
                            "enum": ["private", "public"],
                            "example": "private",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "package_type",
                          "visibility",
                          "url",
                          "html_url",
                          "version_count",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Package",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "List packages for the authenticated user's namespace",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/packages/{package_type}/{package_name}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes a package owned by the authenticated user. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#delete-a-package-for-the-authenticated-user"
            },
            "operationId": "packages/delete-package-for-authenticated-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete a package for the authenticated user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Gets a specific package for a package owned by the authenticated user.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#get-a-package-for-the-authenticated-user"
            },
            "operationId": "packages/get-package-for-authenticated-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2019-10-20T14:17:14Z",
                          "html_url": "https://github.com/octocat/octo-name-repo/packages/40201",
                          "id": 40201,
                          "name": "octo-name",
                          "owner": {
                            "avatar_url": "https://avatars.githubusercontent.com/u/209477?v=4",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 209477,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjIwOTQ3Nw==",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": true,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "package_type": "rubygems",
                          "repository": {
                            "archive_url": "https://api.github.com/repos/octocat/octo-name-repo/{archive_format}{/ref}",
                            "assignees_url": "https://api.github.com/repos/octocat/octo-name-repo/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/octo-name-repo/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/octo-name-repo/branches{/branch}",
                            "collaborators_url": "https://api.github.com/repos/octocat/octo-name-repo/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/octo-name-repo/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/octo-name-repo/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/octo-name-repo/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/octo-name-repo/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/octo-name-repo/contributors",
                            "deployments_url": "https://api.github.com/repos/octocat/octo-name-repo/deployments",
                            "description": "Project for octocats",
                            "downloads_url": "https://api.github.com/repos/octocat/octo-name-repo/downloads",
                            "events_url": "https://api.github.com/repos/octocat/octo-name-repo/events",
                            "fork": false,
                            "forks_url": "https://api.github.com/repos/octocat/octo-name-repo/forks",
                            "full_name": "octocat/octo-name-repo",
                            "git_commits_url": "https://api.github.com/repos/octocat/octo-name-repo/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/octo-name-repo/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/octo-name-repo/git/tags{/sha}",
                            "hooks_url": "https://api.github.com/repos/octocat/octo-name-repo/hooks",
                            "html_url": "https://github.com/octocat/octo-name-repo",
                            "id": 216219492,
                            "issue_comment_url": "https://api.github.com/repos/octocat/octo-name-repo/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/octo-name-repo/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/octo-name-repo/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/octo-name-repo/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/octo-name-repo/labels{/name}",
                            "languages_url": "https://api.github.com/repos/octocat/octo-name-repo/languages",
                            "merges_url": "https://api.github.com/repos/octocat/octo-name-repo/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/octo-name-repo/milestones{/number}",
                            "name": "octo-name-repo",
                            "node_id": "MDEwOlJlcG9zaXRvcnkyMTYyMTk0OTI=",
                            "notifications_url": "https://api.github.com/repos/octocat/octo-name-repo/notifications{?since,all,participating}",
                            "owner": {
                              "avatar_url": "https://avatars.githubusercontent.com/u/209477?v=4",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 209477,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjIwOTQ3Nw==",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": true,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/octo-name-repo/pulls{/number}",
                            "releases_url": "https://api.github.com/repos/octocat/octo-name-repo/releases{/id}",
                            "stargazers_url": "https://api.github.com/repos/octocat/octo-name-repo/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/octo-name-repo/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/octo-name-repo/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/octo-name-repo/subscription",
                            "tags_url": "https://api.github.com/repos/octocat/octo-name-repo/tags",
                            "teams_url": "https://api.github.com/repos/octocat/octo-name-repo/teams",
                            "trees_url": "https://api.github.com/repos/octocat/octo-name-repo/git/trees{/sha}",
                            "url": "https://api.github.com/repos/octocat/octo-name-repo"
                          },
                          "updated_at": "2019-10-20T14:17:14Z",
                          "url": "https://api.github.com/users/octocat/packages/rubygems/octo-name",
                          "version_count": 3,
                          "visibility": "public"
                        }
                      }
                    },
                    "schema": {
                      "description": "A software package",
                      "properties": {
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "html_url": {
                          "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the package.",
                          "example": 1,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the package.",
                          "example": "super-linter",
                          "type": "string"
                        },
                        "owner": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "package_type": {
                          "enum": [
                            "npm",
                            "maven",
                            "rubygems",
                            "docker",
                            "nuget",
                            "container"
                          ],
                          "example": "docker",
                          "type": "string"
                        },
                        "repository": {
                          "allOf": [
                            {
                              "description": "Minimal Repository",
                              "properties": {
                                "archive_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                  "type": "string"
                                },
                                "archived": { "type": "boolean" },
                                "assignees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                  "type": "string"
                                },
                                "blobs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                  "type": "string"
                                },
                                "branches_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                  "type": "string"
                                },
                                "clone_url": { "type": "string" },
                                "code_of_conduct": {
                                  "description": "Code Of Conduct",
                                  "properties": {
                                    "body": {
                                      "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "format": "uri",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "key": {
                                      "example": "contributor_covenant",
                                      "type": "string"
                                    },
                                    "name": {
                                      "example": "Contributor Covenant",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "url",
                                    "html_url",
                                    "key",
                                    "name"
                                  ],
                                  "title": "Code Of Conduct",
                                  "type": "object"
                                },
                                "collaborators_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                  "type": "string"
                                },
                                "comments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                  "type": "string"
                                },
                                "commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                  "type": "string"
                                },
                                "compare_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                  "type": "string"
                                },
                                "contents_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                  "type": "string"
                                },
                                "contributors_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "created_at": {
                                  "example": "2011-01-26T19:01:12Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "default_branch": { "type": "string" },
                                "delete_branch_on_merge": { "type": "boolean" },
                                "deployments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "description": {
                                  "example": "This your first repo!",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "disabled": { "type": "boolean" },
                                "downloads_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "fork": { "type": "boolean" },
                                "forks": { "example": 0, "type": "integer" },
                                "forks_count": { "type": "integer" },
                                "forks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "full_name": {
                                  "example": "octocat/Hello-World",
                                  "type": "string"
                                },
                                "git_commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                  "type": "string"
                                },
                                "git_refs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                  "type": "string"
                                },
                                "git_tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                  "type": "string"
                                },
                                "git_url": { "type": "string" },
                                "has_downloads": { "type": "boolean" },
                                "has_issues": { "type": "boolean" },
                                "has_pages": { "type": "boolean" },
                                "has_projects": { "type": "boolean" },
                                "has_wiki": { "type": "boolean" },
                                "homepage": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "hooks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1296269, "type": "integer" },
                                "is_template": { "type": "boolean" },
                                "issue_comment_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                  "type": "string"
                                },
                                "issue_events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                  "type": "string"
                                },
                                "issues_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                  "type": "string"
                                },
                                "keys_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                  "type": "string"
                                },
                                "labels_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                  "type": "string"
                                },
                                "language": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "languages_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "license": {
                                  "nullable": true,
                                  "properties": {
                                    "key": { "type": "string" },
                                    "name": { "type": "string" },
                                    "node_id": { "type": "string" },
                                    "spdx_id": { "type": "string" },
                                    "url": { "type": "string" }
                                  },
                                  "type": "object"
                                },
                                "merges_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "milestones_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                  "type": "string"
                                },
                                "mirror_url": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "name": {
                                  "example": "Hello-World",
                                  "type": "string"
                                },
                                "network_count": { "type": "integer" },
                                "node_id": {
                                  "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                  "type": "string"
                                },
                                "notifications_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                  "type": "string"
                                },
                                "open_issues": {
                                  "example": 0,
                                  "type": "integer"
                                },
                                "open_issues_count": { "type": "integer" },
                                "owner": {
                                  "description": "Simple User",
                                  "nullable": true,
                                  "properties": {
                                    "avatar_url": {
                                      "example": "https://github.com/images/error/octocat_happy.gif",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "email": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "example": "https://api.github.com/users/octocat/events{/privacy}",
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "example": "https://api.github.com/users/octocat/followers",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "example": "https://api.github.com/users/octocat/following{/other_user}",
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "example": "41d064eb2195891e12d0413f63227ea7",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "example": "https://github.com/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "id": { "example": 1, "type": "integer" },
                                    "login": {
                                      "example": "octocat",
                                      "type": "string"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "example": "MDQ6VXNlcjE=",
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "example": "https://api.github.com/users/octocat/orgs",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "example": "https://api.github.com/users/octocat/received_events",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "example": "https://api.github.com/users/octocat/repos",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "site_admin": { "type": "boolean" },
                                    "starred_at": {
                                      "example": "\"2020-07-09T00:17:55Z\"",
                                      "type": "string"
                                    },
                                    "starred_url": {
                                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "example": "https://api.github.com/users/octocat/subscriptions",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": {
                                      "example": "User",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/users/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "title": "Simple User",
                                  "type": "object"
                                },
                                "permissions": {
                                  "properties": {
                                    "admin": { "type": "boolean" },
                                    "maintain": { "type": "boolean" },
                                    "pull": { "type": "boolean" },
                                    "push": { "type": "boolean" },
                                    "triage": { "type": "boolean" }
                                  },
                                  "type": "object"
                                },
                                "private": { "type": "boolean" },
                                "pulls_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                  "type": "string"
                                },
                                "pushed_at": {
                                  "example": "2011-01-26T19:06:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "releases_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                  "type": "string"
                                },
                                "size": { "type": "integer" },
                                "ssh_url": { "type": "string" },
                                "stargazers_count": { "type": "integer" },
                                "stargazers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "statuses_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                  "type": "string"
                                },
                                "subscribers_count": { "type": "integer" },
                                "subscribers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "subscription_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "svn_url": { "type": "string" },
                                "tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "teams_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "temp_clone_token": { "type": "string" },
                                "template_repository": {
                                  "allOf": [
                                    {
                                      "description": "A git repository",
                                      "properties": {
                                        "allow_auto_merge": {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "allow_merge_commit": {
                                          "default": true,
                                          "description": "Whether to allow merge commits for pull requests.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "allow_rebase_merge": {
                                          "default": true,
                                          "description": "Whether to allow rebase merges for pull requests.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "allow_squash_merge": {
                                          "default": true,
                                          "description": "Whether to allow squash merges for pull requests.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "archive_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                          "type": "string"
                                        },
                                        "archived": {
                                          "default": false,
                                          "description": "Whether the repository is archived.",
                                          "type": "boolean"
                                        },
                                        "assignees_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                          "type": "string"
                                        },
                                        "blobs_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                          "type": "string"
                                        },
                                        "branches_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                          "type": "string"
                                        },
                                        "clone_url": {
                                          "example": "https://github.com/octocat/Hello-World.git",
                                          "type": "string"
                                        },
                                        "collaborators_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                          "type": "string"
                                        },
                                        "comments_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                          "type": "string"
                                        },
                                        "commits_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                          "type": "string"
                                        },
                                        "compare_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                          "type": "string"
                                        },
                                        "contents_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                          "type": "string"
                                        },
                                        "contributors_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "created_at": {
                                          "example": "2011-01-26T19:01:12Z",
                                          "format": "date-time",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "default_branch": {
                                          "description": "The default branch of the repository.",
                                          "example": "master",
                                          "type": "string"
                                        },
                                        "delete_branch_on_merge": {
                                          "default": false,
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "deployments_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "description": {
                                          "example": "This your first repo!",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "disabled": {
                                          "description": "Returns whether or not this repository disabled.",
                                          "type": "boolean"
                                        },
                                        "downloads_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "fork": { "type": "boolean" },
                                        "forks": { "type": "integer" },
                                        "forks_count": {
                                          "example": 9,
                                          "type": "integer"
                                        },
                                        "forks_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "full_name": {
                                          "example": "octocat/Hello-World",
                                          "type": "string"
                                        },
                                        "git_commits_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                          "type": "string"
                                        },
                                        "git_refs_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                          "type": "string"
                                        },
                                        "git_tags_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                          "type": "string"
                                        },
                                        "git_url": {
                                          "example": "git:github.com/octocat/Hello-World.git",
                                          "type": "string"
                                        },
                                        "has_downloads": {
                                          "default": true,
                                          "description": "Whether downloads are enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "has_issues": {
                                          "default": true,
                                          "description": "Whether issues are enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "has_pages": { "type": "boolean" },
                                        "has_projects": {
                                          "default": true,
                                          "description": "Whether projects are enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "has_wiki": {
                                          "default": true,
                                          "description": "Whether the wiki is enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "homepage": {
                                          "example": "https://github.com",
                                          "format": "uri",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "hooks_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "example": "https://github.com/octocat/Hello-World",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Unique identifier of the repository",
                                          "example": 42,
                                          "type": "integer"
                                        },
                                        "is_template": {
                                          "default": false,
                                          "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "issue_comment_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                          "type": "string"
                                        },
                                        "issue_events_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                          "type": "string"
                                        },
                                        "issues_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                          "type": "string"
                                        },
                                        "keys_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                          "type": "string"
                                        },
                                        "labels_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                          "type": "string"
                                        },
                                        "language": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "languages_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "license": {
                                          "allOf": [
                                            {
                                              "description": "License Simple",
                                              "properties": {
                                                "html_url": {
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "example": "mit",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "example": "MIT License",
                                                  "type": "string"
                                                },
                                                "node_id": {
                                                  "example": "MDc6TGljZW5zZW1pdA==",
                                                  "type": "string"
                                                },
                                                "spdx_id": {
                                                  "example": "MIT",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "example": "https://api.github.com/licenses/mit",
                                                  "format": "uri",
                                                  "nullable": true,
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "key",
                                                "name",
                                                "url",
                                                "spdx_id",
                                                "node_id"
                                              ],
                                              "title": "License Simple",
                                              "type": "object"
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "master_branch": { "type": "string" },
                                        "merges_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "milestones_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                          "type": "string"
                                        },
                                        "mirror_url": {
                                          "example": "git:git.example.com/octocat/Hello-World",
                                          "format": "uri",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the repository.",
                                          "example": "Team Environment",
                                          "type": "string"
                                        },
                                        "network_count": { "type": "integer" },
                                        "node_id": {
                                          "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                          "type": "string"
                                        },
                                        "notifications_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                          "type": "string"
                                        },
                                        "open_issues": { "type": "integer" },
                                        "open_issues_count": {
                                          "example": 0,
                                          "type": "integer"
                                        },
                                        "organization": {
                                          "allOf": [
                                            {
                                              "description": "Simple User",
                                              "nullable": true,
                                              "properties": {
                                                "avatar_url": {
                                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "email": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "events_url": {
                                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                  "type": "string"
                                                },
                                                "followers_url": {
                                                  "example": "https://api.github.com/users/octocat/followers",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "following_url": {
                                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                  "type": "string"
                                                },
                                                "gists_url": {
                                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                  "type": "string"
                                                },
                                                "gravatar_id": {
                                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "example": "https://github.com/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "example": 1,
                                                  "type": "integer"
                                                },
                                                "login": {
                                                  "example": "octocat",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "node_id": {
                                                  "example": "MDQ6VXNlcjE=",
                                                  "type": "string"
                                                },
                                                "organizations_url": {
                                                  "example": "https://api.github.com/users/octocat/orgs",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "received_events_url": {
                                                  "example": "https://api.github.com/users/octocat/received_events",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "repos_url": {
                                                  "example": "https://api.github.com/users/octocat/repos",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "site_admin": {
                                                  "type": "boolean"
                                                },
                                                "starred_at": {
                                                  "example": "\"2020-07-09T00:17:55Z\"",
                                                  "type": "string"
                                                },
                                                "starred_url": {
                                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                  "type": "string"
                                                },
                                                "subscriptions_url": {
                                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "example": "User",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "example": "https://api.github.com/users/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "avatar_url",
                                                "events_url",
                                                "followers_url",
                                                "following_url",
                                                "gists_url",
                                                "gravatar_id",
                                                "html_url",
                                                "id",
                                                "node_id",
                                                "login",
                                                "organizations_url",
                                                "received_events_url",
                                                "repos_url",
                                                "site_admin",
                                                "starred_url",
                                                "subscriptions_url",
                                                "type",
                                                "url"
                                              ],
                                              "title": "Simple User",
                                              "type": "object"
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "owner": {
                                          "description": "Simple User",
                                          "nullable": true,
                                          "properties": {
                                            "avatar_url": {
                                              "example": "https://github.com/images/error/octocat_happy.gif",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "email": {
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "events_url": {
                                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                                              "type": "string"
                                            },
                                            "followers_url": {
                                              "example": "https://api.github.com/users/octocat/followers",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "following_url": {
                                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                                              "type": "string"
                                            },
                                            "gists_url": {
                                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                              "type": "string"
                                            },
                                            "gravatar_id": {
                                              "example": "41d064eb2195891e12d0413f63227ea7",
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "html_url": {
                                              "example": "https://github.com/octocat",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "id": {
                                              "example": 1,
                                              "type": "integer"
                                            },
                                            "login": {
                                              "example": "octocat",
                                              "type": "string"
                                            },
                                            "name": {
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "node_id": {
                                              "example": "MDQ6VXNlcjE=",
                                              "type": "string"
                                            },
                                            "organizations_url": {
                                              "example": "https://api.github.com/users/octocat/orgs",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "received_events_url": {
                                              "example": "https://api.github.com/users/octocat/received_events",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "repos_url": {
                                              "example": "https://api.github.com/users/octocat/repos",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "site_admin": { "type": "boolean" },
                                            "starred_at": {
                                              "example": "\"2020-07-09T00:17:55Z\"",
                                              "type": "string"
                                            },
                                            "starred_url": {
                                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                              "type": "string"
                                            },
                                            "subscriptions_url": {
                                              "example": "https://api.github.com/users/octocat/subscriptions",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "type": {
                                              "example": "User",
                                              "type": "string"
                                            },
                                            "url": {
                                              "example": "https://api.github.com/users/octocat",
                                              "format": "uri",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "avatar_url",
                                            "events_url",
                                            "followers_url",
                                            "following_url",
                                            "gists_url",
                                            "gravatar_id",
                                            "html_url",
                                            "id",
                                            "node_id",
                                            "login",
                                            "organizations_url",
                                            "received_events_url",
                                            "repos_url",
                                            "site_admin",
                                            "starred_url",
                                            "subscriptions_url",
                                            "type",
                                            "url"
                                          ],
                                          "title": "Simple User",
                                          "type": "object"
                                        },
                                        "permissions": {
                                          "properties": {
                                            "admin": { "type": "boolean" },
                                            "maintain": { "type": "boolean" },
                                            "pull": { "type": "boolean" },
                                            "push": { "type": "boolean" },
                                            "triage": { "type": "boolean" }
                                          },
                                          "required": ["admin", "pull", "push"],
                                          "type": "object"
                                        },
                                        "private": {
                                          "default": false,
                                          "description": "Whether the repository is private or public.",
                                          "type": "boolean"
                                        },
                                        "pulls_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                          "type": "string"
                                        },
                                        "pushed_at": {
                                          "example": "2011-01-26T19:06:43Z",
                                          "format": "date-time",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "releases_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                          "type": "string"
                                        },
                                        "size": {
                                          "example": 108,
                                          "type": "integer"
                                        },
                                        "ssh_url": {
                                          "example": "git@github.com:octocat/Hello-World.git",
                                          "type": "string"
                                        },
                                        "stargazers_count": {
                                          "example": 80,
                                          "type": "integer"
                                        },
                                        "stargazers_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "starred_at": {
                                          "example": "\"2020-07-09T00:17:42Z\"",
                                          "type": "string"
                                        },
                                        "statuses_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                          "type": "string"
                                        },
                                        "subscribers_count": {
                                          "type": "integer"
                                        },
                                        "subscribers_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "subscription_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "svn_url": {
                                          "example": "https://svn.github.com/octocat/Hello-World",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "tags_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "teams_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "temp_clone_token": {
                                          "type": "string"
                                        },
                                        "template_repository": {
                                          "nullable": true,
                                          "properties": {
                                            "allow_auto_merge": {
                                              "type": "boolean"
                                            },
                                            "allow_merge_commit": {
                                              "type": "boolean"
                                            },
                                            "allow_rebase_merge": {
                                              "type": "boolean"
                                            },
                                            "allow_squash_merge": {
                                              "type": "boolean"
                                            },
                                            "archive_url": { "type": "string" },
                                            "archived": { "type": "boolean" },
                                            "assignees_url": {
                                              "type": "string"
                                            },
                                            "blobs_url": { "type": "string" },
                                            "branches_url": {
                                              "type": "string"
                                            },
                                            "clone_url": { "type": "string" },
                                            "collaborators_url": {
                                              "type": "string"
                                            },
                                            "comments_url": {
                                              "type": "string"
                                            },
                                            "commits_url": { "type": "string" },
                                            "compare_url": { "type": "string" },
                                            "contents_url": {
                                              "type": "string"
                                            },
                                            "contributors_url": {
                                              "type": "string"
                                            },
                                            "created_at": { "type": "string" },
                                            "default_branch": {
                                              "type": "string"
                                            },
                                            "delete_branch_on_merge": {
                                              "type": "boolean"
                                            },
                                            "deployments_url": {
                                              "type": "string"
                                            },
                                            "description": { "type": "string" },
                                            "disabled": { "type": "boolean" },
                                            "downloads_url": {
                                              "type": "string"
                                            },
                                            "events_url": { "type": "string" },
                                            "fork": { "type": "boolean" },
                                            "forks_count": {
                                              "type": "integer"
                                            },
                                            "forks_url": { "type": "string" },
                                            "full_name": { "type": "string" },
                                            "git_commits_url": {
                                              "type": "string"
                                            },
                                            "git_refs_url": {
                                              "type": "string"
                                            },
                                            "git_tags_url": {
                                              "type": "string"
                                            },
                                            "git_url": { "type": "string" },
                                            "has_downloads": {
                                              "type": "boolean"
                                            },
                                            "has_issues": { "type": "boolean" },
                                            "has_pages": { "type": "boolean" },
                                            "has_projects": {
                                              "type": "boolean"
                                            },
                                            "has_wiki": { "type": "boolean" },
                                            "homepage": { "type": "string" },
                                            "hooks_url": { "type": "string" },
                                            "html_url": { "type": "string" },
                                            "id": { "type": "integer" },
                                            "is_template": {
                                              "type": "boolean"
                                            },
                                            "issue_comment_url": {
                                              "type": "string"
                                            },
                                            "issue_events_url": {
                                              "type": "string"
                                            },
                                            "issues_url": { "type": "string" },
                                            "keys_url": { "type": "string" },
                                            "labels_url": { "type": "string" },
                                            "language": { "type": "string" },
                                            "languages_url": {
                                              "type": "string"
                                            },
                                            "merges_url": { "type": "string" },
                                            "milestones_url": {
                                              "type": "string"
                                            },
                                            "mirror_url": { "type": "string" },
                                            "name": { "type": "string" },
                                            "network_count": {
                                              "type": "integer"
                                            },
                                            "node_id": { "type": "string" },
                                            "notifications_url": {
                                              "type": "string"
                                            },
                                            "open_issues_count": {
                                              "type": "integer"
                                            },
                                            "owner": {
                                              "properties": {
                                                "avatar_url": {
                                                  "type": "string"
                                                },
                                                "events_url": {
                                                  "type": "string"
                                                },
                                                "followers_url": {
                                                  "type": "string"
                                                },
                                                "following_url": {
                                                  "type": "string"
                                                },
                                                "gists_url": {
                                                  "type": "string"
                                                },
                                                "gravatar_id": {
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "type": "string"
                                                },
                                                "id": { "type": "integer" },
                                                "login": { "type": "string" },
                                                "node_id": { "type": "string" },
                                                "organizations_url": {
                                                  "type": "string"
                                                },
                                                "received_events_url": {
                                                  "type": "string"
                                                },
                                                "repos_url": {
                                                  "type": "string"
                                                },
                                                "site_admin": {
                                                  "type": "boolean"
                                                },
                                                "starred_url": {
                                                  "type": "string"
                                                },
                                                "subscriptions_url": {
                                                  "type": "string"
                                                },
                                                "type": { "type": "string" },
                                                "url": { "type": "string" }
                                              },
                                              "type": "object"
                                            },
                                            "permissions": {
                                              "properties": {
                                                "admin": { "type": "boolean" },
                                                "maintain": {
                                                  "type": "boolean"
                                                },
                                                "pull": { "type": "boolean" },
                                                "push": { "type": "boolean" },
                                                "triage": { "type": "boolean" }
                                              },
                                              "type": "object"
                                            },
                                            "private": { "type": "boolean" },
                                            "pulls_url": { "type": "string" },
                                            "pushed_at": { "type": "string" },
                                            "releases_url": {
                                              "type": "string"
                                            },
                                            "size": { "type": "integer" },
                                            "ssh_url": { "type": "string" },
                                            "stargazers_count": {
                                              "type": "integer"
                                            },
                                            "stargazers_url": {
                                              "type": "string"
                                            },
                                            "statuses_url": {
                                              "type": "string"
                                            },
                                            "subscribers_count": {
                                              "type": "integer"
                                            },
                                            "subscribers_url": {
                                              "type": "string"
                                            },
                                            "subscription_url": {
                                              "type": "string"
                                            },
                                            "svn_url": { "type": "string" },
                                            "tags_url": { "type": "string" },
                                            "teams_url": { "type": "string" },
                                            "temp_clone_token": {
                                              "type": "string"
                                            },
                                            "topics": {
                                              "items": { "type": "string" },
                                              "type": "array"
                                            },
                                            "trees_url": { "type": "string" },
                                            "updated_at": { "type": "string" },
                                            "url": { "type": "string" },
                                            "visibility": { "type": "string" },
                                            "watchers_count": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "topics": {
                                          "items": { "type": "string" },
                                          "type": "array"
                                        },
                                        "trees_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                          "type": "string"
                                        },
                                        "updated_at": {
                                          "example": "2011-01-26T19:14:43Z",
                                          "format": "date-time",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "url": {
                                          "example": "https://api.github.com/repos/octocat/Hello-World",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "visibility": {
                                          "default": "public",
                                          "description": "The repository visibility: public, private, or internal.",
                                          "type": "string"
                                        },
                                        "watchers": { "type": "integer" },
                                        "watchers_count": {
                                          "example": 80,
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "archive_url",
                                        "assignees_url",
                                        "blobs_url",
                                        "branches_url",
                                        "collaborators_url",
                                        "comments_url",
                                        "commits_url",
                                        "compare_url",
                                        "contents_url",
                                        "contributors_url",
                                        "deployments_url",
                                        "description",
                                        "downloads_url",
                                        "events_url",
                                        "fork",
                                        "forks_url",
                                        "full_name",
                                        "git_commits_url",
                                        "git_refs_url",
                                        "git_tags_url",
                                        "hooks_url",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "issue_comment_url",
                                        "issue_events_url",
                                        "issues_url",
                                        "keys_url",
                                        "labels_url",
                                        "languages_url",
                                        "merges_url",
                                        "milestones_url",
                                        "name",
                                        "notifications_url",
                                        "owner",
                                        "private",
                                        "pulls_url",
                                        "releases_url",
                                        "stargazers_url",
                                        "statuses_url",
                                        "subscribers_url",
                                        "subscription_url",
                                        "tags_url",
                                        "teams_url",
                                        "trees_url",
                                        "url",
                                        "clone_url",
                                        "default_branch",
                                        "forks",
                                        "forks_count",
                                        "git_url",
                                        "has_downloads",
                                        "has_issues",
                                        "has_projects",
                                        "has_wiki",
                                        "has_pages",
                                        "homepage",
                                        "language",
                                        "archived",
                                        "disabled",
                                        "mirror_url",
                                        "open_issues",
                                        "open_issues_count",
                                        "license",
                                        "pushed_at",
                                        "size",
                                        "ssh_url",
                                        "stargazers_count",
                                        "svn_url",
                                        "watchers",
                                        "watchers_count",
                                        "created_at",
                                        "updated_at"
                                      ],
                                      "title": "Repository",
                                      "type": "object"
                                    }
                                  ],
                                  "nullable": true,
                                  "type": "object"
                                },
                                "topics": {
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "trees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                  "type": "string"
                                },
                                "updated_at": {
                                  "example": "2011-01-26T19:14:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/repos/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "visibility": { "type": "string" },
                                "watchers": { "example": 0, "type": "integer" },
                                "watchers_count": { "type": "integer" }
                              },
                              "required": [
                                "archive_url",
                                "assignees_url",
                                "blobs_url",
                                "branches_url",
                                "collaborators_url",
                                "comments_url",
                                "commits_url",
                                "compare_url",
                                "contents_url",
                                "contributors_url",
                                "deployments_url",
                                "description",
                                "downloads_url",
                                "events_url",
                                "fork",
                                "forks_url",
                                "full_name",
                                "git_commits_url",
                                "git_refs_url",
                                "git_tags_url",
                                "hooks_url",
                                "html_url",
                                "id",
                                "node_id",
                                "issue_comment_url",
                                "issue_events_url",
                                "issues_url",
                                "keys_url",
                                "labels_url",
                                "languages_url",
                                "merges_url",
                                "milestones_url",
                                "name",
                                "notifications_url",
                                "owner",
                                "private",
                                "pulls_url",
                                "releases_url",
                                "stargazers_url",
                                "statuses_url",
                                "subscribers_url",
                                "subscription_url",
                                "tags_url",
                                "teams_url",
                                "trees_url",
                                "url"
                              ],
                              "title": "Minimal Repository",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/github/packages/container/super-linter",
                          "type": "string"
                        },
                        "version_count": {
                          "description": "The number of versions of the package.",
                          "example": 1,
                          "type": "integer"
                        },
                        "visibility": {
                          "enum": ["private", "public"],
                          "example": "private",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "package_type",
                        "visibility",
                        "url",
                        "html_url",
                        "version_count",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Package",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a package for the authenticated user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/packages/{package_type}/{package_name}/restore",
        {
          "post": {
            "deprecated": null,
            "description": "Restores a package owned by the authenticated user.\n\nYou can restore a deleted package under the following conditions:\n  - The package was deleted within the last 30 days.\n  - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. If `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#restore-a-package-for-the-authenticated-user"
            },
            "operationId": "packages/restore-package-for-authenticated-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "package token",
                "in": "query",
                "name": "token",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Restore a package for the authenticated user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/packages/{package_type}/{package_name}/versions",
        {
          "get": {
            "deprecated": null,
            "description": "Returns all package versions for a package owned by the authenticated user.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#get-all-package-versions-for-a-package-owned-by-the-authenticated-user"
            },
            "operationId": "packages/get-all-package-versions-for-package-owned-by-authenticated-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": { "default": 1, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "Results per page (max 100)",
                "in": "query",
                "name": "per_page",
                "required": false,
                "schema": { "default": 30, "type": "integer" },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "The state of the package, either active or deleted.",
                "in": "query",
                "name": "state",
                "required": false,
                "schema": {
                  "default": "active",
                  "enum": ["active", "deleted"],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2020-09-11T21:56:40Z",
                            "html_url": "https://github.com/users/octocat/packages/container/hello_docker/45763",
                            "id": 45763,
                            "metadata": {
                              "container": { "tags": ["latest"] },
                              "package_type": "container"
                            },
                            "name": "sha256:08a44bab0bddaddd8837a8b381aebc2e4b933768b981685a9e088360af0d3dd9",
                            "package_html_url": "https://github.com/users/octocat/packages/container/package/hello_docker",
                            "updated_at": "2021-02-05T21:32:32Z",
                            "url": "https://api.github.com/users/octocat/packages/container/hello_docker/versions/45763"
                          },
                          {
                            "created_at": "2020-05-21T22:22:20Z",
                            "html_url": "https://github.com/users/octocat/packages/container/hello_docker/881",
                            "id": 881,
                            "metadata": {
                              "container": { "tags": [] },
                              "package_type": "container"
                            },
                            "name": "sha256:b3d3e366b55f9a54599220198b3db5da8f53592acbbb7dc7e4e9878762fc5344",
                            "package_html_url": "https://github.com/users/octocat/packages/container/package/hello_docker",
                            "updated_at": "2021-02-05T21:32:32Z",
                            "url": "https://api.github.com/users/octocat/packages/container/hello_docker/versions/881"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "A version of a software package",
                        "properties": {
                          "created_at": {
                            "example": "2011-04-10T20:09:31Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deleted_at": {
                            "example": "2014-03-03T18:58:10Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": { "type": "string" },
                          "html_url": {
                            "example": "https://github.com/orgs/github/packages/container/super-linter/786068",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the package version.",
                            "example": 1,
                            "type": "integer"
                          },
                          "license": { "example": "MIT", "type": "string" },
                          "metadata": {
                            "properties": {
                              "container": {
                                "properties": { "tags": { "type": "array" } },
                                "required": ["tags"],
                                "title": "Container Metadata",
                                "type": "object"
                              },
                              "docker": {
                                "properties": { "tag": { "type": "array" } },
                                "required": ["tags"],
                                "title": "Docker Metadata",
                                "type": "object"
                              },
                              "package_type": {
                                "enum": [
                                  "npm",
                                  "maven",
                                  "rubygems",
                                  "docker",
                                  "nuget",
                                  "container"
                                ],
                                "example": "docker",
                                "type": "string"
                              }
                            },
                            "required": ["package_type"],
                            "title": "Package Version Metadata",
                            "type": "object"
                          },
                          "name": {
                            "description": "The name of the package version.",
                            "example": "latest",
                            "type": "string"
                          },
                          "package_html_url": {
                            "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                            "type": "string"
                          },
                          "updated_at": {
                            "example": "2014-03-03T18:58:10Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/orgs/github/packages/container/super-linter/versions/786068",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "url",
                          "package_html_url",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Package Version",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Get all package versions for a package owned by the authenticated user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {
              "changes": [
                {
                  "before": {
                    "operationId": "packages/get-all-package-versions-for-a-package-owned-by-the-authenticated-user"
                  },
                  "date": "2021-03-24",
                  "type": "OPERATION"
                }
              ]
            }
          }
        }
      ],
      [
        "/user/packages/{package_type}/{package_name}/versions/{package_version_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes a specific package version for a package owned by the authenticated user.  If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.\n\nTo use this endpoint, you must have admin permissions in the organization and authenticate using an access token with the `packages:read` and `packages:delete` scopes.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#delete-a-package-version-for-the-authenticated-user"
            },
            "operationId": "packages/delete-package-version-for-authenticated-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Unique identifier of the package version.",
                "in": "path",
                "name": "package_version_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete a package version for the authenticated user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Gets a specific package version for a package owned by the authenticated user.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#get-a-package-version-for-the-authenticated-user"
            },
            "operationId": "packages/get-package-version-for-authenticated-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Unique identifier of the package version.",
                "in": "path",
                "name": "package_version_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2020-05-15T03:46:45Z",
                          "html_url": "https://github.com/users/octocat/packages/container/hello_docker/214",
                          "id": 214,
                          "metadata": {
                            "container": { "tags": ["1.13.6"] },
                            "package_type": "container"
                          },
                          "name": "sha256:3561f0cff06caccddb99c93bd26e712fcc56a811de0f8ea7a17bb865f30b176a",
                          "package_html_url": "https://github.com/users/octocat/packages/container/package/hello_docker",
                          "updated_at": "2020-05-15T03:46:45Z",
                          "url": "https://api.github.com/users/octocat/packages/container/hello_docker/versions/214"
                        }
                      }
                    },
                    "schema": {
                      "description": "A version of a software package",
                      "properties": {
                        "created_at": {
                          "example": "2011-04-10T20:09:31Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "deleted_at": {
                          "example": "2014-03-03T18:58:10Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": { "type": "string" },
                        "html_url": {
                          "example": "https://github.com/orgs/github/packages/container/super-linter/786068",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the package version.",
                          "example": 1,
                          "type": "integer"
                        },
                        "license": { "example": "MIT", "type": "string" },
                        "metadata": {
                          "properties": {
                            "container": {
                              "properties": { "tags": { "type": "array" } },
                              "required": ["tags"],
                              "title": "Container Metadata",
                              "type": "object"
                            },
                            "docker": {
                              "properties": { "tag": { "type": "array" } },
                              "required": ["tags"],
                              "title": "Docker Metadata",
                              "type": "object"
                            },
                            "package_type": {
                              "enum": [
                                "npm",
                                "maven",
                                "rubygems",
                                "docker",
                                "nuget",
                                "container"
                              ],
                              "example": "docker",
                              "type": "string"
                            }
                          },
                          "required": ["package_type"],
                          "title": "Package Version Metadata",
                          "type": "object"
                        },
                        "name": {
                          "description": "The name of the package version.",
                          "example": "latest",
                          "type": "string"
                        },
                        "package_html_url": {
                          "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                          "type": "string"
                        },
                        "updated_at": {
                          "example": "2014-03-03T18:58:10Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/github/packages/container/super-linter/versions/786068",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "url",
                        "package_html_url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Package Version",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a package version for the authenticated user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore",
        {
          "post": {
            "deprecated": null,
            "description": "Restores a package version owned by the authenticated user.\n\nYou can restore a deleted package version under the following conditions:\n  - The package was deleted within the last 30 days.\n  - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. If `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#restore-a-package-version-for-the-authenticated-user"
            },
            "operationId": "packages/restore-package-version-for-authenticated-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Unique identifier of the package version.",
                "in": "path",
                "name": "package_version_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Restore a package version for the authenticated user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/user/{username}/packages",
        {
          "get": {
            "deprecated": null,
            "description": "Lists all packages in a user's namespace for which the requesting user has access.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#list-packages-for-user"
            },
            "operationId": "packages/list-packages-for-user",
            "parameters": [
              {
                "allowReserved": null,
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "query",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "allowReserved": null,
                "description": "The selected visibility of the packages. Can be one of `public`, `private`, or `internal`. Only `container` package_types currently support `internal` visibility properly. For other ecosystems `internal` is synonymous with `private`. This parameter is optional and only filters an existing result set.",
                "in": "query",
                "name": "visibility",
                "required": false,
                "schema": {
                  "enum": ["public", "private", "internal"],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2020-05-19T22:19:11Z",
                            "html_url": "https://github.com/orgs/github/packages/container/package/hello_docker",
                            "id": 197,
                            "name": "hello_docker",
                            "owner": {
                              "avatar_url": "https://avatars.monalisausercontent.com/u/9919?v=4",
                              "events_url": "https://api.github.com/users/github/events{/privacy}",
                              "followers_url": "https://api.github.com/users/github/followers",
                              "following_url": "https://api.github.com/users/github/following{/other_user}",
                              "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/github",
                              "id": 9919,
                              "login": "monalisa",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                              "organizations_url": "https://api.github.com/users/github/orgs",
                              "received_events_url": "https://api.github.com/users/github/received_events",
                              "repos_url": "https://api.github.com/users/github/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/monalisa"
                            },
                            "package_type": "container",
                            "updated_at": "2020-05-19T22:19:11Z",
                            "url": "https://api.github.com/orgs/github/packages/container/hello_docker",
                            "version_count": 1,
                            "visibility": "private"
                          },
                          {
                            "created_at": "2020-05-20T22:19:11Z",
                            "html_url": "https://github.com/user/monalisa/packages/container/package/goodbye_docker",
                            "id": 198,
                            "name": "goodbye_docker",
                            "owner": {
                              "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                              "events_url": "https://api.github.com/users/github/events{/privacy}",
                              "followers_url": "https://api.github.com/users/github/followers",
                              "following_url": "https://api.github.com/users/github/following{/other_user}",
                              "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/github",
                              "id": 9919,
                              "login": "github",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                              "organizations_url": "https://api.github.com/users/github/orgs",
                              "received_events_url": "https://api.github.com/users/github/received_events",
                              "repos_url": "https://api.github.com/users/github/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/monalisa"
                            },
                            "package_type": "container",
                            "updated_at": "2020-05-20T22:19:11Z",
                            "url": "https://api.github.com/user/monalisa/packages/container/goodbye_docker",
                            "version_count": 2,
                            "visibility": "private"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "A software package",
                        "properties": {
                          "created_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the package.",
                            "example": 1,
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the package.",
                            "example": "super-linter",
                            "type": "string"
                          },
                          "owner": {
                            "allOf": [
                              {
                                "description": "Simple User",
                                "nullable": true,
                                "properties": {
                                  "avatar_url": {
                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "email": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                    "type": "string"
                                  },
                                  "followers_url": {
                                    "example": "https://api.github.com/users/octocat/followers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "following_url": {
                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                    "type": "string"
                                  },
                                  "gists_url": {
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                    "type": "string"
                                  },
                                  "gravatar_id": {
                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": { "example": 1, "type": "integer" },
                                  "login": {
                                    "example": "octocat",
                                    "type": "string"
                                  },
                                  "name": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "example": "MDQ6VXNlcjE=",
                                    "type": "string"
                                  },
                                  "organizations_url": {
                                    "example": "https://api.github.com/users/octocat/orgs",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "received_events_url": {
                                    "example": "https://api.github.com/users/octocat/received_events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "repos_url": {
                                    "example": "https://api.github.com/users/octocat/repos",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "site_admin": { "type": "boolean" },
                                  "starred_at": {
                                    "example": "\"2020-07-09T00:17:55Z\"",
                                    "type": "string"
                                  },
                                  "starred_url": {
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                    "type": "string"
                                  },
                                  "subscriptions_url": {
                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "type": {
                                    "example": "User",
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/users/octocat",
                                    "format": "uri",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "title": "Simple User",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "package_type": {
                            "enum": [
                              "npm",
                              "maven",
                              "rubygems",
                              "docker",
                              "nuget",
                              "container"
                            ],
                            "example": "docker",
                            "type": "string"
                          },
                          "repository": {
                            "allOf": [
                              {
                                "description": "Minimal Repository",
                                "properties": {
                                  "archive_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                    "type": "string"
                                  },
                                  "archived": { "type": "boolean" },
                                  "assignees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                    "type": "string"
                                  },
                                  "clone_url": { "type": "string" },
                                  "code_of_conduct": {
                                    "description": "Code Of Conduct",
                                    "properties": {
                                      "body": {
                                        "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "format": "uri",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "key": {
                                        "example": "contributor_covenant",
                                        "type": "string"
                                      },
                                      "name": {
                                        "example": "Contributor Covenant",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "url",
                                      "html_url",
                                      "key",
                                      "name"
                                    ],
                                    "title": "Code Of Conduct",
                                    "type": "object"
                                  },
                                  "collaborators_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "example": "2011-01-26T19:01:12Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "default_branch": { "type": "string" },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "description": {
                                    "example": "This your first repo!",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "disabled": { "type": "boolean" },
                                  "downloads_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "fork": { "type": "boolean" },
                                  "forks": { "example": 0, "type": "integer" },
                                  "forks_count": { "type": "integer" },
                                  "forks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "example": "octocat/Hello-World",
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                    "type": "string"
                                  },
                                  "git_url": { "type": "string" },
                                  "has_downloads": { "type": "boolean" },
                                  "has_issues": { "type": "boolean" },
                                  "has_pages": { "type": "boolean" },
                                  "has_projects": { "type": "boolean" },
                                  "has_wiki": { "type": "boolean" },
                                  "homepage": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "example": "https://github.com/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "id": {
                                    "example": 1296269,
                                    "type": "integer"
                                  },
                                  "is_template": { "type": "boolean" },
                                  "issue_comment_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                    "type": "string"
                                  },
                                  "language": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "license": {
                                    "nullable": true,
                                    "properties": {
                                      "key": { "type": "string" },
                                      "name": { "type": "string" },
                                      "node_id": { "type": "string" },
                                      "spdx_id": { "type": "string" },
                                      "url": { "type": "string" }
                                    },
                                    "type": "object"
                                  },
                                  "merges_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "Hello-World",
                                    "type": "string"
                                  },
                                  "network_count": { "type": "integer" },
                                  "node_id": {
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                    "type": "string"
                                  },
                                  "open_issues": {
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "open_issues_count": { "type": "integer" },
                                  "owner": {
                                    "description": "Simple User",
                                    "nullable": true,
                                    "properties": {
                                      "avatar_url": {
                                        "example": "https://github.com/images/error/octocat_happy.gif",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "email": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "example": "https://api.github.com/users/octocat/events{/privacy}",
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "example": "https://api.github.com/users/octocat/followers",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "example": "https://api.github.com/users/octocat/following{/other_user}",
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "example": "41d064eb2195891e12d0413f63227ea7",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "example": "https://github.com/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "id": { "example": 1, "type": "integer" },
                                      "login": {
                                        "example": "octocat",
                                        "type": "string"
                                      },
                                      "name": {
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "example": "MDQ6VXNlcjE=",
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "example": "https://api.github.com/users/octocat/orgs",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "example": "https://api.github.com/users/octocat/received_events",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "example": "https://api.github.com/users/octocat/repos",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "site_admin": { "type": "boolean" },
                                      "starred_at": {
                                        "example": "\"2020-07-09T00:17:55Z\"",
                                        "type": "string"
                                      },
                                      "starred_url": {
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "example": "https://api.github.com/users/octocat/subscriptions",
                                        "format": "uri",
                                        "type": "string"
                                      },
                                      "type": {
                                        "example": "User",
                                        "type": "string"
                                      },
                                      "url": {
                                        "example": "https://api.github.com/users/octocat",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "title": "Simple User",
                                    "type": "object"
                                  },
                                  "permissions": {
                                    "properties": {
                                      "admin": { "type": "boolean" },
                                      "maintain": { "type": "boolean" },
                                      "pull": { "type": "boolean" },
                                      "push": { "type": "boolean" },
                                      "triage": { "type": "boolean" }
                                    },
                                    "type": "object"
                                  },
                                  "private": { "type": "boolean" },
                                  "pulls_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "example": "2011-01-26T19:06:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                    "type": "string"
                                  },
                                  "size": { "type": "integer" },
                                  "ssh_url": { "type": "string" },
                                  "stargazers_count": { "type": "integer" },
                                  "stargazers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                    "type": "string"
                                  },
                                  "subscribers_count": { "type": "integer" },
                                  "subscribers_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "svn_url": { "type": "string" },
                                  "tags_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "temp_clone_token": { "type": "string" },
                                  "template_repository": {
                                    "allOf": [
                                      {
                                        "description": "A git repository",
                                        "properties": {
                                          "allow_auto_merge": {
                                            "default": false,
                                            "description": "Whether to allow Auto-merge to be used on pull requests.",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "allow_merge_commit": {
                                            "default": true,
                                            "description": "Whether to allow merge commits for pull requests.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "allow_rebase_merge": {
                                            "default": true,
                                            "description": "Whether to allow rebase merges for pull requests.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "allow_squash_merge": {
                                            "default": true,
                                            "description": "Whether to allow squash merges for pull requests.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "archive_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                            "type": "string"
                                          },
                                          "archived": {
                                            "default": false,
                                            "description": "Whether the repository is archived.",
                                            "type": "boolean"
                                          },
                                          "assignees_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                            "type": "string"
                                          },
                                          "blobs_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                            "type": "string"
                                          },
                                          "branches_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                            "type": "string"
                                          },
                                          "clone_url": {
                                            "example": "https://github.com/octocat/Hello-World.git",
                                            "type": "string"
                                          },
                                          "collaborators_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                            "type": "string"
                                          },
                                          "comments_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                            "type": "string"
                                          },
                                          "commits_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                            "type": "string"
                                          },
                                          "compare_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                            "type": "string"
                                          },
                                          "contents_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                            "type": "string"
                                          },
                                          "contributors_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "created_at": {
                                            "example": "2011-01-26T19:01:12Z",
                                            "format": "date-time",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "default_branch": {
                                            "description": "The default branch of the repository.",
                                            "example": "master",
                                            "type": "string"
                                          },
                                          "delete_branch_on_merge": {
                                            "default": false,
                                            "description": "Whether to delete head branches when pull requests are merged",
                                            "example": false,
                                            "type": "boolean"
                                          },
                                          "deployments_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "description": {
                                            "example": "This your first repo!",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "disabled": {
                                            "description": "Returns whether or not this repository disabled.",
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "fork": { "type": "boolean" },
                                          "forks": { "type": "integer" },
                                          "forks_count": {
                                            "example": 9,
                                            "type": "integer"
                                          },
                                          "forks_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "full_name": {
                                            "example": "octocat/Hello-World",
                                            "type": "string"
                                          },
                                          "git_commits_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                            "type": "string"
                                          },
                                          "git_refs_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                            "type": "string"
                                          },
                                          "git_tags_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                            "type": "string"
                                          },
                                          "git_url": {
                                            "example": "git:github.com/octocat/Hello-World.git",
                                            "type": "string"
                                          },
                                          "has_downloads": {
                                            "default": true,
                                            "description": "Whether downloads are enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "has_issues": {
                                            "default": true,
                                            "description": "Whether issues are enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "has_pages": { "type": "boolean" },
                                          "has_projects": {
                                            "default": true,
                                            "description": "Whether projects are enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "has_wiki": {
                                            "default": true,
                                            "description": "Whether the wiki is enabled.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "homepage": {
                                            "example": "https://github.com",
                                            "format": "uri",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "hooks_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "example": "https://github.com/octocat/Hello-World",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "id": {
                                            "description": "Unique identifier of the repository",
                                            "example": 42,
                                            "type": "integer"
                                          },
                                          "is_template": {
                                            "default": false,
                                            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                            "example": true,
                                            "type": "boolean"
                                          },
                                          "issue_comment_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                            "type": "string"
                                          },
                                          "issue_events_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                            "type": "string"
                                          },
                                          "issues_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                            "type": "string"
                                          },
                                          "keys_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                            "type": "string"
                                          },
                                          "labels_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                            "type": "string"
                                          },
                                          "language": {
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "languages_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "license": {
                                            "allOf": [
                                              {
                                                "description": "License Simple",
                                                "properties": {
                                                  "html_url": {
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "key": {
                                                    "example": "mit",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "example": "MIT License",
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "example": "MDc6TGljZW5zZW1pdA==",
                                                    "type": "string"
                                                  },
                                                  "spdx_id": {
                                                    "example": "MIT",
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "example": "https://api.github.com/licenses/mit",
                                                    "format": "uri",
                                                    "nullable": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "key",
                                                  "name",
                                                  "url",
                                                  "spdx_id",
                                                  "node_id"
                                                ],
                                                "title": "License Simple",
                                                "type": "object"
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "master_branch": { "type": "string" },
                                          "merges_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "milestones_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                            "type": "string"
                                          },
                                          "mirror_url": {
                                            "example": "git:git.example.com/octocat/Hello-World",
                                            "format": "uri",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "The name of the repository.",
                                            "example": "Team Environment",
                                            "type": "string"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                            "type": "string"
                                          },
                                          "notifications_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                            "type": "string"
                                          },
                                          "open_issues": { "type": "integer" },
                                          "open_issues_count": {
                                            "example": 0,
                                            "type": "integer"
                                          },
                                          "organization": {
                                            "allOf": [
                                              {
                                                "description": "Simple User",
                                                "nullable": true,
                                                "properties": {
                                                  "avatar_url": {
                                                    "example": "https://github.com/images/error/octocat_happy.gif",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "email": {
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "example": "https://api.github.com/users/octocat/followers",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "example": "41d064eb2195891e12d0413f63227ea7",
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "example": "https://github.com/octocat",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "example": 1,
                                                    "type": "integer"
                                                  },
                                                  "login": {
                                                    "example": "octocat",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "example": "MDQ6VXNlcjE=",
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "example": "https://api.github.com/users/octocat/orgs",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "example": "https://api.github.com/users/octocat/received_events",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "example": "https://api.github.com/users/octocat/repos",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_at": {
                                                    "example": "\"2020-07-09T00:17:55Z\"",
                                                    "type": "string"
                                                  },
                                                  "starred_url": {
                                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "example": "https://api.github.com/users/octocat/subscriptions",
                                                    "format": "uri",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "example": "User",
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "example": "https://api.github.com/users/octocat",
                                                    "format": "uri",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "avatar_url",
                                                  "events_url",
                                                  "followers_url",
                                                  "following_url",
                                                  "gists_url",
                                                  "gravatar_id",
                                                  "html_url",
                                                  "id",
                                                  "node_id",
                                                  "login",
                                                  "organizations_url",
                                                  "received_events_url",
                                                  "repos_url",
                                                  "site_admin",
                                                  "starred_url",
                                                  "subscriptions_url",
                                                  "type",
                                                  "url"
                                                ],
                                                "title": "Simple User",
                                                "type": "object"
                                              }
                                            ],
                                            "nullable": true
                                          },
                                          "owner": {
                                            "description": "Simple User",
                                            "nullable": true,
                                            "properties": {
                                              "avatar_url": {
                                                "example": "https://github.com/images/error/octocat_happy.gif",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "email": {
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                "type": "string"
                                              },
                                              "followers_url": {
                                                "example": "https://api.github.com/users/octocat/followers",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "following_url": {
                                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                "type": "string"
                                              },
                                              "gists_url": {
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                "type": "string"
                                              },
                                              "gravatar_id": {
                                                "example": "41d064eb2195891e12d0413f63227ea7",
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "example": "https://github.com/octocat",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "id": {
                                                "example": 1,
                                                "type": "integer"
                                              },
                                              "login": {
                                                "example": "octocat",
                                                "type": "string"
                                              },
                                              "name": {
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "node_id": {
                                                "example": "MDQ6VXNlcjE=",
                                                "type": "string"
                                              },
                                              "organizations_url": {
                                                "example": "https://api.github.com/users/octocat/orgs",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "received_events_url": {
                                                "example": "https://api.github.com/users/octocat/received_events",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "repos_url": {
                                                "example": "https://api.github.com/users/octocat/repos",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "example": "\"2020-07-09T00:17:55Z\"",
                                                "type": "string"
                                              },
                                              "starred_url": {
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                "type": "string"
                                              },
                                              "subscriptions_url": {
                                                "example": "https://api.github.com/users/octocat/subscriptions",
                                                "format": "uri",
                                                "type": "string"
                                              },
                                              "type": {
                                                "example": "User",
                                                "type": "string"
                                              },
                                              "url": {
                                                "example": "https://api.github.com/users/octocat",
                                                "format": "uri",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "title": "Simple User",
                                            "type": "object"
                                          },
                                          "permissions": {
                                            "properties": {
                                              "admin": { "type": "boolean" },
                                              "maintain": { "type": "boolean" },
                                              "pull": { "type": "boolean" },
                                              "push": { "type": "boolean" },
                                              "triage": { "type": "boolean" }
                                            },
                                            "required": [
                                              "admin",
                                              "pull",
                                              "push"
                                            ],
                                            "type": "object"
                                          },
                                          "private": {
                                            "default": false,
                                            "description": "Whether the repository is private or public.",
                                            "type": "boolean"
                                          },
                                          "pulls_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                            "type": "string"
                                          },
                                          "pushed_at": {
                                            "example": "2011-01-26T19:06:43Z",
                                            "format": "date-time",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "releases_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                            "type": "string"
                                          },
                                          "size": {
                                            "example": 108,
                                            "type": "integer"
                                          },
                                          "ssh_url": {
                                            "example": "git@github.com:octocat/Hello-World.git",
                                            "type": "string"
                                          },
                                          "stargazers_count": {
                                            "example": 80,
                                            "type": "integer"
                                          },
                                          "stargazers_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "starred_at": {
                                            "example": "\"2020-07-09T00:17:42Z\"",
                                            "type": "string"
                                          },
                                          "statuses_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                            "type": "string"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "subscription_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "svn_url": {
                                            "example": "https://svn.github.com/octocat/Hello-World",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "tags_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "teams_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "temp_clone_token": {
                                            "type": "string"
                                          },
                                          "template_repository": {
                                            "nullable": true,
                                            "properties": {
                                              "allow_auto_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_merge_commit": {
                                                "type": "boolean"
                                              },
                                              "allow_rebase_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_squash_merge": {
                                                "type": "boolean"
                                              },
                                              "archive_url": {
                                                "type": "string"
                                              },
                                              "archived": { "type": "boolean" },
                                              "assignees_url": {
                                                "type": "string"
                                              },
                                              "blobs_url": { "type": "string" },
                                              "branches_url": {
                                                "type": "string"
                                              },
                                              "clone_url": { "type": "string" },
                                              "collaborators_url": {
                                                "type": "string"
                                              },
                                              "comments_url": {
                                                "type": "string"
                                              },
                                              "commits_url": {
                                                "type": "string"
                                              },
                                              "compare_url": {
                                                "type": "string"
                                              },
                                              "contents_url": {
                                                "type": "string"
                                              },
                                              "contributors_url": {
                                                "type": "string"
                                              },
                                              "created_at": {
                                                "type": "string"
                                              },
                                              "default_branch": {
                                                "type": "string"
                                              },
                                              "delete_branch_on_merge": {
                                                "type": "boolean"
                                              },
                                              "deployments_url": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "disabled": { "type": "boolean" },
                                              "downloads_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "fork": { "type": "boolean" },
                                              "forks_count": {
                                                "type": "integer"
                                              },
                                              "forks_url": { "type": "string" },
                                              "full_name": { "type": "string" },
                                              "git_commits_url": {
                                                "type": "string"
                                              },
                                              "git_refs_url": {
                                                "type": "string"
                                              },
                                              "git_tags_url": {
                                                "type": "string"
                                              },
                                              "git_url": { "type": "string" },
                                              "has_downloads": {
                                                "type": "boolean"
                                              },
                                              "has_issues": {
                                                "type": "boolean"
                                              },
                                              "has_pages": {
                                                "type": "boolean"
                                              },
                                              "has_projects": {
                                                "type": "boolean"
                                              },
                                              "has_wiki": { "type": "boolean" },
                                              "homepage": { "type": "string" },
                                              "hooks_url": { "type": "string" },
                                              "html_url": { "type": "string" },
                                              "id": { "type": "integer" },
                                              "is_template": {
                                                "type": "boolean"
                                              },
                                              "issue_comment_url": {
                                                "type": "string"
                                              },
                                              "issue_events_url": {
                                                "type": "string"
                                              },
                                              "issues_url": {
                                                "type": "string"
                                              },
                                              "keys_url": { "type": "string" },
                                              "labels_url": {
                                                "type": "string"
                                              },
                                              "language": { "type": "string" },
                                              "languages_url": {
                                                "type": "string"
                                              },
                                              "merges_url": {
                                                "type": "string"
                                              },
                                              "milestones_url": {
                                                "type": "string"
                                              },
                                              "mirror_url": {
                                                "type": "string"
                                              },
                                              "name": { "type": "string" },
                                              "network_count": {
                                                "type": "integer"
                                              },
                                              "node_id": { "type": "string" },
                                              "notifications_url": {
                                                "type": "string"
                                              },
                                              "open_issues_count": {
                                                "type": "integer"
                                              },
                                              "owner": {
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "type": "string"
                                                  },
                                                  "id": { "type": "integer" },
                                                  "login": { "type": "string" },
                                                  "node_id": {
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_url": {
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string"
                                                  },
                                                  "type": { "type": "string" },
                                                  "url": { "type": "string" }
                                                },
                                                "type": "object"
                                              },
                                              "permissions": {
                                                "properties": {
                                                  "admin": {
                                                    "type": "boolean"
                                                  },
                                                  "maintain": {
                                                    "type": "boolean"
                                                  },
                                                  "pull": { "type": "boolean" },
                                                  "push": { "type": "boolean" },
                                                  "triage": {
                                                    "type": "boolean"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "private": { "type": "boolean" },
                                              "pulls_url": { "type": "string" },
                                              "pushed_at": { "type": "string" },
                                              "releases_url": {
                                                "type": "string"
                                              },
                                              "size": { "type": "integer" },
                                              "ssh_url": { "type": "string" },
                                              "stargazers_count": {
                                                "type": "integer"
                                              },
                                              "stargazers_url": {
                                                "type": "string"
                                              },
                                              "statuses_url": {
                                                "type": "string"
                                              },
                                              "subscribers_count": {
                                                "type": "integer"
                                              },
                                              "subscribers_url": {
                                                "type": "string"
                                              },
                                              "subscription_url": {
                                                "type": "string"
                                              },
                                              "svn_url": { "type": "string" },
                                              "tags_url": { "type": "string" },
                                              "teams_url": { "type": "string" },
                                              "temp_clone_token": {
                                                "type": "string"
                                              },
                                              "topics": {
                                                "items": { "type": "string" },
                                                "type": "array"
                                              },
                                              "trees_url": { "type": "string" },
                                              "updated_at": {
                                                "type": "string"
                                              },
                                              "url": { "type": "string" },
                                              "visibility": {
                                                "type": "string"
                                              },
                                              "watchers_count": {
                                                "type": "integer"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "topics": {
                                            "items": { "type": "string" },
                                            "type": "array"
                                          },
                                          "trees_url": {
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                            "type": "string"
                                          },
                                          "updated_at": {
                                            "example": "2011-01-26T19:14:43Z",
                                            "format": "date-time",
                                            "nullable": true,
                                            "type": "string"
                                          },
                                          "url": {
                                            "example": "https://api.github.com/repos/octocat/Hello-World",
                                            "format": "uri",
                                            "type": "string"
                                          },
                                          "visibility": {
                                            "default": "public",
                                            "description": "The repository visibility: public, private, or internal.",
                                            "type": "string"
                                          },
                                          "watchers": { "type": "integer" },
                                          "watchers_count": {
                                            "example": 80,
                                            "type": "integer"
                                          }
                                        },
                                        "required": [
                                          "archive_url",
                                          "assignees_url",
                                          "blobs_url",
                                          "branches_url",
                                          "collaborators_url",
                                          "comments_url",
                                          "commits_url",
                                          "compare_url",
                                          "contents_url",
                                          "contributors_url",
                                          "deployments_url",
                                          "description",
                                          "downloads_url",
                                          "events_url",
                                          "fork",
                                          "forks_url",
                                          "full_name",
                                          "git_commits_url",
                                          "git_refs_url",
                                          "git_tags_url",
                                          "hooks_url",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "issue_comment_url",
                                          "issue_events_url",
                                          "issues_url",
                                          "keys_url",
                                          "labels_url",
                                          "languages_url",
                                          "merges_url",
                                          "milestones_url",
                                          "name",
                                          "notifications_url",
                                          "owner",
                                          "private",
                                          "pulls_url",
                                          "releases_url",
                                          "stargazers_url",
                                          "statuses_url",
                                          "subscribers_url",
                                          "subscription_url",
                                          "tags_url",
                                          "teams_url",
                                          "trees_url",
                                          "url",
                                          "clone_url",
                                          "default_branch",
                                          "forks",
                                          "forks_count",
                                          "git_url",
                                          "has_downloads",
                                          "has_issues",
                                          "has_projects",
                                          "has_wiki",
                                          "has_pages",
                                          "homepage",
                                          "language",
                                          "archived",
                                          "disabled",
                                          "mirror_url",
                                          "open_issues",
                                          "open_issues_count",
                                          "license",
                                          "pushed_at",
                                          "size",
                                          "ssh_url",
                                          "stargazers_count",
                                          "svn_url",
                                          "watchers",
                                          "watchers_count",
                                          "created_at",
                                          "updated_at"
                                        ],
                                        "title": "Repository",
                                        "type": "object"
                                      }
                                    ],
                                    "nullable": true,
                                    "type": "object"
                                  },
                                  "topics": {
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "trees_url": {
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "example": "2011-01-26T19:14:43Z",
                                    "format": "date-time",
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "url": {
                                    "example": "https://api.github.com/repos/octocat/Hello-World",
                                    "format": "uri",
                                    "type": "string"
                                  },
                                  "visibility": { "type": "string" },
                                  "watchers": {
                                    "example": 0,
                                    "type": "integer"
                                  },
                                  "watchers_count": { "type": "integer" }
                                },
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url"
                                ],
                                "title": "Minimal Repository",
                                "type": "object"
                              }
                            ],
                            "nullable": true
                          },
                          "updated_at": {
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/orgs/github/packages/container/super-linter",
                            "type": "string"
                          },
                          "version_count": {
                            "description": "The number of versions of the package.",
                            "example": 1,
                            "type": "integer"
                          },
                          "visibility": {
                            "enum": ["private", "public"],
                            "example": "private",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "package_type",
                          "visibility",
                          "url",
                          "html_url",
                          "version_count",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Package",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              }
            },
            "summary": "List packages for a user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/packages/{package_type}/{package_name}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes an entire package for a user. You cannot delete a public package if any version of the package has more than 5,000 downloads. In this scenario, contact GitHub support for further assistance.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:\n- If `package_type` is not `container`, your token must also include the `repo` scope.\n- If `package_type` is `container`, you must also have admin permissions to the container you want to delete.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#delete-a-package-for-a-user"
            },
            "operationId": "packages/delete-package-for-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete a package for a user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Gets a specific package metadata for a public package owned by a user.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#get-a-package-for-a-user"
            },
            "operationId": "packages/get-package-for-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2019-10-20T14:17:14Z",
                          "html_url": "https://github.com/octocat/octo-name-repo/packages/40201",
                          "id": 40201,
                          "name": "octo-name",
                          "owner": {
                            "avatar_url": "https://avatars.githubusercontent.com/u/209477?v=4",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 209477,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjIwOTQ3Nw==",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": true,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "package_type": "rubygems",
                          "repository": {
                            "archive_url": "https://api.github.com/repos/octocat/octo-name-repo/{archive_format}{/ref}",
                            "assignees_url": "https://api.github.com/repos/octocat/octo-name-repo/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/octo-name-repo/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/octo-name-repo/branches{/branch}",
                            "collaborators_url": "https://api.github.com/repos/octocat/octo-name-repo/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/octo-name-repo/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/octo-name-repo/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/octo-name-repo/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/octo-name-repo/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/octo-name-repo/contributors",
                            "deployments_url": "https://api.github.com/repos/octocat/octo-name-repo/deployments",
                            "description": "Project for octocats",
                            "downloads_url": "https://api.github.com/repos/octocat/octo-name-repo/downloads",
                            "events_url": "https://api.github.com/repos/octocat/octo-name-repo/events",
                            "fork": false,
                            "forks_url": "https://api.github.com/repos/octocat/octo-name-repo/forks",
                            "full_name": "octocat/octo-name-repo",
                            "git_commits_url": "https://api.github.com/repos/octocat/octo-name-repo/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/octo-name-repo/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/octo-name-repo/git/tags{/sha}",
                            "hooks_url": "https://api.github.com/repos/octocat/octo-name-repo/hooks",
                            "html_url": "https://github.com/octocat/octo-name-repo",
                            "id": 216219492,
                            "issue_comment_url": "https://api.github.com/repos/octocat/octo-name-repo/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/octo-name-repo/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/octo-name-repo/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/octo-name-repo/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/octo-name-repo/labels{/name}",
                            "languages_url": "https://api.github.com/repos/octocat/octo-name-repo/languages",
                            "merges_url": "https://api.github.com/repos/octocat/octo-name-repo/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/octo-name-repo/milestones{/number}",
                            "name": "octo-name-repo",
                            "node_id": "MDEwOlJlcG9zaXRvcnkyMTYyMTk0OTI=",
                            "notifications_url": "https://api.github.com/repos/octocat/octo-name-repo/notifications{?since,all,participating}",
                            "owner": {
                              "avatar_url": "https://avatars.githubusercontent.com/u/209477?v=4",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 209477,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjIwOTQ3Nw==",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": true,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/octo-name-repo/pulls{/number}",
                            "releases_url": "https://api.github.com/repos/octocat/octo-name-repo/releases{/id}",
                            "stargazers_url": "https://api.github.com/repos/octocat/octo-name-repo/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/octo-name-repo/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/octo-name-repo/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/octo-name-repo/subscription",
                            "tags_url": "https://api.github.com/repos/octocat/octo-name-repo/tags",
                            "teams_url": "https://api.github.com/repos/octocat/octo-name-repo/teams",
                            "trees_url": "https://api.github.com/repos/octocat/octo-name-repo/git/trees{/sha}",
                            "url": "https://api.github.com/repos/octocat/octo-name-repo"
                          },
                          "updated_at": "2019-10-20T14:17:14Z",
                          "url": "https://api.github.com/users/octocat/packages/rubygems/octo-name",
                          "version_count": 3,
                          "visibility": "public"
                        }
                      }
                    },
                    "schema": {
                      "description": "A software package",
                      "properties": {
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "html_url": {
                          "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the package.",
                          "example": 1,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the package.",
                          "example": "super-linter",
                          "type": "string"
                        },
                        "owner": {
                          "allOf": [
                            {
                              "description": "Simple User",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": { "nullable": true, "type": "string" },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1, "type": "integer" },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": { "nullable": true, "type": "string" },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": { "type": "boolean" },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": { "example": "User", "type": "string" },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "package_type": {
                          "enum": [
                            "npm",
                            "maven",
                            "rubygems",
                            "docker",
                            "nuget",
                            "container"
                          ],
                          "example": "docker",
                          "type": "string"
                        },
                        "repository": {
                          "allOf": [
                            {
                              "description": "Minimal Repository",
                              "properties": {
                                "archive_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                  "type": "string"
                                },
                                "archived": { "type": "boolean" },
                                "assignees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                  "type": "string"
                                },
                                "blobs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                  "type": "string"
                                },
                                "branches_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                  "type": "string"
                                },
                                "clone_url": { "type": "string" },
                                "code_of_conduct": {
                                  "description": "Code Of Conduct",
                                  "properties": {
                                    "body": {
                                      "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "format": "uri",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "key": {
                                      "example": "contributor_covenant",
                                      "type": "string"
                                    },
                                    "name": {
                                      "example": "Contributor Covenant",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "url",
                                    "html_url",
                                    "key",
                                    "name"
                                  ],
                                  "title": "Code Of Conduct",
                                  "type": "object"
                                },
                                "collaborators_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                  "type": "string"
                                },
                                "comments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                  "type": "string"
                                },
                                "commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                  "type": "string"
                                },
                                "compare_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                  "type": "string"
                                },
                                "contents_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                  "type": "string"
                                },
                                "contributors_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "created_at": {
                                  "example": "2011-01-26T19:01:12Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "default_branch": { "type": "string" },
                                "delete_branch_on_merge": { "type": "boolean" },
                                "deployments_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "description": {
                                  "example": "This your first repo!",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "disabled": { "type": "boolean" },
                                "downloads_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "fork": { "type": "boolean" },
                                "forks": { "example": 0, "type": "integer" },
                                "forks_count": { "type": "integer" },
                                "forks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "full_name": {
                                  "example": "octocat/Hello-World",
                                  "type": "string"
                                },
                                "git_commits_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                  "type": "string"
                                },
                                "git_refs_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                  "type": "string"
                                },
                                "git_tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                  "type": "string"
                                },
                                "git_url": { "type": "string" },
                                "has_downloads": { "type": "boolean" },
                                "has_issues": { "type": "boolean" },
                                "has_pages": { "type": "boolean" },
                                "has_projects": { "type": "boolean" },
                                "has_wiki": { "type": "boolean" },
                                "homepage": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "hooks_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": { "example": 1296269, "type": "integer" },
                                "is_template": { "type": "boolean" },
                                "issue_comment_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                  "type": "string"
                                },
                                "issue_events_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                  "type": "string"
                                },
                                "issues_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                  "type": "string"
                                },
                                "keys_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                  "type": "string"
                                },
                                "labels_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                  "type": "string"
                                },
                                "language": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "languages_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "license": {
                                  "nullable": true,
                                  "properties": {
                                    "key": { "type": "string" },
                                    "name": { "type": "string" },
                                    "node_id": { "type": "string" },
                                    "spdx_id": { "type": "string" },
                                    "url": { "type": "string" }
                                  },
                                  "type": "object"
                                },
                                "merges_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "milestones_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                  "type": "string"
                                },
                                "mirror_url": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "name": {
                                  "example": "Hello-World",
                                  "type": "string"
                                },
                                "network_count": { "type": "integer" },
                                "node_id": {
                                  "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                  "type": "string"
                                },
                                "notifications_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                  "type": "string"
                                },
                                "open_issues": {
                                  "example": 0,
                                  "type": "integer"
                                },
                                "open_issues_count": { "type": "integer" },
                                "owner": {
                                  "description": "Simple User",
                                  "nullable": true,
                                  "properties": {
                                    "avatar_url": {
                                      "example": "https://github.com/images/error/octocat_happy.gif",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "email": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "example": "https://api.github.com/users/octocat/events{/privacy}",
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "example": "https://api.github.com/users/octocat/followers",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "example": "https://api.github.com/users/octocat/following{/other_user}",
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "example": "41d064eb2195891e12d0413f63227ea7",
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "example": "https://github.com/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "id": { "example": 1, "type": "integer" },
                                    "login": {
                                      "example": "octocat",
                                      "type": "string"
                                    },
                                    "name": {
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "example": "MDQ6VXNlcjE=",
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "example": "https://api.github.com/users/octocat/orgs",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "example": "https://api.github.com/users/octocat/received_events",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "example": "https://api.github.com/users/octocat/repos",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "site_admin": { "type": "boolean" },
                                    "starred_at": {
                                      "example": "\"2020-07-09T00:17:55Z\"",
                                      "type": "string"
                                    },
                                    "starred_url": {
                                      "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "example": "https://api.github.com/users/octocat/subscriptions",
                                      "format": "uri",
                                      "type": "string"
                                    },
                                    "type": {
                                      "example": "User",
                                      "type": "string"
                                    },
                                    "url": {
                                      "example": "https://api.github.com/users/octocat",
                                      "format": "uri",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "avatar_url",
                                    "events_url",
                                    "followers_url",
                                    "following_url",
                                    "gists_url",
                                    "gravatar_id",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "login",
                                    "organizations_url",
                                    "received_events_url",
                                    "repos_url",
                                    "site_admin",
                                    "starred_url",
                                    "subscriptions_url",
                                    "type",
                                    "url"
                                  ],
                                  "title": "Simple User",
                                  "type": "object"
                                },
                                "permissions": {
                                  "properties": {
                                    "admin": { "type": "boolean" },
                                    "maintain": { "type": "boolean" },
                                    "pull": { "type": "boolean" },
                                    "push": { "type": "boolean" },
                                    "triage": { "type": "boolean" }
                                  },
                                  "type": "object"
                                },
                                "private": { "type": "boolean" },
                                "pulls_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                  "type": "string"
                                },
                                "pushed_at": {
                                  "example": "2011-01-26T19:06:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "releases_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                  "type": "string"
                                },
                                "size": { "type": "integer" },
                                "ssh_url": { "type": "string" },
                                "stargazers_count": { "type": "integer" },
                                "stargazers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "statuses_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                  "type": "string"
                                },
                                "subscribers_count": { "type": "integer" },
                                "subscribers_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "subscription_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "svn_url": { "type": "string" },
                                "tags_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "teams_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "temp_clone_token": { "type": "string" },
                                "template_repository": {
                                  "allOf": [
                                    {
                                      "description": "A git repository",
                                      "properties": {
                                        "allow_auto_merge": {
                                          "default": false,
                                          "description": "Whether to allow Auto-merge to be used on pull requests.",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "allow_merge_commit": {
                                          "default": true,
                                          "description": "Whether to allow merge commits for pull requests.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "allow_rebase_merge": {
                                          "default": true,
                                          "description": "Whether to allow rebase merges for pull requests.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "allow_squash_merge": {
                                          "default": true,
                                          "description": "Whether to allow squash merges for pull requests.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "archive_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                          "type": "string"
                                        },
                                        "archived": {
                                          "default": false,
                                          "description": "Whether the repository is archived.",
                                          "type": "boolean"
                                        },
                                        "assignees_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                          "type": "string"
                                        },
                                        "blobs_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                          "type": "string"
                                        },
                                        "branches_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                          "type": "string"
                                        },
                                        "clone_url": {
                                          "example": "https://github.com/octocat/Hello-World.git",
                                          "type": "string"
                                        },
                                        "collaborators_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                          "type": "string"
                                        },
                                        "comments_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                          "type": "string"
                                        },
                                        "commits_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                          "type": "string"
                                        },
                                        "compare_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                          "type": "string"
                                        },
                                        "contents_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                          "type": "string"
                                        },
                                        "contributors_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "created_at": {
                                          "example": "2011-01-26T19:01:12Z",
                                          "format": "date-time",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "default_branch": {
                                          "description": "The default branch of the repository.",
                                          "example": "master",
                                          "type": "string"
                                        },
                                        "delete_branch_on_merge": {
                                          "default": false,
                                          "description": "Whether to delete head branches when pull requests are merged",
                                          "example": false,
                                          "type": "boolean"
                                        },
                                        "deployments_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "description": {
                                          "example": "This your first repo!",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "disabled": {
                                          "description": "Returns whether or not this repository disabled.",
                                          "type": "boolean"
                                        },
                                        "downloads_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/events",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "fork": { "type": "boolean" },
                                        "forks": { "type": "integer" },
                                        "forks_count": {
                                          "example": 9,
                                          "type": "integer"
                                        },
                                        "forks_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "full_name": {
                                          "example": "octocat/Hello-World",
                                          "type": "string"
                                        },
                                        "git_commits_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                          "type": "string"
                                        },
                                        "git_refs_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                          "type": "string"
                                        },
                                        "git_tags_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                          "type": "string"
                                        },
                                        "git_url": {
                                          "example": "git:github.com/octocat/Hello-World.git",
                                          "type": "string"
                                        },
                                        "has_downloads": {
                                          "default": true,
                                          "description": "Whether downloads are enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "has_issues": {
                                          "default": true,
                                          "description": "Whether issues are enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "has_pages": { "type": "boolean" },
                                        "has_projects": {
                                          "default": true,
                                          "description": "Whether projects are enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "has_wiki": {
                                          "default": true,
                                          "description": "Whether the wiki is enabled.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "homepage": {
                                          "example": "https://github.com",
                                          "format": "uri",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "hooks_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "example": "https://github.com/octocat/Hello-World",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "id": {
                                          "description": "Unique identifier of the repository",
                                          "example": 42,
                                          "type": "integer"
                                        },
                                        "is_template": {
                                          "default": false,
                                          "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                          "example": true,
                                          "type": "boolean"
                                        },
                                        "issue_comment_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                          "type": "string"
                                        },
                                        "issue_events_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                          "type": "string"
                                        },
                                        "issues_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                          "type": "string"
                                        },
                                        "keys_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                          "type": "string"
                                        },
                                        "labels_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                          "type": "string"
                                        },
                                        "language": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "languages_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "license": {
                                          "allOf": [
                                            {
                                              "description": "License Simple",
                                              "properties": {
                                                "html_url": {
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "key": {
                                                  "example": "mit",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "example": "MIT License",
                                                  "type": "string"
                                                },
                                                "node_id": {
                                                  "example": "MDc6TGljZW5zZW1pdA==",
                                                  "type": "string"
                                                },
                                                "spdx_id": {
                                                  "example": "MIT",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "example": "https://api.github.com/licenses/mit",
                                                  "format": "uri",
                                                  "nullable": true,
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "key",
                                                "name",
                                                "url",
                                                "spdx_id",
                                                "node_id"
                                              ],
                                              "title": "License Simple",
                                              "type": "object"
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "master_branch": { "type": "string" },
                                        "merges_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "milestones_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                          "type": "string"
                                        },
                                        "mirror_url": {
                                          "example": "git:git.example.com/octocat/Hello-World",
                                          "format": "uri",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the repository.",
                                          "example": "Team Environment",
                                          "type": "string"
                                        },
                                        "network_count": { "type": "integer" },
                                        "node_id": {
                                          "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                          "type": "string"
                                        },
                                        "notifications_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                          "type": "string"
                                        },
                                        "open_issues": { "type": "integer" },
                                        "open_issues_count": {
                                          "example": 0,
                                          "type": "integer"
                                        },
                                        "organization": {
                                          "allOf": [
                                            {
                                              "description": "Simple User",
                                              "nullable": true,
                                              "properties": {
                                                "avatar_url": {
                                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "email": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "events_url": {
                                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                                  "type": "string"
                                                },
                                                "followers_url": {
                                                  "example": "https://api.github.com/users/octocat/followers",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "following_url": {
                                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                                  "type": "string"
                                                },
                                                "gists_url": {
                                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                                  "type": "string"
                                                },
                                                "gravatar_id": {
                                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "example": "https://github.com/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "example": 1,
                                                  "type": "integer"
                                                },
                                                "login": {
                                                  "example": "octocat",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "node_id": {
                                                  "example": "MDQ6VXNlcjE=",
                                                  "type": "string"
                                                },
                                                "organizations_url": {
                                                  "example": "https://api.github.com/users/octocat/orgs",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "received_events_url": {
                                                  "example": "https://api.github.com/users/octocat/received_events",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "repos_url": {
                                                  "example": "https://api.github.com/users/octocat/repos",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "site_admin": {
                                                  "type": "boolean"
                                                },
                                                "starred_at": {
                                                  "example": "\"2020-07-09T00:17:55Z\"",
                                                  "type": "string"
                                                },
                                                "starred_url": {
                                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                                  "type": "string"
                                                },
                                                "subscriptions_url": {
                                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                                  "format": "uri",
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "example": "User",
                                                  "type": "string"
                                                },
                                                "url": {
                                                  "example": "https://api.github.com/users/octocat",
                                                  "format": "uri",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "avatar_url",
                                                "events_url",
                                                "followers_url",
                                                "following_url",
                                                "gists_url",
                                                "gravatar_id",
                                                "html_url",
                                                "id",
                                                "node_id",
                                                "login",
                                                "organizations_url",
                                                "received_events_url",
                                                "repos_url",
                                                "site_admin",
                                                "starred_url",
                                                "subscriptions_url",
                                                "type",
                                                "url"
                                              ],
                                              "title": "Simple User",
                                              "type": "object"
                                            }
                                          ],
                                          "nullable": true
                                        },
                                        "owner": {
                                          "description": "Simple User",
                                          "nullable": true,
                                          "properties": {
                                            "avatar_url": {
                                              "example": "https://github.com/images/error/octocat_happy.gif",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "email": {
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "events_url": {
                                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                                              "type": "string"
                                            },
                                            "followers_url": {
                                              "example": "https://api.github.com/users/octocat/followers",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "following_url": {
                                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                                              "type": "string"
                                            },
                                            "gists_url": {
                                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                              "type": "string"
                                            },
                                            "gravatar_id": {
                                              "example": "41d064eb2195891e12d0413f63227ea7",
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "html_url": {
                                              "example": "https://github.com/octocat",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "id": {
                                              "example": 1,
                                              "type": "integer"
                                            },
                                            "login": {
                                              "example": "octocat",
                                              "type": "string"
                                            },
                                            "name": {
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "node_id": {
                                              "example": "MDQ6VXNlcjE=",
                                              "type": "string"
                                            },
                                            "organizations_url": {
                                              "example": "https://api.github.com/users/octocat/orgs",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "received_events_url": {
                                              "example": "https://api.github.com/users/octocat/received_events",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "repos_url": {
                                              "example": "https://api.github.com/users/octocat/repos",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "site_admin": { "type": "boolean" },
                                            "starred_at": {
                                              "example": "\"2020-07-09T00:17:55Z\"",
                                              "type": "string"
                                            },
                                            "starred_url": {
                                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                              "type": "string"
                                            },
                                            "subscriptions_url": {
                                              "example": "https://api.github.com/users/octocat/subscriptions",
                                              "format": "uri",
                                              "type": "string"
                                            },
                                            "type": {
                                              "example": "User",
                                              "type": "string"
                                            },
                                            "url": {
                                              "example": "https://api.github.com/users/octocat",
                                              "format": "uri",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "avatar_url",
                                            "events_url",
                                            "followers_url",
                                            "following_url",
                                            "gists_url",
                                            "gravatar_id",
                                            "html_url",
                                            "id",
                                            "node_id",
                                            "login",
                                            "organizations_url",
                                            "received_events_url",
                                            "repos_url",
                                            "site_admin",
                                            "starred_url",
                                            "subscriptions_url",
                                            "type",
                                            "url"
                                          ],
                                          "title": "Simple User",
                                          "type": "object"
                                        },
                                        "permissions": {
                                          "properties": {
                                            "admin": { "type": "boolean" },
                                            "maintain": { "type": "boolean" },
                                            "pull": { "type": "boolean" },
                                            "push": { "type": "boolean" },
                                            "triage": { "type": "boolean" }
                                          },
                                          "required": ["admin", "pull", "push"],
                                          "type": "object"
                                        },
                                        "private": {
                                          "default": false,
                                          "description": "Whether the repository is private or public.",
                                          "type": "boolean"
                                        },
                                        "pulls_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                          "type": "string"
                                        },
                                        "pushed_at": {
                                          "example": "2011-01-26T19:06:43Z",
                                          "format": "date-time",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "releases_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                          "type": "string"
                                        },
                                        "size": {
                                          "example": 108,
                                          "type": "integer"
                                        },
                                        "ssh_url": {
                                          "example": "git@github.com:octocat/Hello-World.git",
                                          "type": "string"
                                        },
                                        "stargazers_count": {
                                          "example": 80,
                                          "type": "integer"
                                        },
                                        "stargazers_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "starred_at": {
                                          "example": "\"2020-07-09T00:17:42Z\"",
                                          "type": "string"
                                        },
                                        "statuses_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                          "type": "string"
                                        },
                                        "subscribers_count": {
                                          "type": "integer"
                                        },
                                        "subscribers_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "subscription_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "svn_url": {
                                          "example": "https://svn.github.com/octocat/Hello-World",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "tags_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "teams_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "temp_clone_token": {
                                          "type": "string"
                                        },
                                        "template_repository": {
                                          "nullable": true,
                                          "properties": {
                                            "allow_auto_merge": {
                                              "type": "boolean"
                                            },
                                            "allow_merge_commit": {
                                              "type": "boolean"
                                            },
                                            "allow_rebase_merge": {
                                              "type": "boolean"
                                            },
                                            "allow_squash_merge": {
                                              "type": "boolean"
                                            },
                                            "archive_url": { "type": "string" },
                                            "archived": { "type": "boolean" },
                                            "assignees_url": {
                                              "type": "string"
                                            },
                                            "blobs_url": { "type": "string" },
                                            "branches_url": {
                                              "type": "string"
                                            },
                                            "clone_url": { "type": "string" },
                                            "collaborators_url": {
                                              "type": "string"
                                            },
                                            "comments_url": {
                                              "type": "string"
                                            },
                                            "commits_url": { "type": "string" },
                                            "compare_url": { "type": "string" },
                                            "contents_url": {
                                              "type": "string"
                                            },
                                            "contributors_url": {
                                              "type": "string"
                                            },
                                            "created_at": { "type": "string" },
                                            "default_branch": {
                                              "type": "string"
                                            },
                                            "delete_branch_on_merge": {
                                              "type": "boolean"
                                            },
                                            "deployments_url": {
                                              "type": "string"
                                            },
                                            "description": { "type": "string" },
                                            "disabled": { "type": "boolean" },
                                            "downloads_url": {
                                              "type": "string"
                                            },
                                            "events_url": { "type": "string" },
                                            "fork": { "type": "boolean" },
                                            "forks_count": {
                                              "type": "integer"
                                            },
                                            "forks_url": { "type": "string" },
                                            "full_name": { "type": "string" },
                                            "git_commits_url": {
                                              "type": "string"
                                            },
                                            "git_refs_url": {
                                              "type": "string"
                                            },
                                            "git_tags_url": {
                                              "type": "string"
                                            },
                                            "git_url": { "type": "string" },
                                            "has_downloads": {
                                              "type": "boolean"
                                            },
                                            "has_issues": { "type": "boolean" },
                                            "has_pages": { "type": "boolean" },
                                            "has_projects": {
                                              "type": "boolean"
                                            },
                                            "has_wiki": { "type": "boolean" },
                                            "homepage": { "type": "string" },
                                            "hooks_url": { "type": "string" },
                                            "html_url": { "type": "string" },
                                            "id": { "type": "integer" },
                                            "is_template": {
                                              "type": "boolean"
                                            },
                                            "issue_comment_url": {
                                              "type": "string"
                                            },
                                            "issue_events_url": {
                                              "type": "string"
                                            },
                                            "issues_url": { "type": "string" },
                                            "keys_url": { "type": "string" },
                                            "labels_url": { "type": "string" },
                                            "language": { "type": "string" },
                                            "languages_url": {
                                              "type": "string"
                                            },
                                            "merges_url": { "type": "string" },
                                            "milestones_url": {
                                              "type": "string"
                                            },
                                            "mirror_url": { "type": "string" },
                                            "name": { "type": "string" },
                                            "network_count": {
                                              "type": "integer"
                                            },
                                            "node_id": { "type": "string" },
                                            "notifications_url": {
                                              "type": "string"
                                            },
                                            "open_issues_count": {
                                              "type": "integer"
                                            },
                                            "owner": {
                                              "properties": {
                                                "avatar_url": {
                                                  "type": "string"
                                                },
                                                "events_url": {
                                                  "type": "string"
                                                },
                                                "followers_url": {
                                                  "type": "string"
                                                },
                                                "following_url": {
                                                  "type": "string"
                                                },
                                                "gists_url": {
                                                  "type": "string"
                                                },
                                                "gravatar_id": {
                                                  "type": "string"
                                                },
                                                "html_url": {
                                                  "type": "string"
                                                },
                                                "id": { "type": "integer" },
                                                "login": { "type": "string" },
                                                "node_id": { "type": "string" },
                                                "organizations_url": {
                                                  "type": "string"
                                                },
                                                "received_events_url": {
                                                  "type": "string"
                                                },
                                                "repos_url": {
                                                  "type": "string"
                                                },
                                                "site_admin": {
                                                  "type": "boolean"
                                                },
                                                "starred_url": {
                                                  "type": "string"
                                                },
                                                "subscriptions_url": {
                                                  "type": "string"
                                                },
                                                "type": { "type": "string" },
                                                "url": { "type": "string" }
                                              },
                                              "type": "object"
                                            },
                                            "permissions": {
                                              "properties": {
                                                "admin": { "type": "boolean" },
                                                "maintain": {
                                                  "type": "boolean"
                                                },
                                                "pull": { "type": "boolean" },
                                                "push": { "type": "boolean" },
                                                "triage": { "type": "boolean" }
                                              },
                                              "type": "object"
                                            },
                                            "private": { "type": "boolean" },
                                            "pulls_url": { "type": "string" },
                                            "pushed_at": { "type": "string" },
                                            "releases_url": {
                                              "type": "string"
                                            },
                                            "size": { "type": "integer" },
                                            "ssh_url": { "type": "string" },
                                            "stargazers_count": {
                                              "type": "integer"
                                            },
                                            "stargazers_url": {
                                              "type": "string"
                                            },
                                            "statuses_url": {
                                              "type": "string"
                                            },
                                            "subscribers_count": {
                                              "type": "integer"
                                            },
                                            "subscribers_url": {
                                              "type": "string"
                                            },
                                            "subscription_url": {
                                              "type": "string"
                                            },
                                            "svn_url": { "type": "string" },
                                            "tags_url": { "type": "string" },
                                            "teams_url": { "type": "string" },
                                            "temp_clone_token": {
                                              "type": "string"
                                            },
                                            "topics": {
                                              "items": { "type": "string" },
                                              "type": "array"
                                            },
                                            "trees_url": { "type": "string" },
                                            "updated_at": { "type": "string" },
                                            "url": { "type": "string" },
                                            "visibility": { "type": "string" },
                                            "watchers_count": {
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "topics": {
                                          "items": { "type": "string" },
                                          "type": "array"
                                        },
                                        "trees_url": {
                                          "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                          "type": "string"
                                        },
                                        "updated_at": {
                                          "example": "2011-01-26T19:14:43Z",
                                          "format": "date-time",
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "url": {
                                          "example": "https://api.github.com/repos/octocat/Hello-World",
                                          "format": "uri",
                                          "type": "string"
                                        },
                                        "visibility": {
                                          "default": "public",
                                          "description": "The repository visibility: public, private, or internal.",
                                          "type": "string"
                                        },
                                        "watchers": { "type": "integer" },
                                        "watchers_count": {
                                          "example": 80,
                                          "type": "integer"
                                        }
                                      },
                                      "required": [
                                        "archive_url",
                                        "assignees_url",
                                        "blobs_url",
                                        "branches_url",
                                        "collaborators_url",
                                        "comments_url",
                                        "commits_url",
                                        "compare_url",
                                        "contents_url",
                                        "contributors_url",
                                        "deployments_url",
                                        "description",
                                        "downloads_url",
                                        "events_url",
                                        "fork",
                                        "forks_url",
                                        "full_name",
                                        "git_commits_url",
                                        "git_refs_url",
                                        "git_tags_url",
                                        "hooks_url",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "issue_comment_url",
                                        "issue_events_url",
                                        "issues_url",
                                        "keys_url",
                                        "labels_url",
                                        "languages_url",
                                        "merges_url",
                                        "milestones_url",
                                        "name",
                                        "notifications_url",
                                        "owner",
                                        "private",
                                        "pulls_url",
                                        "releases_url",
                                        "stargazers_url",
                                        "statuses_url",
                                        "subscribers_url",
                                        "subscription_url",
                                        "tags_url",
                                        "teams_url",
                                        "trees_url",
                                        "url",
                                        "clone_url",
                                        "default_branch",
                                        "forks",
                                        "forks_count",
                                        "git_url",
                                        "has_downloads",
                                        "has_issues",
                                        "has_projects",
                                        "has_wiki",
                                        "has_pages",
                                        "homepage",
                                        "language",
                                        "archived",
                                        "disabled",
                                        "mirror_url",
                                        "open_issues",
                                        "open_issues_count",
                                        "license",
                                        "pushed_at",
                                        "size",
                                        "ssh_url",
                                        "stargazers_count",
                                        "svn_url",
                                        "watchers",
                                        "watchers_count",
                                        "created_at",
                                        "updated_at"
                                      ],
                                      "title": "Repository",
                                      "type": "object"
                                    }
                                  ],
                                  "nullable": true,
                                  "type": "object"
                                },
                                "topics": {
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "trees_url": {
                                  "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                  "type": "string"
                                },
                                "updated_at": {
                                  "example": "2011-01-26T19:14:43Z",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/repos/octocat/Hello-World",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "visibility": { "type": "string" },
                                "watchers": { "example": 0, "type": "integer" },
                                "watchers_count": { "type": "integer" }
                              },
                              "required": [
                                "archive_url",
                                "assignees_url",
                                "blobs_url",
                                "branches_url",
                                "collaborators_url",
                                "comments_url",
                                "commits_url",
                                "compare_url",
                                "contents_url",
                                "contributors_url",
                                "deployments_url",
                                "description",
                                "downloads_url",
                                "events_url",
                                "fork",
                                "forks_url",
                                "full_name",
                                "git_commits_url",
                                "git_refs_url",
                                "git_tags_url",
                                "hooks_url",
                                "html_url",
                                "id",
                                "node_id",
                                "issue_comment_url",
                                "issue_events_url",
                                "issues_url",
                                "keys_url",
                                "labels_url",
                                "languages_url",
                                "merges_url",
                                "milestones_url",
                                "name",
                                "notifications_url",
                                "owner",
                                "private",
                                "pulls_url",
                                "releases_url",
                                "stargazers_url",
                                "statuses_url",
                                "subscribers_url",
                                "subscription_url",
                                "tags_url",
                                "teams_url",
                                "trees_url",
                                "url"
                              ],
                              "title": "Minimal Repository",
                              "type": "object"
                            }
                          ],
                          "nullable": true
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/github/packages/container/super-linter",
                          "type": "string"
                        },
                        "version_count": {
                          "description": "The number of versions of the package.",
                          "example": 1,
                          "type": "integer"
                        },
                        "visibility": {
                          "enum": ["private", "public"],
                          "example": "private",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "package_type",
                        "visibility",
                        "url",
                        "html_url",
                        "version_count",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Package",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a package for a user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/packages/{package_type}/{package_name}/restore",
        {
          "post": {
            "deprecated": null,
            "description": "Restores an entire package for a user.\n\nYou can restore a deleted package under the following conditions:\n  - The package was deleted within the last 30 days.\n  - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:\n- If `package_type` is not `container`, your token must also include the `repo` scope.\n- If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#restore-a-package-for-a-user"
            },
            "operationId": "packages/restore-package-for-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "allowReserved": null,
                "description": "package token",
                "in": "query",
                "name": "token",
                "required": false,
                "schema": { "type": "string" },
                "style": "form"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Restore a package for a user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/packages/{package_type}/{package_name}/versions",
        {
          "get": {
            "deprecated": null,
            "description": "Returns all package versions for a public package owned by a specified user.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#get-all-package-versions-for-a-package-owned-by-a-user"
            },
            "operationId": "packages/get-all-package-versions-for-package-owned-by-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2020-08-31T15:22:11Z",
                            "description": "Project for octocats",
                            "html_url": "https://github.com/octocat/octo-name-repo/packages/40201?version=0.3.0",
                            "id": 3497268,
                            "license": "MIT",
                            "metadata": { "package_type": "rubygems" },
                            "name": "0.3.0",
                            "package_html_url": "https://github.com/octocat/octo-name-repo/packages/40201",
                            "updated_at": "2020-08-31T15:22:12Z",
                            "url": "https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/3497268"
                          },
                          {
                            "created_at": "2019-12-01T20:49:29Z",
                            "description": "Project for octocats",
                            "html_url": "https://github.com/octocat/octo-name-repo/packages/40201?version=0.2.0",
                            "id": 387039,
                            "license": "MIT",
                            "metadata": { "package_type": "rubygems" },
                            "name": "0.2.0",
                            "package_html_url": "https://github.com/octocat/octo-name-repo/packages/40201",
                            "updated_at": "2019-12-01T20:49:30Z",
                            "url": "https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/387039"
                          },
                          {
                            "created_at": "2019-10-20T14:17:14Z",
                            "html_url": "https://github.com/octocat/octo-name-repo/packages/40201?version=0.1.0",
                            "id": 169770,
                            "license": "MIT",
                            "metadata": { "package_type": "rubygems" },
                            "name": "0.1.0",
                            "package_html_url": "https://github.com/octocat/octo-name-repo/packages/40201",
                            "updated_at": "2019-10-20T14:17:15Z",
                            "url": "https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/169770"
                          }
                        ]
                      }
                    },
                    "schema": {
                      "items": {
                        "description": "A version of a software package",
                        "properties": {
                          "created_at": {
                            "example": "2011-04-10T20:09:31Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deleted_at": {
                            "example": "2014-03-03T18:58:10Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": { "type": "string" },
                          "html_url": {
                            "example": "https://github.com/orgs/github/packages/container/super-linter/786068",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier of the package version.",
                            "example": 1,
                            "type": "integer"
                          },
                          "license": { "example": "MIT", "type": "string" },
                          "metadata": {
                            "properties": {
                              "container": {
                                "properties": { "tags": { "type": "array" } },
                                "required": ["tags"],
                                "title": "Container Metadata",
                                "type": "object"
                              },
                              "docker": {
                                "properties": { "tag": { "type": "array" } },
                                "required": ["tags"],
                                "title": "Docker Metadata",
                                "type": "object"
                              },
                              "package_type": {
                                "enum": [
                                  "npm",
                                  "maven",
                                  "rubygems",
                                  "docker",
                                  "nuget",
                                  "container"
                                ],
                                "example": "docker",
                                "type": "string"
                              }
                            },
                            "required": ["package_type"],
                            "title": "Package Version Metadata",
                            "type": "object"
                          },
                          "name": {
                            "description": "The name of the package version.",
                            "example": "latest",
                            "type": "string"
                          },
                          "package_html_url": {
                            "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                            "type": "string"
                          },
                          "updated_at": {
                            "example": "2014-03-03T18:58:10Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/orgs/github/packages/container/super-linter/versions/786068",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "url",
                          "package_html_url",
                          "created_at",
                          "updated_at"
                        ],
                        "title": "Package Version",
                        "type": "object"
                      },
                      "type": "array"
                    }
                  }
                },
                "description": "Response"
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Get all package versions for a package owned by a user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}",
        {
          "delete": {
            "deprecated": null,
            "description": "Deletes a specific package version for a user. If the package is public and the package version has more than 5,000 downloads, you cannot delete the package version. In this scenario, contact GitHub support for further assistance.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:delete` scopes. In addition:\n- If `package_type` is not `container`, your token must also include the `repo` scope.\n- If `package_type` is `container`, you must also have admin permissions to the container you want to delete.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#delete-a-package-version-for-a-user"
            },
            "operationId": "packages/delete-package-version-for-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Unique identifier of the package version.",
                "in": "path",
                "name": "package_version_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Delete package version for a user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "get": {
            "deprecated": null,
            "description": "Gets a specific package version for a public package owned by a specified user.\n\nAt this time, to use this endpoint, you must authenticate using an access token with the `packages:read` scope.\nIf `package_type` is not `container`, your token must also include the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#get-a-package-version-for-a-user"
            },
            "operationId": "packages/get-package-version-for-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Unique identifier of the package version.",
                "in": "path",
                "name": "package_version_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2019-12-01T20:49:29Z",
                          "description": "Octo-name client for Ruby",
                          "html_url": "https://github.com/octocat/octo-name-repo/packages/40201?version=0.2.0",
                          "id": 387039,
                          "license": "MIT",
                          "metadata": { "package_type": "rubygems" },
                          "name": "0.2.0",
                          "package_html_url": "https://github.com/octocat/octo-name-repo/packages/40201",
                          "updated_at": "2019-12-01T20:49:30Z",
                          "url": "https://api.github.com/users/octocat/packages/rubygems/octo-name/versions/387039"
                        }
                      }
                    },
                    "schema": {
                      "description": "A version of a software package",
                      "properties": {
                        "created_at": {
                          "example": "2011-04-10T20:09:31Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "deleted_at": {
                          "example": "2014-03-03T18:58:10Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "description": { "type": "string" },
                        "html_url": {
                          "example": "https://github.com/orgs/github/packages/container/super-linter/786068",
                          "type": "string"
                        },
                        "id": {
                          "description": "Unique identifier of the package version.",
                          "example": 1,
                          "type": "integer"
                        },
                        "license": { "example": "MIT", "type": "string" },
                        "metadata": {
                          "properties": {
                            "container": {
                              "properties": { "tags": { "type": "array" } },
                              "required": ["tags"],
                              "title": "Container Metadata",
                              "type": "object"
                            },
                            "docker": {
                              "properties": { "tag": { "type": "array" } },
                              "required": ["tags"],
                              "title": "Docker Metadata",
                              "type": "object"
                            },
                            "package_type": {
                              "enum": [
                                "npm",
                                "maven",
                                "rubygems",
                                "docker",
                                "nuget",
                                "container"
                              ],
                              "example": "docker",
                              "type": "string"
                            }
                          },
                          "required": ["package_type"],
                          "title": "Package Version Metadata",
                          "type": "object"
                        },
                        "name": {
                          "description": "The name of the package version.",
                          "example": "latest",
                          "type": "string"
                        },
                        "package_html_url": {
                          "example": "https://github.com/orgs/github/packages/container/package/super-linter",
                          "type": "string"
                        },
                        "updated_at": {
                          "example": "2014-03-03T18:58:10Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "example": "https://api.github.com/orgs/github/packages/container/super-linter/versions/786068",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "url",
                        "package_html_url",
                        "created_at",
                        "updated_at"
                      ],
                      "title": "Package Version",
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get a package version for a user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore",
        {
          "post": {
            "deprecated": null,
            "description": "Restores a specific package version for a user.\n\nYou can restore a deleted package under the following conditions:\n  - The package was deleted within the last 30 days.\n  - The same package namespace and version is still available and not reused for a new package. If the same package namespace is not available, you will not be able to restore your package. In this scenario, to restore the deleted package, you must delete the new package that uses the deleted package's namespace first.\n\nTo use this endpoint, you must authenticate using an access token with the `packages:read` and `packages:write` scopes. In addition:\n- If `package_type` is not `container`, your token must also include the `repo` scope.\n- If `package_type` is `container`, you must also have admin permissions to the container that you want to restore.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/packages#restore-a-package-version-for-a-user"
            },
            "operationId": "packages/restore-package-version-for-user",
            "parameters": [
              {
                "description": "The type of supported package. Can be one of `npm`, `maven`, `rubygems`, `nuget`, `docker`, or `container`. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.",
                "in": "path",
                "name": "package_type",
                "required": true,
                "schema": {
                  "enum": [
                    "npm",
                    "maven",
                    "rubygems",
                    "docker",
                    "nuget",
                    "container"
                  ],
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "description": "The name of the package.",
                "in": "path",
                "name": "package_name",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              },
              {
                "description": "Unique identifier of the package version.",
                "in": "path",
                "name": "package_version_id",
                "required": true,
                "schema": { "type": "integer" },
                "style": "simple"
              }
            ],
            "responses": {
              "204": { "description": "Response" },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Requires authentication"
              },
              "403": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Forbidden"
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "properties": {
                        "documentation_url": { "type": "string" },
                        "message": { "type": "string" },
                        "status": { "type": "string" },
                        "url": { "type": "string" }
                      },
                      "title": "Basic Error",
                      "type": "object"
                    }
                  }
                },
                "description": "Resource not found"
              }
            },
            "summary": "Restore package version for a user",
            "tags": ["packages"],
            "x-github": {
              "category": "packages",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/settings/billing/actions",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage returned includes any minute multipliers for macOS and Windows runners, and is rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAccess tokens must have the `user` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/billing#get-github-actions-billing-for-a-user"
            },
            "operationId": "billing/get-github-actions-billing-user",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "included_minutes": 3000,
                          "minutes_used_breakdown": {
                            "MACOS": 10,
                            "UBUNTU": 205,
                            "WINDOWS": 90
                          },
                          "total_minutes_used": 305,
                          "total_paid_minutes_used": 0
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "included_minutes": {
                          "description": "The amount of free GitHub Actions minutes available.",
                          "type": "integer"
                        },
                        "minutes_used_breakdown": {
                          "properties": {
                            "MACOS": {
                              "description": "Total minutes used on macOS runner machines.",
                              "type": "integer"
                            },
                            "UBUNTU": {
                              "description": "Total minutes used on Ubuntu runner machines.",
                              "type": "integer"
                            },
                            "WINDOWS": {
                              "description": "Total minutes used on Windows runner machines.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "total_minutes_used": {
                          "description": "The sum of the free and paid GitHub Actions minutes used.",
                          "type": "integer"
                        },
                        "total_paid_minutes_used": {
                          "description": "The total paid GitHub Actions minutes used.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_minutes_used",
                        "total_paid_minutes_used",
                        "included_minutes",
                        "minutes_used_breakdown"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get GitHub Actions billing for a user",
            "tags": ["billing"],
            "x-github": {
              "category": "billing",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/settings/billing/packages",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `user` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/billing#get-github-packages-billing-for-a-user"
            },
            "operationId": "billing/get-github-packages-billing-user",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "included_gigabytes_bandwidth": 10,
                          "total_gigabytes_bandwidth_used": 50,
                          "total_paid_gigabytes_bandwidth_used": 40
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "included_gigabytes_bandwidth": {
                          "description": "Free storage space (GB) for GitHub Packages.",
                          "type": "integer"
                        },
                        "total_gigabytes_bandwidth_used": {
                          "description": "Sum of the free and paid storage space (GB) for GitHuub Packages.",
                          "type": "integer"
                        },
                        "total_paid_gigabytes_bandwidth_used": {
                          "description": "Total paid storage space (GB) for GitHuub Packages.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "total_gigabytes_bandwidth_used",
                        "total_paid_gigabytes_bandwidth_used",
                        "included_gigabytes_bandwidth"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get GitHub Packages billing for a user",
            "tags": ["billing"],
            "x-github": {
              "category": "billing",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/users/{username}/settings/billing/shared-storage",
        {
          "get": {
            "deprecated": null,
            "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `user` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/rest/reference/billing#get-shared-storage-billing-for-a-user"
            },
            "operationId": "billing/get-shared-storage-billing-user",
            "parameters": [
              {
                "in": "path",
                "name": "username",
                "required": true,
                "schema": { "type": "string" },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "default": {
                        "value": {
                          "days_left_in_billing_cycle": 20,
                          "estimated_paid_storage_for_month": 15,
                          "estimated_storage_for_month": 40
                        }
                      }
                    },
                    "schema": {
                      "properties": {
                        "days_left_in_billing_cycle": {
                          "description": "Numbers of days left in billing cycle.",
                          "type": "integer"
                        },
                        "estimated_paid_storage_for_month": {
                          "description": "Estimated storage space (GB) used in billing cycle.",
                          "type": "integer"
                        },
                        "estimated_storage_for_month": {
                          "description": "Estimated sum of free and paid storage space (GB) used in billing cycle.",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "days_left_in_billing_cycle",
                        "estimated_paid_storage_for_month",
                        "estimated_storage_for_month"
                      ],
                      "type": "object"
                    }
                  }
                },
                "description": "Response"
              }
            },
            "summary": "Get shared storage billing for a user",
            "tags": ["billing"],
            "x-github": {
              "category": "billing",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ]
    ]
  },
  "servers": {
    "added": [
      {
        "url": "{protocol}://{hostname}/api/v3",
        "variables": {
          "hostname": {
            "default": "HOSTNAME",
            "description": "Self-hosted Enterprise Server or Enterprise Cloud hostname"
          },
          "protocol": {
            "default": "http",
            "description": "Self-hosted Enterprise Server or Enterprise Cloud protocol"
          }
        }
      }
    ],
    "changed": {},
    "removed": [{ "url": "https://api.github.com" }]
  },
  "version": null
}
