{
  "info": {
    "contact": null,
    "description": null,
    "extensions": {
      "changed": {
        "x-github-release": {
          "from": 3.4,
          "to": 3.3
        }
      }
    },
    "license": null,
    "terms_of_service": null,
    "title": null,
    "version": null
  },
  "paths": {
    "added": {
      "/applications/{client_id}/grants/{access_token}": {
        "delete": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.3/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the Applications settings page under \"Authorized OAuth Apps\" on GitHub Enterprise Server](https://github.com/settings/applications#authorized).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.3/rest/reference/apps#revoke-a-grant-for-an-application"
          },
          "operationId": "apps/revoke-grant-for-application",
          "parameters": [
            {
              "description": "The client ID of the GitHub app.",
              "examples": {
                "default": {
                  "value": "Iv1.8a61f9b3a7aba766"
                }
              },
              "in": "path",
              "name": "client_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "in": "path",
              "name": "access_token",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Revoke a grant for an application",
          "tags": [
            "apps"
          ],
          "x-github": {
            "category": "apps",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2021-05-05",
            "subcategory": "oauth-applications"
          }
        }
      },
      "/applications/{client_id}/tokens/{access_token}": {
        "delete": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.3/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.3/rest/reference/apps#revoke-an-authorization-for-an-application"
          },
          "operationId": "apps/revoke-authorization-for-application",
          "parameters": [
            {
              "description": "The client ID of the GitHub app.",
              "examples": {
                "default": {
                  "value": "Iv1.8a61f9b3a7aba766"
                }
              },
              "in": "path",
              "name": "client_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "in": "path",
              "name": "access_token",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Revoke an authorization for an application",
          "tags": [
            "apps"
          ],
          "x-github": {
            "category": "apps",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2021-05-05",
            "subcategory": "oauth-applications"
          }
        },
        "get": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.3/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.3/rest/reference/apps#check-an-authorization"
          },
          "operationId": "apps/check-authorization",
          "parameters": [
            {
              "description": "The client ID of the GitHub app.",
              "examples": {
                "default": {
                  "value": "Iv1.8a61f9b3a7aba766"
                }
              },
              "in": "path",
              "name": "client_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "in": "path",
              "name": "access_token",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "Iv1.8a61f9b3a7aba766",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-09-08T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo",
                          "user"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1",
                        "user": {
                          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                          "followers_url": "https://api.github.com/users/octocat/followers",
                          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                          "html_url": "https://github.com/octocat",
                          "id": 1,
                          "login": "octocat",
                          "node_id": "MDQ6VXNlcjE=",
                          "organizations_url": "https://api.github.com/users/octocat/orgs",
                          "received_events_url": "https://api.github.com/users/octocat/received_events",
                          "repos_url": "https://api.github.com/users/octocat/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                          "type": "User",
                          "url": "https://api.github.com/users/octocat"
                        }
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "nullable": true,
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "content_references": {
                                "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Check an authorization",
          "tags": [
            "apps"
          ],
          "x-github": {
            "category": "apps",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2021-05-05",
            "subcategory": "oauth-applications"
          }
        },
        "post": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/enterprise-server@3.3/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.3/rest/reference/apps#reset-an-authorization"
          },
          "operationId": "apps/reset-authorization",
          "parameters": [
            {
              "description": "The client ID of the GitHub app.",
              "examples": {
                "default": {
                  "value": "Iv1.8a61f9b3a7aba766"
                }
              },
              "in": "path",
              "name": "client_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "in": "path",
              "name": "access_token",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "Iv1.8a61f9b3a7aba766",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-09-08T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo",
                          "user"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1",
                        "user": {
                          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                          "followers_url": "https://api.github.com/users/octocat/followers",
                          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                          "html_url": "https://github.com/octocat",
                          "id": 1,
                          "login": "octocat",
                          "node_id": "MDQ6VXNlcjE=",
                          "organizations_url": "https://api.github.com/users/octocat/orgs",
                          "received_events_url": "https://api.github.com/users/octocat/received_events",
                          "repos_url": "https://api.github.com/users/octocat/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                          "type": "User",
                          "url": "https://api.github.com/users/octocat"
                        }
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "A GitHub user.",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "content_references": {
                                "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "A GitHub user.",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Reset an authorization",
          "tags": [
            "apps"
          ],
          "x-github": {
            "category": "apps",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2021-05-05",
            "subcategory": "oauth-applications"
          }
        }
      },
      "/content_references/{content_reference_id}/attachments": {
        "post": {
          "deprecated": null,
          "description": "**Deprecated:** use `apps.createContentAttachmentForRepo()` (`POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments`) instead. Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://docs.github.com/webhooks/event-payloads/#content_reference) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://docs.github.com/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://docs.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/rest/reference/apps#create-a-content-attachment"
          },
          "operationId": "apps/create-content-attachment",
          "parameters": [
            {
              "in": "path",
              "name": "content_reference_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "body": {
                      "description": "The body of the attachment",
                      "example": "Body of the attachment",
                      "maxLength": 262144,
                      "type": "string"
                    },
                    "title": {
                      "description": "The title of the attachment",
                      "example": "Title of the attachment",
                      "maxLength": 1024,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "body"
                  ],
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "body": "You have used an email that already exists for the user_email_uniq field.\n ## DETAILS:\n\nThe (email)=(Octocat@github.com) already exists.\n\n The error was found in core/models.py in get_or_create_user at line 62.\n\n self.save()",
                        "id": 101,
                        "title": "[A-1234] Error found in core/models.py file'"
                      }
                    }
                  },
                  "schema": {
                    "description": "Content Reference attachments allow you to provide context around URLs posted in comments",
                    "properties": {
                      "body": {
                        "description": "The body of the attachment",
                        "example": "Body of the attachment",
                        "maxLength": 262144,
                        "type": "string"
                      },
                      "id": {
                        "description": "The ID of the attachment",
                        "example": 21,
                        "type": "integer"
                      },
                      "node_id": {
                        "description": "The node_id of the content attachment",
                        "example": "MDE3OkNvbnRlbnRBdHRhY2htZW50MjE=",
                        "type": "string"
                      },
                      "title": {
                        "description": "The title of the attachment",
                        "example": "Title of the attachment",
                        "maxLength": 1024,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "title",
                      "body"
                    ],
                    "title": "ContentReferenceAttachment",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "410": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Gone"
            },
            "415": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Preview header missing"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed"
            }
          },
          "summary": "Create a content attachment",
          "tags": [
            "apps"
          ],
          "x-github": {
            "category": "apps",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "previews": [
              {
                "name": "corsair",
                "note": "To access the Content Attachments API during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.corsair-preview+json\n```",
                "required": true
              }
            ],
            "subcategory": "installations"
          }
        }
      },
      "/repos/{owner}/{repo}/community/code_of_conduct": {
        "get": {
          "deprecated": true,
          "description": "Returns the contents of the repository's code of conduct file, if one is detected.\n\nA code of conduct is detected if there is a file named `CODE_OF_CONDUCT` in the root directory of the repository. GitHub detects which code of conduct it is using fuzzy matching.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/rest/reference/codes-of-conduct#get-the-code-of-conduct-for-a-repository"
          },
          "operationId": "codes-of-conduct/get-for-repo",
          "parameters": [
            {
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "body": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\nto any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\nposting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at lindseyb@github.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                        "html_url": "https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md",
                        "key": "contributor_covenant",
                        "name": "Contributor Covenant",
                        "url": "https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md"
                      }
                    }
                  },
                  "schema": {
                    "description": "Code Of Conduct",
                    "properties": {
                      "body": {
                        "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                        "type": "string"
                      },
                      "html_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "key": {
                        "example": "contributor_covenant",
                        "type": "string"
                      },
                      "name": {
                        "example": "Contributor Covenant",
                        "type": "string"
                      },
                      "url": {
                        "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                        "format": "uri",
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "html_url",
                      "key",
                      "name"
                    ],
                    "title": "Code Of Conduct",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the code of conduct for a repository",
          "tags": [
            "codes-of-conduct"
          ],
          "x-github": {
            "category": "codes-of-conduct",
            "deprecationDate": "2021-09-29",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "previews": [
              {
                "name": "scarlet-witch",
                "note": "The Codes of Conduct API is currently available for developers to preview.\n\nTo access the API during the preview period, you must provide a custom [media type](https://docs.github.com/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.scarlet-witch-preview+json\n```",
                "required": true
              }
            ],
            "removalDate": "2021-09-29",
            "subcategory": null
          }
        }
      },
      "/repos/{owner}/{repo}/content_references/{content_reference_id}/attachments": {
        "post": {
          "deprecated": null,
          "description": "Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` and `repository` `full_name` of the content reference from the [`content_reference` event](https://docs.github.com/enterprise-server@3.3/webhooks/event-payloads/#content_reference) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://docs.github.com/enterprise-server@3.3/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@3.3/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-server@3.3/rest/reference/apps#create-a-content-attachment"
          },
          "operationId": "apps/create-content-attachment-for-repo",
          "parameters": [
            {
              "description": "The owner of the repository. Determined from the `repository` `full_name` of the `content_reference` event.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. Determined from the `repository` `full_name` of the `content_reference` event.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The `id` of the `content_reference` event.",
              "in": "path",
              "name": "content_reference_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "body": {
                      "description": "The body of the attachment",
                      "example": "Body of the attachment",
                      "maxLength": 262144,
                      "type": "string"
                    },
                    "title": {
                      "description": "The title of the attachment",
                      "example": "Title of the attachment",
                      "maxLength": 1024,
                      "type": "string"
                    }
                  },
                  "required": [
                    "title",
                    "body"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "body": "You have used an email that already exists for the user_email_uniq field.\n ## DETAILS:\n\nThe (email)=(Octocat@github.com) already exists.\n\n The error was found in core/models.py in get_or_create_user at line 62.\n\n self.save()",
                        "id": 101,
                        "title": "[A-1234] Error found in core/models.py file'"
                      }
                    }
                  },
                  "schema": {
                    "description": "Content Reference attachments allow you to provide context around URLs posted in comments",
                    "properties": {
                      "body": {
                        "description": "The body of the attachment",
                        "example": "Body of the attachment",
                        "maxLength": 262144,
                        "type": "string"
                      },
                      "id": {
                        "description": "The ID of the attachment",
                        "example": 21,
                        "type": "integer"
                      },
                      "node_id": {
                        "description": "The node_id of the content attachment",
                        "example": "MDE3OkNvbnRlbnRBdHRhY2htZW50MjE=",
                        "type": "string"
                      },
                      "title": {
                        "description": "The title of the attachment",
                        "example": "Title of the attachment",
                        "maxLength": 1024,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "title",
                      "body"
                    ],
                    "title": "ContentReferenceAttachment",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "410": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Gone"
            },
            "415": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Preview header missing"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Create a content attachment",
          "tags": [
            "apps"
          ],
          "x-github": {
            "category": "apps",
            "enabledForGitHubApps": true,
            "githubCloudOnly": false,
            "previews": [
              {
                "name": "corsair",
                "note": "To access the Content Attachments API during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@3.3/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.corsair-preview+json\n```"
              }
            ],
            "subcategory": "installations"
          }
        }
      }
    },
    "changed": {
      "/admin/tokens": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "installation": {
                                "properties_changed": {
                                  "changed": {
                                    "permissions": {
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "content_references",
                                            {
                                              "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                              "enum": [
                                                "read",
                                                "write"
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/admin/users/{username}/authorizations": {
        "post": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "permissions": {
                                "properties_changed": {
                                  "added": [
                                    [
                                      "content_references",
                                      {
                                        "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                        "enum": [
                                          "read",
                                          "write"
                                        ],
                                        "type": "string"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations/{installation_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "added": [
                                  [
                                    "content_references",
                                    {
                                      "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                      "enum": [
                                        "read",
                                        "write"
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations/{installation_id}/access_tokens": {
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "permissions": {
                          "properties_changed": {
                            "added": [
                              [
                                "content_references",
                                {
                                  "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "added": [
                                  [
                                    "content_references",
                                    {
                                      "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                      "enum": [
                                        "read",
                                        "write"
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/applications/{client_id}/token": {
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/applications/{client_id}/token/scoped": {
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "permissions": {
                          "properties_changed": {
                            "added": [
                              [
                                "content_references",
                                {
                                  "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                }
                              ]
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/authorizations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "installation": {
                                "properties_changed": {
                                  "changed": {
                                    "permissions": {
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "content_references",
                                            {
                                              "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                              "enum": [
                                                "read",
                                                "write"
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/authorizations/clients/{client_id}": {
        "put": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/authorizations/clients/{client_id}/{fingerprint}": {
        "put": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/authorizations/{authorization_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "added": [
                                        [
                                          "content_references",
                                          {
                                            "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                            "enum": [
                                              "read",
                                              "write"
                                            ],
                                            "type": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/enterprises/{enterprise}/audit-log": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
                "in": "query",
                "name": "include",
                "required": false,
                "schema": {
                  "enum": [
                    "web",
                    "git",
                    "all"
                  ],
                  "type": "string"
                },
                "style": "form"
              }
            ]
          }
        }
      },
      "/orgs/{org}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "members_can_fork_private_repositories"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "members_can_fork_private_repositories"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "members_can_fork_private_repositories"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/secrets/{secret_name}": {
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "selected_repository_ids": {
                          "items_changed": {
                            "type_changed": {
                              "to": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/audit-log": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
                "in": "query",
                "name": "include",
                "required": false,
                "schema": {
                  "enum": [
                    "web",
                    "git",
                    "all"
                  ],
                  "type": "string"
                },
                "style": "form"
              }
            ]
          }
        }
      },
      "/orgs/{org}/installation": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "added": [
                                  [
                                    "content_references",
                                    {
                                      "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                      "enum": [
                                        "read",
                                        "write"
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/installations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installations": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "permissions": {
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "content_references",
                                            {
                                              "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                              "enum": [
                                                "read",
                                                "write"
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "organization": {
                              "properties_changed": {
                                "removed": [
                                  "members_can_fork_private_repositories"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "organization": {
                              "properties_changed": {
                                "removed": [
                                  "members_can_fork_private_repositories"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "organization": {
                              "properties_changed": {
                                "removed": [
                                  "members_can_fork_private_repositories"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "organization": {
                              "properties_changed": {
                                "removed": [
                                  "members_can_fork_private_repositories"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "protection": {
                                "properties_changed": {
                                  "changed": {
                                    "required_pull_request_reviews": {
                                      "properties_changed": {
                                        "removed": [
                                          "bypass_pull_request_allowances"
                                        ]
                                      }
                                    },
                                    "required_status_checks": {
                                      "properties_changed": {
                                        "removed": [
                                          "checks"
                                        ]
                                      },
                                      "required_changed": {
                                        "removed": [
                                          "checks"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches/{branch}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "protection": {
                              "properties_changed": {
                                "changed": {
                                  "required_pull_request_reviews": {
                                    "properties_changed": {
                                      "removed": [
                                        "bypass_pull_request_allowances"
                                      ]
                                    }
                                  },
                                  "required_status_checks": {
                                    "properties_changed": {
                                      "removed": [
                                        "checks"
                                      ]
                                    },
                                    "required_changed": {
                                      "removed": [
                                        "checks"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches/{branch}/protection": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "required_pull_request_reviews": {
                              "properties_changed": {
                                "removed": [
                                  "bypass_pull_request_allowances"
                                ]
                              }
                            },
                            "required_status_checks": {
                              "properties_changed": {
                                "removed": [
                                  "checks"
                                ]
                              },
                              "required_changed": {
                                "removed": [
                                  "checks"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "added": [
                        [
                          "contexts",
                          {
                            "description": "The list of status checks to require in order to merge into this branch.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        ]
                      ],
                      "changed": {
                        "required_pull_request_reviews": {
                          "properties_changed": {
                            "removed": [
                              "bypass_pull_request_allowances"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "required_pull_request_reviews": {
                              "properties_changed": {
                                "removed": [
                                  "bypass_pull_request_allowances"
                                ]
                              }
                            },
                            "required_status_checks": {
                              "properties_changed": {
                                "removed": [
                                  "checks"
                                ]
                              },
                              "required_changed": {
                                "removed": [
                                  "checks"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "bypass_pull_request_allowances"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "bypass_pull_request_allowances"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "bypass_pull_request_allowances"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "checks"
                          ]
                        },
                        "required_changed": {
                          "removed": [
                            "checks"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "checks"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "checks"
                          ]
                        },
                        "required_changed": {
                          "removed": [
                            "checks"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/branches/{branch}/rename": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "protection": {
                              "properties_changed": {
                                "changed": {
                                  "required_pull_request_reviews": {
                                    "properties_changed": {
                                      "removed": [
                                        "bypass_pull_request_allowances"
                                      ]
                                    }
                                  },
                                  "required_status_checks": {
                                    "properties_changed": {
                                      "removed": [
                                        "checks"
                                      ]
                                    },
                                    "required_changed": {
                                      "removed": [
                                        "checks"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/code-scanning/alerts": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "The direction to sort the results by.",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc"
                  ],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "description": "The property by which to sort the results. `number` is deprecated - we recommend that you use `created` instead.",
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": [
                    "created",
                    "number",
                    "updated"
                  ],
                  "type": "string"
                },
                "style": "form"
              }
            ]
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "rule": {
                                "properties_changed": {
                                  "removed": [
                                    "tags"
                                  ]
                                }
                              }
                            },
                            "removed": [
                              "dismissed_comment",
                              "fixed_at",
                              "updated_at"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "removed": [
              "304"
            ]
          }
        }
      },
      "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "fixed_at",
                            "updated_at"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "removed": [
              "304"
            ]
          }
        },
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "fixed_at",
                            "updated_at"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "processing_status": {
                              "enum_changed": {
                                "added": false,
                                "removed": false,
                                "values_removed": [
                                  "failed"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "errors"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/installation": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "added": [
                                  [
                                    "content_references",
                                    {
                                      "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                      "enum": [
                                        "read",
                                        "write"
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "organization": {
                              "properties_changed": {
                                "removed": [
                                  "members_can_fork_private_repositories"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "organization": {
                              "properties_changed": {
                                "removed": [
                                  "members_can_fork_private_repositories"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "organization": {
                              "properties_changed": {
                                "removed": [
                                  "members_can_fork_private_repositories"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/installations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installations": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "permissions": {
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "content_references",
                                            {
                                              "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                              "enum": [
                                                "read",
                                                "write"
                                              ],
                                              "type": "string"
                                            }
                                          ]
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/teams": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "organization": {
                                "properties_changed": {
                                  "removed": [
                                    "members_can_fork_private_repositories"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/installation": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "added": [
                                  [
                                    "content_references",
                                    {
                                      "description": "The level of permission to grant the access token for notification of content references and creation content attachments.",
                                      "enum": [
                                        "read",
                                        "write"
                                      ],
                                      "type": "string"
                                    }
                                  ]
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "removed": {
      "/enterprises/{enterprise}/actions/runners/{runner_id}/labels": [
        "get",
        "put",
        "post",
        "delete"
      ],
      "/enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}": [
        "delete"
      ],
      "/enterprises/{enterprise}/secret-scanning/alerts": [
        "get"
      ],
      "/enterprises/{enterprise}/settings/billing/advanced-security": [
        "get"
      ],
      "/organizations/{organization_id}/custom_roles": [
        "get"
      ],
      "/orgs/{org}/actions/runners/{runner_id}/labels": [
        "get",
        "put",
        "post",
        "delete"
      ],
      "/orgs/{org}/actions/runners/{runner_id}/labels/{name}": [
        "delete"
      ],
      "/orgs/{org}/dependabot/secrets": [
        "get"
      ],
      "/orgs/{org}/dependabot/secrets/public-key": [
        "get"
      ],
      "/orgs/{org}/dependabot/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/orgs/{org}/dependabot/secrets/{secret_name}/repositories": [
        "get",
        "put"
      ],
      "/orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}": [
        "put",
        "delete"
      ],
      "/orgs/{org}/migrations": [
        "get",
        "post"
      ],
      "/orgs/{org}/migrations/{migration_id}": [
        "get"
      ],
      "/orgs/{org}/settings/billing/advanced-security": [
        "get"
      ],
      "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels": [
        "get",
        "put",
        "post",
        "delete"
      ],
      "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}": [
        "delete"
      ],
      "/repos/{owner}/{repo}/dependabot/secrets": [
        "get"
      ],
      "/repos/{owner}/{repo}/dependabot/secrets/public-key": [
        "get"
      ],
      "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/repos/{owner}/{repo}/replicas/caches": [
        "get"
      ],
      "/user/migrations": [
        "get",
        "post"
      ],
      "/user/migrations/{migration_id}/archive": [
        "get"
      ],
      "/user/migrations/{migration_id}/repositories": [
        "get"
      ]
    }
  }
}