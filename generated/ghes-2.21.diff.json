{
  "version": null,
  "servers": null,
  "paths": {
    "added": [],
    "removed": [
      [
        "/app/installations/{installation_id}/suspended",
        {
          "put": {
            "tags": [
              "apps"
            ],
            "summary": "Suspend an app installation",
            "description": "Suspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's resources. When a GitHub App is suspended, the app's access to the GitHub Enterprise Server API or webhook events is blocked for that account.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/apps#suspend-an-app-installation"
            },
            "operationId": "apps/suspend-installation",
            "parameters": [
              {
                "in": "path",
                "name": "installation_id",
                "description": "installation_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              },
              "404": {
                "description": "Resource not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "apps"
            ],
            "summary": "Unsuspend an app installation",
            "description": "Removes a GitHub App installation suspension.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/apps#unsuspend-an-app-installation"
            },
            "operationId": "apps/unsuspend-installation",
            "parameters": [
              {
                "in": "path",
                "name": "installation_id",
                "description": "installation_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              },
              "404": {
                "description": "Resource not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "apps",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runner-groups",
        {
          "get": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "List self-hosted runner groups for an enterprise",
            "description": "Lists all self-hosted runner groups for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#list-self-hosted-runner-groups-for-an-enterprise"
            },
            "operationId": "enterprise-admin/list-self-hosted-runner-groups-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "runner_groups"
                      ],
                      "properties": {
                        "runner_groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "visibility",
                              "allows_public_repositories",
                              "default",
                              "runners_url"
                            ],
                            "properties": {
                              "allows_public_repositories": {
                                "type": "boolean"
                              },
                              "default": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "runners_url": {
                                "type": "string"
                              },
                              "selected_organizations_url": {
                                "type": "string"
                              },
                              "visibility": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "runner_groups": [
                            {
                              "allows_public_repositories": false,
                              "default": true,
                              "id": 1,
                              "name": "Default",
                              "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/1/runners",
                              "visibility": "all"
                            },
                            {
                              "allows_public_repositories": true,
                              "default": false,
                              "id": 2,
                              "name": "octo-runner-group",
                              "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/2/runners",
                              "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/2/organizations",
                              "visibility": "selected"
                            },
                            {
                              "allows_public_repositories": true,
                              "default": false,
                              "id": 3,
                              "name": "expensive-hardware",
                              "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/3/runners",
                              "visibility": "private"
                            }
                          ],
                          "total_count": 3
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          },
          "post": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Create a self-hosted runner group for an enterprise",
            "description": "Creates a new self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#create-self-hosted-runner-group-for-an-enterprise"
            },
            "operationId": "enterprise-admin/create-self-hosted-runner-group-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the runner group.",
                        "type": "string"
                      },
                      "runners": {
                        "description": "List of runner IDs to add to the runner group.",
                        "type": "array",
                        "items": {
                          "description": "Unique identifier of the runner.",
                          "type": "integer"
                        }
                      },
                      "selected_organization_ids": {
                        "description": "List of organization IDs that can access the runner group.",
                        "type": "array",
                        "items": {
                          "description": "Unique identifier of the organization.",
                          "type": "integer"
                        }
                      },
                      "visibility": {
                        "description": "Visibility of a runner group. You can select all organizations or select individual organization. Can be one of: `all` or `selected`",
                        "type": "string",
                        "enum": [
                          "selected",
                          "all"
                        ]
                      }
                    }
                  },
                  "example": {
                    "name": "Expensive hardware runners",
                    "runners": [
                      9,
                      2
                    ],
                    "selected_organization_ids": [
                      32,
                      91
                    ],
                    "visibility": "selected"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "visibility",
                        "allows_public_repositories",
                        "default",
                        "runners_url"
                      ],
                      "properties": {
                        "allows_public_repositories": {
                          "type": "boolean"
                        },
                        "default": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "runners_url": {
                          "type": "string"
                        },
                        "selected_organizations_url": {
                          "type": "string"
                        },
                        "visibility": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "allows_public_repositories": false,
                          "default": false,
                          "id": 2,
                          "name": "octo-runner-group",
                          "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
                          "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
                          "visibility": "selected"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}",
        {
          "get": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Get a self-hosted runner group for an enterprise",
            "description": "Gets a specific self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#get-a-self-hosted-runner-group-for-an-enterprise"
            },
            "operationId": "enterprise-admin/get-self-hosted-runner-group-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "visibility",
                        "allows_public_repositories",
                        "default",
                        "runners_url"
                      ],
                      "properties": {
                        "allows_public_repositories": {
                          "type": "boolean"
                        },
                        "default": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "runners_url": {
                          "type": "string"
                        },
                        "selected_organizations_url": {
                          "type": "string"
                        },
                        "visibility": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "allows_public_repositories": false,
                          "default": false,
                          "id": 2,
                          "name": "octo-runner-group",
                          "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
                          "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
                          "visibility": "selected"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Delete a self-hosted runner group from an enterprise",
            "description": "Deletes a self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#delete-a-self-hosted-runner-group-from-an-enterprise"
            },
            "operationId": "enterprise-admin/delete-self-hosted-runner-group-from-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          },
          "patch": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Update a self-hosted runner group for an enterprise",
            "description": "Updates the `name` and `visibility` of a self-hosted runner group in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#update-a-self-hosted-runner-group-for-an-enterprise"
            },
            "operationId": "enterprise-admin/update-self-hosted-runner-group-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the runner group.",
                        "type": "string"
                      },
                      "visibility": {
                        "description": "Visibility of a runner group. You can select all organizations or select individual organizations. Can be one of: `all` or `selected`",
                        "type": "string",
                        "enum": [
                          "selected",
                          "all"
                        ],
                        "default": "all"
                      }
                    }
                  },
                  "example": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "visibility",
                        "allows_public_repositories",
                        "default",
                        "runners_url"
                      ],
                      "properties": {
                        "allows_public_repositories": {
                          "type": "boolean"
                        },
                        "default": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "runners_url": {
                          "type": "string"
                        },
                        "selected_organizations_url": {
                          "type": "string"
                        },
                        "visibility": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "allows_public_repositories": true,
                          "default": false,
                          "id": 2,
                          "name": "Expensive hardware runners",
                          "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
                          "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
                          "visibility": "selected"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations",
        {
          "get": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "List organization access to a self-hosted runner group in an enterprise",
            "description": "Lists the organizations with access to a self-hosted runner group.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#list-organization-access-to-a-self-hosted-runner-group-in-a-enterprise"
            },
            "operationId": "enterprise-admin/list-org-access-to-self-hosted-runner-group-in-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "organizations"
                      ],
                      "properties": {
                        "organizations": {
                          "type": "array",
                          "items": {
                            "description": "Organization Simple",
                            "type": "object",
                            "required": [
                              "login",
                              "url",
                              "id",
                              "node_id",
                              "repos_url",
                              "events_url",
                              "hooks_url",
                              "issues_url",
                              "members_url",
                              "public_members_url",
                              "avatar_url",
                              "description"
                            ],
                            "properties": {
                              "avatar_url": {
                                "type": "string",
                                "example": "https://github.com/images/error/octocat_happy.gif"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "A great organization"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/orgs/github/events"
                              },
                              "hooks_url": {
                                "type": "string",
                                "example": "https://api.github.com/orgs/github/hooks"
                              },
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "https://api.github.com/orgs/github/issues"
                              },
                              "login": {
                                "type": "string",
                                "example": "github"
                              },
                              "members_url": {
                                "type": "string",
                                "example": "https://api.github.com/orgs/github/members{/member}"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEyOk9yZ2FuaXphdGlvbjE="
                              },
                              "public_members_url": {
                                "type": "string",
                                "example": "https://api.github.com/orgs/github/public_members{/member}"
                              },
                              "repos_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/orgs/github/repos"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/orgs/github"
                              }
                            },
                            "title": "Organization Simple"
                          }
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "organizations": [
                            {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "description": "A great organization",
                              "events_url": "https://api.github.com/orgs/octo-org/events",
                              "hooks_url": "https://api.github.com/orgs/octo-org/hooks",
                              "id": 161335,
                              "issues_url": "https://api.github.com/orgs/octo-org/issues",
                              "login": "octocat",
                              "members_url": "https://api.github.com/orgs/octo-org/members{/member}",
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "public_members_url": "https://api.github.com/orgs/octo-org/public_members{/member}",
                              "repos_url": "https://api.github.com/orgs/octo-org/repos",
                              "url": "https://api.github.com/orgs/octo-org"
                            }
                          ],
                          "total_count": 1
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Set organization access for a self-hosted runner group in an enterprise",
            "description": "Replaces the list of organizations that have access to a self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#set-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
            },
            "operationId": "enterprise-admin/set-org-access-to-self-hosted-runner-group-in-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "selected_organization_ids"
                    ],
                    "properties": {
                      "selected_organization_ids": {
                        "description": "List of organization IDs that can access the runner group.",
                        "type": "array",
                        "items": {
                          "description": "Unique identifier of the organization.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "selected_organization_ids": [
                      32,
                      91
                    ]
                  }
                }
              },
              "required": null
            },
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations/{org_id}",
        {
          "put": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Add organization access to a self-hosted runner group in an enterprise",
            "description": "Adds an organization to the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#add-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
            },
            "operationId": "enterprise-admin/add-org-access-to-self-hosted-runner-group-in-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "org_id",
                "description": "Unique identifier of an organization.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Remove organization access to a self-hosted runner group in an enterprise",
            "description": "Removes an organization from the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#remove-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
            },
            "operationId": "enterprise-admin/remove-org-access-to-self-hosted-runner-group-in-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "org_id",
                "description": "Unique identifier of an organization.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners",
        {
          "get": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "List self-hosted runners in a group for an enterprise",
            "description": "Lists the self-hosted runners that are in a specific enterprise group.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#list-self-hosted-runners-in-a-group-for-an-enterprise"
            },
            "operationId": "enterprise-admin/list-self-hosted-runners-in-group-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "runners"
                      ],
                      "properties": {
                        "runners": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "busy": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "os": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "runners": [
                            {
                              "busy": true,
                              "id": 23,
                              "name": "linux_runner",
                              "os": "linux",
                              "status": "online"
                            },
                            {
                              "busy": false,
                              "id": 24,
                              "name": "mac_runner",
                              "os": "macos",
                              "status": "offline"
                            }
                          ],
                          "total_count": 2
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Set self-hosted runners in a group for an enterprise",
            "description": "Replaces the list of self-hosted runners that are part of an enterprise runner group.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#set-self-hosted-runners-in-a-group-for-an-enterprise"
            },
            "operationId": "enterprise-admin/set-self-hosted-runners-in-group-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "runners"
                    ],
                    "properties": {
                      "runners": {
                        "description": "List of runner IDs to add to the runner group.",
                        "type": "array",
                        "items": {
                          "description": "Unique identifier of the runner.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "runners": [
                      9,
                      2
                    ]
                  }
                }
              },
              "required": null
            },
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners/{runner_id}",
        {
          "put": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Add a self-hosted runner to a group for an enterprise",
            "description": "Adds a self-hosted runner to a runner group configured in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise`\nscope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#add-a-self-hosted-runner-to-a-group-for-an-enterprise"
            },
            "operationId": "enterprise-admin/add-self-hosted-runner-to-group-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Remove a self-hosted runner from a group for an enterprise",
            "description": "Removes a self-hosted runner from a group configured in an enterprise. The runner is then returned to the default group.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#remove-a-self-hosted-runner-from-a-group-for-an-enterprise"
            },
            "operationId": "enterprise-admin/remove-self-hosted-runner-from-group-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runners",
        {
          "get": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "List self-hosted runners for an enterprise",
            "description": "Lists all self-hosted runners configured for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#list-self-hosted-runners-for-an-enterprise"
            },
            "operationId": "enterprise-admin/list-self-hosted-runners-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "runners": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "busy": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "os": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "runners": [
                            {
                              "busy": true,
                              "id": 23,
                              "name": "linux_runner",
                              "os": "linux",
                              "status": "online"
                            },
                            {
                              "busy": false,
                              "id": 24,
                              "name": "mac_runner",
                              "os": "macos",
                              "status": "offline"
                            }
                          ],
                          "total_count": 2
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runners/downloads",
        {
          "get": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "List runner applications for an enterprise",
            "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#list-runner-applications-for-an-enterprise"
            },
            "operationId": "enterprise-admin/list-runner-applications-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "Runner Application",
                        "type": "object",
                        "required": [
                          "os",
                          "architecture",
                          "download_url",
                          "filename"
                        ],
                        "properties": {
                          "architecture": {
                            "type": "string"
                          },
                          "download_url": {
                            "type": "string"
                          },
                          "filename": {
                            "type": "string"
                          },
                          "os": {
                            "type": "string"
                          },
                          "sha256_checksum": {
                            "type": "string"
                          },
                          "temp_download_token": {
                            "description": "A short lived bearer token used to download the runner, if needed.",
                            "type": "string"
                          }
                        },
                        "title": "Runner Application"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "architecture": "x64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz",
                            "filename": "actions-runner-osx-x64-2.164.0.tar.gz",
                            "os": "osx"
                          },
                          {
                            "architecture": "x64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz",
                            "filename": "actions-runner-linux-x64-2.164.0.tar.gz",
                            "os": "linux"
                          },
                          {
                            "architecture": "arm",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz",
                            "filename": "actions-runner-linux-arm-2.164.0.tar.gz",
                            "os": "linux"
                          },
                          {
                            "architecture": "x64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip",
                            "filename": "actions-runner-win-x64-2.164.0.zip",
                            "os": "win"
                          },
                          {
                            "architecture": "arm64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz",
                            "filename": "actions-runner-linux-arm64-2.164.0.tar.gz",
                            "os": "linux"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runners/registration-token",
        {
          "post": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Create a registration token for an enterprise",
            "description": "Returns a token that you can pass to the `config` script. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\n#### Example using registration token\n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/enterprises/octo-enterprise --token TOKEN\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#create-a-registration-token-for-an-enterprise"
            },
            "operationId": "enterprise-admin/create-registration-token-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Authentication Token",
                      "type": "object",
                      "required": [
                        "token",
                        "expires_at"
                      ],
                      "properties": {
                        "expires_at": {
                          "description": "The time this token expires",
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-07-11T22:14:10Z"
                        },
                        "permissions": {
                          "type": "object",
                          "example": {
                            "deployments": "write",
                            "issues": "read"
                          }
                        },
                        "repositories": {
                          "description": "The repositories this token has access to",
                          "type": "array",
                          "items": {
                            "description": "A git repository",
                            "type": "object",
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "properties": {
                              "allow_merge_commit": {
                                "description": "Whether to allow merge commits for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_rebase_merge": {
                                "description": "Whether to allow rebase merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_squash_merge": {
                                "description": "Whether to allow squash merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "archive_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                              },
                              "archived": {
                                "description": "Whether the repository is archived.",
                                "type": "boolean",
                                "default": false
                              },
                              "assignees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                              },
                              "blobs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                              },
                              "branches_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                              },
                              "clone_url": {
                                "type": "string",
                                "example": "https://github.com/octocat/Hello-World.git"
                              },
                              "collaborators_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                              },
                              "comments_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                              },
                              "commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                              },
                              "compare_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                              },
                              "contents_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                              },
                              "contributors_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:01:12Z"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "type": "string",
                                "example": "master"
                              },
                              "delete_branch_on_merge": {
                                "description": "Whether to delete head branches when pull requests are merged",
                                "type": "boolean",
                                "example": false,
                                "default": false
                              },
                              "deployments_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "This your first repo!"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/events"
                              },
                              "fork": {
                                "type": "boolean"
                              },
                              "forks": {
                                "type": "integer"
                              },
                              "forks_count": {
                                "type": "integer",
                                "example": 9
                              },
                              "forks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "octocat/Hello-World"
                              },
                              "git_commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                              },
                              "git_refs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                              },
                              "git_tags_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                              },
                              "git_url": {
                                "type": "string",
                                "example": "git:github.com/octocat/Hello-World.git"
                              },
                              "has_downloads": {
                                "description": "Whether downloads are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_issues": {
                                "description": "Whether issues are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_pages": {
                                "type": "boolean"
                              },
                              "has_projects": {
                                "description": "Whether projects are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_wiki": {
                                "description": "Whether the wiki is enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "homepage": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "https://github.com"
                              },
                              "hooks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat/Hello-World"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "type": "integer",
                                "example": 42
                              },
                              "is_template": {
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "type": "boolean",
                                "example": true,
                                "default": false
                              },
                              "issue_comment_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                              },
                              "issue_events_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                              },
                              "keys_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                              },
                              "labels_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "languages_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                              },
                              "license": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "properties": {
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "mit"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "MIT License"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDc6TGljZW5zZW1pdA=="
                                      },
                                      "spdx_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "MIT"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://api.github.com/licenses/mit"
                                      }
                                    },
                                    "title": "License Simple"
                                  }
                                ]
                              },
                              "master_branch": {
                                "type": "string"
                              },
                              "merges_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                              },
                              "milestones_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                              },
                              "mirror_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "git:git.example.com/octocat/Hello-World"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "type": "string",
                                "example": "Team Environment"
                              },
                              "network_count": {
                                "type": "integer"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                              },
                              "notifications_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                              },
                              "open_issues": {
                                "type": "integer"
                              },
                              "open_issues_count": {
                                "type": "integer",
                                "example": 0
                              },
                              "organization": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  }
                                ]
                              },
                              "owner": {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              },
                              "permissions": {
                                "type": "object",
                                "required": [
                                  "admin",
                                  "pull",
                                  "push"
                                ],
                                "properties": {
                                  "admin": {
                                    "type": "boolean"
                                  },
                                  "maintain": {
                                    "type": "boolean"
                                  },
                                  "pull": {
                                    "type": "boolean"
                                  },
                                  "push": {
                                    "type": "boolean"
                                  },
                                  "triage": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "private": {
                                "description": "Whether the repository is private or public.",
                                "type": "boolean",
                                "default": false
                              },
                              "pulls_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                              },
                              "pushed_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:06:43Z"
                              },
                              "releases_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                              },
                              "size": {
                                "type": "integer",
                                "example": 108
                              },
                              "ssh_url": {
                                "type": "string",
                                "example": "git@github.com:octocat/Hello-World.git"
                              },
                              "stargazers_count": {
                                "type": "integer",
                                "example": 80
                              },
                              "stargazers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                              },
                              "starred_at": {
                                "type": "string",
                                "example": "\"2020-07-09T00:17:42Z\""
                              },
                              "statuses_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                              },
                              "subscribers_count": {
                                "type": "integer"
                              },
                              "subscribers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                              },
                              "subscription_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                              },
                              "svn_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://svn.github.com/octocat/Hello-World"
                              },
                              "tags_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                              },
                              "teams_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                              },
                              "temp_clone_token": {
                                "type": "string"
                              },
                              "template_repository": {
                                "type": "object",
                                "properties": {
                                  "allow_merge_commit": {
                                    "type": "boolean"
                                  },
                                  "allow_rebase_merge": {
                                    "type": "boolean"
                                  },
                                  "allow_squash_merge": {
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "type": "string"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "type": "string"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "collaborators_url": {
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "type": "string"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "type": "string"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "integer"
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "type": "string"
                                  },
                                  "merges_url": {
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "type": "string"
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "type": "object",
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "login": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "type": "string"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_url": {
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "type": "string"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "type": "string"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "type": "string"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "nullable": true
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "trees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:14:43Z"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "visibility": {
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string",
                                "default": "public"
                              },
                              "watchers": {
                                "type": "integer"
                              },
                              "watchers_count": {
                                "type": "integer",
                                "example": 80
                              }
                            },
                            "title": "Repository"
                          }
                        },
                        "repository_selection": {
                          "description": "Describe whether all repositories have been selected or there's a selection involved",
                          "type": "string",
                          "enum": [
                            "all",
                            "selected"
                          ]
                        },
                        "single_file": {
                          "type": "string",
                          "nullable": true,
                          "example": "config.yaml"
                        },
                        "token": {
                          "description": "The token used for authentication",
                          "type": "string",
                          "example": "v1.1f699f1069f60xxx"
                        }
                      },
                      "title": "Authentication Token"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2020-01-22T12:13:35.123-08:00",
                          "token": "LLBF3JGZDX3P5PMEXLND6TS6FCWO6"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runners/remove-token",
        {
          "post": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Create a remove token for an enterprise",
            "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an enterprise. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\n\n#### Example using remove token\n\nTo remove your self-hosted runner from an enterprise, replace `TOKEN` with the remove token provided by this\nendpoint.\n\n```\n./config.sh remove --token TOKEN\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#create-a-remove-token-for-an-enterprise"
            },
            "operationId": "enterprise-admin/create-remove-token-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Authentication Token",
                      "type": "object",
                      "required": [
                        "token",
                        "expires_at"
                      ],
                      "properties": {
                        "expires_at": {
                          "description": "The time this token expires",
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-07-11T22:14:10Z"
                        },
                        "permissions": {
                          "type": "object",
                          "example": {
                            "deployments": "write",
                            "issues": "read"
                          }
                        },
                        "repositories": {
                          "description": "The repositories this token has access to",
                          "type": "array",
                          "items": {
                            "description": "A git repository",
                            "type": "object",
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "properties": {
                              "allow_merge_commit": {
                                "description": "Whether to allow merge commits for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_rebase_merge": {
                                "description": "Whether to allow rebase merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_squash_merge": {
                                "description": "Whether to allow squash merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "archive_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                              },
                              "archived": {
                                "description": "Whether the repository is archived.",
                                "type": "boolean",
                                "default": false
                              },
                              "assignees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                              },
                              "blobs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                              },
                              "branches_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                              },
                              "clone_url": {
                                "type": "string",
                                "example": "https://github.com/octocat/Hello-World.git"
                              },
                              "collaborators_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                              },
                              "comments_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                              },
                              "commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                              },
                              "compare_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                              },
                              "contents_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                              },
                              "contributors_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:01:12Z"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "type": "string",
                                "example": "master"
                              },
                              "delete_branch_on_merge": {
                                "description": "Whether to delete head branches when pull requests are merged",
                                "type": "boolean",
                                "example": false,
                                "default": false
                              },
                              "deployments_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "This your first repo!"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/events"
                              },
                              "fork": {
                                "type": "boolean"
                              },
                              "forks": {
                                "type": "integer"
                              },
                              "forks_count": {
                                "type": "integer",
                                "example": 9
                              },
                              "forks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "octocat/Hello-World"
                              },
                              "git_commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                              },
                              "git_refs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                              },
                              "git_tags_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                              },
                              "git_url": {
                                "type": "string",
                                "example": "git:github.com/octocat/Hello-World.git"
                              },
                              "has_downloads": {
                                "description": "Whether downloads are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_issues": {
                                "description": "Whether issues are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_pages": {
                                "type": "boolean"
                              },
                              "has_projects": {
                                "description": "Whether projects are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_wiki": {
                                "description": "Whether the wiki is enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "homepage": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "https://github.com"
                              },
                              "hooks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat/Hello-World"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "type": "integer",
                                "example": 42
                              },
                              "is_template": {
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "type": "boolean",
                                "example": true,
                                "default": false
                              },
                              "issue_comment_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                              },
                              "issue_events_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                              },
                              "keys_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                              },
                              "labels_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "languages_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                              },
                              "license": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "properties": {
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "mit"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "MIT License"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDc6TGljZW5zZW1pdA=="
                                      },
                                      "spdx_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "MIT"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://api.github.com/licenses/mit"
                                      }
                                    },
                                    "title": "License Simple"
                                  }
                                ]
                              },
                              "master_branch": {
                                "type": "string"
                              },
                              "merges_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                              },
                              "milestones_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                              },
                              "mirror_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "git:git.example.com/octocat/Hello-World"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "type": "string",
                                "example": "Team Environment"
                              },
                              "network_count": {
                                "type": "integer"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                              },
                              "notifications_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                              },
                              "open_issues": {
                                "type": "integer"
                              },
                              "open_issues_count": {
                                "type": "integer",
                                "example": 0
                              },
                              "organization": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  }
                                ]
                              },
                              "owner": {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              },
                              "permissions": {
                                "type": "object",
                                "required": [
                                  "admin",
                                  "pull",
                                  "push"
                                ],
                                "properties": {
                                  "admin": {
                                    "type": "boolean"
                                  },
                                  "maintain": {
                                    "type": "boolean"
                                  },
                                  "pull": {
                                    "type": "boolean"
                                  },
                                  "push": {
                                    "type": "boolean"
                                  },
                                  "triage": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "private": {
                                "description": "Whether the repository is private or public.",
                                "type": "boolean",
                                "default": false
                              },
                              "pulls_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                              },
                              "pushed_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:06:43Z"
                              },
                              "releases_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                              },
                              "size": {
                                "type": "integer",
                                "example": 108
                              },
                              "ssh_url": {
                                "type": "string",
                                "example": "git@github.com:octocat/Hello-World.git"
                              },
                              "stargazers_count": {
                                "type": "integer",
                                "example": 80
                              },
                              "stargazers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                              },
                              "starred_at": {
                                "type": "string",
                                "example": "\"2020-07-09T00:17:42Z\""
                              },
                              "statuses_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                              },
                              "subscribers_count": {
                                "type": "integer"
                              },
                              "subscribers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                              },
                              "subscription_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                              },
                              "svn_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://svn.github.com/octocat/Hello-World"
                              },
                              "tags_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                              },
                              "teams_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                              },
                              "temp_clone_token": {
                                "type": "string"
                              },
                              "template_repository": {
                                "type": "object",
                                "properties": {
                                  "allow_merge_commit": {
                                    "type": "boolean"
                                  },
                                  "allow_rebase_merge": {
                                    "type": "boolean"
                                  },
                                  "allow_squash_merge": {
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "type": "string"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "type": "string"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "collaborators_url": {
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "type": "string"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "type": "string"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "integer"
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "type": "string"
                                  },
                                  "merges_url": {
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "type": "string"
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "type": "object",
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "login": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "type": "string"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_url": {
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "type": "string"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "type": "string"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "type": "string"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "nullable": true
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "trees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:14:43Z"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "visibility": {
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string",
                                "default": "public"
                              },
                              "watchers": {
                                "type": "integer"
                              },
                              "watchers_count": {
                                "type": "integer",
                                "example": 80
                              }
                            },
                            "title": "Repository"
                          }
                        },
                        "repository_selection": {
                          "description": "Describe whether all repositories have been selected or there's a selection involved",
                          "type": "string",
                          "enum": [
                            "all",
                            "selected"
                          ]
                        },
                        "single_file": {
                          "type": "string",
                          "nullable": true,
                          "example": "config.yaml"
                        },
                        "token": {
                          "description": "The token used for authentication",
                          "type": "string",
                          "example": "v1.1f699f1069f60xxx"
                        }
                      },
                      "title": "Authentication Token"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2020-01-29T12:13:35.123-08:00",
                          "token": "AABF3JGZDX3P5PMEXLND6TS6FCWO6"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/enterprises/{enterprise}/actions/runners/{runner_id}",
        {
          "get": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Get a self-hosted runner for an enterprise",
            "description": "Gets a specific self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#get-a-self-hosted-runner-for-an-enterprise"
            },
            "operationId": "enterprise-admin/get-self-hosted-runner-for-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "busy": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "os": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "busy": true,
                          "id": 23,
                          "name": "mac_runner",
                          "os": "macos",
                          "status": "online"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "enterprise-admin"
            ],
            "summary": "Delete a self-hosted runner from an enterprise",
            "description": "Forces the removal of a self-hosted runner from an enterprise. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#delete-self-hosted-runner-from-an-enterprise"
            },
            "operationId": "enterprise-admin/delete-self-hosted-runner-from-enterprise",
            "parameters": [
              {
                "in": "path",
                "name": "enterprise",
                "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "enterprise-admin",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "actions"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runner-groups",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List self-hosted runner groups for an organization",
            "description": "Lists all self-hosted runner groups configured in an organization and inherited from an enterprise.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-self-hosted-runner-groups-for-an-organization"
            },
            "operationId": "actions/list-self-hosted-runner-groups-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "runner_groups"
                      ],
                      "properties": {
                        "runner_groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "visibility",
                              "default",
                              "runners_url",
                              "inherited",
                              "allows_public_repositories"
                            ],
                            "properties": {
                              "allows_public_repositories": {
                                "type": "boolean"
                              },
                              "default": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "number"
                              },
                              "inherited": {
                                "type": "boolean"
                              },
                              "inherited_allows_public_repositories": {
                                "type": "boolean"
                              },
                              "name": {
                                "type": "string"
                              },
                              "runners_url": {
                                "type": "string"
                              },
                              "selected_repositories_url": {
                                "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
                                "type": "string"
                              },
                              "visibility": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "runner_groups": [
                            {
                              "allows_public_repositories": true,
                              "default": true,
                              "id": 1,
                              "inherited": false,
                              "name": "Default",
                              "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/1/runners",
                              "visibility": "all"
                            },
                            {
                              "allows_public_repositories": true,
                              "default": false,
                              "id": 2,
                              "inherited": true,
                              "name": "octo-runner-group",
                              "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
                              "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories",
                              "visibility": "selected"
                            },
                            {
                              "allows_public_repositories": true,
                              "default": false,
                              "id": 3,
                              "inherited": false,
                              "name": "expensive-hardware",
                              "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/3/runners",
                              "visibility": "private"
                            }
                          ],
                          "total_count": 3
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          },
          "post": {
            "tags": [
              "actions"
            ],
            "summary": "Create a self-hosted runner group for an organization",
            "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nCreates a new self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-a-self-hosted-runner-group-for-an-organization"
            },
            "operationId": "actions/create-self-hosted-runner-group-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the runner group.",
                        "type": "string"
                      },
                      "runners": {
                        "description": "List of runner IDs to add to the runner group.",
                        "type": "array",
                        "items": {
                          "description": "Unique identifier of the runner.",
                          "type": "integer"
                        }
                      },
                      "selected_repository_ids": {
                        "description": "List of repository IDs that can access the runner group.",
                        "type": "array",
                        "items": {
                          "description": "Unique identifier of the repository.",
                          "type": "integer"
                        }
                      },
                      "visibility": {
                        "description": "Visibility of a runner group. You can select all repositories, select individual repositories, or limit access to private repositories. Can be one of: `all`, `selected`, or `private`.",
                        "type": "string",
                        "enum": [
                          "selected",
                          "all",
                          "private"
                        ],
                        "default": "all"
                      }
                    }
                  },
                  "example": {
                    "name": "Expensive hardware runners",
                    "runners": [
                      9,
                      2
                    ],
                    "selected_repository_ids": [
                      32,
                      91
                    ],
                    "visibility": "selected"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "visibility",
                        "default",
                        "runners_url",
                        "inherited",
                        "allows_public_repositories"
                      ],
                      "properties": {
                        "allows_public_repositories": {
                          "type": "boolean"
                        },
                        "default": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "number"
                        },
                        "inherited": {
                          "type": "boolean"
                        },
                        "inherited_allows_public_repositories": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "runners_url": {
                          "type": "string"
                        },
                        "selected_repositories_url": {
                          "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
                          "type": "string"
                        },
                        "visibility": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "allows_public_repositories": true,
                          "default": false,
                          "id": 2,
                          "inherited": false,
                          "name": "octo-runner-group",
                          "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
                          "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner-groups/2/repositories",
                          "visibility": "selected"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runner-groups/{runner_group_id}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get a self-hosted runner group for an organization",
            "description": "Gets a specific self-hosted runner group for an organization.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-self-hosted-runner-group-for-an-organization"
            },
            "operationId": "actions/get-self-hosted-runner-group-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "visibility",
                        "default",
                        "runners_url",
                        "inherited",
                        "allows_public_repositories"
                      ],
                      "properties": {
                        "allows_public_repositories": {
                          "type": "boolean"
                        },
                        "default": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "number"
                        },
                        "inherited": {
                          "type": "boolean"
                        },
                        "inherited_allows_public_repositories": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "runners_url": {
                          "type": "string"
                        },
                        "selected_repositories_url": {
                          "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
                          "type": "string"
                        },
                        "visibility": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "allows_public_repositories": true,
                          "default": false,
                          "id": 2,
                          "inherited": false,
                          "name": "octo-runner-group",
                          "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
                          "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories",
                          "visibility": "selected"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Delete a self-hosted runner group from an organization",
            "description": "Deletes a self-hosted runner group for an organization.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#delete-a-self-hosted-runner-group-from-an-organization"
            },
            "operationId": "actions/delete-self-hosted-runner-group-from-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          },
          "patch": {
            "tags": [
              "actions"
            ],
            "summary": "Update a self-hosted runner group for an organization",
            "description": "Updates the `name` and `visibility` of a self-hosted runner group in an organization.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#update-a-self-hosted-runner-group-for-an-organization"
            },
            "operationId": "actions/update-self-hosted-runner-group-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the runner group.",
                        "type": "string"
                      },
                      "visibility": {
                        "description": "Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories. Can be one of: `all`, `selected`, or `private`.",
                        "type": "string",
                        "enum": [
                          "selected",
                          "all",
                          "private"
                        ]
                      }
                    }
                  },
                  "example": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "visibility",
                        "default",
                        "runners_url",
                        "inherited",
                        "allows_public_repositories"
                      ],
                      "properties": {
                        "allows_public_repositories": {
                          "type": "boolean"
                        },
                        "default": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "number"
                        },
                        "inherited": {
                          "type": "boolean"
                        },
                        "inherited_allows_public_repositories": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "runners_url": {
                          "type": "string"
                        },
                        "selected_repositories_url": {
                          "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
                          "type": "string"
                        },
                        "visibility": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "allows_public_repositories": true,
                          "default": false,
                          "id": 2,
                          "inherited": false,
                          "name": "octo-runner-group",
                          "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
                          "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner-groups/2/repositories",
                          "visibility": "selected"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List repository access to a self-hosted runner group in an organization",
            "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nLists the repositories with access to a self-hosted runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-repository-access-to-a-self-hosted-runner-group-in-an-organization"
            },
            "operationId": "actions/list-repo-access-to-self-hosted-runner-group-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "repositories"
                      ],
                      "properties": {
                        "repositories": {
                          "type": "array",
                          "items": {
                            "description": "Minimal Repository",
                            "type": "object",
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url"
                            ],
                            "properties": {
                              "archive_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "assignees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                              },
                              "blobs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                              },
                              "branches_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                              },
                              "clone_url": {
                                "type": "string"
                              },
                              "code_of_conduct": {
                                "description": "Code Of Conduct",
                                "type": "object",
                                "required": [
                                  "url",
                                  "html_url",
                                  "key",
                                  "name"
                                ],
                                "properties": {
                                  "body": {
                                    "type": "string",
                                    "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "contributor_covenant"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Contributor Covenant"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                                  }
                                },
                                "title": "Code Of Conduct"
                              },
                              "collaborators_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                              },
                              "comments_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                              },
                              "commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                              },
                              "compare_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                              },
                              "contents_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                              },
                              "contributors_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:01:12Z"
                              },
                              "default_branch": {
                                "type": "string"
                              },
                              "delete_branch_on_merge": {
                                "type": "boolean"
                              },
                              "deployments_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "This your first repo!"
                              },
                              "disabled": {
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/events"
                              },
                              "fork": {
                                "type": "boolean"
                              },
                              "forks": {
                                "type": "integer",
                                "example": 0
                              },
                              "forks_count": {
                                "type": "integer"
                              },
                              "forks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "octocat/Hello-World"
                              },
                              "git_commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                              },
                              "git_refs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                              },
                              "git_tags_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                              },
                              "git_url": {
                                "type": "string"
                              },
                              "has_downloads": {
                                "type": "boolean"
                              },
                              "has_issues": {
                                "type": "boolean"
                              },
                              "has_pages": {
                                "type": "boolean"
                              },
                              "has_projects": {
                                "type": "boolean"
                              },
                              "has_wiki": {
                                "type": "boolean"
                              },
                              "homepage": {
                                "type": "string",
                                "nullable": true
                              },
                              "hooks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat/Hello-World"
                              },
                              "id": {
                                "type": "integer",
                                "example": 1296269
                              },
                              "is_template": {
                                "type": "boolean"
                              },
                              "issue_comment_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                              },
                              "issue_events_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                              },
                              "keys_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                              },
                              "labels_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "languages_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                              },
                              "license": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "type": "string"
                                  },
                                  "spdx_id": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "nullable": true
                              },
                              "merges_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                              },
                              "milestones_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                              },
                              "mirror_url": {
                                "type": "string",
                                "nullable": true
                              },
                              "name": {
                                "type": "string",
                                "example": "Hello-World"
                              },
                              "network_count": {
                                "type": "integer"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                              },
                              "notifications_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                              },
                              "open_issues": {
                                "type": "integer",
                                "example": 0
                              },
                              "open_issues_count": {
                                "type": "integer"
                              },
                              "owner": {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              },
                              "permissions": {
                                "type": "object",
                                "properties": {
                                  "admin": {
                                    "type": "boolean"
                                  },
                                  "maintain": {
                                    "type": "boolean"
                                  },
                                  "pull": {
                                    "type": "boolean"
                                  },
                                  "push": {
                                    "type": "boolean"
                                  },
                                  "triage": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "private": {
                                "type": "boolean"
                              },
                              "pulls_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                              },
                              "pushed_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:06:43Z"
                              },
                              "releases_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                              },
                              "size": {
                                "type": "integer"
                              },
                              "ssh_url": {
                                "type": "string"
                              },
                              "stargazers_count": {
                                "type": "integer"
                              },
                              "stargazers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                              },
                              "statuses_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                              },
                              "subscribers_count": {
                                "type": "integer"
                              },
                              "subscribers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                              },
                              "subscription_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                              },
                              "svn_url": {
                                "type": "string"
                              },
                              "tags_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                              },
                              "teams_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                              },
                              "temp_clone_token": {
                                "type": "string"
                              },
                              "template_repository": {
                                "type": "object",
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "A git repository",
                                    "type": "object",
                                    "required": [
                                      "archive_url",
                                      "assignees_url",
                                      "blobs_url",
                                      "branches_url",
                                      "collaborators_url",
                                      "comments_url",
                                      "commits_url",
                                      "compare_url",
                                      "contents_url",
                                      "contributors_url",
                                      "deployments_url",
                                      "description",
                                      "downloads_url",
                                      "events_url",
                                      "fork",
                                      "forks_url",
                                      "full_name",
                                      "git_commits_url",
                                      "git_refs_url",
                                      "git_tags_url",
                                      "hooks_url",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "issue_comment_url",
                                      "issue_events_url",
                                      "issues_url",
                                      "keys_url",
                                      "labels_url",
                                      "languages_url",
                                      "merges_url",
                                      "milestones_url",
                                      "name",
                                      "notifications_url",
                                      "owner",
                                      "private",
                                      "pulls_url",
                                      "releases_url",
                                      "stargazers_url",
                                      "statuses_url",
                                      "subscribers_url",
                                      "subscription_url",
                                      "tags_url",
                                      "teams_url",
                                      "trees_url",
                                      "url",
                                      "clone_url",
                                      "default_branch",
                                      "forks",
                                      "forks_count",
                                      "git_url",
                                      "has_downloads",
                                      "has_issues",
                                      "has_projects",
                                      "has_wiki",
                                      "has_pages",
                                      "homepage",
                                      "language",
                                      "archived",
                                      "disabled",
                                      "mirror_url",
                                      "open_issues",
                                      "open_issues_count",
                                      "license",
                                      "pushed_at",
                                      "size",
                                      "ssh_url",
                                      "stargazers_count",
                                      "svn_url",
                                      "watchers",
                                      "watchers_count",
                                      "created_at",
                                      "updated_at"
                                    ],
                                    "properties": {
                                      "allow_merge_commit": {
                                        "description": "Whether to allow merge commits for pull requests.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "allow_rebase_merge": {
                                        "description": "Whether to allow rebase merges for pull requests.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "allow_squash_merge": {
                                        "description": "Whether to allow squash merges for pull requests.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "archive_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                      },
                                      "archived": {
                                        "description": "Whether the repository is archived.",
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "assignees_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                      },
                                      "blobs_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                      },
                                      "branches_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                      },
                                      "clone_url": {
                                        "type": "string",
                                        "example": "https://github.com/octocat/Hello-World.git"
                                      },
                                      "collaborators_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                      },
                                      "comments_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                      },
                                      "commits_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                      },
                                      "compare_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                      },
                                      "contents_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                      },
                                      "contributors_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                      },
                                      "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true,
                                        "example": "2011-01-26T19:01:12Z"
                                      },
                                      "default_branch": {
                                        "description": "The default branch of the repository.",
                                        "type": "string",
                                        "example": "master"
                                      },
                                      "delete_branch_on_merge": {
                                        "description": "Whether to delete head branches when pull requests are merged",
                                        "type": "boolean",
                                        "example": false,
                                        "default": false
                                      },
                                      "deployments_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                      },
                                      "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "This your first repo!"
                                      },
                                      "disabled": {
                                        "description": "Returns whether or not this repository disabled.",
                                        "type": "boolean"
                                      },
                                      "downloads_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                      },
                                      "fork": {
                                        "type": "boolean"
                                      },
                                      "forks": {
                                        "type": "integer"
                                      },
                                      "forks_count": {
                                        "type": "integer",
                                        "example": 9
                                      },
                                      "forks_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                      },
                                      "full_name": {
                                        "type": "string",
                                        "example": "octocat/Hello-World"
                                      },
                                      "git_commits_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                      },
                                      "git_refs_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                      },
                                      "git_tags_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                      },
                                      "git_url": {
                                        "type": "string",
                                        "example": "git:github.com/octocat/Hello-World.git"
                                      },
                                      "has_downloads": {
                                        "description": "Whether downloads are enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "has_issues": {
                                        "description": "Whether issues are enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "has_pages": {
                                        "type": "boolean"
                                      },
                                      "has_projects": {
                                        "description": "Whether projects are enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "has_wiki": {
                                        "description": "Whether the wiki is enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "homepage": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://github.com"
                                      },
                                      "hooks_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat/Hello-World"
                                      },
                                      "id": {
                                        "description": "Unique identifier of the repository",
                                        "type": "integer",
                                        "example": 42
                                      },
                                      "is_template": {
                                        "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": false
                                      },
                                      "issue_comment_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                      },
                                      "issue_events_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                      },
                                      "issues_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                      },
                                      "keys_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                      },
                                      "labels_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                      },
                                      "language": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "languages_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                      },
                                      "license": {
                                        "nullable": true,
                                        "allOf": [
                                          {
                                            "description": "License Simple",
                                            "type": "object",
                                            "required": [
                                              "key",
                                              "name",
                                              "url",
                                              "spdx_id",
                                              "node_id"
                                            ],
                                            "properties": {
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri"
                                              },
                                              "key": {
                                                "type": "string",
                                                "example": "mit"
                                              },
                                              "name": {
                                                "type": "string",
                                                "example": "MIT License"
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDc6TGljZW5zZW1pdA=="
                                              },
                                              "spdx_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "MIT"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "nullable": true,
                                                "example": "https://api.github.com/licenses/mit"
                                              }
                                            },
                                            "title": "License Simple"
                                          }
                                        ]
                                      },
                                      "master_branch": {
                                        "type": "string"
                                      },
                                      "merges_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                      },
                                      "milestones_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                      },
                                      "mirror_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "git:git.example.com/octocat/Hello-World"
                                      },
                                      "name": {
                                        "description": "The name of the repository.",
                                        "type": "string",
                                        "example": "Team Environment"
                                      },
                                      "network_count": {
                                        "type": "integer"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                      },
                                      "notifications_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                      },
                                      "open_issues": {
                                        "type": "integer"
                                      },
                                      "open_issues_count": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "organization": {
                                        "nullable": true,
                                        "allOf": [
                                          {
                                            "description": "Simple User",
                                            "type": "object",
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/images/error/octocat_happy.gif"
                                              },
                                              "email": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "events_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                                              },
                                              "followers_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/followers"
                                              },
                                              "following_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                                              },
                                              "gists_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                              },
                                              "gravatar_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "41d064eb2195891e12d0413f63227ea7"
                                              },
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/octocat"
                                              },
                                              "id": {
                                                "type": "integer",
                                                "example": 1
                                              },
                                              "login": {
                                                "type": "string",
                                                "example": "octocat"
                                              },
                                              "name": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDQ6VXNlcjE="
                                              },
                                              "organizations_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/orgs"
                                              },
                                              "received_events_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/received_events"
                                              },
                                              "repos_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/repos"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "type": "string",
                                                "example": "\"2020-07-09T00:17:55Z\""
                                              },
                                              "starred_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                              },
                                              "subscriptions_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/subscriptions"
                                              },
                                              "type": {
                                                "type": "string",
                                                "example": "User"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat"
                                              }
                                            },
                                            "nullable": true,
                                            "title": "Simple User"
                                          }
                                        ]
                                      },
                                      "owner": {
                                        "description": "Simple User",
                                        "type": "object",
                                        "required": [
                                          "avatar_url",
                                          "events_url",
                                          "followers_url",
                                          "following_url",
                                          "gists_url",
                                          "gravatar_id",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "login",
                                          "organizations_url",
                                          "received_events_url",
                                          "repos_url",
                                          "site_admin",
                                          "starred_url",
                                          "subscriptions_url",
                                          "type",
                                          "url"
                                        ],
                                        "properties": {
                                          "avatar_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/images/error/octocat_happy.gif"
                                          },
                                          "email": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/events{/privacy}"
                                          },
                                          "followers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/followers"
                                          },
                                          "following_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/following{/other_user}"
                                          },
                                          "gists_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                          },
                                          "gravatar_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "41d064eb2195891e12d0413f63227ea7"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat"
                                          },
                                          "id": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "login": {
                                            "type": "string",
                                            "example": "octocat"
                                          },
                                          "name": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDQ6VXNlcjE="
                                          },
                                          "organizations_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/orgs"
                                          },
                                          "received_events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/received_events"
                                          },
                                          "repos_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/repos"
                                          },
                                          "site_admin": {
                                            "type": "boolean"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:55Z\""
                                          },
                                          "starred_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                          },
                                          "subscriptions_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/subscriptions"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "User"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat"
                                          }
                                        },
                                        "nullable": true,
                                        "title": "Simple User"
                                      },
                                      "permissions": {
                                        "type": "object",
                                        "required": [
                                          "admin",
                                          "pull",
                                          "push"
                                        ],
                                        "properties": {
                                          "admin": {
                                            "type": "boolean"
                                          },
                                          "maintain": {
                                            "type": "boolean"
                                          },
                                          "pull": {
                                            "type": "boolean"
                                          },
                                          "push": {
                                            "type": "boolean"
                                          },
                                          "triage": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "private": {
                                        "description": "Whether the repository is private or public.",
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "pulls_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                      },
                                      "pushed_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true,
                                        "example": "2011-01-26T19:06:43Z"
                                      },
                                      "releases_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                      },
                                      "size": {
                                        "type": "integer",
                                        "example": 108
                                      },
                                      "ssh_url": {
                                        "type": "string",
                                        "example": "git@github.com:octocat/Hello-World.git"
                                      },
                                      "stargazers_count": {
                                        "type": "integer",
                                        "example": 80
                                      },
                                      "stargazers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:42Z\""
                                      },
                                      "statuses_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                      },
                                      "subscribers_count": {
                                        "type": "integer"
                                      },
                                      "subscribers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                      },
                                      "subscription_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                      },
                                      "svn_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://svn.github.com/octocat/Hello-World"
                                      },
                                      "tags_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                      },
                                      "teams_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                      },
                                      "temp_clone_token": {
                                        "type": "string"
                                      },
                                      "template_repository": {
                                        "type": "object",
                                        "properties": {
                                          "allow_merge_commit": {
                                            "type": "boolean"
                                          },
                                          "allow_rebase_merge": {
                                            "type": "boolean"
                                          },
                                          "allow_squash_merge": {
                                            "type": "boolean"
                                          },
                                          "archive_url": {
                                            "type": "string"
                                          },
                                          "archived": {
                                            "type": "boolean"
                                          },
                                          "assignees_url": {
                                            "type": "string"
                                          },
                                          "blobs_url": {
                                            "type": "string"
                                          },
                                          "branches_url": {
                                            "type": "string"
                                          },
                                          "clone_url": {
                                            "type": "string"
                                          },
                                          "collaborators_url": {
                                            "type": "string"
                                          },
                                          "comments_url": {
                                            "type": "string"
                                          },
                                          "commits_url": {
                                            "type": "string"
                                          },
                                          "compare_url": {
                                            "type": "string"
                                          },
                                          "contents_url": {
                                            "type": "string"
                                          },
                                          "contributors_url": {
                                            "type": "string"
                                          },
                                          "created_at": {
                                            "type": "string"
                                          },
                                          "default_branch": {
                                            "type": "string"
                                          },
                                          "delete_branch_on_merge": {
                                            "type": "boolean"
                                          },
                                          "deployments_url": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          },
                                          "disabled": {
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "type": "string"
                                          },
                                          "fork": {
                                            "type": "boolean"
                                          },
                                          "forks_count": {
                                            "type": "integer"
                                          },
                                          "forks_url": {
                                            "type": "string"
                                          },
                                          "full_name": {
                                            "type": "string"
                                          },
                                          "git_commits_url": {
                                            "type": "string"
                                          },
                                          "git_refs_url": {
                                            "type": "string"
                                          },
                                          "git_tags_url": {
                                            "type": "string"
                                          },
                                          "git_url": {
                                            "type": "string"
                                          },
                                          "has_downloads": {
                                            "type": "boolean"
                                          },
                                          "has_issues": {
                                            "type": "boolean"
                                          },
                                          "has_pages": {
                                            "type": "boolean"
                                          },
                                          "has_projects": {
                                            "type": "boolean"
                                          },
                                          "has_wiki": {
                                            "type": "boolean"
                                          },
                                          "homepage": {
                                            "type": "string"
                                          },
                                          "hooks_url": {
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "integer"
                                          },
                                          "is_template": {
                                            "type": "boolean"
                                          },
                                          "issue_comment_url": {
                                            "type": "string"
                                          },
                                          "issue_events_url": {
                                            "type": "string"
                                          },
                                          "issues_url": {
                                            "type": "string"
                                          },
                                          "keys_url": {
                                            "type": "string"
                                          },
                                          "labels_url": {
                                            "type": "string"
                                          },
                                          "language": {
                                            "type": "string"
                                          },
                                          "languages_url": {
                                            "type": "string"
                                          },
                                          "merges_url": {
                                            "type": "string"
                                          },
                                          "milestones_url": {
                                            "type": "string"
                                          },
                                          "mirror_url": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "type": "string"
                                          },
                                          "notifications_url": {
                                            "type": "string"
                                          },
                                          "open_issues_count": {
                                            "type": "integer"
                                          },
                                          "owner": {
                                            "type": "object",
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "followers_url": {
                                                "type": "string"
                                              },
                                              "following_url": {
                                                "type": "string"
                                              },
                                              "gists_url": {
                                                "type": "string"
                                              },
                                              "gravatar_id": {
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "integer"
                                              },
                                              "login": {
                                                "type": "string"
                                              },
                                              "node_id": {
                                                "type": "string"
                                              },
                                              "organizations_url": {
                                                "type": "string"
                                              },
                                              "received_events_url": {
                                                "type": "string"
                                              },
                                              "repos_url": {
                                                "type": "string"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_url": {
                                                "type": "string"
                                              },
                                              "subscriptions_url": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "permissions": {
                                            "type": "object",
                                            "properties": {
                                              "admin": {
                                                "type": "boolean"
                                              },
                                              "maintain": {
                                                "type": "boolean"
                                              },
                                              "pull": {
                                                "type": "boolean"
                                              },
                                              "push": {
                                                "type": "boolean"
                                              },
                                              "triage": {
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "private": {
                                            "type": "boolean"
                                          },
                                          "pulls_url": {
                                            "type": "string"
                                          },
                                          "pushed_at": {
                                            "type": "string"
                                          },
                                          "releases_url": {
                                            "type": "string"
                                          },
                                          "size": {
                                            "type": "integer"
                                          },
                                          "ssh_url": {
                                            "type": "string"
                                          },
                                          "stargazers_count": {
                                            "type": "integer"
                                          },
                                          "stargazers_url": {
                                            "type": "string"
                                          },
                                          "statuses_url": {
                                            "type": "string"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "type": "string"
                                          },
                                          "subscription_url": {
                                            "type": "string"
                                          },
                                          "svn_url": {
                                            "type": "string"
                                          },
                                          "tags_url": {
                                            "type": "string"
                                          },
                                          "teams_url": {
                                            "type": "string"
                                          },
                                          "temp_clone_token": {
                                            "type": "string"
                                          },
                                          "topics": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "trees_url": {
                                            "type": "string"
                                          },
                                          "updated_at": {
                                            "type": "string"
                                          },
                                          "url": {
                                            "type": "string"
                                          },
                                          "visibility": {
                                            "type": "string"
                                          },
                                          "watchers_count": {
                                            "type": "integer"
                                          }
                                        },
                                        "nullable": true
                                      },
                                      "topics": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "trees_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                      },
                                      "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true,
                                        "example": "2011-01-26T19:14:43Z"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/repos/octocat/Hello-World"
                                      },
                                      "visibility": {
                                        "description": "The repository visibility: public, private, or internal.",
                                        "type": "string",
                                        "default": "public"
                                      },
                                      "watchers": {
                                        "type": "integer"
                                      },
                                      "watchers_count": {
                                        "type": "integer",
                                        "example": 80
                                      }
                                    },
                                    "title": "Repository"
                                  }
                                ]
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "trees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:14:43Z"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "visibility": {
                                "type": "string"
                              },
                              "watchers": {
                                "type": "integer",
                                "example": 0
                              },
                              "watchers_count": {
                                "type": "integer"
                              }
                            },
                            "title": "Minimal Repository"
                          }
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "repositories": [
                            {
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "archived": false,
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "clone_url": "https://github.com/octocat/Hello-World.git",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                              "created_at": "2011-01-26T19:01:12Z",
                              "default_branch": "master",
                              "delete_branch_on_merge": true,
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                              "description": "This your first repo!",
                              "disabled": false,
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                              "fork": false,
                              "forks": 1,
                              "forks_count": 9,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                              "full_name": "octocat/Hello-World",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World.git",
                              "has_downloads": true,
                              "has_issues": true,
                              "has_pages": false,
                              "has_projects": true,
                              "has_wiki": true,
                              "homepage": "https://github.com",
                              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                              "html_url": "https://github.com/octocat/Hello-World",
                              "id": 1296269,
                              "is_template": true,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "language": null,
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                              "license": {
                                "key": "mit",
                                "name": "MIT License",
                                "node_id": "MDc6TGljZW5zZW1pdA==",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit"
                              },
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "mirror_url": "git:git.example.com/octocat/Hello-World",
                              "name": "Hello-World",
                              "network_count": 0,
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "open_issues": 1,
                              "open_issues_count": 0,
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "gravatar_id": "",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "permissions": {
                                "admin": false,
                                "pull": true,
                                "push": false
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "pushed_at": "2011-01-26T19:06:43Z",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "size": 108,
                              "ssh_url": "git@github.com:octocat/Hello-World.git",
                              "stargazers_count": 80,
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "subscribers_count": 42,
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                              "svn_url": "https://svn.github.com/octocat/Hello-World",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                              "template_repository": {
                                "allow_merge_commit": true,
                                "allow_rebase_merge": true,
                                "allow_squash_merge": true,
                                "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "archived": false,
                                "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "clone_url": "https://github.com/octocat/Hello-World.git",
                                "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                                "created_at": "2011-01-26T19:01:12Z",
                                "default_branch": "master",
                                "delete_branch_on_merge": true,
                                "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                                "description": "This your first repo!",
                                "disabled": false,
                                "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                                "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                                "fork": false,
                                "forks": 9,
                                "forks_count": 9,
                                "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                                "full_name": "octocat/Hello-World",
                                "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "git_url": "git:github.com/octocat/Hello-World.git",
                                "has_downloads": true,
                                "has_issues": true,
                                "has_pages": false,
                                "has_projects": true,
                                "has_wiki": true,
                                "homepage": "https://github.com",
                                "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                                "html_url": "https://github.com/octocat/Hello-World",
                                "id": 1296269,
                                "is_template": true,
                                "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "language": null,
                                "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                                "license": {
                                  "html_url": "https://api.github.com/licenses/mit",
                                  "key": "mit",
                                  "name": "MIT License",
                                  "node_id": "MDc6TGljZW5zZW1pdA==",
                                  "spdx_id": "MIT",
                                  "url": "https://api.github.com/licenses/mit"
                                },
                                "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                                "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "mirror_url": "git:git.example.com/octocat/Hello-World",
                                "name": "Hello-World",
                                "network_count": 0,
                                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "open_issues": 0,
                                "open_issues_count": 0,
                                "organization": null,
                                "owner": {
                                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                  "followers_url": "https://api.github.com/users/octocat/followers",
                                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "gravatar_id": "",
                                  "html_url": "https://github.com/octocat",
                                  "id": 1,
                                  "login": "octocat",
                                  "node_id": "MDQ6VXNlcjE=",
                                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                                  "repos_url": "https://api.github.com/users/octocat/repos",
                                  "site_admin": false,
                                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                  "type": "User",
                                  "url": "https://api.github.com/users/octocat"
                                },
                                "permissions": {
                                  "admin": false,
                                  "pull": true,
                                  "push": false
                                },
                                "private": false,
                                "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "pushed_at": "2011-01-26T19:06:43Z",
                                "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "size": 108,
                                "ssh_url": "git@github.com:octocat/Hello-World.git",
                                "stargazers_count": 80,
                                "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "subscribers_count": 42,
                                "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                                "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                                "svn_url": "https://svn.github.com/octocat/Hello-World",
                                "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                                "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                                "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                                "template_repository": null,
                                "topics": [
                                  "octocat",
                                  "atom",
                                  "electron",
                                  "api"
                                ],
                                "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "updated_at": "2011-01-26T19:14:43Z",
                                "url": "https://api.github.com/repos/octocat/Hello-World",
                                "visibility": "public",
                                "watchers": 80,
                                "watchers_count": 80
                              },
                              "topics": [
                                "octocat",
                                "atom",
                                "electron",
                                "api"
                              ],
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "updated_at": "2011-01-26T19:14:43Z",
                              "url": "https://api.github.com/repos/octocat/Hello-World",
                              "visibility": "public",
                              "watchers": 1,
                              "watchers_count": 80
                            }
                          ],
                          "total_count": 1
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "actions"
            ],
            "summary": "Set repository access for a self-hosted runner group in an organization",
            "description": "Replaces the list of repositories that have access to a self-hosted runner group configured in an organization.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#set-repository-access-to-a-self-hosted-runner-group-in-an-organization"
            },
            "operationId": "actions/set-repo-access-to-self-hosted-runner-group-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "selected_repository_ids"
                    ],
                    "properties": {
                      "selected_repository_ids": {
                        "description": "List of repository IDs that can access the runner group.",
                        "type": "array",
                        "items": {
                          "description": "Unique identifier of the repository.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "selected_repository_ids": [
                      32,
                      91
                    ]
                  }
                }
              },
              "required": null
            },
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}",
        {
          "put": {
            "tags": [
              "actions"
            ],
            "summary": "Add repository access to a self-hosted runner group in an organization",
            "description": "Adds a repository to the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization).\"\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#add-repository-acess-to-a-self-hosted-runner-group-in-an-organization"
            },
            "operationId": "actions/add-repo-access-to-self-hosted-runner-group-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repository_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": true,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Remove repository access to a self-hosted runner group in an organization",
            "description": "Removes a repository from the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization).\"\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#remove-repository-access-to-a-self-hosted-runner-group-in-an-organization"
            },
            "operationId": "actions/remove-repo-access-to-self-hosted-runner-group-in-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repository_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List self-hosted runners in a group for an organization",
            "description": "Lists self-hosted runners that are in a specific organization group.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-organization"
            },
            "operationId": "actions/list-self-hosted-runners-in-group-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "runners"
                      ],
                      "properties": {
                        "runners": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "busy": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "os": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "runners": [
                            {
                              "busy": true,
                              "id": 23,
                              "name": "linux_runner",
                              "os": "linux",
                              "status": "online"
                            },
                            {
                              "busy": false,
                              "id": 24,
                              "name": "mac_runner",
                              "os": "macos",
                              "status": "offline"
                            }
                          ],
                          "total_count": 2
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "actions"
            ],
            "summary": "Set self-hosted runners in a group for an organization",
            "description": "Replaces the list of self-hosted runners that are part of an organization runner group.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#set-self-hosted-runners-in-a-group-for-an-organization"
            },
            "operationId": "actions/set-self-hosted-runners-in-group-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "runners"
                    ],
                    "properties": {
                      "runners": {
                        "description": "List of runner IDs to add to the runner group.",
                        "type": "array",
                        "items": {
                          "description": "Unique identifier of the runner.",
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "runners": [
                      9,
                      2
                    ]
                  }
                }
              },
              "required": null
            },
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}",
        {
          "put": {
            "tags": [
              "actions"
            ],
            "summary": "Add a self-hosted runner to a group for an organization",
            "description": "Adds a self-hosted runner to a runner group configured in an organization.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#add-a-self-hosted-runner-to-a-group-for-an-organization"
            },
            "operationId": "actions/add-self-hosted-runner-to-group-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Remove a self-hosted runner from a group for an organization",
            "description": "Removes a self-hosted runner from a group configured in an organization. The runner is then returned to the default group.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#remove-a-self-hosted-runner-from-a-group-for-an-organization"
            },
            "operationId": "actions/remove-self-hosted-runner-from-group-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_group_id",
                "description": "Unique identifier of the self-hosted runner group.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runner-groups"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runners",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List self-hosted runners for an organization",
            "description": "Lists all self-hosted runners configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-self-hosted-runners-for-an-organization"
            },
            "operationId": "actions/list-self-hosted-runners-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "runners"
                      ],
                      "properties": {
                        "runners": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "busy": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "os": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "runners": [
                            {
                              "busy": true,
                              "id": 23,
                              "name": "linux_runner",
                              "os": "linux",
                              "status": "online"
                            },
                            {
                              "busy": false,
                              "id": 24,
                              "name": "mac_runner",
                              "os": "macos",
                              "status": "offline"
                            }
                          ],
                          "total_count": 2
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runners/downloads",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List runner applications for an organization",
            "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-runner-applications-for-an-organization"
            },
            "operationId": "actions/list-runner-applications-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "Runner Application",
                        "type": "object",
                        "required": [
                          "os",
                          "architecture",
                          "download_url",
                          "filename"
                        ],
                        "properties": {
                          "architecture": {
                            "type": "string"
                          },
                          "download_url": {
                            "type": "string"
                          },
                          "filename": {
                            "type": "string"
                          },
                          "os": {
                            "type": "string"
                          },
                          "sha256_checksum": {
                            "type": "string"
                          },
                          "temp_download_token": {
                            "description": "A short lived bearer token used to download the runner, if needed.",
                            "type": "string"
                          }
                        },
                        "title": "Runner Application"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "architecture": "x64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz",
                            "filename": "actions-runner-osx-x64-2.164.0.tar.gz",
                            "os": "osx"
                          },
                          {
                            "architecture": "x64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz",
                            "filename": "actions-runner-linux-x64-2.164.0.tar.gz",
                            "os": "linux"
                          },
                          {
                            "architecture": "arm",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz",
                            "filename": "actions-runner-linux-arm-2.164.0.tar.gz",
                            "os": "linux"
                          },
                          {
                            "architecture": "x64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip",
                            "filename": "actions-runner-win-x64-2.164.0.zip",
                            "os": "win"
                          },
                          {
                            "architecture": "arm64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz",
                            "filename": "actions-runner-linux-arm64-2.164.0.tar.gz",
                            "os": "linux"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runners/registration-token",
        {
          "post": {
            "tags": [
              "actions"
            ],
            "summary": "Create a registration token for an organization",
            "description": "Returns a token that you can pass to the `config` script. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\n#### Example using registration token\n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/octo-org --token TOKEN\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-a-registration-token-for-an-organization"
            },
            "operationId": "actions/create-registration-token-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Authentication Token",
                      "type": "object",
                      "required": [
                        "token",
                        "expires_at"
                      ],
                      "properties": {
                        "expires_at": {
                          "description": "The time this token expires",
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-07-11T22:14:10Z"
                        },
                        "permissions": {
                          "type": "object",
                          "example": {
                            "deployments": "write",
                            "issues": "read"
                          }
                        },
                        "repositories": {
                          "description": "The repositories this token has access to",
                          "type": "array",
                          "items": {
                            "description": "A git repository",
                            "type": "object",
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "properties": {
                              "allow_merge_commit": {
                                "description": "Whether to allow merge commits for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_rebase_merge": {
                                "description": "Whether to allow rebase merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_squash_merge": {
                                "description": "Whether to allow squash merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "archive_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                              },
                              "archived": {
                                "description": "Whether the repository is archived.",
                                "type": "boolean",
                                "default": false
                              },
                              "assignees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                              },
                              "blobs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                              },
                              "branches_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                              },
                              "clone_url": {
                                "type": "string",
                                "example": "https://github.com/octocat/Hello-World.git"
                              },
                              "collaborators_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                              },
                              "comments_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                              },
                              "commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                              },
                              "compare_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                              },
                              "contents_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                              },
                              "contributors_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:01:12Z"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "type": "string",
                                "example": "master"
                              },
                              "delete_branch_on_merge": {
                                "description": "Whether to delete head branches when pull requests are merged",
                                "type": "boolean",
                                "example": false,
                                "default": false
                              },
                              "deployments_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "This your first repo!"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/events"
                              },
                              "fork": {
                                "type": "boolean"
                              },
                              "forks": {
                                "type": "integer"
                              },
                              "forks_count": {
                                "type": "integer",
                                "example": 9
                              },
                              "forks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "octocat/Hello-World"
                              },
                              "git_commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                              },
                              "git_refs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                              },
                              "git_tags_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                              },
                              "git_url": {
                                "type": "string",
                                "example": "git:github.com/octocat/Hello-World.git"
                              },
                              "has_downloads": {
                                "description": "Whether downloads are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_issues": {
                                "description": "Whether issues are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_pages": {
                                "type": "boolean"
                              },
                              "has_projects": {
                                "description": "Whether projects are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_wiki": {
                                "description": "Whether the wiki is enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "homepage": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "https://github.com"
                              },
                              "hooks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat/Hello-World"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "type": "integer",
                                "example": 42
                              },
                              "is_template": {
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "type": "boolean",
                                "example": true,
                                "default": false
                              },
                              "issue_comment_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                              },
                              "issue_events_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                              },
                              "keys_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                              },
                              "labels_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "languages_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                              },
                              "license": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "properties": {
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "mit"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "MIT License"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDc6TGljZW5zZW1pdA=="
                                      },
                                      "spdx_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "MIT"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://api.github.com/licenses/mit"
                                      }
                                    },
                                    "title": "License Simple"
                                  }
                                ]
                              },
                              "master_branch": {
                                "type": "string"
                              },
                              "merges_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                              },
                              "milestones_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                              },
                              "mirror_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "git:git.example.com/octocat/Hello-World"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "type": "string",
                                "example": "Team Environment"
                              },
                              "network_count": {
                                "type": "integer"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                              },
                              "notifications_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                              },
                              "open_issues": {
                                "type": "integer"
                              },
                              "open_issues_count": {
                                "type": "integer",
                                "example": 0
                              },
                              "organization": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  }
                                ]
                              },
                              "owner": {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              },
                              "permissions": {
                                "type": "object",
                                "required": [
                                  "admin",
                                  "pull",
                                  "push"
                                ],
                                "properties": {
                                  "admin": {
                                    "type": "boolean"
                                  },
                                  "maintain": {
                                    "type": "boolean"
                                  },
                                  "pull": {
                                    "type": "boolean"
                                  },
                                  "push": {
                                    "type": "boolean"
                                  },
                                  "triage": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "private": {
                                "description": "Whether the repository is private or public.",
                                "type": "boolean",
                                "default": false
                              },
                              "pulls_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                              },
                              "pushed_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:06:43Z"
                              },
                              "releases_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                              },
                              "size": {
                                "type": "integer",
                                "example": 108
                              },
                              "ssh_url": {
                                "type": "string",
                                "example": "git@github.com:octocat/Hello-World.git"
                              },
                              "stargazers_count": {
                                "type": "integer",
                                "example": 80
                              },
                              "stargazers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                              },
                              "starred_at": {
                                "type": "string",
                                "example": "\"2020-07-09T00:17:42Z\""
                              },
                              "statuses_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                              },
                              "subscribers_count": {
                                "type": "integer"
                              },
                              "subscribers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                              },
                              "subscription_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                              },
                              "svn_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://svn.github.com/octocat/Hello-World"
                              },
                              "tags_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                              },
                              "teams_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                              },
                              "temp_clone_token": {
                                "type": "string"
                              },
                              "template_repository": {
                                "type": "object",
                                "properties": {
                                  "allow_merge_commit": {
                                    "type": "boolean"
                                  },
                                  "allow_rebase_merge": {
                                    "type": "boolean"
                                  },
                                  "allow_squash_merge": {
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "type": "string"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "type": "string"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "collaborators_url": {
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "type": "string"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "type": "string"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "integer"
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "type": "string"
                                  },
                                  "merges_url": {
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "type": "string"
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "type": "object",
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "login": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "type": "string"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_url": {
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "type": "string"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "type": "string"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "type": "string"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "nullable": true
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "trees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:14:43Z"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "visibility": {
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string",
                                "default": "public"
                              },
                              "watchers": {
                                "type": "integer"
                              },
                              "watchers_count": {
                                "type": "integer",
                                "example": 80
                              }
                            },
                            "title": "Repository"
                          }
                        },
                        "repository_selection": {
                          "description": "Describe whether all repositories have been selected or there's a selection involved",
                          "type": "string",
                          "enum": [
                            "all",
                            "selected"
                          ]
                        },
                        "single_file": {
                          "type": "string",
                          "nullable": true,
                          "example": "config.yaml"
                        },
                        "token": {
                          "description": "The token used for authentication",
                          "type": "string",
                          "example": "v1.1f699f1069f60xxx"
                        }
                      },
                      "title": "Authentication Token"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2020-01-22T12:13:35.123-08:00",
                          "token": "LLBF3JGZDX3P5PMEXLND6TS6FCWO6"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runners/remove-token",
        {
          "post": {
            "tags": [
              "actions"
            ],
            "summary": "Create a remove token for an organization",
            "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The token expires after one hour.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.\n\n#### Example using remove token\n\nTo remove your self-hosted runner from an organization, replace `TOKEN` with the remove token provided by this\nendpoint.\n\n```\n./config.sh remove --token TOKEN\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-a-remove-token-for-an-organization"
            },
            "operationId": "actions/create-remove-token-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Authentication Token",
                      "type": "object",
                      "required": [
                        "token",
                        "expires_at"
                      ],
                      "properties": {
                        "expires_at": {
                          "description": "The time this token expires",
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-07-11T22:14:10Z"
                        },
                        "permissions": {
                          "type": "object",
                          "example": {
                            "deployments": "write",
                            "issues": "read"
                          }
                        },
                        "repositories": {
                          "description": "The repositories this token has access to",
                          "type": "array",
                          "items": {
                            "description": "A git repository",
                            "type": "object",
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "properties": {
                              "allow_merge_commit": {
                                "description": "Whether to allow merge commits for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_rebase_merge": {
                                "description": "Whether to allow rebase merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_squash_merge": {
                                "description": "Whether to allow squash merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "archive_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                              },
                              "archived": {
                                "description": "Whether the repository is archived.",
                                "type": "boolean",
                                "default": false
                              },
                              "assignees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                              },
                              "blobs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                              },
                              "branches_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                              },
                              "clone_url": {
                                "type": "string",
                                "example": "https://github.com/octocat/Hello-World.git"
                              },
                              "collaborators_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                              },
                              "comments_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                              },
                              "commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                              },
                              "compare_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                              },
                              "contents_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                              },
                              "contributors_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:01:12Z"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "type": "string",
                                "example": "master"
                              },
                              "delete_branch_on_merge": {
                                "description": "Whether to delete head branches when pull requests are merged",
                                "type": "boolean",
                                "example": false,
                                "default": false
                              },
                              "deployments_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "This your first repo!"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/events"
                              },
                              "fork": {
                                "type": "boolean"
                              },
                              "forks": {
                                "type": "integer"
                              },
                              "forks_count": {
                                "type": "integer",
                                "example": 9
                              },
                              "forks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "octocat/Hello-World"
                              },
                              "git_commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                              },
                              "git_refs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                              },
                              "git_tags_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                              },
                              "git_url": {
                                "type": "string",
                                "example": "git:github.com/octocat/Hello-World.git"
                              },
                              "has_downloads": {
                                "description": "Whether downloads are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_issues": {
                                "description": "Whether issues are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_pages": {
                                "type": "boolean"
                              },
                              "has_projects": {
                                "description": "Whether projects are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_wiki": {
                                "description": "Whether the wiki is enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "homepage": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "https://github.com"
                              },
                              "hooks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat/Hello-World"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "type": "integer",
                                "example": 42
                              },
                              "is_template": {
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "type": "boolean",
                                "example": true,
                                "default": false
                              },
                              "issue_comment_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                              },
                              "issue_events_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                              },
                              "keys_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                              },
                              "labels_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "languages_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                              },
                              "license": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "properties": {
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "mit"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "MIT License"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDc6TGljZW5zZW1pdA=="
                                      },
                                      "spdx_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "MIT"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://api.github.com/licenses/mit"
                                      }
                                    },
                                    "title": "License Simple"
                                  }
                                ]
                              },
                              "master_branch": {
                                "type": "string"
                              },
                              "merges_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                              },
                              "milestones_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                              },
                              "mirror_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "git:git.example.com/octocat/Hello-World"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "type": "string",
                                "example": "Team Environment"
                              },
                              "network_count": {
                                "type": "integer"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                              },
                              "notifications_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                              },
                              "open_issues": {
                                "type": "integer"
                              },
                              "open_issues_count": {
                                "type": "integer",
                                "example": 0
                              },
                              "organization": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  }
                                ]
                              },
                              "owner": {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              },
                              "permissions": {
                                "type": "object",
                                "required": [
                                  "admin",
                                  "pull",
                                  "push"
                                ],
                                "properties": {
                                  "admin": {
                                    "type": "boolean"
                                  },
                                  "maintain": {
                                    "type": "boolean"
                                  },
                                  "pull": {
                                    "type": "boolean"
                                  },
                                  "push": {
                                    "type": "boolean"
                                  },
                                  "triage": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "private": {
                                "description": "Whether the repository is private or public.",
                                "type": "boolean",
                                "default": false
                              },
                              "pulls_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                              },
                              "pushed_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:06:43Z"
                              },
                              "releases_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                              },
                              "size": {
                                "type": "integer",
                                "example": 108
                              },
                              "ssh_url": {
                                "type": "string",
                                "example": "git@github.com:octocat/Hello-World.git"
                              },
                              "stargazers_count": {
                                "type": "integer",
                                "example": 80
                              },
                              "stargazers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                              },
                              "starred_at": {
                                "type": "string",
                                "example": "\"2020-07-09T00:17:42Z\""
                              },
                              "statuses_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                              },
                              "subscribers_count": {
                                "type": "integer"
                              },
                              "subscribers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                              },
                              "subscription_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                              },
                              "svn_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://svn.github.com/octocat/Hello-World"
                              },
                              "tags_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                              },
                              "teams_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                              },
                              "temp_clone_token": {
                                "type": "string"
                              },
                              "template_repository": {
                                "type": "object",
                                "properties": {
                                  "allow_merge_commit": {
                                    "type": "boolean"
                                  },
                                  "allow_rebase_merge": {
                                    "type": "boolean"
                                  },
                                  "allow_squash_merge": {
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "type": "string"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "type": "string"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "collaborators_url": {
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "type": "string"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "type": "string"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "integer"
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "type": "string"
                                  },
                                  "merges_url": {
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "type": "string"
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "type": "object",
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "login": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "type": "string"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_url": {
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "type": "string"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "type": "string"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "type": "string"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "nullable": true
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "trees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:14:43Z"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "visibility": {
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string",
                                "default": "public"
                              },
                              "watchers": {
                                "type": "integer"
                              },
                              "watchers_count": {
                                "type": "integer",
                                "example": 80
                              }
                            },
                            "title": "Repository"
                          }
                        },
                        "repository_selection": {
                          "description": "Describe whether all repositories have been selected or there's a selection involved",
                          "type": "string",
                          "enum": [
                            "all",
                            "selected"
                          ]
                        },
                        "single_file": {
                          "type": "string",
                          "nullable": true,
                          "example": "config.yaml"
                        },
                        "token": {
                          "description": "The token used for authentication",
                          "type": "string",
                          "example": "v1.1f699f1069f60xxx"
                        }
                      },
                      "title": "Authentication Token"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2020-01-29T12:13:35.123-08:00",
                          "token": "AABF3JGZDX3P5PMEXLND6TS6FCWO6"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/runners/{runner_id}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get a self-hosted runner for an organization",
            "description": "Gets a specific self-hosted runner configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-self-hosted-runner-for-an-organization"
            },
            "operationId": "actions/get-self-hosted-runner-for-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "busy": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "os": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "busy": true,
                          "id": 23,
                          "name": "mac_runner",
                          "os": "macos",
                          "status": "online"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Delete a self-hosted runner from an organization",
            "description": "Forces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#delete-a-self-hosted-runner-from-an-organization"
            },
            "operationId": "actions/delete-self-hosted-runner-from-org",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/secrets",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List organization secrets",
            "description": "Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-organization-secrets"
            },
            "operationId": "actions/list-org-secrets",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "secrets"
                      ],
                      "properties": {
                        "secrets": {
                          "type": "array",
                          "items": {
                            "description": "Secrets for GitHub Actions for an organization.",
                            "type": "object",
                            "required": [
                              "name",
                              "created_at",
                              "updated_at",
                              "visibility"
                            ],
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "name": {
                                "description": "The name of the secret.",
                                "type": "string",
                                "example": "SECRET_TOKEN"
                              },
                              "selected_repositories_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/organizations/org/secrets/my_secret/repositories"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "visibility": {
                                "description": "Visibility of a secret",
                                "type": "string",
                                "enum": [
                                  "all",
                                  "private",
                                  "selected"
                                ]
                              }
                            },
                            "title": "Actions Secret for an Organization"
                          }
                        },
                        "total_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "secrets": [
                            {
                              "created_at": "2019-08-10T14:59:22Z",
                              "name": "GIST_ID",
                              "updated_at": "2020-01-10T14:59:22Z",
                              "visibility": "private"
                            },
                            {
                              "created_at": "2019-08-10T14:59:22Z",
                              "name": "DEPLOY_TOKEN",
                              "updated_at": "2020-01-10T14:59:22Z",
                              "visibility": "all"
                            },
                            {
                              "created_at": "2019-08-10T14:59:22Z",
                              "name": "GH_TOKEN",
                              "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories",
                              "updated_at": "2020-01-10T14:59:22Z",
                              "visibility": "selected"
                            }
                          ],
                          "total_count": 3
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/secrets/public-key",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get an organization public key",
            "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-an-organization-public-key"
            },
            "operationId": "actions/get-org-public-key",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "The public key used for setting Actions Secrets.",
                      "type": "object",
                      "required": [
                        "key_id",
                        "key"
                      ],
                      "properties": {
                        "created_at": {
                          "type": "string",
                          "example": "2011-01-26T19:01:12Z"
                        },
                        "id": {
                          "type": "integer",
                          "example": 2
                        },
                        "key": {
                          "description": "The Base64 encoded public key.",
                          "type": "string",
                          "example": "hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs="
                        },
                        "key_id": {
                          "description": "The identifier for the key.",
                          "type": "string",
                          "example": "1234567"
                        },
                        "title": {
                          "type": "string",
                          "example": "ssh-rsa AAAAB3NzaC1yc2EAAA"
                        },
                        "url": {
                          "type": "string",
                          "example": "https://api.github.com/user/keys/2"
                        }
                      },
                      "title": "ActionsPublicKey"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "key": "2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234",
                          "key_id": "012345678912345678"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/secrets/{secret_name}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get an organization secret",
            "description": "Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-an-organization-secret"
            },
            "operationId": "actions/get-org-secret",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Secrets for GitHub Actions for an organization.",
                      "type": "object",
                      "required": [
                        "name",
                        "created_at",
                        "updated_at",
                        "visibility"
                      ],
                      "properties": {
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "name": {
                          "description": "The name of the secret.",
                          "type": "string",
                          "example": "SECRET_TOKEN"
                        },
                        "selected_repositories_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://api.github.com/organizations/org/secrets/my_secret/repositories"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "visibility": {
                          "description": "Visibility of a secret",
                          "type": "string",
                          "enum": [
                            "all",
                            "private",
                            "selected"
                          ]
                        }
                      },
                      "title": "Actions Secret for an Organization"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2019-08-10T14:59:22Z",
                          "name": "GH_TOKEN",
                          "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories",
                          "updated_at": "2020-01-10T14:59:22Z",
                          "visibility": "selected"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "actions"
            ],
            "summary": "Create or update an organization secret",
            "description": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to\nuse this endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n```\nconst sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n```\n\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-or-update-an-organization-secret"
            },
            "operationId": "actions/create-or-update-org-secret",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "visibility"
                    ],
                    "properties": {
                      "encrypted_value": {
                        "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-an-organization-public-key) endpoint.",
                        "type": "string",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                      },
                      "key_id": {
                        "description": "ID of the key you used to encrypt the secret.",
                        "type": "string"
                      },
                      "selected_repository_ids": {
                        "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "visibility": {
                        "description": "Configures the access that repositories have to the organization secret. Can be one of:  \n\\- `all` - All repositories in an organization can access the secret.  \n\\- `private` - Private repositories in an organization can access the secret.  \n\\- `selected` - Only specific repositories can access the secret.",
                        "type": "string",
                        "enum": [
                          "all",
                          "private",
                          "selected"
                        ]
                      }
                    }
                  },
                  "example": {
                    "encrypted_value": "c2VjcmV0",
                    "key_id": "012345678912345678",
                    "selected_repository_ids": [
                      "1296269",
                      "1296280"
                    ],
                    "visibility": "selected"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "description": "Response when creating a secret",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "An object without any properties.",
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false,
                      "title": "Empty Object"
                    }
                  }
                }
              },
              "204": {
                "description": "Response when updating a secret"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Delete an organization secret",
            "description": "Deletes a secret in an organization using the secret name. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#delete-an-organization-secret"
            },
            "operationId": "actions/delete-org-secret",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/secrets/{secret_name}/repositories",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List selected repositories for an organization secret",
            "description": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `selected`. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-selected-repositories-for-an-organization-secret"
            },
            "operationId": "actions/list-selected-repos-for-org-secret",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "repositories"
                      ],
                      "properties": {
                        "repositories": {
                          "type": "array",
                          "items": {
                            "description": "Minimal Repository",
                            "type": "object",
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url"
                            ],
                            "properties": {
                              "archive_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                              },
                              "archived": {
                                "type": "boolean"
                              },
                              "assignees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                              },
                              "blobs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                              },
                              "branches_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                              },
                              "clone_url": {
                                "type": "string"
                              },
                              "code_of_conduct": {
                                "description": "Code Of Conduct",
                                "type": "object",
                                "required": [
                                  "url",
                                  "html_url",
                                  "key",
                                  "name"
                                ],
                                "properties": {
                                  "body": {
                                    "type": "string",
                                    "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "contributor_covenant"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Contributor Covenant"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                                  }
                                },
                                "title": "Code Of Conduct"
                              },
                              "collaborators_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                              },
                              "comments_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                              },
                              "commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                              },
                              "compare_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                              },
                              "contents_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                              },
                              "contributors_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:01:12Z"
                              },
                              "default_branch": {
                                "type": "string"
                              },
                              "delete_branch_on_merge": {
                                "type": "boolean"
                              },
                              "deployments_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "This your first repo!"
                              },
                              "disabled": {
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/events"
                              },
                              "fork": {
                                "type": "boolean"
                              },
                              "forks": {
                                "type": "integer",
                                "example": 0
                              },
                              "forks_count": {
                                "type": "integer"
                              },
                              "forks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "octocat/Hello-World"
                              },
                              "git_commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                              },
                              "git_refs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                              },
                              "git_tags_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                              },
                              "git_url": {
                                "type": "string"
                              },
                              "has_downloads": {
                                "type": "boolean"
                              },
                              "has_issues": {
                                "type": "boolean"
                              },
                              "has_pages": {
                                "type": "boolean"
                              },
                              "has_projects": {
                                "type": "boolean"
                              },
                              "has_wiki": {
                                "type": "boolean"
                              },
                              "homepage": {
                                "type": "string",
                                "nullable": true
                              },
                              "hooks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat/Hello-World"
                              },
                              "id": {
                                "type": "integer",
                                "example": 1296269
                              },
                              "is_template": {
                                "type": "boolean"
                              },
                              "issue_comment_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                              },
                              "issue_events_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                              },
                              "keys_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                              },
                              "labels_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "languages_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                              },
                              "license": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "node_id": {
                                    "type": "string"
                                  },
                                  "spdx_id": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "nullable": true
                              },
                              "merges_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                              },
                              "milestones_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                              },
                              "mirror_url": {
                                "type": "string",
                                "nullable": true
                              },
                              "name": {
                                "type": "string",
                                "example": "Hello-World"
                              },
                              "network_count": {
                                "type": "integer"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                              },
                              "notifications_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                              },
                              "open_issues": {
                                "type": "integer",
                                "example": 0
                              },
                              "open_issues_count": {
                                "type": "integer"
                              },
                              "owner": {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              },
                              "permissions": {
                                "type": "object",
                                "properties": {
                                  "admin": {
                                    "type": "boolean"
                                  },
                                  "maintain": {
                                    "type": "boolean"
                                  },
                                  "pull": {
                                    "type": "boolean"
                                  },
                                  "push": {
                                    "type": "boolean"
                                  },
                                  "triage": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "private": {
                                "type": "boolean"
                              },
                              "pulls_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                              },
                              "pushed_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:06:43Z"
                              },
                              "releases_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                              },
                              "size": {
                                "type": "integer"
                              },
                              "ssh_url": {
                                "type": "string"
                              },
                              "stargazers_count": {
                                "type": "integer"
                              },
                              "stargazers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                              },
                              "statuses_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                              },
                              "subscribers_count": {
                                "type": "integer"
                              },
                              "subscribers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                              },
                              "subscription_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                              },
                              "svn_url": {
                                "type": "string"
                              },
                              "tags_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                              },
                              "teams_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                              },
                              "temp_clone_token": {
                                "type": "string"
                              },
                              "template_repository": {
                                "type": "object",
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "A git repository",
                                    "type": "object",
                                    "required": [
                                      "archive_url",
                                      "assignees_url",
                                      "blobs_url",
                                      "branches_url",
                                      "collaborators_url",
                                      "comments_url",
                                      "commits_url",
                                      "compare_url",
                                      "contents_url",
                                      "contributors_url",
                                      "deployments_url",
                                      "description",
                                      "downloads_url",
                                      "events_url",
                                      "fork",
                                      "forks_url",
                                      "full_name",
                                      "git_commits_url",
                                      "git_refs_url",
                                      "git_tags_url",
                                      "hooks_url",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "issue_comment_url",
                                      "issue_events_url",
                                      "issues_url",
                                      "keys_url",
                                      "labels_url",
                                      "languages_url",
                                      "merges_url",
                                      "milestones_url",
                                      "name",
                                      "notifications_url",
                                      "owner",
                                      "private",
                                      "pulls_url",
                                      "releases_url",
                                      "stargazers_url",
                                      "statuses_url",
                                      "subscribers_url",
                                      "subscription_url",
                                      "tags_url",
                                      "teams_url",
                                      "trees_url",
                                      "url",
                                      "clone_url",
                                      "default_branch",
                                      "forks",
                                      "forks_count",
                                      "git_url",
                                      "has_downloads",
                                      "has_issues",
                                      "has_projects",
                                      "has_wiki",
                                      "has_pages",
                                      "homepage",
                                      "language",
                                      "archived",
                                      "disabled",
                                      "mirror_url",
                                      "open_issues",
                                      "open_issues_count",
                                      "license",
                                      "pushed_at",
                                      "size",
                                      "ssh_url",
                                      "stargazers_count",
                                      "svn_url",
                                      "watchers",
                                      "watchers_count",
                                      "created_at",
                                      "updated_at"
                                    ],
                                    "properties": {
                                      "allow_merge_commit": {
                                        "description": "Whether to allow merge commits for pull requests.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "allow_rebase_merge": {
                                        "description": "Whether to allow rebase merges for pull requests.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "allow_squash_merge": {
                                        "description": "Whether to allow squash merges for pull requests.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "archive_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                      },
                                      "archived": {
                                        "description": "Whether the repository is archived.",
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "assignees_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                      },
                                      "blobs_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                      },
                                      "branches_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                      },
                                      "clone_url": {
                                        "type": "string",
                                        "example": "https://github.com/octocat/Hello-World.git"
                                      },
                                      "collaborators_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                      },
                                      "comments_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                      },
                                      "commits_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                      },
                                      "compare_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                      },
                                      "contents_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                      },
                                      "contributors_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                      },
                                      "created_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true,
                                        "example": "2011-01-26T19:01:12Z"
                                      },
                                      "default_branch": {
                                        "description": "The default branch of the repository.",
                                        "type": "string",
                                        "example": "master"
                                      },
                                      "delete_branch_on_merge": {
                                        "description": "Whether to delete head branches when pull requests are merged",
                                        "type": "boolean",
                                        "example": false,
                                        "default": false
                                      },
                                      "deployments_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                      },
                                      "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "This your first repo!"
                                      },
                                      "disabled": {
                                        "description": "Returns whether or not this repository disabled.",
                                        "type": "boolean"
                                      },
                                      "downloads_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                      },
                                      "fork": {
                                        "type": "boolean"
                                      },
                                      "forks": {
                                        "type": "integer"
                                      },
                                      "forks_count": {
                                        "type": "integer",
                                        "example": 9
                                      },
                                      "forks_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                      },
                                      "full_name": {
                                        "type": "string",
                                        "example": "octocat/Hello-World"
                                      },
                                      "git_commits_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                      },
                                      "git_refs_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                      },
                                      "git_tags_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                      },
                                      "git_url": {
                                        "type": "string",
                                        "example": "git:github.com/octocat/Hello-World.git"
                                      },
                                      "has_downloads": {
                                        "description": "Whether downloads are enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "has_issues": {
                                        "description": "Whether issues are enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "has_pages": {
                                        "type": "boolean"
                                      },
                                      "has_projects": {
                                        "description": "Whether projects are enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "has_wiki": {
                                        "description": "Whether the wiki is enabled.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": true
                                      },
                                      "homepage": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://github.com"
                                      },
                                      "hooks_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat/Hello-World"
                                      },
                                      "id": {
                                        "description": "Unique identifier of the repository",
                                        "type": "integer",
                                        "example": 42
                                      },
                                      "is_template": {
                                        "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                        "type": "boolean",
                                        "example": true,
                                        "default": false
                                      },
                                      "issue_comment_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                      },
                                      "issue_events_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                      },
                                      "issues_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                      },
                                      "keys_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                      },
                                      "labels_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                      },
                                      "language": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "languages_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                      },
                                      "license": {
                                        "nullable": true,
                                        "allOf": [
                                          {
                                            "description": "License Simple",
                                            "type": "object",
                                            "required": [
                                              "key",
                                              "name",
                                              "url",
                                              "spdx_id",
                                              "node_id"
                                            ],
                                            "properties": {
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri"
                                              },
                                              "key": {
                                                "type": "string",
                                                "example": "mit"
                                              },
                                              "name": {
                                                "type": "string",
                                                "example": "MIT License"
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDc6TGljZW5zZW1pdA=="
                                              },
                                              "spdx_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "MIT"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "nullable": true,
                                                "example": "https://api.github.com/licenses/mit"
                                              }
                                            },
                                            "title": "License Simple"
                                          }
                                        ]
                                      },
                                      "master_branch": {
                                        "type": "string"
                                      },
                                      "merges_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                      },
                                      "milestones_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                      },
                                      "mirror_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "git:git.example.com/octocat/Hello-World"
                                      },
                                      "name": {
                                        "description": "The name of the repository.",
                                        "type": "string",
                                        "example": "Team Environment"
                                      },
                                      "network_count": {
                                        "type": "integer"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                      },
                                      "notifications_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                      },
                                      "open_issues": {
                                        "type": "integer"
                                      },
                                      "open_issues_count": {
                                        "type": "integer",
                                        "example": 0
                                      },
                                      "organization": {
                                        "nullable": true,
                                        "allOf": [
                                          {
                                            "description": "Simple User",
                                            "type": "object",
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/images/error/octocat_happy.gif"
                                              },
                                              "email": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "events_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                                              },
                                              "followers_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/followers"
                                              },
                                              "following_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                                              },
                                              "gists_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                              },
                                              "gravatar_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "41d064eb2195891e12d0413f63227ea7"
                                              },
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/octocat"
                                              },
                                              "id": {
                                                "type": "integer",
                                                "example": 1
                                              },
                                              "login": {
                                                "type": "string",
                                                "example": "octocat"
                                              },
                                              "name": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDQ6VXNlcjE="
                                              },
                                              "organizations_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/orgs"
                                              },
                                              "received_events_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/received_events"
                                              },
                                              "repos_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/repos"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "type": "string",
                                                "example": "\"2020-07-09T00:17:55Z\""
                                              },
                                              "starred_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                              },
                                              "subscriptions_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/subscriptions"
                                              },
                                              "type": {
                                                "type": "string",
                                                "example": "User"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat"
                                              }
                                            },
                                            "nullable": true,
                                            "title": "Simple User"
                                          }
                                        ]
                                      },
                                      "owner": {
                                        "description": "Simple User",
                                        "type": "object",
                                        "required": [
                                          "avatar_url",
                                          "events_url",
                                          "followers_url",
                                          "following_url",
                                          "gists_url",
                                          "gravatar_id",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "login",
                                          "organizations_url",
                                          "received_events_url",
                                          "repos_url",
                                          "site_admin",
                                          "starred_url",
                                          "subscriptions_url",
                                          "type",
                                          "url"
                                        ],
                                        "properties": {
                                          "avatar_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/images/error/octocat_happy.gif"
                                          },
                                          "email": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/events{/privacy}"
                                          },
                                          "followers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/followers"
                                          },
                                          "following_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/following{/other_user}"
                                          },
                                          "gists_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                          },
                                          "gravatar_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "41d064eb2195891e12d0413f63227ea7"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat"
                                          },
                                          "id": {
                                            "type": "integer",
                                            "example": 1
                                          },
                                          "login": {
                                            "type": "string",
                                            "example": "octocat"
                                          },
                                          "name": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDQ6VXNlcjE="
                                          },
                                          "organizations_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/orgs"
                                          },
                                          "received_events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/received_events"
                                          },
                                          "repos_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/repos"
                                          },
                                          "site_admin": {
                                            "type": "boolean"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:55Z\""
                                          },
                                          "starred_url": {
                                            "type": "string",
                                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                          },
                                          "subscriptions_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat/subscriptions"
                                          },
                                          "type": {
                                            "type": "string",
                                            "example": "User"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/users/octocat"
                                          }
                                        },
                                        "nullable": true,
                                        "title": "Simple User"
                                      },
                                      "permissions": {
                                        "type": "object",
                                        "required": [
                                          "admin",
                                          "pull",
                                          "push"
                                        ],
                                        "properties": {
                                          "admin": {
                                            "type": "boolean"
                                          },
                                          "maintain": {
                                            "type": "boolean"
                                          },
                                          "pull": {
                                            "type": "boolean"
                                          },
                                          "push": {
                                            "type": "boolean"
                                          },
                                          "triage": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "private": {
                                        "description": "Whether the repository is private or public.",
                                        "type": "boolean",
                                        "default": false
                                      },
                                      "pulls_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                      },
                                      "pushed_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true,
                                        "example": "2011-01-26T19:06:43Z"
                                      },
                                      "releases_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                      },
                                      "size": {
                                        "type": "integer",
                                        "example": 108
                                      },
                                      "ssh_url": {
                                        "type": "string",
                                        "example": "git@github.com:octocat/Hello-World.git"
                                      },
                                      "stargazers_count": {
                                        "type": "integer",
                                        "example": 80
                                      },
                                      "stargazers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:42Z\""
                                      },
                                      "statuses_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                      },
                                      "subscribers_count": {
                                        "type": "integer"
                                      },
                                      "subscribers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                      },
                                      "subscription_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                      },
                                      "svn_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://svn.github.com/octocat/Hello-World"
                                      },
                                      "tags_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                      },
                                      "teams_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                      },
                                      "temp_clone_token": {
                                        "type": "string"
                                      },
                                      "template_repository": {
                                        "type": "object",
                                        "properties": {
                                          "allow_merge_commit": {
                                            "type": "boolean"
                                          },
                                          "allow_rebase_merge": {
                                            "type": "boolean"
                                          },
                                          "allow_squash_merge": {
                                            "type": "boolean"
                                          },
                                          "archive_url": {
                                            "type": "string"
                                          },
                                          "archived": {
                                            "type": "boolean"
                                          },
                                          "assignees_url": {
                                            "type": "string"
                                          },
                                          "blobs_url": {
                                            "type": "string"
                                          },
                                          "branches_url": {
                                            "type": "string"
                                          },
                                          "clone_url": {
                                            "type": "string"
                                          },
                                          "collaborators_url": {
                                            "type": "string"
                                          },
                                          "comments_url": {
                                            "type": "string"
                                          },
                                          "commits_url": {
                                            "type": "string"
                                          },
                                          "compare_url": {
                                            "type": "string"
                                          },
                                          "contents_url": {
                                            "type": "string"
                                          },
                                          "contributors_url": {
                                            "type": "string"
                                          },
                                          "created_at": {
                                            "type": "string"
                                          },
                                          "default_branch": {
                                            "type": "string"
                                          },
                                          "delete_branch_on_merge": {
                                            "type": "boolean"
                                          },
                                          "deployments_url": {
                                            "type": "string"
                                          },
                                          "description": {
                                            "type": "string"
                                          },
                                          "disabled": {
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "type": "string"
                                          },
                                          "events_url": {
                                            "type": "string"
                                          },
                                          "fork": {
                                            "type": "boolean"
                                          },
                                          "forks_count": {
                                            "type": "integer"
                                          },
                                          "forks_url": {
                                            "type": "string"
                                          },
                                          "full_name": {
                                            "type": "string"
                                          },
                                          "git_commits_url": {
                                            "type": "string"
                                          },
                                          "git_refs_url": {
                                            "type": "string"
                                          },
                                          "git_tags_url": {
                                            "type": "string"
                                          },
                                          "git_url": {
                                            "type": "string"
                                          },
                                          "has_downloads": {
                                            "type": "boolean"
                                          },
                                          "has_issues": {
                                            "type": "boolean"
                                          },
                                          "has_pages": {
                                            "type": "boolean"
                                          },
                                          "has_projects": {
                                            "type": "boolean"
                                          },
                                          "has_wiki": {
                                            "type": "boolean"
                                          },
                                          "homepage": {
                                            "type": "string"
                                          },
                                          "hooks_url": {
                                            "type": "string"
                                          },
                                          "html_url": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "integer"
                                          },
                                          "is_template": {
                                            "type": "boolean"
                                          },
                                          "issue_comment_url": {
                                            "type": "string"
                                          },
                                          "issue_events_url": {
                                            "type": "string"
                                          },
                                          "issues_url": {
                                            "type": "string"
                                          },
                                          "keys_url": {
                                            "type": "string"
                                          },
                                          "labels_url": {
                                            "type": "string"
                                          },
                                          "language": {
                                            "type": "string"
                                          },
                                          "languages_url": {
                                            "type": "string"
                                          },
                                          "merges_url": {
                                            "type": "string"
                                          },
                                          "milestones_url": {
                                            "type": "string"
                                          },
                                          "mirror_url": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "type": "string"
                                          },
                                          "notifications_url": {
                                            "type": "string"
                                          },
                                          "open_issues_count": {
                                            "type": "integer"
                                          },
                                          "owner": {
                                            "type": "object",
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "followers_url": {
                                                "type": "string"
                                              },
                                              "following_url": {
                                                "type": "string"
                                              },
                                              "gists_url": {
                                                "type": "string"
                                              },
                                              "gravatar_id": {
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "integer"
                                              },
                                              "login": {
                                                "type": "string"
                                              },
                                              "node_id": {
                                                "type": "string"
                                              },
                                              "organizations_url": {
                                                "type": "string"
                                              },
                                              "received_events_url": {
                                                "type": "string"
                                              },
                                              "repos_url": {
                                                "type": "string"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_url": {
                                                "type": "string"
                                              },
                                              "subscriptions_url": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "permissions": {
                                            "type": "object",
                                            "properties": {
                                              "admin": {
                                                "type": "boolean"
                                              },
                                              "maintain": {
                                                "type": "boolean"
                                              },
                                              "pull": {
                                                "type": "boolean"
                                              },
                                              "push": {
                                                "type": "boolean"
                                              },
                                              "triage": {
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "private": {
                                            "type": "boolean"
                                          },
                                          "pulls_url": {
                                            "type": "string"
                                          },
                                          "pushed_at": {
                                            "type": "string"
                                          },
                                          "releases_url": {
                                            "type": "string"
                                          },
                                          "size": {
                                            "type": "integer"
                                          },
                                          "ssh_url": {
                                            "type": "string"
                                          },
                                          "stargazers_count": {
                                            "type": "integer"
                                          },
                                          "stargazers_url": {
                                            "type": "string"
                                          },
                                          "statuses_url": {
                                            "type": "string"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "type": "string"
                                          },
                                          "subscription_url": {
                                            "type": "string"
                                          },
                                          "svn_url": {
                                            "type": "string"
                                          },
                                          "tags_url": {
                                            "type": "string"
                                          },
                                          "teams_url": {
                                            "type": "string"
                                          },
                                          "temp_clone_token": {
                                            "type": "string"
                                          },
                                          "topics": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "trees_url": {
                                            "type": "string"
                                          },
                                          "updated_at": {
                                            "type": "string"
                                          },
                                          "url": {
                                            "type": "string"
                                          },
                                          "visibility": {
                                            "type": "string"
                                          },
                                          "watchers_count": {
                                            "type": "integer"
                                          }
                                        },
                                        "nullable": true
                                      },
                                      "topics": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "trees_url": {
                                        "type": "string",
                                        "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                      },
                                      "updated_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true,
                                        "example": "2011-01-26T19:14:43Z"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/repos/octocat/Hello-World"
                                      },
                                      "visibility": {
                                        "description": "The repository visibility: public, private, or internal.",
                                        "type": "string",
                                        "default": "public"
                                      },
                                      "watchers": {
                                        "type": "integer"
                                      },
                                      "watchers_count": {
                                        "type": "integer",
                                        "example": 80
                                      }
                                    },
                                    "title": "Repository"
                                  }
                                ]
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "trees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:14:43Z"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "visibility": {
                                "type": "string"
                              },
                              "watchers": {
                                "type": "integer",
                                "example": 0
                              },
                              "watchers_count": {
                                "type": "integer"
                              }
                            },
                            "title": "Minimal Repository"
                          }
                        },
                        "total_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "repositories": [
                            {
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                              "description": "This your first repo!",
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                              "fork": false,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                              "full_name": "octocat/Hello-World",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World.git",
                              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                              "html_url": "https://github.com/octocat/Hello-World",
                              "id": 1296269,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "name": "Hello-World",
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "gravatar_id": "",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "ssh_url": "git@github.com:octocat/Hello-World.git",
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "url": "https://api.github.com/repos/octocat/Hello-World"
                            }
                          ],
                          "total_count": 1
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "actions"
            ],
            "summary": "Set selected repositories for an organization secret",
            "description": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#set-selected-repositories-for-an-organization-secret"
            },
            "operationId": "actions/set-selected-repos-for-org-secret",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "selected_repository_ids": {
                        "description": "An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can add and remove individual repositories using the [Set selected repositories for an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#set-selected-repositories-for-an-organization-secret) and [Remove selected repository from an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "example": {
                    "selected_repository_ids": [
                      64780797
                    ]
                  }
                }
              },
              "required": null
            },
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
        {
          "put": {
            "tags": [
              "actions"
            ],
            "summary": "Add selected repository to an organization secret",
            "description": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#add-selected-repository-to-an-organization-secret"
            },
            "operationId": "actions/add-selected-repo-to-org-secret",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repository_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "No Content when repository was added to the selected list"
              },
              "409": {
                "description": "Conflict when visibility type is not set to selected"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Remove selected repository from an organization secret",
            "description": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#remove-selected-repository-from-an-organization-secret"
            },
            "operationId": "actions/remove-selected-repo-from-org-secret",
            "parameters": [
              {
                "in": "path",
                "name": "org",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repository_id",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response when repository was removed from the selected list"
              },
              "409": {
                "description": "Conflict when visibility type not set to selected"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/artifacts",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List artifacts for a repository",
            "description": "Lists all artifacts for a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-artifacts-for-a-repository"
            },
            "operationId": "actions/list-artifacts-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "artifacts"
                      ],
                      "properties": {
                        "artifacts": {
                          "type": "array",
                          "items": {
                            "description": "An artifact",
                            "type": "object",
                            "required": [
                              "id",
                              "node_id",
                              "name",
                              "size_in_bytes",
                              "url",
                              "archive_download_url",
                              "expired",
                              "created_at",
                              "expires_at",
                              "updated_at"
                            ],
                            "properties": {
                              "archive_download_url": {
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/artifacts/5/zip"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "expired": {
                                "description": "Whether or not the artifact has expired.",
                                "type": "boolean"
                              },
                              "expires_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "id": {
                                "type": "integer",
                                "example": 5
                              },
                              "name": {
                                "description": "The name of the artifact.",
                                "type": "string",
                                "example": "AdventureWorks.Framework"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOkNoZWNrU3VpdGU1"
                              },
                              "size_in_bytes": {
                                "description": "The size in bytes of the artifact.",
                                "type": "integer",
                                "example": 12345
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "url": {
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/artifacts/5"
                              }
                            },
                            "title": "Artifact"
                          }
                        },
                        "total_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "artifacts": [
                            {
                              "archive_download_url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip",
                              "created_at": "2020-01-10T14:59:22Z",
                              "expired": false,
                              "expires_at": "2020-03-21T14:59:22Z",
                              "id": 11,
                              "name": "Rails",
                              "node_id": "MDg6QXJ0aWZhY3QxMQ==",
                              "size_in_bytes": 556,
                              "updated_at": "2020-02-21T14:59:22Z",
                              "url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11"
                            },
                            {
                              "archive_download_url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip",
                              "created_at": "2020-01-10T14:59:22Z",
                              "expired": false,
                              "expires_at": "2020-03-21T14:59:22Z",
                              "id": 13,
                              "name": "",
                              "node_id": "MDg6QXJ0aWZhY3QxMw==",
                              "size_in_bytes": 453,
                              "updated_at": "2020-02-21T14:59:22Z",
                              "url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13"
                            }
                          ],
                          "total_count": 2
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "artifacts"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get an artifact",
            "description": "Gets a specific artifact for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-an-artifact"
            },
            "operationId": "actions/get-artifact",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "artifact_id",
                "description": "artifact_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "An artifact",
                      "type": "object",
                      "required": [
                        "id",
                        "node_id",
                        "name",
                        "size_in_bytes",
                        "url",
                        "archive_download_url",
                        "expired",
                        "created_at",
                        "expires_at",
                        "updated_at"
                      ],
                      "properties": {
                        "archive_download_url": {
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/artifacts/5/zip"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "expired": {
                          "description": "Whether or not the artifact has expired.",
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "id": {
                          "type": "integer",
                          "example": 5
                        },
                        "name": {
                          "description": "The name of the artifact.",
                          "type": "string",
                          "example": "AdventureWorks.Framework"
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDEwOkNoZWNrU3VpdGU1"
                        },
                        "size_in_bytes": {
                          "description": "The size in bytes of the artifact.",
                          "type": "integer",
                          "example": 12345
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "url": {
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/artifacts/5"
                        }
                      },
                      "title": "Artifact"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "archive_download_url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip",
                          "created_at": "2020-01-10T14:59:22Z",
                          "expired": false,
                          "expires_at": "2020-01-21T14:59:22Z",
                          "id": 11,
                          "name": "Rails",
                          "node_id": "MDg6QXJ0aWZhY3QxMQ==",
                          "size_in_bytes": 556,
                          "updated_at": "2020-01-21T14:59:22Z",
                          "url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "artifacts"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Delete an artifact",
            "description": "Deletes an artifact for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#delete-an-artifact"
            },
            "operationId": "actions/delete-artifact",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "artifact_id",
                "description": "artifact_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "artifacts"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Download an artifact",
            "description": "Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for `Location:` in\nthe response header to find the URL for the download. The `:archive_format` must be `zip`. Anyone with read access to\nthe repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.\nGitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#download-an-artifact"
            },
            "operationId": "actions/download-artifact",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "artifact_id",
                "description": "artifact_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "archive_format",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "302": {
                "description": "Response",
                "headers": {
                  "Location": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "https://pipelines.actions.githubusercontent.com/OhgS4QRKqmgx7bKC27GKU83jnQjyeqG8oIMTge8eqtheppcmw8/_apis/pipelines/1/runs/176/signedlogcontent?urlExpires=2020-01-24T18%3A10%3A31.5729946Z&urlSigningMethod=HMACV1&urlSignature=agG73JakPYkHrh06seAkvmH7rBR4Ji4c2%2B6a2ejYh3E%3D"
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "artifacts"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/jobs/{job_id}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get a job for a workflow run",
            "description": "Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-job-for-a-workflow-run"
            },
            "operationId": "actions/get-job-for-workflow-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "job_id",
                "description": "job_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Information of a job execution in a workflow run",
                      "type": "object",
                      "required": [
                        "id",
                        "node_id",
                        "run_id",
                        "run_url",
                        "head_sha",
                        "name",
                        "url",
                        "html_url",
                        "status",
                        "conclusion",
                        "started_at",
                        "completed_at",
                        "check_run_url"
                      ],
                      "properties": {
                        "check_run_url": {
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/check-runs/4"
                        },
                        "completed_at": {
                          "description": "The time that the job finished, in ISO 8601 format.",
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": "2019-08-08T08:00:00-07:00"
                        },
                        "conclusion": {
                          "description": "The outcome of the job.",
                          "type": "string",
                          "nullable": true,
                          "example": "success"
                        },
                        "head_sha": {
                          "description": "The SHA of the commit that is being run.",
                          "type": "string",
                          "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"
                        },
                        "html_url": {
                          "type": "string",
                          "nullable": true,
                          "example": "https://github.com/github/hello-world/runs/4"
                        },
                        "id": {
                          "description": "The id of the job.",
                          "type": "integer",
                          "example": 21
                        },
                        "name": {
                          "description": "The name of the job.",
                          "type": "string",
                          "example": "test-coverage"
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDg6Q2hlY2tSdW40"
                        },
                        "run_id": {
                          "description": "The id of the associated workflow run.",
                          "type": "integer",
                          "example": 5
                        },
                        "run_url": {
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/runs/5"
                        },
                        "started_at": {
                          "description": "The time that the job started, in ISO 8601 format.",
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-08-08T08:00:00-07:00"
                        },
                        "status": {
                          "description": "The phase of the lifecycle that the job is currently in.",
                          "type": "string",
                          "enum": [
                            "queued",
                            "in_progress",
                            "completed"
                          ],
                          "example": "queued"
                        },
                        "steps": {
                          "description": "Steps in this job.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "status",
                              "conclusion",
                              "number"
                            ],
                            "properties": {
                              "completed_at": {
                                "description": "The time that the job finished, in ISO 8601 format.",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2019-08-08T08:00:00-07:00"
                              },
                              "conclusion": {
                                "description": "The outcome of the job.",
                                "type": "string",
                                "nullable": true,
                                "example": "success"
                              },
                              "name": {
                                "description": "The name of the job.",
                                "type": "string",
                                "example": "test-coverage"
                              },
                              "number": {
                                "type": "integer",
                                "example": 1
                              },
                              "started_at": {
                                "description": "The time that the step started, in ISO 8601 format.",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2019-08-08T08:00:00-07:00"
                              },
                              "status": {
                                "description": "The phase of the lifecycle that the job is currently in.",
                                "type": "string",
                                "enum": [
                                  "queued",
                                  "in_progress",
                                  "completed"
                                ],
                                "example": "queued"
                              }
                            }
                          }
                        },
                        "url": {
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/jobs/21"
                        }
                      },
                      "title": "Job"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "check_run_url": "https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496",
                          "completed_at": "2020-01-20T17:44:39Z",
                          "conclusion": "success",
                          "head_sha": "f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0",
                          "html_url": "https://github.com/octo-org/octo-repo/runs/399444496",
                          "id": 399444496,
                          "name": "build",
                          "node_id": "MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==",
                          "run_id": 29679449,
                          "run_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449",
                          "started_at": "2020-01-20T17:42:40Z",
                          "status": "completed",
                          "steps": [
                            {
                              "completed_at": "2020-01-20T09:42:41.000-08:00",
                              "conclusion": "success",
                              "name": "Set up job",
                              "number": 1,
                              "started_at": "2020-01-20T09:42:40.000-08:00",
                              "status": "completed"
                            },
                            {
                              "completed_at": "2020-01-20T09:42:45.000-08:00",
                              "conclusion": "success",
                              "name": "Run actions/checkout@v2",
                              "number": 2,
                              "started_at": "2020-01-20T09:42:41.000-08:00",
                              "status": "completed"
                            },
                            {
                              "completed_at": "2020-01-20T09:42:45.000-08:00",
                              "conclusion": "success",
                              "name": "Set up Ruby",
                              "number": 3,
                              "started_at": "2020-01-20T09:42:45.000-08:00",
                              "status": "completed"
                            },
                            {
                              "completed_at": "2020-01-20T09:42:48.000-08:00",
                              "conclusion": "success",
                              "name": "Run actions/cache@v2",
                              "number": 4,
                              "started_at": "2020-01-20T09:42:45.000-08:00",
                              "status": "completed"
                            },
                            {
                              "completed_at": "2020-01-20T09:42:52.000-08:00",
                              "conclusion": "success",
                              "name": "Install Bundler",
                              "number": 5,
                              "started_at": "2020-01-20T09:42:48.000-08:00",
                              "status": "completed"
                            },
                            {
                              "completed_at": "2020-01-20T09:42:53.000-08:00",
                              "conclusion": "success",
                              "name": "Install Gems",
                              "number": 6,
                              "started_at": "2020-01-20T09:42:52.000-08:00",
                              "status": "completed"
                            },
                            {
                              "completed_at": "2020-01-20T09:42:59.000-08:00",
                              "conclusion": "success",
                              "name": "Run Tests",
                              "number": 7,
                              "started_at": "2020-01-20T09:42:53.000-08:00",
                              "status": "completed"
                            },
                            {
                              "completed_at": "2020-01-20T09:44:39.000-08:00",
                              "conclusion": "success",
                              "name": "Deploy to Heroku",
                              "number": 8,
                              "started_at": "2020-01-20T09:42:59.000-08:00",
                              "status": "completed"
                            },
                            {
                              "completed_at": "2020-01-20T09:44:39.000-08:00",
                              "conclusion": "success",
                              "name": "Post actions/cache@v2",
                              "number": 16,
                              "started_at": "2020-01-20T09:44:39.000-08:00",
                              "status": "completed"
                            },
                            {
                              "completed_at": "2020-01-20T09:44:39.000-08:00",
                              "conclusion": "success",
                              "name": "Complete job",
                              "number": 17,
                              "started_at": "2020-01-20T09:44:39.000-08:00",
                              "status": "completed"
                            }
                          ],
                          "url": "https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-jobs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/jobs/{job_id}/logs",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Download job logs for a workflow run",
            "description": "Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look\nfor `Location:` in the response header to find the URL for the download. Anyone with read access to the repository can\nuse this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must\nhave the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#download-job-logs-for-a-workflow-run"
            },
            "operationId": "actions/download-job-logs-for-workflow-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "job_id",
                "description": "job_id parameter",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "302": {
                "description": "Response",
                "headers": {
                  "Location": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/jobs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D"
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-jobs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runners",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List self-hosted runners for a repository",
            "description": "Lists all self-hosted runners configured in a repository. You must authenticate using an access token with the `repo` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-self-hosted-runners-for-a-repository"
            },
            "operationId": "actions/list-self-hosted-runners-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "runners"
                      ],
                      "properties": {
                        "runners": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "busy": {
                                "type": "boolean"
                              },
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "os": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "total_count": {
                          "type": "number"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "runners": [
                            {
                              "busy": true,
                              "id": 23,
                              "name": "linux_runner",
                              "os": "linux",
                              "status": "online"
                            },
                            {
                              "busy": false,
                              "id": 24,
                              "name": "mac_runner",
                              "os": "macos",
                              "status": "offline"
                            }
                          ],
                          "total_count": 2
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runners/downloads",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List runner applications for a repository",
            "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-runner-applications-for-a-repository"
            },
            "operationId": "actions/list-runner-applications-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "description": "Runner Application",
                        "type": "object",
                        "required": [
                          "os",
                          "architecture",
                          "download_url",
                          "filename"
                        ],
                        "properties": {
                          "architecture": {
                            "type": "string"
                          },
                          "download_url": {
                            "type": "string"
                          },
                          "filename": {
                            "type": "string"
                          },
                          "os": {
                            "type": "string"
                          },
                          "sha256_checksum": {
                            "type": "string"
                          },
                          "temp_download_token": {
                            "description": "A short lived bearer token used to download the runner, if needed.",
                            "type": "string"
                          }
                        },
                        "title": "Runner Application"
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "architecture": "x64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz",
                            "filename": "actions-runner-osx-x64-2.164.0.tar.gz",
                            "os": "osx"
                          },
                          {
                            "architecture": "x64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz",
                            "filename": "actions-runner-linux-x64-2.164.0.tar.gz",
                            "os": "linux"
                          },
                          {
                            "architecture": "arm",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz",
                            "filename": "actions-runner-linux-arm-2.164.0.tar.gz",
                            "os": "linux"
                          },
                          {
                            "architecture": "x64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip",
                            "filename": "actions-runner-win-x64-2.164.0.zip",
                            "os": "win"
                          },
                          {
                            "architecture": "arm64",
                            "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz",
                            "filename": "actions-runner-linux-arm64-2.164.0.tar.gz",
                            "os": "linux"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runners/registration-token",
        {
          "post": {
            "tags": [
              "actions"
            ],
            "summary": "Create a registration token for a repository",
            "description": "Returns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate\nusing an access token with the `repo` scope to use this endpoint.\n\n#### Example using registration token\n \nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-a-registration-token-for-a-repository"
            },
            "operationId": "actions/create-registration-token-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Authentication Token",
                      "type": "object",
                      "required": [
                        "token",
                        "expires_at"
                      ],
                      "properties": {
                        "expires_at": {
                          "description": "The time this token expires",
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-07-11T22:14:10Z"
                        },
                        "permissions": {
                          "type": "object",
                          "example": {
                            "deployments": "write",
                            "issues": "read"
                          }
                        },
                        "repositories": {
                          "description": "The repositories this token has access to",
                          "type": "array",
                          "items": {
                            "description": "A git repository",
                            "type": "object",
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "properties": {
                              "allow_merge_commit": {
                                "description": "Whether to allow merge commits for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_rebase_merge": {
                                "description": "Whether to allow rebase merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_squash_merge": {
                                "description": "Whether to allow squash merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "archive_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                              },
                              "archived": {
                                "description": "Whether the repository is archived.",
                                "type": "boolean",
                                "default": false
                              },
                              "assignees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                              },
                              "blobs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                              },
                              "branches_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                              },
                              "clone_url": {
                                "type": "string",
                                "example": "https://github.com/octocat/Hello-World.git"
                              },
                              "collaborators_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                              },
                              "comments_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                              },
                              "commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                              },
                              "compare_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                              },
                              "contents_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                              },
                              "contributors_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:01:12Z"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "type": "string",
                                "example": "master"
                              },
                              "delete_branch_on_merge": {
                                "description": "Whether to delete head branches when pull requests are merged",
                                "type": "boolean",
                                "example": false,
                                "default": false
                              },
                              "deployments_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "This your first repo!"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/events"
                              },
                              "fork": {
                                "type": "boolean"
                              },
                              "forks": {
                                "type": "integer"
                              },
                              "forks_count": {
                                "type": "integer",
                                "example": 9
                              },
                              "forks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "octocat/Hello-World"
                              },
                              "git_commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                              },
                              "git_refs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                              },
                              "git_tags_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                              },
                              "git_url": {
                                "type": "string",
                                "example": "git:github.com/octocat/Hello-World.git"
                              },
                              "has_downloads": {
                                "description": "Whether downloads are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_issues": {
                                "description": "Whether issues are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_pages": {
                                "type": "boolean"
                              },
                              "has_projects": {
                                "description": "Whether projects are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_wiki": {
                                "description": "Whether the wiki is enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "homepage": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "https://github.com"
                              },
                              "hooks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat/Hello-World"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "type": "integer",
                                "example": 42
                              },
                              "is_template": {
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "type": "boolean",
                                "example": true,
                                "default": false
                              },
                              "issue_comment_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                              },
                              "issue_events_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                              },
                              "keys_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                              },
                              "labels_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "languages_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                              },
                              "license": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "properties": {
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "mit"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "MIT License"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDc6TGljZW5zZW1pdA=="
                                      },
                                      "spdx_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "MIT"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://api.github.com/licenses/mit"
                                      }
                                    },
                                    "title": "License Simple"
                                  }
                                ]
                              },
                              "master_branch": {
                                "type": "string"
                              },
                              "merges_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                              },
                              "milestones_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                              },
                              "mirror_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "git:git.example.com/octocat/Hello-World"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "type": "string",
                                "example": "Team Environment"
                              },
                              "network_count": {
                                "type": "integer"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                              },
                              "notifications_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                              },
                              "open_issues": {
                                "type": "integer"
                              },
                              "open_issues_count": {
                                "type": "integer",
                                "example": 0
                              },
                              "organization": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  }
                                ]
                              },
                              "owner": {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              },
                              "permissions": {
                                "type": "object",
                                "required": [
                                  "admin",
                                  "pull",
                                  "push"
                                ],
                                "properties": {
                                  "admin": {
                                    "type": "boolean"
                                  },
                                  "maintain": {
                                    "type": "boolean"
                                  },
                                  "pull": {
                                    "type": "boolean"
                                  },
                                  "push": {
                                    "type": "boolean"
                                  },
                                  "triage": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "private": {
                                "description": "Whether the repository is private or public.",
                                "type": "boolean",
                                "default": false
                              },
                              "pulls_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                              },
                              "pushed_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:06:43Z"
                              },
                              "releases_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                              },
                              "size": {
                                "type": "integer",
                                "example": 108
                              },
                              "ssh_url": {
                                "type": "string",
                                "example": "git@github.com:octocat/Hello-World.git"
                              },
                              "stargazers_count": {
                                "type": "integer",
                                "example": 80
                              },
                              "stargazers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                              },
                              "starred_at": {
                                "type": "string",
                                "example": "\"2020-07-09T00:17:42Z\""
                              },
                              "statuses_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                              },
                              "subscribers_count": {
                                "type": "integer"
                              },
                              "subscribers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                              },
                              "subscription_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                              },
                              "svn_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://svn.github.com/octocat/Hello-World"
                              },
                              "tags_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                              },
                              "teams_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                              },
                              "temp_clone_token": {
                                "type": "string"
                              },
                              "template_repository": {
                                "type": "object",
                                "properties": {
                                  "allow_merge_commit": {
                                    "type": "boolean"
                                  },
                                  "allow_rebase_merge": {
                                    "type": "boolean"
                                  },
                                  "allow_squash_merge": {
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "type": "string"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "type": "string"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "collaborators_url": {
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "type": "string"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "type": "string"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "integer"
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "type": "string"
                                  },
                                  "merges_url": {
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "type": "string"
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "type": "object",
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "login": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "type": "string"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_url": {
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "type": "string"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "type": "string"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "type": "string"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "nullable": true
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "trees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:14:43Z"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "visibility": {
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string",
                                "default": "public"
                              },
                              "watchers": {
                                "type": "integer"
                              },
                              "watchers_count": {
                                "type": "integer",
                                "example": 80
                              }
                            },
                            "title": "Repository"
                          }
                        },
                        "repository_selection": {
                          "description": "Describe whether all repositories have been selected or there's a selection involved",
                          "type": "string",
                          "enum": [
                            "all",
                            "selected"
                          ]
                        },
                        "single_file": {
                          "type": "string",
                          "nullable": true,
                          "example": "config.yaml"
                        },
                        "token": {
                          "description": "The token used for authentication",
                          "type": "string",
                          "example": "v1.1f699f1069f60xxx"
                        }
                      },
                      "title": "Authentication Token"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2020-01-22T12:13:35.123-08:00",
                          "token": "LLBF3JGZDX3P5PMEXLND6TS6FCWO6"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runners/remove-token",
        {
          "post": {
            "tags": [
              "actions"
            ],
            "summary": "Create a remove token for a repository",
            "description": "Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour.\nYou must authenticate using an access token with the `repo` scope to use this endpoint.\n\n#### Example using remove token\n \nTo remove your self-hosted runner from a repository, replace TOKEN with the remove token provided by this endpoint.\n\n```\n./config.sh remove --token TOKEN\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-a-remove-token-for-a-repository"
            },
            "operationId": "actions/create-remove-token-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Authentication Token",
                      "type": "object",
                      "required": [
                        "token",
                        "expires_at"
                      ],
                      "properties": {
                        "expires_at": {
                          "description": "The time this token expires",
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-07-11T22:14:10Z"
                        },
                        "permissions": {
                          "type": "object",
                          "example": {
                            "deployments": "write",
                            "issues": "read"
                          }
                        },
                        "repositories": {
                          "description": "The repositories this token has access to",
                          "type": "array",
                          "items": {
                            "description": "A git repository",
                            "type": "object",
                            "required": [
                              "archive_url",
                              "assignees_url",
                              "blobs_url",
                              "branches_url",
                              "collaborators_url",
                              "comments_url",
                              "commits_url",
                              "compare_url",
                              "contents_url",
                              "contributors_url",
                              "deployments_url",
                              "description",
                              "downloads_url",
                              "events_url",
                              "fork",
                              "forks_url",
                              "full_name",
                              "git_commits_url",
                              "git_refs_url",
                              "git_tags_url",
                              "hooks_url",
                              "html_url",
                              "id",
                              "node_id",
                              "issue_comment_url",
                              "issue_events_url",
                              "issues_url",
                              "keys_url",
                              "labels_url",
                              "languages_url",
                              "merges_url",
                              "milestones_url",
                              "name",
                              "notifications_url",
                              "owner",
                              "private",
                              "pulls_url",
                              "releases_url",
                              "stargazers_url",
                              "statuses_url",
                              "subscribers_url",
                              "subscription_url",
                              "tags_url",
                              "teams_url",
                              "trees_url",
                              "url",
                              "clone_url",
                              "default_branch",
                              "forks",
                              "forks_count",
                              "git_url",
                              "has_downloads",
                              "has_issues",
                              "has_projects",
                              "has_wiki",
                              "has_pages",
                              "homepage",
                              "language",
                              "archived",
                              "disabled",
                              "mirror_url",
                              "open_issues",
                              "open_issues_count",
                              "license",
                              "pushed_at",
                              "size",
                              "ssh_url",
                              "stargazers_count",
                              "svn_url",
                              "watchers",
                              "watchers_count",
                              "created_at",
                              "updated_at"
                            ],
                            "properties": {
                              "allow_merge_commit": {
                                "description": "Whether to allow merge commits for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_rebase_merge": {
                                "description": "Whether to allow rebase merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "allow_squash_merge": {
                                "description": "Whether to allow squash merges for pull requests.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "archive_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                              },
                              "archived": {
                                "description": "Whether the repository is archived.",
                                "type": "boolean",
                                "default": false
                              },
                              "assignees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                              },
                              "blobs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                              },
                              "branches_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                              },
                              "clone_url": {
                                "type": "string",
                                "example": "https://github.com/octocat/Hello-World.git"
                              },
                              "collaborators_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                              },
                              "comments_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                              },
                              "commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                              },
                              "compare_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                              },
                              "contents_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                              },
                              "contributors_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:01:12Z"
                              },
                              "default_branch": {
                                "description": "The default branch of the repository.",
                                "type": "string",
                                "example": "master"
                              },
                              "delete_branch_on_merge": {
                                "description": "Whether to delete head branches when pull requests are merged",
                                "type": "boolean",
                                "example": false,
                                "default": false
                              },
                              "deployments_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "This your first repo!"
                              },
                              "disabled": {
                                "description": "Returns whether or not this repository disabled.",
                                "type": "boolean"
                              },
                              "downloads_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                              },
                              "events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/events"
                              },
                              "fork": {
                                "type": "boolean"
                              },
                              "forks": {
                                "type": "integer"
                              },
                              "forks_count": {
                                "type": "integer",
                                "example": 9
                              },
                              "forks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "octocat/Hello-World"
                              },
                              "git_commits_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                              },
                              "git_refs_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                              },
                              "git_tags_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                              },
                              "git_url": {
                                "type": "string",
                                "example": "git:github.com/octocat/Hello-World.git"
                              },
                              "has_downloads": {
                                "description": "Whether downloads are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_issues": {
                                "description": "Whether issues are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_pages": {
                                "type": "boolean"
                              },
                              "has_projects": {
                                "description": "Whether projects are enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "has_wiki": {
                                "description": "Whether the wiki is enabled.",
                                "type": "boolean",
                                "example": true,
                                "default": true
                              },
                              "homepage": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "https://github.com"
                              },
                              "hooks_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat/Hello-World"
                              },
                              "id": {
                                "description": "Unique identifier of the repository",
                                "type": "integer",
                                "example": 42
                              },
                              "is_template": {
                                "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                "type": "boolean",
                                "example": true,
                                "default": false
                              },
                              "issue_comment_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                              },
                              "issue_events_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                              },
                              "issues_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                              },
                              "keys_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                              },
                              "labels_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                              },
                              "language": {
                                "type": "string",
                                "nullable": true
                              },
                              "languages_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                              },
                              "license": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "License Simple",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "name",
                                      "url",
                                      "spdx_id",
                                      "node_id"
                                    ],
                                    "properties": {
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri"
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "mit"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "MIT License"
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDc6TGljZW5zZW1pdA=="
                                      },
                                      "spdx_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "MIT"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true,
                                        "example": "https://api.github.com/licenses/mit"
                                      }
                                    },
                                    "title": "License Simple"
                                  }
                                ]
                              },
                              "master_branch": {
                                "type": "string"
                              },
                              "merges_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                              },
                              "milestones_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                              },
                              "mirror_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true,
                                "example": "git:git.example.com/octocat/Hello-World"
                              },
                              "name": {
                                "description": "The name of the repository.",
                                "type": "string",
                                "example": "Team Environment"
                              },
                              "network_count": {
                                "type": "integer"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                              },
                              "notifications_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                              },
                              "open_issues": {
                                "type": "integer"
                              },
                              "open_issues_count": {
                                "type": "integer",
                                "example": 0
                              },
                              "organization": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  }
                                ]
                              },
                              "owner": {
                                "description": "Simple User",
                                "type": "object",
                                "required": [
                                  "avatar_url",
                                  "events_url",
                                  "followers_url",
                                  "following_url",
                                  "gists_url",
                                  "gravatar_id",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "login",
                                  "organizations_url",
                                  "received_events_url",
                                  "repos_url",
                                  "site_admin",
                                  "starred_url",
                                  "subscriptions_url",
                                  "type",
                                  "url"
                                ],
                                "properties": {
                                  "avatar_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                  },
                                  "email": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                  },
                                  "followers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/followers"
                                  },
                                  "following_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                  },
                                  "gists_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                  },
                                  "gravatar_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1
                                  },
                                  "login": {
                                    "type": "string",
                                    "example": "octocat"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDQ6VXNlcjE="
                                  },
                                  "organizations_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/orgs"
                                  },
                                  "received_events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/received_events"
                                  },
                                  "repos_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/repos"
                                  },
                                  "site_admin": {
                                    "type": "boolean"
                                  },
                                  "starred_at": {
                                    "type": "string",
                                    "example": "\"2020-07-09T00:17:55Z\""
                                  },
                                  "starred_url": {
                                    "type": "string",
                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                  },
                                  "subscriptions_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                  },
                                  "type": {
                                    "type": "string",
                                    "example": "User"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/users/octocat"
                                  }
                                },
                                "nullable": true,
                                "title": "Simple User"
                              },
                              "permissions": {
                                "type": "object",
                                "required": [
                                  "admin",
                                  "pull",
                                  "push"
                                ],
                                "properties": {
                                  "admin": {
                                    "type": "boolean"
                                  },
                                  "maintain": {
                                    "type": "boolean"
                                  },
                                  "pull": {
                                    "type": "boolean"
                                  },
                                  "push": {
                                    "type": "boolean"
                                  },
                                  "triage": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "private": {
                                "description": "Whether the repository is private or public.",
                                "type": "boolean",
                                "default": false
                              },
                              "pulls_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                              },
                              "pushed_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:06:43Z"
                              },
                              "releases_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                              },
                              "size": {
                                "type": "integer",
                                "example": 108
                              },
                              "ssh_url": {
                                "type": "string",
                                "example": "git@github.com:octocat/Hello-World.git"
                              },
                              "stargazers_count": {
                                "type": "integer",
                                "example": 80
                              },
                              "stargazers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                              },
                              "starred_at": {
                                "type": "string",
                                "example": "\"2020-07-09T00:17:42Z\""
                              },
                              "statuses_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                              },
                              "subscribers_count": {
                                "type": "integer"
                              },
                              "subscribers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                              },
                              "subscription_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                              },
                              "svn_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://svn.github.com/octocat/Hello-World"
                              },
                              "tags_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                              },
                              "teams_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                              },
                              "temp_clone_token": {
                                "type": "string"
                              },
                              "template_repository": {
                                "type": "object",
                                "properties": {
                                  "allow_merge_commit": {
                                    "type": "boolean"
                                  },
                                  "allow_rebase_merge": {
                                    "type": "boolean"
                                  },
                                  "allow_squash_merge": {
                                    "type": "boolean"
                                  },
                                  "archive_url": {
                                    "type": "string"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string"
                                  },
                                  "blobs_url": {
                                    "type": "string"
                                  },
                                  "branches_url": {
                                    "type": "string"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "collaborators_url": {
                                    "type": "string"
                                  },
                                  "comments_url": {
                                    "type": "string"
                                  },
                                  "commits_url": {
                                    "type": "string"
                                  },
                                  "compare_url": {
                                    "type": "string"
                                  },
                                  "contents_url": {
                                    "type": "string"
                                  },
                                  "contributors_url": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string"
                                  },
                                  "events_url": {
                                    "type": "string"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string"
                                  },
                                  "full_name": {
                                    "type": "string"
                                  },
                                  "git_commits_url": {
                                    "type": "string"
                                  },
                                  "git_refs_url": {
                                    "type": "string"
                                  },
                                  "git_tags_url": {
                                    "type": "string"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string"
                                  },
                                  "hooks_url": {
                                    "type": "string"
                                  },
                                  "html_url": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "integer"
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string"
                                  },
                                  "issue_events_url": {
                                    "type": "string"
                                  },
                                  "issues_url": {
                                    "type": "string"
                                  },
                                  "keys_url": {
                                    "type": "string"
                                  },
                                  "labels_url": {
                                    "type": "string"
                                  },
                                  "language": {
                                    "type": "string"
                                  },
                                  "languages_url": {
                                    "type": "string"
                                  },
                                  "merges_url": {
                                    "type": "string"
                                  },
                                  "milestones_url": {
                                    "type": "string"
                                  },
                                  "mirror_url": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string"
                                  },
                                  "notifications_url": {
                                    "type": "string"
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "type": "object",
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string"
                                      },
                                      "events_url": {
                                        "type": "string"
                                      },
                                      "followers_url": {
                                        "type": "string"
                                      },
                                      "following_url": {
                                        "type": "string"
                                      },
                                      "gists_url": {
                                        "type": "string"
                                      },
                                      "gravatar_id": {
                                        "type": "string"
                                      },
                                      "html_url": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "login": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "organizations_url": {
                                        "type": "string"
                                      },
                                      "received_events_url": {
                                        "type": "string"
                                      },
                                      "repos_url": {
                                        "type": "string"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_url": {
                                        "type": "string"
                                      },
                                      "subscriptions_url": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string"
                                  },
                                  "pushed_at": {
                                    "type": "string"
                                  },
                                  "releases_url": {
                                    "type": "string"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string"
                                  },
                                  "statuses_url": {
                                    "type": "string"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string"
                                  },
                                  "subscription_url": {
                                    "type": "string"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string"
                                  },
                                  "teams_url": {
                                    "type": "string"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "nullable": true
                              },
                              "topics": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "trees_url": {
                                "type": "string",
                                "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2011-01-26T19:14:43Z"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "visibility": {
                                "description": "The repository visibility: public, private, or internal.",
                                "type": "string",
                                "default": "public"
                              },
                              "watchers": {
                                "type": "integer"
                              },
                              "watchers_count": {
                                "type": "integer",
                                "example": 80
                              }
                            },
                            "title": "Repository"
                          }
                        },
                        "repository_selection": {
                          "description": "Describe whether all repositories have been selected or there's a selection involved",
                          "type": "string",
                          "enum": [
                            "all",
                            "selected"
                          ]
                        },
                        "single_file": {
                          "type": "string",
                          "nullable": true,
                          "example": "config.yaml"
                        },
                        "token": {
                          "description": "The token used for authentication",
                          "type": "string",
                          "example": "v1.1f699f1069f60xxx"
                        }
                      },
                      "title": "Authentication Token"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "expires_at": "2020-01-29T12:13:35.123-08:00",
                          "token": "AABF3JGZDX3P5PMEXLND6TS6FCWO6"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runners/{runner_id}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get a self-hosted runner for a repository",
            "description": "Gets a specific self-hosted runner configured in a repository.\n\nYou must authenticate using an access token with the `repo` scope to use this\nendpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-self-hosted-runner-for-a-repository"
            },
            "operationId": "actions/get-self-hosted-runner-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "busy": {
                          "type": "boolean"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "os": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "busy": true,
                          "id": 23,
                          "name": "mac_runner",
                          "os": "macos",
                          "status": "online"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Delete a self-hosted runner from a repository",
            "description": "Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `repo`\nscope to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#delete-a-self-hosted-runner-from-a-repository"
            },
            "operationId": "actions/delete-self-hosted-runner-from-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "runner_id",
                "description": "Unique identifier of the self-hosted runner.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "self-hosted-runners"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List workflow runs for a repository",
            "description": "Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-workflow-runs-for-a-repository"
            },
            "operationId": "actions/list-workflow-runs-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "actor",
                "description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run.",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "branch",
                "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`.",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "event",
                "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"[Events that trigger workflows](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows).\"",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "status",
                "description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Only GitHub can set a status of `waiting` or `requested`. For a list of the possible `status` and `conclusion` options, see \"[Create a check run](https://docs.github.com/enterprise-server@2.22/rest/reference/checks#create-a-check-run).\"",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "completed",
                    "action_required",
                    "cancelled",
                    "failure",
                    "neutral",
                    "skipped",
                    "stale",
                    "success",
                    "timed_out",
                    "in_progress",
                    "queued",
                    "requested",
                    "waiting"
                  ]
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "created",
                "required": false,
                "schema": {
                  "type": "string",
                  "format": "date-time"
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "workflow_runs"
                      ],
                      "properties": {
                        "total_count": {
                          "type": "integer"
                        },
                        "workflow_runs": {
                          "type": "array",
                          "items": {
                            "description": "An invocation of a workflow",
                            "type": "object",
                            "required": [
                              "id",
                              "node_id",
                              "head_branch",
                              "run_number",
                              "event",
                              "status",
                              "conclusion",
                              "head_sha",
                              "workflow_id",
                              "url",
                              "html_url",
                              "created_at",
                              "updated_at",
                              "head_commit",
                              "head_repository",
                              "repository",
                              "jobs_url",
                              "logs_url",
                              "check_suite_url",
                              "cancel_url",
                              "rerun_url",
                              "artifacts_url",
                              "workflow_url",
                              "pull_requests"
                            ],
                            "properties": {
                              "artifacts_url": {
                                "description": "The URL to the artifacts for the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts"
                              },
                              "cancel_url": {
                                "description": "The URL to cancel the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/cancel"
                              },
                              "check_suite_id": {
                                "description": "The ID of the associated check suite.",
                                "type": "integer",
                                "example": 42
                              },
                              "check_suite_node_id": {
                                "description": "The node ID of the associated check suite.",
                                "type": "string",
                                "example": "MDEwOkNoZWNrU3VpdGU0Mg=="
                              },
                              "check_suite_url": {
                                "description": "The URL to the associated check suite.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/check-suites/12"
                              },
                              "conclusion": {
                                "type": "string",
                                "nullable": true,
                                "example": "neutral"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "event": {
                                "type": "string",
                                "example": "push"
                              },
                              "head_branch": {
                                "type": "string",
                                "nullable": true,
                                "example": "master"
                              },
                              "head_commit": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "Simple Commit",
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "tree_id",
                                      "message",
                                      "timestamp",
                                      "author",
                                      "committer"
                                    ],
                                    "properties": {
                                      "author": {
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "email"
                                        ],
                                        "properties": {
                                          "email": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "nullable": true
                                      },
                                      "committer": {
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "email"
                                        ],
                                        "properties": {
                                          "email": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "nullable": true
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "message": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "tree_id": {
                                        "type": "string"
                                      }
                                    },
                                    "title": "Simple Commit"
                                  }
                                ]
                              },
                              "head_repository": {
                                "description": "Minimal Repository",
                                "type": "object",
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url"
                                ],
                                "properties": {
                                  "archive_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                  },
                                  "blobs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                  },
                                  "branches_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "code_of_conduct": {
                                    "description": "Code Of Conduct",
                                    "type": "object",
                                    "required": [
                                      "url",
                                      "html_url",
                                      "key",
                                      "name"
                                    ],
                                    "properties": {
                                      "body": {
                                        "type": "string",
                                        "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "contributor_covenant"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "Contributor Covenant"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                                      }
                                    },
                                    "title": "Code Of Conduct"
                                  },
                                  "collaborators_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                  },
                                  "comments_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                  },
                                  "commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                  },
                                  "compare_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                  },
                                  "contents_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                  },
                                  "contributors_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:01:12Z"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "This your first repo!"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                  },
                                  "full_name": {
                                    "type": "string",
                                    "example": "octocat/Hello-World"
                                  },
                                  "git_commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                  },
                                  "git_refs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                  },
                                  "git_tags_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "hooks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat/Hello-World"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1296269
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                  },
                                  "issue_events_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                  },
                                  "issues_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                  },
                                  "keys_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                  },
                                  "labels_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                  },
                                  "language": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "languages_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                  },
                                  "license": {
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "spdx_id": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    },
                                    "nullable": true
                                  },
                                  "merges_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                  },
                                  "milestones_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                  },
                                  "mirror_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Hello-World"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                  },
                                  "notifications_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                  },
                                  "open_issues": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                  },
                                  "pushed_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:06:43Z"
                                  },
                                  "releases_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                  },
                                  "statuses_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                  },
                                  "subscription_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                  },
                                  "teams_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "template_repository": {
                                    "type": "object",
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "A git repository",
                                        "type": "object",
                                        "required": [
                                          "archive_url",
                                          "assignees_url",
                                          "blobs_url",
                                          "branches_url",
                                          "collaborators_url",
                                          "comments_url",
                                          "commits_url",
                                          "compare_url",
                                          "contents_url",
                                          "contributors_url",
                                          "deployments_url",
                                          "description",
                                          "downloads_url",
                                          "events_url",
                                          "fork",
                                          "forks_url",
                                          "full_name",
                                          "git_commits_url",
                                          "git_refs_url",
                                          "git_tags_url",
                                          "hooks_url",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "issue_comment_url",
                                          "issue_events_url",
                                          "issues_url",
                                          "keys_url",
                                          "labels_url",
                                          "languages_url",
                                          "merges_url",
                                          "milestones_url",
                                          "name",
                                          "notifications_url",
                                          "owner",
                                          "private",
                                          "pulls_url",
                                          "releases_url",
                                          "stargazers_url",
                                          "statuses_url",
                                          "subscribers_url",
                                          "subscription_url",
                                          "tags_url",
                                          "teams_url",
                                          "trees_url",
                                          "url",
                                          "clone_url",
                                          "default_branch",
                                          "forks",
                                          "forks_count",
                                          "git_url",
                                          "has_downloads",
                                          "has_issues",
                                          "has_projects",
                                          "has_wiki",
                                          "has_pages",
                                          "homepage",
                                          "language",
                                          "archived",
                                          "disabled",
                                          "mirror_url",
                                          "open_issues",
                                          "open_issues_count",
                                          "license",
                                          "pushed_at",
                                          "size",
                                          "ssh_url",
                                          "stargazers_count",
                                          "svn_url",
                                          "watchers",
                                          "watchers_count",
                                          "created_at",
                                          "updated_at"
                                        ],
                                        "properties": {
                                          "allow_merge_commit": {
                                            "description": "Whether to allow merge commits for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "allow_rebase_merge": {
                                            "description": "Whether to allow rebase merges for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "allow_squash_merge": {
                                            "description": "Whether to allow squash merges for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "archive_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                          },
                                          "archived": {
                                            "description": "Whether the repository is archived.",
                                            "type": "boolean",
                                            "default": false
                                          },
                                          "assignees_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                          },
                                          "blobs_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                          },
                                          "branches_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                          },
                                          "clone_url": {
                                            "type": "string",
                                            "example": "https://github.com/octocat/Hello-World.git"
                                          },
                                          "collaborators_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                          },
                                          "comments_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                          },
                                          "commits_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                          },
                                          "compare_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                          },
                                          "contents_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                          },
                                          "contributors_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                          },
                                          "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:01:12Z"
                                          },
                                          "default_branch": {
                                            "description": "The default branch of the repository.",
                                            "type": "string",
                                            "example": "master"
                                          },
                                          "delete_branch_on_merge": {
                                            "description": "Whether to delete head branches when pull requests are merged",
                                            "type": "boolean",
                                            "example": false,
                                            "default": false
                                          },
                                          "deployments_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                          },
                                          "description": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "This your first repo!"
                                          },
                                          "disabled": {
                                            "description": "Returns whether or not this repository disabled.",
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                          },
                                          "fork": {
                                            "type": "boolean"
                                          },
                                          "forks": {
                                            "type": "integer"
                                          },
                                          "forks_count": {
                                            "type": "integer",
                                            "example": 9
                                          },
                                          "forks_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                          },
                                          "full_name": {
                                            "type": "string",
                                            "example": "octocat/Hello-World"
                                          },
                                          "git_commits_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                          },
                                          "git_refs_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                          },
                                          "git_tags_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                          },
                                          "git_url": {
                                            "type": "string",
                                            "example": "git:github.com/octocat/Hello-World.git"
                                          },
                                          "has_downloads": {
                                            "description": "Whether downloads are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_issues": {
                                            "description": "Whether issues are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_pages": {
                                            "type": "boolean"
                                          },
                                          "has_projects": {
                                            "description": "Whether projects are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_wiki": {
                                            "description": "Whether the wiki is enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "homepage": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "https://github.com"
                                          },
                                          "hooks_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat/Hello-World"
                                          },
                                          "id": {
                                            "description": "Unique identifier of the repository",
                                            "type": "integer",
                                            "example": 42
                                          },
                                          "is_template": {
                                            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": false
                                          },
                                          "issue_comment_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                          },
                                          "issue_events_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                          },
                                          "issues_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                          },
                                          "keys_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                          },
                                          "labels_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                          },
                                          "language": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "languages_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                          },
                                          "license": {
                                            "nullable": true,
                                            "allOf": [
                                              {
                                                "description": "License Simple",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "name",
                                                  "url",
                                                  "spdx_id",
                                                  "node_id"
                                                ],
                                                "properties": {
                                                  "html_url": {
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "key": {
                                                    "type": "string",
                                                    "example": "mit"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "example": "MIT License"
                                                  },
                                                  "node_id": {
                                                    "type": "string",
                                                    "example": "MDc6TGljZW5zZW1pdA=="
                                                  },
                                                  "spdx_id": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "example": "MIT"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "nullable": true,
                                                    "example": "https://api.github.com/licenses/mit"
                                                  }
                                                },
                                                "title": "License Simple"
                                              }
                                            ]
                                          },
                                          "master_branch": {
                                            "type": "string"
                                          },
                                          "merges_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                          },
                                          "milestones_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                          },
                                          "mirror_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "git:git.example.com/octocat/Hello-World"
                                          },
                                          "name": {
                                            "description": "The name of the repository.",
                                            "type": "string",
                                            "example": "Team Environment"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                          },
                                          "notifications_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                          },
                                          "open_issues": {
                                            "type": "integer"
                                          },
                                          "open_issues_count": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "organization": {
                                            "nullable": true,
                                            "allOf": [
                                              {
                                                "description": "Simple User",
                                                "type": "object",
                                                "required": [
                                                  "avatar_url",
                                                  "events_url",
                                                  "followers_url",
                                                  "following_url",
                                                  "gists_url",
                                                  "gravatar_id",
                                                  "html_url",
                                                  "id",
                                                  "node_id",
                                                  "login",
                                                  "organizations_url",
                                                  "received_events_url",
                                                  "repos_url",
                                                  "site_admin",
                                                  "starred_url",
                                                  "subscriptions_url",
                                                  "type",
                                                  "url"
                                                ],
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                                  },
                                                  "email": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "events_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                                  },
                                                  "followers_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/followers"
                                                  },
                                                  "following_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                                  },
                                                  "gists_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                                  },
                                                  "html_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://github.com/octocat"
                                                  },
                                                  "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                  },
                                                  "login": {
                                                    "type": "string",
                                                    "example": "octocat"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "node_id": {
                                                    "type": "string",
                                                    "example": "MDQ6VXNlcjE="
                                                  },
                                                  "organizations_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/orgs"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/received_events"
                                                  },
                                                  "repos_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/repos"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_at": {
                                                    "type": "string",
                                                    "example": "\"2020-07-09T00:17:55Z\""
                                                  },
                                                  "starred_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "example": "User"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat"
                                                  }
                                                },
                                                "nullable": true,
                                                "title": "Simple User"
                                              }
                                            ]
                                          },
                                          "owner": {
                                            "description": "Simple User",
                                            "type": "object",
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/images/error/octocat_happy.gif"
                                              },
                                              "email": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "events_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                                              },
                                              "followers_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/followers"
                                              },
                                              "following_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                                              },
                                              "gists_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                              },
                                              "gravatar_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "41d064eb2195891e12d0413f63227ea7"
                                              },
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/octocat"
                                              },
                                              "id": {
                                                "type": "integer",
                                                "example": 1
                                              },
                                              "login": {
                                                "type": "string",
                                                "example": "octocat"
                                              },
                                              "name": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDQ6VXNlcjE="
                                              },
                                              "organizations_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/orgs"
                                              },
                                              "received_events_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/received_events"
                                              },
                                              "repos_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/repos"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "type": "string",
                                                "example": "\"2020-07-09T00:17:55Z\""
                                              },
                                              "starred_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                              },
                                              "subscriptions_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/subscriptions"
                                              },
                                              "type": {
                                                "type": "string",
                                                "example": "User"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat"
                                              }
                                            },
                                            "nullable": true,
                                            "title": "Simple User"
                                          },
                                          "permissions": {
                                            "type": "object",
                                            "required": [
                                              "admin",
                                              "pull",
                                              "push"
                                            ],
                                            "properties": {
                                              "admin": {
                                                "type": "boolean"
                                              },
                                              "maintain": {
                                                "type": "boolean"
                                              },
                                              "pull": {
                                                "type": "boolean"
                                              },
                                              "push": {
                                                "type": "boolean"
                                              },
                                              "triage": {
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "private": {
                                            "description": "Whether the repository is private or public.",
                                            "type": "boolean",
                                            "default": false
                                          },
                                          "pulls_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                          },
                                          "pushed_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:06:43Z"
                                          },
                                          "releases_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                          },
                                          "size": {
                                            "type": "integer",
                                            "example": 108
                                          },
                                          "ssh_url": {
                                            "type": "string",
                                            "example": "git@github.com:octocat/Hello-World.git"
                                          },
                                          "stargazers_count": {
                                            "type": "integer",
                                            "example": 80
                                          },
                                          "stargazers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:42Z\""
                                          },
                                          "statuses_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                          },
                                          "subscription_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                          },
                                          "svn_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://svn.github.com/octocat/Hello-World"
                                          },
                                          "tags_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                          },
                                          "teams_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                          },
                                          "temp_clone_token": {
                                            "type": "string"
                                          },
                                          "template_repository": {
                                            "type": "object",
                                            "properties": {
                                              "allow_merge_commit": {
                                                "type": "boolean"
                                              },
                                              "allow_rebase_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_squash_merge": {
                                                "type": "boolean"
                                              },
                                              "archive_url": {
                                                "type": "string"
                                              },
                                              "archived": {
                                                "type": "boolean"
                                              },
                                              "assignees_url": {
                                                "type": "string"
                                              },
                                              "blobs_url": {
                                                "type": "string"
                                              },
                                              "branches_url": {
                                                "type": "string"
                                              },
                                              "clone_url": {
                                                "type": "string"
                                              },
                                              "collaborators_url": {
                                                "type": "string"
                                              },
                                              "comments_url": {
                                                "type": "string"
                                              },
                                              "commits_url": {
                                                "type": "string"
                                              },
                                              "compare_url": {
                                                "type": "string"
                                              },
                                              "contents_url": {
                                                "type": "string"
                                              },
                                              "contributors_url": {
                                                "type": "string"
                                              },
                                              "created_at": {
                                                "type": "string"
                                              },
                                              "default_branch": {
                                                "type": "string"
                                              },
                                              "delete_branch_on_merge": {
                                                "type": "boolean"
                                              },
                                              "deployments_url": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "disabled": {
                                                "type": "boolean"
                                              },
                                              "downloads_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "fork": {
                                                "type": "boolean"
                                              },
                                              "forks_count": {
                                                "type": "integer"
                                              },
                                              "forks_url": {
                                                "type": "string"
                                              },
                                              "full_name": {
                                                "type": "string"
                                              },
                                              "git_commits_url": {
                                                "type": "string"
                                              },
                                              "git_refs_url": {
                                                "type": "string"
                                              },
                                              "git_tags_url": {
                                                "type": "string"
                                              },
                                              "git_url": {
                                                "type": "string"
                                              },
                                              "has_downloads": {
                                                "type": "boolean"
                                              },
                                              "has_issues": {
                                                "type": "boolean"
                                              },
                                              "has_pages": {
                                                "type": "boolean"
                                              },
                                              "has_projects": {
                                                "type": "boolean"
                                              },
                                              "has_wiki": {
                                                "type": "boolean"
                                              },
                                              "homepage": {
                                                "type": "string"
                                              },
                                              "hooks_url": {
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "integer"
                                              },
                                              "is_template": {
                                                "type": "boolean"
                                              },
                                              "issue_comment_url": {
                                                "type": "string"
                                              },
                                              "issue_events_url": {
                                                "type": "string"
                                              },
                                              "issues_url": {
                                                "type": "string"
                                              },
                                              "keys_url": {
                                                "type": "string"
                                              },
                                              "labels_url": {
                                                "type": "string"
                                              },
                                              "language": {
                                                "type": "string"
                                              },
                                              "languages_url": {
                                                "type": "string"
                                              },
                                              "merges_url": {
                                                "type": "string"
                                              },
                                              "milestones_url": {
                                                "type": "string"
                                              },
                                              "mirror_url": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "network_count": {
                                                "type": "integer"
                                              },
                                              "node_id": {
                                                "type": "string"
                                              },
                                              "notifications_url": {
                                                "type": "string"
                                              },
                                              "open_issues_count": {
                                                "type": "integer"
                                              },
                                              "owner": {
                                                "type": "object",
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "type": "integer"
                                                  },
                                                  "login": {
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_url": {
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "permissions": {
                                                "type": "object",
                                                "properties": {
                                                  "admin": {
                                                    "type": "boolean"
                                                  },
                                                  "maintain": {
                                                    "type": "boolean"
                                                  },
                                                  "pull": {
                                                    "type": "boolean"
                                                  },
                                                  "push": {
                                                    "type": "boolean"
                                                  },
                                                  "triage": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "private": {
                                                "type": "boolean"
                                              },
                                              "pulls_url": {
                                                "type": "string"
                                              },
                                              "pushed_at": {
                                                "type": "string"
                                              },
                                              "releases_url": {
                                                "type": "string"
                                              },
                                              "size": {
                                                "type": "integer"
                                              },
                                              "ssh_url": {
                                                "type": "string"
                                              },
                                              "stargazers_count": {
                                                "type": "integer"
                                              },
                                              "stargazers_url": {
                                                "type": "string"
                                              },
                                              "statuses_url": {
                                                "type": "string"
                                              },
                                              "subscribers_count": {
                                                "type": "integer"
                                              },
                                              "subscribers_url": {
                                                "type": "string"
                                              },
                                              "subscription_url": {
                                                "type": "string"
                                              },
                                              "svn_url": {
                                                "type": "string"
                                              },
                                              "tags_url": {
                                                "type": "string"
                                              },
                                              "teams_url": {
                                                "type": "string"
                                              },
                                              "temp_clone_token": {
                                                "type": "string"
                                              },
                                              "topics": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "trees_url": {
                                                "type": "string"
                                              },
                                              "updated_at": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              },
                                              "visibility": {
                                                "type": "string"
                                              },
                                              "watchers_count": {
                                                "type": "integer"
                                              }
                                            },
                                            "nullable": true
                                          },
                                          "topics": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "trees_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                          },
                                          "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:14:43Z"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/repos/octocat/Hello-World"
                                          },
                                          "visibility": {
                                            "description": "The repository visibility: public, private, or internal.",
                                            "type": "string",
                                            "default": "public"
                                          },
                                          "watchers": {
                                            "type": "integer"
                                          },
                                          "watchers_count": {
                                            "type": "integer",
                                            "example": 80
                                          }
                                        },
                                        "title": "Repository"
                                      }
                                    ]
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:14:43Z"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/repos/octocat/Hello-World"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "title": "Minimal Repository"
                              },
                              "head_repository_id": {
                                "type": "integer",
                                "example": 5
                              },
                              "head_sha": {
                                "description": "The SHA of the head commit that points to the version of the worflow being run.",
                                "type": "string",
                                "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"
                              },
                              "html_url": {
                                "type": "string",
                                "example": "https://github.com/github/hello-world/suites/4"
                              },
                              "id": {
                                "description": "The ID of the workflow run.",
                                "type": "integer",
                                "example": 5
                              },
                              "jobs_url": {
                                "description": "The URL to the jobs for the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/jobs"
                              },
                              "logs_url": {
                                "description": "The URL to download the logs for the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/logs"
                              },
                              "name": {
                                "description": "The name of the workflow run.",
                                "type": "string",
                                "nullable": true,
                                "example": "Build"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOkNoZWNrU3VpdGU1"
                              },
                              "pull_requests": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "number",
                                    "url",
                                    "head",
                                    "base"
                                  ],
                                  "properties": {
                                    "base": {
                                      "type": "object",
                                      "required": [
                                        "ref",
                                        "sha",
                                        "repo"
                                      ],
                                      "properties": {
                                        "ref": {
                                          "type": "string"
                                        },
                                        "repo": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "url",
                                            "name"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "integer"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "sha": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "head": {
                                      "type": "object",
                                      "required": [
                                        "ref",
                                        "sha",
                                        "repo"
                                      ],
                                      "properties": {
                                        "ref": {
                                          "type": "string"
                                        },
                                        "repo": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "url",
                                            "name"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "integer"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "sha": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "number": {
                                      "type": "integer"
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "title": "Pull Request Minimal"
                                },
                                "nullable": true
                              },
                              "repository": {
                                "description": "Minimal Repository",
                                "type": "object",
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url"
                                ],
                                "properties": {
                                  "archive_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                  },
                                  "blobs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                  },
                                  "branches_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "code_of_conduct": {
                                    "description": "Code Of Conduct",
                                    "type": "object",
                                    "required": [
                                      "url",
                                      "html_url",
                                      "key",
                                      "name"
                                    ],
                                    "properties": {
                                      "body": {
                                        "type": "string",
                                        "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "contributor_covenant"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "Contributor Covenant"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                                      }
                                    },
                                    "title": "Code Of Conduct"
                                  },
                                  "collaborators_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                  },
                                  "comments_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                  },
                                  "commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                  },
                                  "compare_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                  },
                                  "contents_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                  },
                                  "contributors_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:01:12Z"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "This your first repo!"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                  },
                                  "full_name": {
                                    "type": "string",
                                    "example": "octocat/Hello-World"
                                  },
                                  "git_commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                  },
                                  "git_refs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                  },
                                  "git_tags_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "hooks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat/Hello-World"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1296269
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                  },
                                  "issue_events_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                  },
                                  "issues_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                  },
                                  "keys_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                  },
                                  "labels_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                  },
                                  "language": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "languages_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                  },
                                  "license": {
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "spdx_id": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    },
                                    "nullable": true
                                  },
                                  "merges_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                  },
                                  "milestones_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                  },
                                  "mirror_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Hello-World"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                  },
                                  "notifications_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                  },
                                  "open_issues": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                  },
                                  "pushed_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:06:43Z"
                                  },
                                  "releases_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                  },
                                  "statuses_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                  },
                                  "subscription_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                  },
                                  "teams_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "template_repository": {
                                    "type": "object",
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "A git repository",
                                        "type": "object",
                                        "required": [
                                          "archive_url",
                                          "assignees_url",
                                          "blobs_url",
                                          "branches_url",
                                          "collaborators_url",
                                          "comments_url",
                                          "commits_url",
                                          "compare_url",
                                          "contents_url",
                                          "contributors_url",
                                          "deployments_url",
                                          "description",
                                          "downloads_url",
                                          "events_url",
                                          "fork",
                                          "forks_url",
                                          "full_name",
                                          "git_commits_url",
                                          "git_refs_url",
                                          "git_tags_url",
                                          "hooks_url",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "issue_comment_url",
                                          "issue_events_url",
                                          "issues_url",
                                          "keys_url",
                                          "labels_url",
                                          "languages_url",
                                          "merges_url",
                                          "milestones_url",
                                          "name",
                                          "notifications_url",
                                          "owner",
                                          "private",
                                          "pulls_url",
                                          "releases_url",
                                          "stargazers_url",
                                          "statuses_url",
                                          "subscribers_url",
                                          "subscription_url",
                                          "tags_url",
                                          "teams_url",
                                          "trees_url",
                                          "url",
                                          "clone_url",
                                          "default_branch",
                                          "forks",
                                          "forks_count",
                                          "git_url",
                                          "has_downloads",
                                          "has_issues",
                                          "has_projects",
                                          "has_wiki",
                                          "has_pages",
                                          "homepage",
                                          "language",
                                          "archived",
                                          "disabled",
                                          "mirror_url",
                                          "open_issues",
                                          "open_issues_count",
                                          "license",
                                          "pushed_at",
                                          "size",
                                          "ssh_url",
                                          "stargazers_count",
                                          "svn_url",
                                          "watchers",
                                          "watchers_count",
                                          "created_at",
                                          "updated_at"
                                        ],
                                        "properties": {
                                          "allow_merge_commit": {
                                            "description": "Whether to allow merge commits for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "allow_rebase_merge": {
                                            "description": "Whether to allow rebase merges for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "allow_squash_merge": {
                                            "description": "Whether to allow squash merges for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "archive_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                          },
                                          "archived": {
                                            "description": "Whether the repository is archived.",
                                            "type": "boolean",
                                            "default": false
                                          },
                                          "assignees_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                          },
                                          "blobs_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                          },
                                          "branches_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                          },
                                          "clone_url": {
                                            "type": "string",
                                            "example": "https://github.com/octocat/Hello-World.git"
                                          },
                                          "collaborators_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                          },
                                          "comments_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                          },
                                          "commits_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                          },
                                          "compare_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                          },
                                          "contents_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                          },
                                          "contributors_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                          },
                                          "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:01:12Z"
                                          },
                                          "default_branch": {
                                            "description": "The default branch of the repository.",
                                            "type": "string",
                                            "example": "master"
                                          },
                                          "delete_branch_on_merge": {
                                            "description": "Whether to delete head branches when pull requests are merged",
                                            "type": "boolean",
                                            "example": false,
                                            "default": false
                                          },
                                          "deployments_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                          },
                                          "description": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "This your first repo!"
                                          },
                                          "disabled": {
                                            "description": "Returns whether or not this repository disabled.",
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                          },
                                          "fork": {
                                            "type": "boolean"
                                          },
                                          "forks": {
                                            "type": "integer"
                                          },
                                          "forks_count": {
                                            "type": "integer",
                                            "example": 9
                                          },
                                          "forks_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                          },
                                          "full_name": {
                                            "type": "string",
                                            "example": "octocat/Hello-World"
                                          },
                                          "git_commits_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                          },
                                          "git_refs_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                          },
                                          "git_tags_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                          },
                                          "git_url": {
                                            "type": "string",
                                            "example": "git:github.com/octocat/Hello-World.git"
                                          },
                                          "has_downloads": {
                                            "description": "Whether downloads are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_issues": {
                                            "description": "Whether issues are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_pages": {
                                            "type": "boolean"
                                          },
                                          "has_projects": {
                                            "description": "Whether projects are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_wiki": {
                                            "description": "Whether the wiki is enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "homepage": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "https://github.com"
                                          },
                                          "hooks_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat/Hello-World"
                                          },
                                          "id": {
                                            "description": "Unique identifier of the repository",
                                            "type": "integer",
                                            "example": 42
                                          },
                                          "is_template": {
                                            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": false
                                          },
                                          "issue_comment_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                          },
                                          "issue_events_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                          },
                                          "issues_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                          },
                                          "keys_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                          },
                                          "labels_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                          },
                                          "language": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "languages_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                          },
                                          "license": {
                                            "nullable": true,
                                            "allOf": [
                                              {
                                                "description": "License Simple",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "name",
                                                  "url",
                                                  "spdx_id",
                                                  "node_id"
                                                ],
                                                "properties": {
                                                  "html_url": {
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "key": {
                                                    "type": "string",
                                                    "example": "mit"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "example": "MIT License"
                                                  },
                                                  "node_id": {
                                                    "type": "string",
                                                    "example": "MDc6TGljZW5zZW1pdA=="
                                                  },
                                                  "spdx_id": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "example": "MIT"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "nullable": true,
                                                    "example": "https://api.github.com/licenses/mit"
                                                  }
                                                },
                                                "title": "License Simple"
                                              }
                                            ]
                                          },
                                          "master_branch": {
                                            "type": "string"
                                          },
                                          "merges_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                          },
                                          "milestones_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                          },
                                          "mirror_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "git:git.example.com/octocat/Hello-World"
                                          },
                                          "name": {
                                            "description": "The name of the repository.",
                                            "type": "string",
                                            "example": "Team Environment"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                          },
                                          "notifications_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                          },
                                          "open_issues": {
                                            "type": "integer"
                                          },
                                          "open_issues_count": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "organization": {
                                            "nullable": true,
                                            "allOf": [
                                              {
                                                "description": "Simple User",
                                                "type": "object",
                                                "required": [
                                                  "avatar_url",
                                                  "events_url",
                                                  "followers_url",
                                                  "following_url",
                                                  "gists_url",
                                                  "gravatar_id",
                                                  "html_url",
                                                  "id",
                                                  "node_id",
                                                  "login",
                                                  "organizations_url",
                                                  "received_events_url",
                                                  "repos_url",
                                                  "site_admin",
                                                  "starred_url",
                                                  "subscriptions_url",
                                                  "type",
                                                  "url"
                                                ],
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                                  },
                                                  "email": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "events_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                                  },
                                                  "followers_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/followers"
                                                  },
                                                  "following_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                                  },
                                                  "gists_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                                  },
                                                  "html_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://github.com/octocat"
                                                  },
                                                  "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                  },
                                                  "login": {
                                                    "type": "string",
                                                    "example": "octocat"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "node_id": {
                                                    "type": "string",
                                                    "example": "MDQ6VXNlcjE="
                                                  },
                                                  "organizations_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/orgs"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/received_events"
                                                  },
                                                  "repos_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/repos"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_at": {
                                                    "type": "string",
                                                    "example": "\"2020-07-09T00:17:55Z\""
                                                  },
                                                  "starred_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "example": "User"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat"
                                                  }
                                                },
                                                "nullable": true,
                                                "title": "Simple User"
                                              }
                                            ]
                                          },
                                          "owner": {
                                            "description": "Simple User",
                                            "type": "object",
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/images/error/octocat_happy.gif"
                                              },
                                              "email": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "events_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                                              },
                                              "followers_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/followers"
                                              },
                                              "following_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                                              },
                                              "gists_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                              },
                                              "gravatar_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "41d064eb2195891e12d0413f63227ea7"
                                              },
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/octocat"
                                              },
                                              "id": {
                                                "type": "integer",
                                                "example": 1
                                              },
                                              "login": {
                                                "type": "string",
                                                "example": "octocat"
                                              },
                                              "name": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDQ6VXNlcjE="
                                              },
                                              "organizations_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/orgs"
                                              },
                                              "received_events_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/received_events"
                                              },
                                              "repos_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/repos"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "type": "string",
                                                "example": "\"2020-07-09T00:17:55Z\""
                                              },
                                              "starred_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                              },
                                              "subscriptions_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/subscriptions"
                                              },
                                              "type": {
                                                "type": "string",
                                                "example": "User"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat"
                                              }
                                            },
                                            "nullable": true,
                                            "title": "Simple User"
                                          },
                                          "permissions": {
                                            "type": "object",
                                            "required": [
                                              "admin",
                                              "pull",
                                              "push"
                                            ],
                                            "properties": {
                                              "admin": {
                                                "type": "boolean"
                                              },
                                              "maintain": {
                                                "type": "boolean"
                                              },
                                              "pull": {
                                                "type": "boolean"
                                              },
                                              "push": {
                                                "type": "boolean"
                                              },
                                              "triage": {
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "private": {
                                            "description": "Whether the repository is private or public.",
                                            "type": "boolean",
                                            "default": false
                                          },
                                          "pulls_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                          },
                                          "pushed_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:06:43Z"
                                          },
                                          "releases_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                          },
                                          "size": {
                                            "type": "integer",
                                            "example": 108
                                          },
                                          "ssh_url": {
                                            "type": "string",
                                            "example": "git@github.com:octocat/Hello-World.git"
                                          },
                                          "stargazers_count": {
                                            "type": "integer",
                                            "example": 80
                                          },
                                          "stargazers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:42Z\""
                                          },
                                          "statuses_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                          },
                                          "subscription_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                          },
                                          "svn_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://svn.github.com/octocat/Hello-World"
                                          },
                                          "tags_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                          },
                                          "teams_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                          },
                                          "temp_clone_token": {
                                            "type": "string"
                                          },
                                          "template_repository": {
                                            "type": "object",
                                            "properties": {
                                              "allow_merge_commit": {
                                                "type": "boolean"
                                              },
                                              "allow_rebase_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_squash_merge": {
                                                "type": "boolean"
                                              },
                                              "archive_url": {
                                                "type": "string"
                                              },
                                              "archived": {
                                                "type": "boolean"
                                              },
                                              "assignees_url": {
                                                "type": "string"
                                              },
                                              "blobs_url": {
                                                "type": "string"
                                              },
                                              "branches_url": {
                                                "type": "string"
                                              },
                                              "clone_url": {
                                                "type": "string"
                                              },
                                              "collaborators_url": {
                                                "type": "string"
                                              },
                                              "comments_url": {
                                                "type": "string"
                                              },
                                              "commits_url": {
                                                "type": "string"
                                              },
                                              "compare_url": {
                                                "type": "string"
                                              },
                                              "contents_url": {
                                                "type": "string"
                                              },
                                              "contributors_url": {
                                                "type": "string"
                                              },
                                              "created_at": {
                                                "type": "string"
                                              },
                                              "default_branch": {
                                                "type": "string"
                                              },
                                              "delete_branch_on_merge": {
                                                "type": "boolean"
                                              },
                                              "deployments_url": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "disabled": {
                                                "type": "boolean"
                                              },
                                              "downloads_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "fork": {
                                                "type": "boolean"
                                              },
                                              "forks_count": {
                                                "type": "integer"
                                              },
                                              "forks_url": {
                                                "type": "string"
                                              },
                                              "full_name": {
                                                "type": "string"
                                              },
                                              "git_commits_url": {
                                                "type": "string"
                                              },
                                              "git_refs_url": {
                                                "type": "string"
                                              },
                                              "git_tags_url": {
                                                "type": "string"
                                              },
                                              "git_url": {
                                                "type": "string"
                                              },
                                              "has_downloads": {
                                                "type": "boolean"
                                              },
                                              "has_issues": {
                                                "type": "boolean"
                                              },
                                              "has_pages": {
                                                "type": "boolean"
                                              },
                                              "has_projects": {
                                                "type": "boolean"
                                              },
                                              "has_wiki": {
                                                "type": "boolean"
                                              },
                                              "homepage": {
                                                "type": "string"
                                              },
                                              "hooks_url": {
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "integer"
                                              },
                                              "is_template": {
                                                "type": "boolean"
                                              },
                                              "issue_comment_url": {
                                                "type": "string"
                                              },
                                              "issue_events_url": {
                                                "type": "string"
                                              },
                                              "issues_url": {
                                                "type": "string"
                                              },
                                              "keys_url": {
                                                "type": "string"
                                              },
                                              "labels_url": {
                                                "type": "string"
                                              },
                                              "language": {
                                                "type": "string"
                                              },
                                              "languages_url": {
                                                "type": "string"
                                              },
                                              "merges_url": {
                                                "type": "string"
                                              },
                                              "milestones_url": {
                                                "type": "string"
                                              },
                                              "mirror_url": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "network_count": {
                                                "type": "integer"
                                              },
                                              "node_id": {
                                                "type": "string"
                                              },
                                              "notifications_url": {
                                                "type": "string"
                                              },
                                              "open_issues_count": {
                                                "type": "integer"
                                              },
                                              "owner": {
                                                "type": "object",
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "type": "integer"
                                                  },
                                                  "login": {
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_url": {
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "permissions": {
                                                "type": "object",
                                                "properties": {
                                                  "admin": {
                                                    "type": "boolean"
                                                  },
                                                  "maintain": {
                                                    "type": "boolean"
                                                  },
                                                  "pull": {
                                                    "type": "boolean"
                                                  },
                                                  "push": {
                                                    "type": "boolean"
                                                  },
                                                  "triage": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "private": {
                                                "type": "boolean"
                                              },
                                              "pulls_url": {
                                                "type": "string"
                                              },
                                              "pushed_at": {
                                                "type": "string"
                                              },
                                              "releases_url": {
                                                "type": "string"
                                              },
                                              "size": {
                                                "type": "integer"
                                              },
                                              "ssh_url": {
                                                "type": "string"
                                              },
                                              "stargazers_count": {
                                                "type": "integer"
                                              },
                                              "stargazers_url": {
                                                "type": "string"
                                              },
                                              "statuses_url": {
                                                "type": "string"
                                              },
                                              "subscribers_count": {
                                                "type": "integer"
                                              },
                                              "subscribers_url": {
                                                "type": "string"
                                              },
                                              "subscription_url": {
                                                "type": "string"
                                              },
                                              "svn_url": {
                                                "type": "string"
                                              },
                                              "tags_url": {
                                                "type": "string"
                                              },
                                              "teams_url": {
                                                "type": "string"
                                              },
                                              "temp_clone_token": {
                                                "type": "string"
                                              },
                                              "topics": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "trees_url": {
                                                "type": "string"
                                              },
                                              "updated_at": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              },
                                              "visibility": {
                                                "type": "string"
                                              },
                                              "watchers_count": {
                                                "type": "integer"
                                              }
                                            },
                                            "nullable": true
                                          },
                                          "topics": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "trees_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                          },
                                          "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:14:43Z"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/repos/octocat/Hello-World"
                                          },
                                          "visibility": {
                                            "description": "The repository visibility: public, private, or internal.",
                                            "type": "string",
                                            "default": "public"
                                          },
                                          "watchers": {
                                            "type": "integer"
                                          },
                                          "watchers_count": {
                                            "type": "integer",
                                            "example": 80
                                          }
                                        },
                                        "title": "Repository"
                                      }
                                    ]
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:14:43Z"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/repos/octocat/Hello-World"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "title": "Minimal Repository"
                              },
                              "rerun_url": {
                                "description": "The URL to rerun the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun"
                              },
                              "run_number": {
                                "description": "The auto incrementing run number for the workflow run.",
                                "type": "integer",
                                "example": 106
                              },
                              "status": {
                                "type": "string",
                                "nullable": true,
                                "example": "completed"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "url": {
                                "description": "The URL to the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5"
                              },
                              "workflow_id": {
                                "description": "The ID of the parent workflow.",
                                "type": "integer",
                                "example": 5
                              },
                              "workflow_url": {
                                "description": "The URL to the workflow.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml"
                              }
                            },
                            "title": "Workflow Run"
                          }
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "total_count": 1,
                          "workflow_runs": [
                            {
                              "artifacts_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts",
                              "cancel_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel",
                              "check_suite_url": "https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374",
                              "conclusion": null,
                              "created_at": "2020-01-22T19:33:08Z",
                              "event": "push",
                              "head_branch": "master",
                              "head_commit": {
                                "author": {
                                  "email": "octocat@github.com",
                                  "name": "Octo Cat"
                                },
                                "committer": {
                                  "email": "noreply@github.com",
                                  "name": "GitHub"
                                },
                                "id": "acb5820ced9479c074f688cc328bf03f341a511d",
                                "message": "Create linter.yaml",
                                "timestamp": "2020-01-22T19:33:05Z",
                                "tree_id": "d23f6eedb1e1b9610bbc754ddb5197bfe7271223"
                              },
                              "head_repository": {
                                "archive_url": "https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}",
                                "assignees_url": "https://api.github.com/repos/octo-org/octo-repo/assignees{/user}",
                                "blobs_url": "https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}",
                                "branches_url": "https://api.github.com/repos/octo-org/octo-repo/branches{/branch}",
                                "collaborators_url": "https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}",
                                "comments_url": "https://api.github.com/repos/octo-org/octo-repo/comments{/number}",
                                "commits_url": "https://api.github.com/repos/octo-org/octo-repo/commits{/sha}",
                                "compare_url": "https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}",
                                "contents_url": "https://api.github.com/repos/octo-org/octo-repo/contents/{+path}",
                                "contributors_url": "https://api.github.com/repos/octo-org/octo-repo/contributors",
                                "deployments_url": "https://api.github.com/repos/octo-org/octo-repo/deployments",
                                "description": null,
                                "downloads_url": "https://api.github.com/repos/octo-org/octo-repo/downloads",
                                "events_url": "https://api.github.com/repos/octo-org/octo-repo/events",
                                "fork": false,
                                "forks_url": "https://api.github.com/repos/octo-org/octo-repo/forks",
                                "full_name": "octo-org/octo-repo",
                                "git_commits_url": "https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}",
                                "git_refs_url": "https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}",
                                "git_tags_url": "https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}",
                                "hooks_url": "https://api.github.com/repos/octo-org/octo-repo/hooks",
                                "html_url": "https://github.com/octo-org/octo-repo",
                                "id": 217723378,
                                "issue_comment_url": "https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}",
                                "issue_events_url": "https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}",
                                "issues_url": "https://api.github.com/repos/octo-org/octo-repo/issues{/number}",
                                "keys_url": "https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}",
                                "labels_url": "https://api.github.com/repos/octo-org/octo-repo/labels{/name}",
                                "languages_url": "https://api.github.com/repos/octo-org/octo-repo/languages",
                                "merges_url": "https://api.github.com/repos/octo-org/octo-repo/merges",
                                "milestones_url": "https://api.github.com/repos/octo-org/octo-repo/milestones{/number}",
                                "name": "octo-repo",
                                "node_id": "MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=",
                                "notifications_url": "https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}",
                                "owner": {
                                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                  "followers_url": "https://api.github.com/users/octocat/followers",
                                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "gravatar_id": "",
                                  "html_url": "https://github.com/octocat",
                                  "id": 1,
                                  "login": "octocat",
                                  "node_id": "MDQ6VXNlcjE=",
                                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                                  "repos_url": "https://api.github.com/users/octocat/repos",
                                  "site_admin": false,
                                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                  "type": "User",
                                  "url": "https://api.github.com/users/octocat"
                                },
                                "private": true,
                                "pulls_url": "https://api.github.com/repos/octo-org/octo-repo/pulls{/number}",
                                "releases_url": "https://api.github.com/repos/octo-org/octo-repo/releases{/id}",
                                "stargazers_url": "https://api.github.com/repos/octo-org/octo-repo/stargazers",
                                "statuses_url": "https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}",
                                "subscribers_url": "https://api.github.com/repos/octo-org/octo-repo/subscribers",
                                "subscription_url": "https://api.github.com/repos/octo-org/octo-repo/subscription",
                                "tags_url": "https://api.github.com/repos/octo-org/octo-repo/tags",
                                "teams_url": "https://api.github.com/repos/octo-org/octo-repo/teams",
                                "trees_url": "https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}",
                                "url": "https://api.github.com/repos/octo-org/octo-repo"
                              },
                              "head_sha": "acb5820ced9479c074f688cc328bf03f341a511d",
                              "html_url": "https://github.com/octo-org/octo-repo/actions/runs/30433642",
                              "id": 30433642,
                              "jobs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs",
                              "logs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs",
                              "name": "Build",
                              "node_id": "MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==",
                              "pull_requests": [],
                              "repository": {
                                "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                                "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                                "description": "This your first repo!",
                                "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                                "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                                "fork": false,
                                "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                                "full_name": "octocat/Hello-World",
                                "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "git_url": "git:github.com/octocat/Hello-World.git",
                                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "html_url": "https://github.com/octocat/Hello-World",
                                "id": 1296269,
                                "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                                "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                                "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "name": "Hello-World",
                                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "owner": {
                                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                  "followers_url": "https://api.github.com/users/octocat/followers",
                                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "gravatar_id": "",
                                  "html_url": "https://github.com/octocat",
                                  "id": 1,
                                  "login": "octocat",
                                  "node_id": "MDQ6VXNlcjE=",
                                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                                  "repos_url": "https://api.github.com/users/octocat/repos",
                                  "site_admin": false,
                                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                  "type": "User",
                                  "url": "https://api.github.com/users/octocat"
                                },
                                "private": false,
                                "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "ssh_url": "git@github.com:octocat/Hello-World.git",
                                "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                                "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                                "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                                "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                                "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "url": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "rerun_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun",
                              "run_number": 562,
                              "status": "queued",
                              "updated_at": "2020-01-22T19:33:08Z",
                              "url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642",
                              "workflow_id": 159038,
                              "workflow_url": "https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get a workflow run",
            "description": "Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-workflow-run"
            },
            "operationId": "actions/get-workflow-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "run_id",
                "description": "The id of the workflow run.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "An invocation of a workflow",
                      "type": "object",
                      "required": [
                        "id",
                        "node_id",
                        "head_branch",
                        "run_number",
                        "event",
                        "status",
                        "conclusion",
                        "head_sha",
                        "workflow_id",
                        "url",
                        "html_url",
                        "created_at",
                        "updated_at",
                        "head_commit",
                        "head_repository",
                        "repository",
                        "jobs_url",
                        "logs_url",
                        "check_suite_url",
                        "cancel_url",
                        "rerun_url",
                        "artifacts_url",
                        "workflow_url",
                        "pull_requests"
                      ],
                      "properties": {
                        "artifacts_url": {
                          "description": "The URL to the artifacts for the workflow run.",
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts"
                        },
                        "cancel_url": {
                          "description": "The URL to cancel the workflow run.",
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/cancel"
                        },
                        "check_suite_id": {
                          "description": "The ID of the associated check suite.",
                          "type": "integer",
                          "example": 42
                        },
                        "check_suite_node_id": {
                          "description": "The node ID of the associated check suite.",
                          "type": "string",
                          "example": "MDEwOkNoZWNrU3VpdGU0Mg=="
                        },
                        "check_suite_url": {
                          "description": "The URL to the associated check suite.",
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/check-suites/12"
                        },
                        "conclusion": {
                          "type": "string",
                          "nullable": true,
                          "example": "neutral"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "event": {
                          "type": "string",
                          "example": "push"
                        },
                        "head_branch": {
                          "type": "string",
                          "nullable": true,
                          "example": "master"
                        },
                        "head_commit": {
                          "nullable": true,
                          "allOf": [
                            {
                              "description": "Simple Commit",
                              "type": "object",
                              "required": [
                                "id",
                                "tree_id",
                                "message",
                                "timestamp",
                                "author",
                                "committer"
                              ],
                              "properties": {
                                "author": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "email"
                                  ],
                                  "properties": {
                                    "email": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "nullable": true
                                },
                                "committer": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "email"
                                  ],
                                  "properties": {
                                    "email": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "nullable": true
                                },
                                "id": {
                                  "type": "string"
                                },
                                "message": {
                                  "type": "string"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "tree_id": {
                                  "type": "string"
                                }
                              },
                              "title": "Simple Commit"
                            }
                          ]
                        },
                        "head_repository": {
                          "description": "Minimal Repository",
                          "type": "object",
                          "required": [
                            "archive_url",
                            "assignees_url",
                            "blobs_url",
                            "branches_url",
                            "collaborators_url",
                            "comments_url",
                            "commits_url",
                            "compare_url",
                            "contents_url",
                            "contributors_url",
                            "deployments_url",
                            "description",
                            "downloads_url",
                            "events_url",
                            "fork",
                            "forks_url",
                            "full_name",
                            "git_commits_url",
                            "git_refs_url",
                            "git_tags_url",
                            "hooks_url",
                            "html_url",
                            "id",
                            "node_id",
                            "issue_comment_url",
                            "issue_events_url",
                            "issues_url",
                            "keys_url",
                            "labels_url",
                            "languages_url",
                            "merges_url",
                            "milestones_url",
                            "name",
                            "notifications_url",
                            "owner",
                            "private",
                            "pulls_url",
                            "releases_url",
                            "stargazers_url",
                            "statuses_url",
                            "subscribers_url",
                            "subscription_url",
                            "tags_url",
                            "teams_url",
                            "trees_url",
                            "url"
                          ],
                          "properties": {
                            "archive_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                            },
                            "archived": {
                              "type": "boolean"
                            },
                            "assignees_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                            },
                            "blobs_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                            },
                            "branches_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                            },
                            "clone_url": {
                              "type": "string"
                            },
                            "code_of_conduct": {
                              "description": "Code Of Conduct",
                              "type": "object",
                              "required": [
                                "url",
                                "html_url",
                                "key",
                                "name"
                              ],
                              "properties": {
                                "body": {
                                  "type": "string",
                                  "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "nullable": true
                                },
                                "key": {
                                  "type": "string",
                                  "example": "contributor_covenant"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Contributor Covenant"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                                }
                              },
                              "title": "Code Of Conduct"
                            },
                            "collaborators_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                            },
                            "comments_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                            },
                            "commits_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                            },
                            "compare_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                            },
                            "contents_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                            },
                            "contributors_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true,
                              "example": "2011-01-26T19:01:12Z"
                            },
                            "default_branch": {
                              "type": "string"
                            },
                            "delete_branch_on_merge": {
                              "type": "boolean"
                            },
                            "deployments_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true,
                              "example": "This your first repo!"
                            },
                            "disabled": {
                              "type": "boolean"
                            },
                            "downloads_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                            },
                            "events_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/events"
                            },
                            "fork": {
                              "type": "boolean"
                            },
                            "forks": {
                              "type": "integer",
                              "example": 0
                            },
                            "forks_count": {
                              "type": "integer"
                            },
                            "forks_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                            },
                            "full_name": {
                              "type": "string",
                              "example": "octocat/Hello-World"
                            },
                            "git_commits_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                            },
                            "git_refs_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                            },
                            "git_tags_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                            },
                            "git_url": {
                              "type": "string"
                            },
                            "has_downloads": {
                              "type": "boolean"
                            },
                            "has_issues": {
                              "type": "boolean"
                            },
                            "has_pages": {
                              "type": "boolean"
                            },
                            "has_projects": {
                              "type": "boolean"
                            },
                            "has_wiki": {
                              "type": "boolean"
                            },
                            "homepage": {
                              "type": "string",
                              "nullable": true
                            },
                            "hooks_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                            },
                            "html_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://github.com/octocat/Hello-World"
                            },
                            "id": {
                              "type": "integer",
                              "example": 1296269
                            },
                            "is_template": {
                              "type": "boolean"
                            },
                            "issue_comment_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                            },
                            "issue_events_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                            },
                            "issues_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                            },
                            "keys_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                            },
                            "labels_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                            },
                            "language": {
                              "type": "string",
                              "nullable": true
                            },
                            "languages_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                            },
                            "license": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "node_id": {
                                  "type": "string"
                                },
                                "spdx_id": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                }
                              },
                              "nullable": true
                            },
                            "merges_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                            },
                            "milestones_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                            },
                            "mirror_url": {
                              "type": "string",
                              "nullable": true
                            },
                            "name": {
                              "type": "string",
                              "example": "Hello-World"
                            },
                            "network_count": {
                              "type": "integer"
                            },
                            "node_id": {
                              "type": "string",
                              "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                            },
                            "notifications_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                            },
                            "open_issues": {
                              "type": "integer",
                              "example": 0
                            },
                            "open_issues_count": {
                              "type": "integer"
                            },
                            "owner": {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            },
                            "permissions": {
                              "type": "object",
                              "properties": {
                                "admin": {
                                  "type": "boolean"
                                },
                                "maintain": {
                                  "type": "boolean"
                                },
                                "pull": {
                                  "type": "boolean"
                                },
                                "push": {
                                  "type": "boolean"
                                },
                                "triage": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "private": {
                              "type": "boolean"
                            },
                            "pulls_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                            },
                            "pushed_at": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true,
                              "example": "2011-01-26T19:06:43Z"
                            },
                            "releases_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                            },
                            "size": {
                              "type": "integer"
                            },
                            "ssh_url": {
                              "type": "string"
                            },
                            "stargazers_count": {
                              "type": "integer"
                            },
                            "stargazers_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                            },
                            "statuses_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                            },
                            "subscribers_count": {
                              "type": "integer"
                            },
                            "subscribers_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                            },
                            "subscription_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                            },
                            "svn_url": {
                              "type": "string"
                            },
                            "tags_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                            },
                            "teams_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                            },
                            "temp_clone_token": {
                              "type": "string"
                            },
                            "template_repository": {
                              "type": "object",
                              "nullable": true,
                              "allOf": [
                                {
                                  "description": "A git repository",
                                  "type": "object",
                                  "required": [
                                    "archive_url",
                                    "assignees_url",
                                    "blobs_url",
                                    "branches_url",
                                    "collaborators_url",
                                    "comments_url",
                                    "commits_url",
                                    "compare_url",
                                    "contents_url",
                                    "contributors_url",
                                    "deployments_url",
                                    "description",
                                    "downloads_url",
                                    "events_url",
                                    "fork",
                                    "forks_url",
                                    "full_name",
                                    "git_commits_url",
                                    "git_refs_url",
                                    "git_tags_url",
                                    "hooks_url",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "issue_comment_url",
                                    "issue_events_url",
                                    "issues_url",
                                    "keys_url",
                                    "labels_url",
                                    "languages_url",
                                    "merges_url",
                                    "milestones_url",
                                    "name",
                                    "notifications_url",
                                    "owner",
                                    "private",
                                    "pulls_url",
                                    "releases_url",
                                    "stargazers_url",
                                    "statuses_url",
                                    "subscribers_url",
                                    "subscription_url",
                                    "tags_url",
                                    "teams_url",
                                    "trees_url",
                                    "url",
                                    "clone_url",
                                    "default_branch",
                                    "forks",
                                    "forks_count",
                                    "git_url",
                                    "has_downloads",
                                    "has_issues",
                                    "has_projects",
                                    "has_wiki",
                                    "has_pages",
                                    "homepage",
                                    "language",
                                    "archived",
                                    "disabled",
                                    "mirror_url",
                                    "open_issues",
                                    "open_issues_count",
                                    "license",
                                    "pushed_at",
                                    "size",
                                    "ssh_url",
                                    "stargazers_count",
                                    "svn_url",
                                    "watchers",
                                    "watchers_count",
                                    "created_at",
                                    "updated_at"
                                  ],
                                  "properties": {
                                    "allow_merge_commit": {
                                      "description": "Whether to allow merge commits for pull requests.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "allow_rebase_merge": {
                                      "description": "Whether to allow rebase merges for pull requests.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "allow_squash_merge": {
                                      "description": "Whether to allow squash merges for pull requests.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "archive_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                    },
                                    "archived": {
                                      "description": "Whether the repository is archived.",
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "assignees_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                    },
                                    "blobs_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                    },
                                    "branches_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                    },
                                    "clone_url": {
                                      "type": "string",
                                      "example": "https://github.com/octocat/Hello-World.git"
                                    },
                                    "collaborators_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                    },
                                    "comments_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                    },
                                    "commits_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                    },
                                    "compare_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                    },
                                    "contents_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                    },
                                    "contributors_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true,
                                      "example": "2011-01-26T19:01:12Z"
                                    },
                                    "default_branch": {
                                      "description": "The default branch of the repository.",
                                      "type": "string",
                                      "example": "master"
                                    },
                                    "delete_branch_on_merge": {
                                      "description": "Whether to delete head branches when pull requests are merged",
                                      "type": "boolean",
                                      "example": false,
                                      "default": false
                                    },
                                    "deployments_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                    },
                                    "description": {
                                      "type": "string",
                                      "nullable": true,
                                      "example": "This your first repo!"
                                    },
                                    "disabled": {
                                      "description": "Returns whether or not this repository disabled.",
                                      "type": "boolean"
                                    },
                                    "downloads_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                    },
                                    "events_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                    },
                                    "fork": {
                                      "type": "boolean"
                                    },
                                    "forks": {
                                      "type": "integer"
                                    },
                                    "forks_count": {
                                      "type": "integer",
                                      "example": 9
                                    },
                                    "forks_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                    },
                                    "full_name": {
                                      "type": "string",
                                      "example": "octocat/Hello-World"
                                    },
                                    "git_commits_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                    },
                                    "git_refs_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                    },
                                    "git_tags_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                    },
                                    "git_url": {
                                      "type": "string",
                                      "example": "git:github.com/octocat/Hello-World.git"
                                    },
                                    "has_downloads": {
                                      "description": "Whether downloads are enabled.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "has_issues": {
                                      "description": "Whether issues are enabled.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "has_pages": {
                                      "type": "boolean"
                                    },
                                    "has_projects": {
                                      "description": "Whether projects are enabled.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "has_wiki": {
                                      "description": "Whether the wiki is enabled.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "homepage": {
                                      "type": "string",
                                      "format": "uri",
                                      "nullable": true,
                                      "example": "https://github.com"
                                    },
                                    "hooks_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                    },
                                    "html_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://github.com/octocat/Hello-World"
                                    },
                                    "id": {
                                      "description": "Unique identifier of the repository",
                                      "type": "integer",
                                      "example": 42
                                    },
                                    "is_template": {
                                      "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": false
                                    },
                                    "issue_comment_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                    },
                                    "issue_events_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                    },
                                    "issues_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                    },
                                    "keys_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                    },
                                    "labels_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                    },
                                    "language": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "languages_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                    },
                                    "license": {
                                      "nullable": true,
                                      "allOf": [
                                        {
                                          "description": "License Simple",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "name",
                                            "url",
                                            "spdx_id",
                                            "node_id"
                                          ],
                                          "properties": {
                                            "html_url": {
                                              "type": "string",
                                              "format": "uri"
                                            },
                                            "key": {
                                              "type": "string",
                                              "example": "mit"
                                            },
                                            "name": {
                                              "type": "string",
                                              "example": "MIT License"
                                            },
                                            "node_id": {
                                              "type": "string",
                                              "example": "MDc6TGljZW5zZW1pdA=="
                                            },
                                            "spdx_id": {
                                              "type": "string",
                                              "nullable": true,
                                              "example": "MIT"
                                            },
                                            "url": {
                                              "type": "string",
                                              "format": "uri",
                                              "nullable": true,
                                              "example": "https://api.github.com/licenses/mit"
                                            }
                                          },
                                          "title": "License Simple"
                                        }
                                      ]
                                    },
                                    "master_branch": {
                                      "type": "string"
                                    },
                                    "merges_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                    },
                                    "milestones_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                    },
                                    "mirror_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "nullable": true,
                                      "example": "git:git.example.com/octocat/Hello-World"
                                    },
                                    "name": {
                                      "description": "The name of the repository.",
                                      "type": "string",
                                      "example": "Team Environment"
                                    },
                                    "network_count": {
                                      "type": "integer"
                                    },
                                    "node_id": {
                                      "type": "string",
                                      "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                    },
                                    "notifications_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                    },
                                    "open_issues": {
                                      "type": "integer"
                                    },
                                    "open_issues_count": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "organization": {
                                      "nullable": true,
                                      "allOf": [
                                        {
                                          "description": "Simple User",
                                          "type": "object",
                                          "required": [
                                            "avatar_url",
                                            "events_url",
                                            "followers_url",
                                            "following_url",
                                            "gists_url",
                                            "gravatar_id",
                                            "html_url",
                                            "id",
                                            "node_id",
                                            "login",
                                            "organizations_url",
                                            "received_events_url",
                                            "repos_url",
                                            "site_admin",
                                            "starred_url",
                                            "subscriptions_url",
                                            "type",
                                            "url"
                                          ],
                                          "properties": {
                                            "avatar_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://github.com/images/error/octocat_happy.gif"
                                            },
                                            "email": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "events_url": {
                                              "type": "string",
                                              "example": "https://api.github.com/users/octocat/events{/privacy}"
                                            },
                                            "followers_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/followers"
                                            },
                                            "following_url": {
                                              "type": "string",
                                              "example": "https://api.github.com/users/octocat/following{/other_user}"
                                            },
                                            "gists_url": {
                                              "type": "string",
                                              "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                            },
                                            "gravatar_id": {
                                              "type": "string",
                                              "nullable": true,
                                              "example": "41d064eb2195891e12d0413f63227ea7"
                                            },
                                            "html_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://github.com/octocat"
                                            },
                                            "id": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "login": {
                                              "type": "string",
                                              "example": "octocat"
                                            },
                                            "name": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "node_id": {
                                              "type": "string",
                                              "example": "MDQ6VXNlcjE="
                                            },
                                            "organizations_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/orgs"
                                            },
                                            "received_events_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/received_events"
                                            },
                                            "repos_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/repos"
                                            },
                                            "site_admin": {
                                              "type": "boolean"
                                            },
                                            "starred_at": {
                                              "type": "string",
                                              "example": "\"2020-07-09T00:17:55Z\""
                                            },
                                            "starred_url": {
                                              "type": "string",
                                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                            },
                                            "subscriptions_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/subscriptions"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "User"
                                            },
                                            "url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat"
                                            }
                                          },
                                          "nullable": true,
                                          "title": "Simple User"
                                        }
                                      ]
                                    },
                                    "owner": {
                                      "description": "Simple User",
                                      "type": "object",
                                      "required": [
                                        "avatar_url",
                                        "events_url",
                                        "followers_url",
                                        "following_url",
                                        "gists_url",
                                        "gravatar_id",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "login",
                                        "organizations_url",
                                        "received_events_url",
                                        "repos_url",
                                        "site_admin",
                                        "starred_url",
                                        "subscriptions_url",
                                        "type",
                                        "url"
                                      ],
                                      "properties": {
                                        "avatar_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://github.com/images/error/octocat_happy.gif"
                                        },
                                        "email": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "events_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/events{/privacy}"
                                        },
                                        "followers_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/followers"
                                        },
                                        "following_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/following{/other_user}"
                                        },
                                        "gists_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                        },
                                        "gravatar_id": {
                                          "type": "string",
                                          "nullable": true,
                                          "example": "41d064eb2195891e12d0413f63227ea7"
                                        },
                                        "html_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://github.com/octocat"
                                        },
                                        "id": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "login": {
                                          "type": "string",
                                          "example": "octocat"
                                        },
                                        "name": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "node_id": {
                                          "type": "string",
                                          "example": "MDQ6VXNlcjE="
                                        },
                                        "organizations_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/orgs"
                                        },
                                        "received_events_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/received_events"
                                        },
                                        "repos_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/repos"
                                        },
                                        "site_admin": {
                                          "type": "boolean"
                                        },
                                        "starred_at": {
                                          "type": "string",
                                          "example": "\"2020-07-09T00:17:55Z\""
                                        },
                                        "starred_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                        },
                                        "subscriptions_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/subscriptions"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "User"
                                        },
                                        "url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat"
                                        }
                                      },
                                      "nullable": true,
                                      "title": "Simple User"
                                    },
                                    "permissions": {
                                      "type": "object",
                                      "required": [
                                        "admin",
                                        "pull",
                                        "push"
                                      ],
                                      "properties": {
                                        "admin": {
                                          "type": "boolean"
                                        },
                                        "maintain": {
                                          "type": "boolean"
                                        },
                                        "pull": {
                                          "type": "boolean"
                                        },
                                        "push": {
                                          "type": "boolean"
                                        },
                                        "triage": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "private": {
                                      "description": "Whether the repository is private or public.",
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "pulls_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                    },
                                    "pushed_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true,
                                      "example": "2011-01-26T19:06:43Z"
                                    },
                                    "releases_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                    },
                                    "size": {
                                      "type": "integer",
                                      "example": 108
                                    },
                                    "ssh_url": {
                                      "type": "string",
                                      "example": "git@github.com:octocat/Hello-World.git"
                                    },
                                    "stargazers_count": {
                                      "type": "integer",
                                      "example": 80
                                    },
                                    "stargazers_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                    },
                                    "starred_at": {
                                      "type": "string",
                                      "example": "\"2020-07-09T00:17:42Z\""
                                    },
                                    "statuses_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                    },
                                    "subscribers_count": {
                                      "type": "integer"
                                    },
                                    "subscribers_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                    },
                                    "subscription_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                    },
                                    "svn_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://svn.github.com/octocat/Hello-World"
                                    },
                                    "tags_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                    },
                                    "teams_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                    },
                                    "temp_clone_token": {
                                      "type": "string"
                                    },
                                    "template_repository": {
                                      "type": "object",
                                      "properties": {
                                        "allow_merge_commit": {
                                          "type": "boolean"
                                        },
                                        "allow_rebase_merge": {
                                          "type": "boolean"
                                        },
                                        "allow_squash_merge": {
                                          "type": "boolean"
                                        },
                                        "archive_url": {
                                          "type": "string"
                                        },
                                        "archived": {
                                          "type": "boolean"
                                        },
                                        "assignees_url": {
                                          "type": "string"
                                        },
                                        "blobs_url": {
                                          "type": "string"
                                        },
                                        "branches_url": {
                                          "type": "string"
                                        },
                                        "clone_url": {
                                          "type": "string"
                                        },
                                        "collaborators_url": {
                                          "type": "string"
                                        },
                                        "comments_url": {
                                          "type": "string"
                                        },
                                        "commits_url": {
                                          "type": "string"
                                        },
                                        "compare_url": {
                                          "type": "string"
                                        },
                                        "contents_url": {
                                          "type": "string"
                                        },
                                        "contributors_url": {
                                          "type": "string"
                                        },
                                        "created_at": {
                                          "type": "string"
                                        },
                                        "default_branch": {
                                          "type": "string"
                                        },
                                        "delete_branch_on_merge": {
                                          "type": "boolean"
                                        },
                                        "deployments_url": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        },
                                        "disabled": {
                                          "type": "boolean"
                                        },
                                        "downloads_url": {
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "type": "string"
                                        },
                                        "fork": {
                                          "type": "boolean"
                                        },
                                        "forks_count": {
                                          "type": "integer"
                                        },
                                        "forks_url": {
                                          "type": "string"
                                        },
                                        "full_name": {
                                          "type": "string"
                                        },
                                        "git_commits_url": {
                                          "type": "string"
                                        },
                                        "git_refs_url": {
                                          "type": "string"
                                        },
                                        "git_tags_url": {
                                          "type": "string"
                                        },
                                        "git_url": {
                                          "type": "string"
                                        },
                                        "has_downloads": {
                                          "type": "boolean"
                                        },
                                        "has_issues": {
                                          "type": "boolean"
                                        },
                                        "has_pages": {
                                          "type": "boolean"
                                        },
                                        "has_projects": {
                                          "type": "boolean"
                                        },
                                        "has_wiki": {
                                          "type": "boolean"
                                        },
                                        "homepage": {
                                          "type": "string"
                                        },
                                        "hooks_url": {
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "type": "string"
                                        },
                                        "id": {
                                          "type": "integer"
                                        },
                                        "is_template": {
                                          "type": "boolean"
                                        },
                                        "issue_comment_url": {
                                          "type": "string"
                                        },
                                        "issue_events_url": {
                                          "type": "string"
                                        },
                                        "issues_url": {
                                          "type": "string"
                                        },
                                        "keys_url": {
                                          "type": "string"
                                        },
                                        "labels_url": {
                                          "type": "string"
                                        },
                                        "language": {
                                          "type": "string"
                                        },
                                        "languages_url": {
                                          "type": "string"
                                        },
                                        "merges_url": {
                                          "type": "string"
                                        },
                                        "milestones_url": {
                                          "type": "string"
                                        },
                                        "mirror_url": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "network_count": {
                                          "type": "integer"
                                        },
                                        "node_id": {
                                          "type": "string"
                                        },
                                        "notifications_url": {
                                          "type": "string"
                                        },
                                        "open_issues_count": {
                                          "type": "integer"
                                        },
                                        "owner": {
                                          "type": "object",
                                          "properties": {
                                            "avatar_url": {
                                              "type": "string"
                                            },
                                            "events_url": {
                                              "type": "string"
                                            },
                                            "followers_url": {
                                              "type": "string"
                                            },
                                            "following_url": {
                                              "type": "string"
                                            },
                                            "gists_url": {
                                              "type": "string"
                                            },
                                            "gravatar_id": {
                                              "type": "string"
                                            },
                                            "html_url": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "integer"
                                            },
                                            "login": {
                                              "type": "string"
                                            },
                                            "node_id": {
                                              "type": "string"
                                            },
                                            "organizations_url": {
                                              "type": "string"
                                            },
                                            "received_events_url": {
                                              "type": "string"
                                            },
                                            "repos_url": {
                                              "type": "string"
                                            },
                                            "site_admin": {
                                              "type": "boolean"
                                            },
                                            "starred_url": {
                                              "type": "string"
                                            },
                                            "subscriptions_url": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "permissions": {
                                          "type": "object",
                                          "properties": {
                                            "admin": {
                                              "type": "boolean"
                                            },
                                            "maintain": {
                                              "type": "boolean"
                                            },
                                            "pull": {
                                              "type": "boolean"
                                            },
                                            "push": {
                                              "type": "boolean"
                                            },
                                            "triage": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pulls_url": {
                                          "type": "string"
                                        },
                                        "pushed_at": {
                                          "type": "string"
                                        },
                                        "releases_url": {
                                          "type": "string"
                                        },
                                        "size": {
                                          "type": "integer"
                                        },
                                        "ssh_url": {
                                          "type": "string"
                                        },
                                        "stargazers_count": {
                                          "type": "integer"
                                        },
                                        "stargazers_url": {
                                          "type": "string"
                                        },
                                        "statuses_url": {
                                          "type": "string"
                                        },
                                        "subscribers_count": {
                                          "type": "integer"
                                        },
                                        "subscribers_url": {
                                          "type": "string"
                                        },
                                        "subscription_url": {
                                          "type": "string"
                                        },
                                        "svn_url": {
                                          "type": "string"
                                        },
                                        "tags_url": {
                                          "type": "string"
                                        },
                                        "teams_url": {
                                          "type": "string"
                                        },
                                        "temp_clone_token": {
                                          "type": "string"
                                        },
                                        "topics": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "trees_url": {
                                          "type": "string"
                                        },
                                        "updated_at": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        },
                                        "visibility": {
                                          "type": "string"
                                        },
                                        "watchers_count": {
                                          "type": "integer"
                                        }
                                      },
                                      "nullable": true
                                    },
                                    "topics": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "trees_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true,
                                      "example": "2011-01-26T19:14:43Z"
                                    },
                                    "url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://api.github.com/repos/octocat/Hello-World"
                                    },
                                    "visibility": {
                                      "description": "The repository visibility: public, private, or internal.",
                                      "type": "string",
                                      "default": "public"
                                    },
                                    "watchers": {
                                      "type": "integer"
                                    },
                                    "watchers_count": {
                                      "type": "integer",
                                      "example": 80
                                    }
                                  },
                                  "title": "Repository"
                                }
                              ]
                            },
                            "topics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "trees_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true,
                              "example": "2011-01-26T19:14:43Z"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/repos/octocat/Hello-World"
                            },
                            "visibility": {
                              "type": "string"
                            },
                            "watchers": {
                              "type": "integer",
                              "example": 0
                            },
                            "watchers_count": {
                              "type": "integer"
                            }
                          },
                          "title": "Minimal Repository"
                        },
                        "head_repository_id": {
                          "type": "integer",
                          "example": 5
                        },
                        "head_sha": {
                          "description": "The SHA of the head commit that points to the version of the worflow being run.",
                          "type": "string",
                          "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"
                        },
                        "html_url": {
                          "type": "string",
                          "example": "https://github.com/github/hello-world/suites/4"
                        },
                        "id": {
                          "description": "The ID of the workflow run.",
                          "type": "integer",
                          "example": 5
                        },
                        "jobs_url": {
                          "description": "The URL to the jobs for the workflow run.",
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/jobs"
                        },
                        "logs_url": {
                          "description": "The URL to download the logs for the workflow run.",
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/logs"
                        },
                        "name": {
                          "description": "The name of the workflow run.",
                          "type": "string",
                          "nullable": true,
                          "example": "Build"
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDEwOkNoZWNrU3VpdGU1"
                        },
                        "pull_requests": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "id",
                              "number",
                              "url",
                              "head",
                              "base"
                            ],
                            "properties": {
                              "base": {
                                "type": "object",
                                "required": [
                                  "ref",
                                  "sha",
                                  "repo"
                                ],
                                "properties": {
                                  "ref": {
                                    "type": "string"
                                  },
                                  "repo": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "url",
                                      "name"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "sha": {
                                    "type": "string"
                                  }
                                }
                              },
                              "head": {
                                "type": "object",
                                "required": [
                                  "ref",
                                  "sha",
                                  "repo"
                                ],
                                "properties": {
                                  "ref": {
                                    "type": "string"
                                  },
                                  "repo": {
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "url",
                                      "name"
                                    ],
                                    "properties": {
                                      "id": {
                                        "type": "integer"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "sha": {
                                    "type": "string"
                                  }
                                }
                              },
                              "id": {
                                "type": "integer"
                              },
                              "number": {
                                "type": "integer"
                              },
                              "url": {
                                "type": "string"
                              }
                            },
                            "title": "Pull Request Minimal"
                          },
                          "nullable": true
                        },
                        "repository": {
                          "description": "Minimal Repository",
                          "type": "object",
                          "required": [
                            "archive_url",
                            "assignees_url",
                            "blobs_url",
                            "branches_url",
                            "collaborators_url",
                            "comments_url",
                            "commits_url",
                            "compare_url",
                            "contents_url",
                            "contributors_url",
                            "deployments_url",
                            "description",
                            "downloads_url",
                            "events_url",
                            "fork",
                            "forks_url",
                            "full_name",
                            "git_commits_url",
                            "git_refs_url",
                            "git_tags_url",
                            "hooks_url",
                            "html_url",
                            "id",
                            "node_id",
                            "issue_comment_url",
                            "issue_events_url",
                            "issues_url",
                            "keys_url",
                            "labels_url",
                            "languages_url",
                            "merges_url",
                            "milestones_url",
                            "name",
                            "notifications_url",
                            "owner",
                            "private",
                            "pulls_url",
                            "releases_url",
                            "stargazers_url",
                            "statuses_url",
                            "subscribers_url",
                            "subscription_url",
                            "tags_url",
                            "teams_url",
                            "trees_url",
                            "url"
                          ],
                          "properties": {
                            "archive_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                            },
                            "archived": {
                              "type": "boolean"
                            },
                            "assignees_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                            },
                            "blobs_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                            },
                            "branches_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                            },
                            "clone_url": {
                              "type": "string"
                            },
                            "code_of_conduct": {
                              "description": "Code Of Conduct",
                              "type": "object",
                              "required": [
                                "url",
                                "html_url",
                                "key",
                                "name"
                              ],
                              "properties": {
                                "body": {
                                  "type": "string",
                                  "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "nullable": true
                                },
                                "key": {
                                  "type": "string",
                                  "example": "contributor_covenant"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Contributor Covenant"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                                }
                              },
                              "title": "Code Of Conduct"
                            },
                            "collaborators_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                            },
                            "comments_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                            },
                            "commits_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                            },
                            "compare_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                            },
                            "contents_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                            },
                            "contributors_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true,
                              "example": "2011-01-26T19:01:12Z"
                            },
                            "default_branch": {
                              "type": "string"
                            },
                            "delete_branch_on_merge": {
                              "type": "boolean"
                            },
                            "deployments_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true,
                              "example": "This your first repo!"
                            },
                            "disabled": {
                              "type": "boolean"
                            },
                            "downloads_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                            },
                            "events_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/events"
                            },
                            "fork": {
                              "type": "boolean"
                            },
                            "forks": {
                              "type": "integer",
                              "example": 0
                            },
                            "forks_count": {
                              "type": "integer"
                            },
                            "forks_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                            },
                            "full_name": {
                              "type": "string",
                              "example": "octocat/Hello-World"
                            },
                            "git_commits_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                            },
                            "git_refs_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                            },
                            "git_tags_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                            },
                            "git_url": {
                              "type": "string"
                            },
                            "has_downloads": {
                              "type": "boolean"
                            },
                            "has_issues": {
                              "type": "boolean"
                            },
                            "has_pages": {
                              "type": "boolean"
                            },
                            "has_projects": {
                              "type": "boolean"
                            },
                            "has_wiki": {
                              "type": "boolean"
                            },
                            "homepage": {
                              "type": "string",
                              "nullable": true
                            },
                            "hooks_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                            },
                            "html_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://github.com/octocat/Hello-World"
                            },
                            "id": {
                              "type": "integer",
                              "example": 1296269
                            },
                            "is_template": {
                              "type": "boolean"
                            },
                            "issue_comment_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                            },
                            "issue_events_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                            },
                            "issues_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                            },
                            "keys_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                            },
                            "labels_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                            },
                            "language": {
                              "type": "string",
                              "nullable": true
                            },
                            "languages_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                            },
                            "license": {
                              "type": "object",
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "node_id": {
                                  "type": "string"
                                },
                                "spdx_id": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                }
                              },
                              "nullable": true
                            },
                            "merges_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                            },
                            "milestones_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                            },
                            "mirror_url": {
                              "type": "string",
                              "nullable": true
                            },
                            "name": {
                              "type": "string",
                              "example": "Hello-World"
                            },
                            "network_count": {
                              "type": "integer"
                            },
                            "node_id": {
                              "type": "string",
                              "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                            },
                            "notifications_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                            },
                            "open_issues": {
                              "type": "integer",
                              "example": 0
                            },
                            "open_issues_count": {
                              "type": "integer"
                            },
                            "owner": {
                              "description": "Simple User",
                              "type": "object",
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "properties": {
                                "avatar_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/images/error/octocat_happy.gif"
                                },
                                "email": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "events_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/events{/privacy}"
                                },
                                "followers_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/followers"
                                },
                                "following_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/following{/other_user}"
                                },
                                "gists_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                },
                                "gravatar_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "41d064eb2195891e12d0413f63227ea7"
                                },
                                "html_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://github.com/octocat"
                                },
                                "id": {
                                  "type": "integer",
                                  "example": 1
                                },
                                "login": {
                                  "type": "string",
                                  "example": "octocat"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "node_id": {
                                  "type": "string",
                                  "example": "MDQ6VXNlcjE="
                                },
                                "organizations_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/orgs"
                                },
                                "received_events_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/received_events"
                                },
                                "repos_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/repos"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "type": "string",
                                  "example": "\"2020-07-09T00:17:55Z\""
                                },
                                "starred_url": {
                                  "type": "string",
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                },
                                "subscriptions_url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat/subscriptions"
                                },
                                "type": {
                                  "type": "string",
                                  "example": "User"
                                },
                                "url": {
                                  "type": "string",
                                  "format": "uri",
                                  "example": "https://api.github.com/users/octocat"
                                }
                              },
                              "nullable": true,
                              "title": "Simple User"
                            },
                            "permissions": {
                              "type": "object",
                              "properties": {
                                "admin": {
                                  "type": "boolean"
                                },
                                "maintain": {
                                  "type": "boolean"
                                },
                                "pull": {
                                  "type": "boolean"
                                },
                                "push": {
                                  "type": "boolean"
                                },
                                "triage": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "private": {
                              "type": "boolean"
                            },
                            "pulls_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                            },
                            "pushed_at": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true,
                              "example": "2011-01-26T19:06:43Z"
                            },
                            "releases_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                            },
                            "size": {
                              "type": "integer"
                            },
                            "ssh_url": {
                              "type": "string"
                            },
                            "stargazers_count": {
                              "type": "integer"
                            },
                            "stargazers_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                            },
                            "statuses_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                            },
                            "subscribers_count": {
                              "type": "integer"
                            },
                            "subscribers_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                            },
                            "subscription_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                            },
                            "svn_url": {
                              "type": "string"
                            },
                            "tags_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                            },
                            "teams_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                            },
                            "temp_clone_token": {
                              "type": "string"
                            },
                            "template_repository": {
                              "type": "object",
                              "nullable": true,
                              "allOf": [
                                {
                                  "description": "A git repository",
                                  "type": "object",
                                  "required": [
                                    "archive_url",
                                    "assignees_url",
                                    "blobs_url",
                                    "branches_url",
                                    "collaborators_url",
                                    "comments_url",
                                    "commits_url",
                                    "compare_url",
                                    "contents_url",
                                    "contributors_url",
                                    "deployments_url",
                                    "description",
                                    "downloads_url",
                                    "events_url",
                                    "fork",
                                    "forks_url",
                                    "full_name",
                                    "git_commits_url",
                                    "git_refs_url",
                                    "git_tags_url",
                                    "hooks_url",
                                    "html_url",
                                    "id",
                                    "node_id",
                                    "issue_comment_url",
                                    "issue_events_url",
                                    "issues_url",
                                    "keys_url",
                                    "labels_url",
                                    "languages_url",
                                    "merges_url",
                                    "milestones_url",
                                    "name",
                                    "notifications_url",
                                    "owner",
                                    "private",
                                    "pulls_url",
                                    "releases_url",
                                    "stargazers_url",
                                    "statuses_url",
                                    "subscribers_url",
                                    "subscription_url",
                                    "tags_url",
                                    "teams_url",
                                    "trees_url",
                                    "url",
                                    "clone_url",
                                    "default_branch",
                                    "forks",
                                    "forks_count",
                                    "git_url",
                                    "has_downloads",
                                    "has_issues",
                                    "has_projects",
                                    "has_wiki",
                                    "has_pages",
                                    "homepage",
                                    "language",
                                    "archived",
                                    "disabled",
                                    "mirror_url",
                                    "open_issues",
                                    "open_issues_count",
                                    "license",
                                    "pushed_at",
                                    "size",
                                    "ssh_url",
                                    "stargazers_count",
                                    "svn_url",
                                    "watchers",
                                    "watchers_count",
                                    "created_at",
                                    "updated_at"
                                  ],
                                  "properties": {
                                    "allow_merge_commit": {
                                      "description": "Whether to allow merge commits for pull requests.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "allow_rebase_merge": {
                                      "description": "Whether to allow rebase merges for pull requests.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "allow_squash_merge": {
                                      "description": "Whether to allow squash merges for pull requests.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "archive_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                    },
                                    "archived": {
                                      "description": "Whether the repository is archived.",
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "assignees_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                    },
                                    "blobs_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                    },
                                    "branches_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                    },
                                    "clone_url": {
                                      "type": "string",
                                      "example": "https://github.com/octocat/Hello-World.git"
                                    },
                                    "collaborators_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                    },
                                    "comments_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                    },
                                    "commits_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                    },
                                    "compare_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                    },
                                    "contents_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                    },
                                    "contributors_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true,
                                      "example": "2011-01-26T19:01:12Z"
                                    },
                                    "default_branch": {
                                      "description": "The default branch of the repository.",
                                      "type": "string",
                                      "example": "master"
                                    },
                                    "delete_branch_on_merge": {
                                      "description": "Whether to delete head branches when pull requests are merged",
                                      "type": "boolean",
                                      "example": false,
                                      "default": false
                                    },
                                    "deployments_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                    },
                                    "description": {
                                      "type": "string",
                                      "nullable": true,
                                      "example": "This your first repo!"
                                    },
                                    "disabled": {
                                      "description": "Returns whether or not this repository disabled.",
                                      "type": "boolean"
                                    },
                                    "downloads_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                    },
                                    "events_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                    },
                                    "fork": {
                                      "type": "boolean"
                                    },
                                    "forks": {
                                      "type": "integer"
                                    },
                                    "forks_count": {
                                      "type": "integer",
                                      "example": 9
                                    },
                                    "forks_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                    },
                                    "full_name": {
                                      "type": "string",
                                      "example": "octocat/Hello-World"
                                    },
                                    "git_commits_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                    },
                                    "git_refs_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                    },
                                    "git_tags_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                    },
                                    "git_url": {
                                      "type": "string",
                                      "example": "git:github.com/octocat/Hello-World.git"
                                    },
                                    "has_downloads": {
                                      "description": "Whether downloads are enabled.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "has_issues": {
                                      "description": "Whether issues are enabled.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "has_pages": {
                                      "type": "boolean"
                                    },
                                    "has_projects": {
                                      "description": "Whether projects are enabled.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "has_wiki": {
                                      "description": "Whether the wiki is enabled.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": true
                                    },
                                    "homepage": {
                                      "type": "string",
                                      "format": "uri",
                                      "nullable": true,
                                      "example": "https://github.com"
                                    },
                                    "hooks_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                    },
                                    "html_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://github.com/octocat/Hello-World"
                                    },
                                    "id": {
                                      "description": "Unique identifier of the repository",
                                      "type": "integer",
                                      "example": 42
                                    },
                                    "is_template": {
                                      "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                      "type": "boolean",
                                      "example": true,
                                      "default": false
                                    },
                                    "issue_comment_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                    },
                                    "issue_events_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                    },
                                    "issues_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                    },
                                    "keys_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                    },
                                    "labels_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                    },
                                    "language": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "languages_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                    },
                                    "license": {
                                      "nullable": true,
                                      "allOf": [
                                        {
                                          "description": "License Simple",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "name",
                                            "url",
                                            "spdx_id",
                                            "node_id"
                                          ],
                                          "properties": {
                                            "html_url": {
                                              "type": "string",
                                              "format": "uri"
                                            },
                                            "key": {
                                              "type": "string",
                                              "example": "mit"
                                            },
                                            "name": {
                                              "type": "string",
                                              "example": "MIT License"
                                            },
                                            "node_id": {
                                              "type": "string",
                                              "example": "MDc6TGljZW5zZW1pdA=="
                                            },
                                            "spdx_id": {
                                              "type": "string",
                                              "nullable": true,
                                              "example": "MIT"
                                            },
                                            "url": {
                                              "type": "string",
                                              "format": "uri",
                                              "nullable": true,
                                              "example": "https://api.github.com/licenses/mit"
                                            }
                                          },
                                          "title": "License Simple"
                                        }
                                      ]
                                    },
                                    "master_branch": {
                                      "type": "string"
                                    },
                                    "merges_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                    },
                                    "milestones_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                    },
                                    "mirror_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "nullable": true,
                                      "example": "git:git.example.com/octocat/Hello-World"
                                    },
                                    "name": {
                                      "description": "The name of the repository.",
                                      "type": "string",
                                      "example": "Team Environment"
                                    },
                                    "network_count": {
                                      "type": "integer"
                                    },
                                    "node_id": {
                                      "type": "string",
                                      "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                    },
                                    "notifications_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                    },
                                    "open_issues": {
                                      "type": "integer"
                                    },
                                    "open_issues_count": {
                                      "type": "integer",
                                      "example": 0
                                    },
                                    "organization": {
                                      "nullable": true,
                                      "allOf": [
                                        {
                                          "description": "Simple User",
                                          "type": "object",
                                          "required": [
                                            "avatar_url",
                                            "events_url",
                                            "followers_url",
                                            "following_url",
                                            "gists_url",
                                            "gravatar_id",
                                            "html_url",
                                            "id",
                                            "node_id",
                                            "login",
                                            "organizations_url",
                                            "received_events_url",
                                            "repos_url",
                                            "site_admin",
                                            "starred_url",
                                            "subscriptions_url",
                                            "type",
                                            "url"
                                          ],
                                          "properties": {
                                            "avatar_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://github.com/images/error/octocat_happy.gif"
                                            },
                                            "email": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "events_url": {
                                              "type": "string",
                                              "example": "https://api.github.com/users/octocat/events{/privacy}"
                                            },
                                            "followers_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/followers"
                                            },
                                            "following_url": {
                                              "type": "string",
                                              "example": "https://api.github.com/users/octocat/following{/other_user}"
                                            },
                                            "gists_url": {
                                              "type": "string",
                                              "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                            },
                                            "gravatar_id": {
                                              "type": "string",
                                              "nullable": true,
                                              "example": "41d064eb2195891e12d0413f63227ea7"
                                            },
                                            "html_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://github.com/octocat"
                                            },
                                            "id": {
                                              "type": "integer",
                                              "example": 1
                                            },
                                            "login": {
                                              "type": "string",
                                              "example": "octocat"
                                            },
                                            "name": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "node_id": {
                                              "type": "string",
                                              "example": "MDQ6VXNlcjE="
                                            },
                                            "organizations_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/orgs"
                                            },
                                            "received_events_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/received_events"
                                            },
                                            "repos_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/repos"
                                            },
                                            "site_admin": {
                                              "type": "boolean"
                                            },
                                            "starred_at": {
                                              "type": "string",
                                              "example": "\"2020-07-09T00:17:55Z\""
                                            },
                                            "starred_url": {
                                              "type": "string",
                                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                            },
                                            "subscriptions_url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat/subscriptions"
                                            },
                                            "type": {
                                              "type": "string",
                                              "example": "User"
                                            },
                                            "url": {
                                              "type": "string",
                                              "format": "uri",
                                              "example": "https://api.github.com/users/octocat"
                                            }
                                          },
                                          "nullable": true,
                                          "title": "Simple User"
                                        }
                                      ]
                                    },
                                    "owner": {
                                      "description": "Simple User",
                                      "type": "object",
                                      "required": [
                                        "avatar_url",
                                        "events_url",
                                        "followers_url",
                                        "following_url",
                                        "gists_url",
                                        "gravatar_id",
                                        "html_url",
                                        "id",
                                        "node_id",
                                        "login",
                                        "organizations_url",
                                        "received_events_url",
                                        "repos_url",
                                        "site_admin",
                                        "starred_url",
                                        "subscriptions_url",
                                        "type",
                                        "url"
                                      ],
                                      "properties": {
                                        "avatar_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://github.com/images/error/octocat_happy.gif"
                                        },
                                        "email": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "events_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/events{/privacy}"
                                        },
                                        "followers_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/followers"
                                        },
                                        "following_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/following{/other_user}"
                                        },
                                        "gists_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                        },
                                        "gravatar_id": {
                                          "type": "string",
                                          "nullable": true,
                                          "example": "41d064eb2195891e12d0413f63227ea7"
                                        },
                                        "html_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://github.com/octocat"
                                        },
                                        "id": {
                                          "type": "integer",
                                          "example": 1
                                        },
                                        "login": {
                                          "type": "string",
                                          "example": "octocat"
                                        },
                                        "name": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "node_id": {
                                          "type": "string",
                                          "example": "MDQ6VXNlcjE="
                                        },
                                        "organizations_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/orgs"
                                        },
                                        "received_events_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/received_events"
                                        },
                                        "repos_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/repos"
                                        },
                                        "site_admin": {
                                          "type": "boolean"
                                        },
                                        "starred_at": {
                                          "type": "string",
                                          "example": "\"2020-07-09T00:17:55Z\""
                                        },
                                        "starred_url": {
                                          "type": "string",
                                          "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                        },
                                        "subscriptions_url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat/subscriptions"
                                        },
                                        "type": {
                                          "type": "string",
                                          "example": "User"
                                        },
                                        "url": {
                                          "type": "string",
                                          "format": "uri",
                                          "example": "https://api.github.com/users/octocat"
                                        }
                                      },
                                      "nullable": true,
                                      "title": "Simple User"
                                    },
                                    "permissions": {
                                      "type": "object",
                                      "required": [
                                        "admin",
                                        "pull",
                                        "push"
                                      ],
                                      "properties": {
                                        "admin": {
                                          "type": "boolean"
                                        },
                                        "maintain": {
                                          "type": "boolean"
                                        },
                                        "pull": {
                                          "type": "boolean"
                                        },
                                        "push": {
                                          "type": "boolean"
                                        },
                                        "triage": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "private": {
                                      "description": "Whether the repository is private or public.",
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "pulls_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                    },
                                    "pushed_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true,
                                      "example": "2011-01-26T19:06:43Z"
                                    },
                                    "releases_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                    },
                                    "size": {
                                      "type": "integer",
                                      "example": 108
                                    },
                                    "ssh_url": {
                                      "type": "string",
                                      "example": "git@github.com:octocat/Hello-World.git"
                                    },
                                    "stargazers_count": {
                                      "type": "integer",
                                      "example": 80
                                    },
                                    "stargazers_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                    },
                                    "starred_at": {
                                      "type": "string",
                                      "example": "\"2020-07-09T00:17:42Z\""
                                    },
                                    "statuses_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                    },
                                    "subscribers_count": {
                                      "type": "integer"
                                    },
                                    "subscribers_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                    },
                                    "subscription_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                    },
                                    "svn_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://svn.github.com/octocat/Hello-World"
                                    },
                                    "tags_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                    },
                                    "teams_url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                    },
                                    "temp_clone_token": {
                                      "type": "string"
                                    },
                                    "template_repository": {
                                      "type": "object",
                                      "properties": {
                                        "allow_merge_commit": {
                                          "type": "boolean"
                                        },
                                        "allow_rebase_merge": {
                                          "type": "boolean"
                                        },
                                        "allow_squash_merge": {
                                          "type": "boolean"
                                        },
                                        "archive_url": {
                                          "type": "string"
                                        },
                                        "archived": {
                                          "type": "boolean"
                                        },
                                        "assignees_url": {
                                          "type": "string"
                                        },
                                        "blobs_url": {
                                          "type": "string"
                                        },
                                        "branches_url": {
                                          "type": "string"
                                        },
                                        "clone_url": {
                                          "type": "string"
                                        },
                                        "collaborators_url": {
                                          "type": "string"
                                        },
                                        "comments_url": {
                                          "type": "string"
                                        },
                                        "commits_url": {
                                          "type": "string"
                                        },
                                        "compare_url": {
                                          "type": "string"
                                        },
                                        "contents_url": {
                                          "type": "string"
                                        },
                                        "contributors_url": {
                                          "type": "string"
                                        },
                                        "created_at": {
                                          "type": "string"
                                        },
                                        "default_branch": {
                                          "type": "string"
                                        },
                                        "delete_branch_on_merge": {
                                          "type": "boolean"
                                        },
                                        "deployments_url": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        },
                                        "disabled": {
                                          "type": "boolean"
                                        },
                                        "downloads_url": {
                                          "type": "string"
                                        },
                                        "events_url": {
                                          "type": "string"
                                        },
                                        "fork": {
                                          "type": "boolean"
                                        },
                                        "forks_count": {
                                          "type": "integer"
                                        },
                                        "forks_url": {
                                          "type": "string"
                                        },
                                        "full_name": {
                                          "type": "string"
                                        },
                                        "git_commits_url": {
                                          "type": "string"
                                        },
                                        "git_refs_url": {
                                          "type": "string"
                                        },
                                        "git_tags_url": {
                                          "type": "string"
                                        },
                                        "git_url": {
                                          "type": "string"
                                        },
                                        "has_downloads": {
                                          "type": "boolean"
                                        },
                                        "has_issues": {
                                          "type": "boolean"
                                        },
                                        "has_pages": {
                                          "type": "boolean"
                                        },
                                        "has_projects": {
                                          "type": "boolean"
                                        },
                                        "has_wiki": {
                                          "type": "boolean"
                                        },
                                        "homepage": {
                                          "type": "string"
                                        },
                                        "hooks_url": {
                                          "type": "string"
                                        },
                                        "html_url": {
                                          "type": "string"
                                        },
                                        "id": {
                                          "type": "integer"
                                        },
                                        "is_template": {
                                          "type": "boolean"
                                        },
                                        "issue_comment_url": {
                                          "type": "string"
                                        },
                                        "issue_events_url": {
                                          "type": "string"
                                        },
                                        "issues_url": {
                                          "type": "string"
                                        },
                                        "keys_url": {
                                          "type": "string"
                                        },
                                        "labels_url": {
                                          "type": "string"
                                        },
                                        "language": {
                                          "type": "string"
                                        },
                                        "languages_url": {
                                          "type": "string"
                                        },
                                        "merges_url": {
                                          "type": "string"
                                        },
                                        "milestones_url": {
                                          "type": "string"
                                        },
                                        "mirror_url": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "network_count": {
                                          "type": "integer"
                                        },
                                        "node_id": {
                                          "type": "string"
                                        },
                                        "notifications_url": {
                                          "type": "string"
                                        },
                                        "open_issues_count": {
                                          "type": "integer"
                                        },
                                        "owner": {
                                          "type": "object",
                                          "properties": {
                                            "avatar_url": {
                                              "type": "string"
                                            },
                                            "events_url": {
                                              "type": "string"
                                            },
                                            "followers_url": {
                                              "type": "string"
                                            },
                                            "following_url": {
                                              "type": "string"
                                            },
                                            "gists_url": {
                                              "type": "string"
                                            },
                                            "gravatar_id": {
                                              "type": "string"
                                            },
                                            "html_url": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "integer"
                                            },
                                            "login": {
                                              "type": "string"
                                            },
                                            "node_id": {
                                              "type": "string"
                                            },
                                            "organizations_url": {
                                              "type": "string"
                                            },
                                            "received_events_url": {
                                              "type": "string"
                                            },
                                            "repos_url": {
                                              "type": "string"
                                            },
                                            "site_admin": {
                                              "type": "boolean"
                                            },
                                            "starred_url": {
                                              "type": "string"
                                            },
                                            "subscriptions_url": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "permissions": {
                                          "type": "object",
                                          "properties": {
                                            "admin": {
                                              "type": "boolean"
                                            },
                                            "maintain": {
                                              "type": "boolean"
                                            },
                                            "pull": {
                                              "type": "boolean"
                                            },
                                            "push": {
                                              "type": "boolean"
                                            },
                                            "triage": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "private": {
                                          "type": "boolean"
                                        },
                                        "pulls_url": {
                                          "type": "string"
                                        },
                                        "pushed_at": {
                                          "type": "string"
                                        },
                                        "releases_url": {
                                          "type": "string"
                                        },
                                        "size": {
                                          "type": "integer"
                                        },
                                        "ssh_url": {
                                          "type": "string"
                                        },
                                        "stargazers_count": {
                                          "type": "integer"
                                        },
                                        "stargazers_url": {
                                          "type": "string"
                                        },
                                        "statuses_url": {
                                          "type": "string"
                                        },
                                        "subscribers_count": {
                                          "type": "integer"
                                        },
                                        "subscribers_url": {
                                          "type": "string"
                                        },
                                        "subscription_url": {
                                          "type": "string"
                                        },
                                        "svn_url": {
                                          "type": "string"
                                        },
                                        "tags_url": {
                                          "type": "string"
                                        },
                                        "teams_url": {
                                          "type": "string"
                                        },
                                        "temp_clone_token": {
                                          "type": "string"
                                        },
                                        "topics": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "trees_url": {
                                          "type": "string"
                                        },
                                        "updated_at": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        },
                                        "visibility": {
                                          "type": "string"
                                        },
                                        "watchers_count": {
                                          "type": "integer"
                                        }
                                      },
                                      "nullable": true
                                    },
                                    "topics": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "trees_url": {
                                      "type": "string",
                                      "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true,
                                      "example": "2011-01-26T19:14:43Z"
                                    },
                                    "url": {
                                      "type": "string",
                                      "format": "uri",
                                      "example": "https://api.github.com/repos/octocat/Hello-World"
                                    },
                                    "visibility": {
                                      "description": "The repository visibility: public, private, or internal.",
                                      "type": "string",
                                      "default": "public"
                                    },
                                    "watchers": {
                                      "type": "integer"
                                    },
                                    "watchers_count": {
                                      "type": "integer",
                                      "example": 80
                                    }
                                  },
                                  "title": "Repository"
                                }
                              ]
                            },
                            "topics": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "trees_url": {
                              "type": "string",
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true,
                              "example": "2011-01-26T19:14:43Z"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/repos/octocat/Hello-World"
                            },
                            "visibility": {
                              "type": "string"
                            },
                            "watchers": {
                              "type": "integer",
                              "example": 0
                            },
                            "watchers_count": {
                              "type": "integer"
                            }
                          },
                          "title": "Minimal Repository"
                        },
                        "rerun_url": {
                          "description": "The URL to rerun the workflow run.",
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun"
                        },
                        "run_number": {
                          "description": "The auto incrementing run number for the workflow run.",
                          "type": "integer",
                          "example": 106
                        },
                        "status": {
                          "type": "string",
                          "nullable": true,
                          "example": "completed"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "url": {
                          "description": "The URL to the workflow run.",
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/runs/5"
                        },
                        "workflow_id": {
                          "description": "The ID of the parent workflow.",
                          "type": "integer",
                          "example": 5
                        },
                        "workflow_url": {
                          "description": "The URL to the workflow.",
                          "type": "string",
                          "example": "https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml"
                        }
                      },
                      "title": "Workflow Run"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "artifacts_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts",
                          "cancel_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel",
                          "check_suite_id": 42,
                          "check_suite_node_id": "MDEwOkNoZWNrU3VpdGU0Mg==",
                          "check_suite_url": "https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374",
                          "conclusion": null,
                          "created_at": "2020-01-22T19:33:08Z",
                          "event": "push",
                          "head_branch": "master",
                          "head_commit": {
                            "author": {
                              "email": "octocat@github.com",
                              "name": "Octo Cat"
                            },
                            "committer": {
                              "email": "noreply@github.com",
                              "name": "GitHub"
                            },
                            "id": "acb5820ced9479c074f688cc328bf03f341a511d",
                            "message": "Create linter.yaml",
                            "timestamp": "2020-01-22T19:33:05Z",
                            "tree_id": "d23f6eedb1e1b9610bbc754ddb5197bfe7271223"
                          },
                          "head_repository": {
                            "archive_url": "https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}",
                            "assignees_url": "https://api.github.com/repos/octo-org/octo-repo/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octo-org/octo-repo/branches{/branch}",
                            "collaborators_url": "https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octo-org/octo-repo/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octo-org/octo-repo/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octo-org/octo-repo/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octo-org/octo-repo/contributors",
                            "deployments_url": "https://api.github.com/repos/octo-org/octo-repo/deployments",
                            "description": null,
                            "downloads_url": "https://api.github.com/repos/octo-org/octo-repo/downloads",
                            "events_url": "https://api.github.com/repos/octo-org/octo-repo/events",
                            "fork": false,
                            "forks_url": "https://api.github.com/repos/octo-org/octo-repo/forks",
                            "full_name": "octo-org/octo-repo",
                            "git_commits_url": "https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}",
                            "hooks_url": "https://api.github.com/repos/octo-org/octo-repo/hooks",
                            "html_url": "https://github.com/octo-org/octo-repo",
                            "id": 217723378,
                            "issue_comment_url": "https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octo-org/octo-repo/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octo-org/octo-repo/labels{/name}",
                            "languages_url": "https://api.github.com/repos/octo-org/octo-repo/languages",
                            "merges_url": "https://api.github.com/repos/octo-org/octo-repo/merges",
                            "milestones_url": "https://api.github.com/repos/octo-org/octo-repo/milestones{/number}",
                            "name": "octo-repo",
                            "node_id": "MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=",
                            "notifications_url": "https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}",
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "private": true,
                            "pulls_url": "https://api.github.com/repos/octo-org/octo-repo/pulls{/number}",
                            "releases_url": "https://api.github.com/repos/octo-org/octo-repo/releases{/id}",
                            "stargazers_url": "https://api.github.com/repos/octo-org/octo-repo/stargazers",
                            "statuses_url": "https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octo-org/octo-repo/subscribers",
                            "subscription_url": "https://api.github.com/repos/octo-org/octo-repo/subscription",
                            "tags_url": "https://api.github.com/repos/octo-org/octo-repo/tags",
                            "teams_url": "https://api.github.com/repos/octo-org/octo-repo/teams",
                            "trees_url": "https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}",
                            "url": "https://api.github.com/repos/octo-org/octo-repo"
                          },
                          "head_sha": "acb5820ced9479c074f688cc328bf03f341a511d",
                          "html_url": "https://github.com/octo-org/octo-repo/actions/runs/30433642",
                          "id": 30433642,
                          "jobs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs",
                          "logs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs",
                          "name": "Build",
                          "node_id": "MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==",
                          "pull_requests": [],
                          "repository": {
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                            "description": "This your first repo!",
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                            "fork": false,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                            "full_name": "octocat/Hello-World",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "git_url": "git:github.com/octocat/Hello-World.git",
                            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                            "html_url": "https://github.com/octocat/Hello-World",
                            "id": 1296269,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "name": "Hello-World",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "ssh_url": "git@github.com:octocat/Hello-World.git",
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "url": "https://api.github.com/repos/octocat/Hello-World"
                          },
                          "rerun_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun",
                          "run_number": 562,
                          "status": "queued",
                          "updated_at": "2020-01-22T19:33:08Z",
                          "url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642",
                          "workflow_id": 159038,
                          "workflow_url": "https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Delete a workflow run",
            "description": "Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is\nprivate you must use an access token with the `repo` scope. GitHub Apps must have the `actions:write` permission to use\nthis endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#delete-a-workflow-run"
            },
            "operationId": "actions/delete-workflow-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "run_id",
                "description": "The id of the workflow run.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List workflow run artifacts",
            "description": "Lists artifacts for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-workflow-run-artifacts"
            },
            "operationId": "actions/list-workflow-run-artifacts",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "run_id",
                "description": "The id of the workflow run.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "artifacts"
                      ],
                      "properties": {
                        "artifacts": {
                          "type": "array",
                          "items": {
                            "description": "An artifact",
                            "type": "object",
                            "required": [
                              "id",
                              "node_id",
                              "name",
                              "size_in_bytes",
                              "url",
                              "archive_download_url",
                              "expired",
                              "created_at",
                              "expires_at",
                              "updated_at"
                            ],
                            "properties": {
                              "archive_download_url": {
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/artifacts/5/zip"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "expired": {
                                "description": "Whether or not the artifact has expired.",
                                "type": "boolean"
                              },
                              "expires_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "id": {
                                "type": "integer",
                                "example": 5
                              },
                              "name": {
                                "description": "The name of the artifact.",
                                "type": "string",
                                "example": "AdventureWorks.Framework"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOkNoZWNrU3VpdGU1"
                              },
                              "size_in_bytes": {
                                "description": "The size in bytes of the artifact.",
                                "type": "integer",
                                "example": 12345
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "url": {
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/artifacts/5"
                              }
                            },
                            "title": "Artifact"
                          }
                        },
                        "total_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "artifacts": [
                            {
                              "archive_download_url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip",
                              "created_at": "2020-01-10T14:59:22Z",
                              "expired": false,
                              "expires_at": "2020-03-21T14:59:22Z",
                              "id": 11,
                              "name": "Rails",
                              "node_id": "MDg6QXJ0aWZhY3QxMQ==",
                              "size_in_bytes": 556,
                              "updated_at": "2020-02-21T14:59:22Z",
                              "url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11"
                            },
                            {
                              "archive_download_url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip",
                              "created_at": "2020-01-10T14:59:22Z",
                              "expired": false,
                              "expires_at": "2020-03-21T14:59:22Z",
                              "id": 13,
                              "name": "",
                              "node_id": "MDg6QXJ0aWZhY3QxMw==",
                              "size_in_bytes": 453,
                              "updated_at": "2020-02-21T14:59:22Z",
                              "url": "https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13"
                            }
                          ],
                          "total_count": 2
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "artifacts"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}/cancel",
        {
          "post": {
            "tags": [
              "actions"
            ],
            "summary": "Cancel a workflow run",
            "description": "Cancels a workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#cancel-a-workflow-run"
            },
            "operationId": "actions/cancel-workflow-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "run_id",
                "description": "The id of the workflow run.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "202": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List jobs for a workflow run",
            "description": "Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#parameters).",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-jobs-for-a-workflow-run"
            },
            "operationId": "actions/list-jobs-for-workflow-run",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "run_id",
                "description": "The id of the workflow run.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "filter",
                "description": "Filters jobs by their `completed_at` timestamp. Can be one of:  \n\\* `latest`: Returns jobs from the most recent execution of the workflow run.  \n\\* `all`: Returns all jobs for a workflow run, including from old executions of the workflow run.",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "latest",
                    "all"
                  ],
                  "default": "latest"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "jobs"
                      ],
                      "properties": {
                        "jobs": {
                          "type": "array",
                          "items": {
                            "description": "Information of a job execution in a workflow run",
                            "type": "object",
                            "required": [
                              "id",
                              "node_id",
                              "run_id",
                              "run_url",
                              "head_sha",
                              "name",
                              "url",
                              "html_url",
                              "status",
                              "conclusion",
                              "started_at",
                              "completed_at",
                              "check_run_url"
                            ],
                            "properties": {
                              "check_run_url": {
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/check-runs/4"
                              },
                              "completed_at": {
                                "description": "The time that the job finished, in ISO 8601 format.",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "example": "2019-08-08T08:00:00-07:00"
                              },
                              "conclusion": {
                                "description": "The outcome of the job.",
                                "type": "string",
                                "nullable": true,
                                "example": "success"
                              },
                              "head_sha": {
                                "description": "The SHA of the commit that is being run.",
                                "type": "string",
                                "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"
                              },
                              "html_url": {
                                "type": "string",
                                "nullable": true,
                                "example": "https://github.com/github/hello-world/runs/4"
                              },
                              "id": {
                                "description": "The id of the job.",
                                "type": "integer",
                                "example": 21
                              },
                              "name": {
                                "description": "The name of the job.",
                                "type": "string",
                                "example": "test-coverage"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDg6Q2hlY2tSdW40"
                              },
                              "run_id": {
                                "description": "The id of the associated workflow run.",
                                "type": "integer",
                                "example": 5
                              },
                              "run_url": {
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5"
                              },
                              "started_at": {
                                "description": "The time that the job started, in ISO 8601 format.",
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-08-08T08:00:00-07:00"
                              },
                              "status": {
                                "description": "The phase of the lifecycle that the job is currently in.",
                                "type": "string",
                                "enum": [
                                  "queued",
                                  "in_progress",
                                  "completed"
                                ],
                                "example": "queued"
                              },
                              "steps": {
                                "description": "Steps in this job.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "status",
                                    "conclusion",
                                    "number"
                                  ],
                                  "properties": {
                                    "completed_at": {
                                      "description": "The time that the job finished, in ISO 8601 format.",
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true,
                                      "example": "2019-08-08T08:00:00-07:00"
                                    },
                                    "conclusion": {
                                      "description": "The outcome of the job.",
                                      "type": "string",
                                      "nullable": true,
                                      "example": "success"
                                    },
                                    "name": {
                                      "description": "The name of the job.",
                                      "type": "string",
                                      "example": "test-coverage"
                                    },
                                    "number": {
                                      "type": "integer",
                                      "example": 1
                                    },
                                    "started_at": {
                                      "description": "The time that the step started, in ISO 8601 format.",
                                      "type": "string",
                                      "format": "date-time",
                                      "nullable": true,
                                      "example": "2019-08-08T08:00:00-07:00"
                                    },
                                    "status": {
                                      "description": "The phase of the lifecycle that the job is currently in.",
                                      "type": "string",
                                      "enum": [
                                        "queued",
                                        "in_progress",
                                        "completed"
                                      ],
                                      "example": "queued"
                                    }
                                  }
                                }
                              },
                              "url": {
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/jobs/21"
                              }
                            },
                            "title": "Job"
                          }
                        },
                        "total_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "jobs": [
                            {
                              "check_run_url": "https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496",
                              "completed_at": "2020-01-20T17:44:39Z",
                              "conclusion": "success",
                              "head_sha": "f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0",
                              "html_url": "https://github.com/octo-org/octo-repo/runs/399444496",
                              "id": 399444496,
                              "name": "build",
                              "node_id": "MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==",
                              "run_id": 29679449,
                              "run_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449",
                              "started_at": "2020-01-20T17:42:40Z",
                              "status": "completed",
                              "steps": [
                                {
                                  "completed_at": "2020-01-20T09:42:41.000-08:00",
                                  "conclusion": "success",
                                  "name": "Set up job",
                                  "number": 1,
                                  "started_at": "2020-01-20T09:42:40.000-08:00",
                                  "status": "completed"
                                },
                                {
                                  "completed_at": "2020-01-20T09:42:45.000-08:00",
                                  "conclusion": "success",
                                  "name": "Run actions/checkout@v2",
                                  "number": 2,
                                  "started_at": "2020-01-20T09:42:41.000-08:00",
                                  "status": "completed"
                                },
                                {
                                  "completed_at": "2020-01-20T09:42:45.000-08:00",
                                  "conclusion": "success",
                                  "name": "Set up Ruby",
                                  "number": 3,
                                  "started_at": "2020-01-20T09:42:45.000-08:00",
                                  "status": "completed"
                                },
                                {
                                  "completed_at": "2020-01-20T09:42:48.000-08:00",
                                  "conclusion": "success",
                                  "name": "Run actions/cache@v2",
                                  "number": 4,
                                  "started_at": "2020-01-20T09:42:45.000-08:00",
                                  "status": "completed"
                                },
                                {
                                  "completed_at": "2020-01-20T09:42:52.000-08:00",
                                  "conclusion": "success",
                                  "name": "Install Bundler",
                                  "number": 5,
                                  "started_at": "2020-01-20T09:42:48.000-08:00",
                                  "status": "completed"
                                },
                                {
                                  "completed_at": "2020-01-20T09:42:53.000-08:00",
                                  "conclusion": "success",
                                  "name": "Install Gems",
                                  "number": 6,
                                  "started_at": "2020-01-20T09:42:52.000-08:00",
                                  "status": "completed"
                                },
                                {
                                  "completed_at": "2020-01-20T09:42:59.000-08:00",
                                  "conclusion": "success",
                                  "name": "Run Tests",
                                  "number": 7,
                                  "started_at": "2020-01-20T09:42:53.000-08:00",
                                  "status": "completed"
                                },
                                {
                                  "completed_at": "2020-01-20T09:44:39.000-08:00",
                                  "conclusion": "success",
                                  "name": "Deploy to Heroku",
                                  "number": 8,
                                  "started_at": "2020-01-20T09:42:59.000-08:00",
                                  "status": "completed"
                                },
                                {
                                  "completed_at": "2020-01-20T09:44:39.000-08:00",
                                  "conclusion": "success",
                                  "name": "Post actions/cache@v2",
                                  "number": 16,
                                  "started_at": "2020-01-20T09:44:39.000-08:00",
                                  "status": "completed"
                                },
                                {
                                  "completed_at": "2020-01-20T09:44:39.000-08:00",
                                  "conclusion": "success",
                                  "name": "Complete job",
                                  "number": 17,
                                  "started_at": "2020-01-20T09:44:39.000-08:00",
                                  "status": "completed"
                                }
                              ],
                              "url": "https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496"
                            }
                          ],
                          "total_count": 1
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-jobs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}/logs",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Download workflow run logs",
            "description": "Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for\n`Location:` in the response header to find the URL for the download. Anyone with read access to the repository can use\nthis endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have\nthe `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#download-workflow-run-logs"
            },
            "operationId": "actions/download-workflow-run-logs",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "run_id",
                "description": "The id of the workflow run.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "302": {
                "description": "Response",
                "headers": {
                  "Location": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "https://pipelines.actions.githubusercontent.com/ab1f3cCFPB34Nd6imvFxpGZH5hNlDp2wijMwl2gDoO0bcrrlJj/_apis/pipelines/1/runs/19/signedlogcontent?urlExpires=2020-01-22T22%3A44%3A54.1389777Z&urlSigningMethod=HMACV1&urlSignature=2TUDfIg4fm36OJmfPy6km5QD5DLCOkBVzvhWZM8B%2BUY%3D"
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Delete workflow run logs",
            "description": "Deletes all logs for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#delete-workflow-run-logs"
            },
            "operationId": "actions/delete-workflow-run-logs",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "run_id",
                "description": "The id of the workflow run.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun",
        {
          "post": {
            "tags": [
              "actions"
            ],
            "summary": "Re-run a workflow",
            "description": "Re-runs your workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#re-run-a-workflow"
            },
            "operationId": "actions/re-run-workflow",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "run_id",
                "description": "The id of the workflow run.",
                "required": true,
                "schema": {
                  "type": "integer"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "201": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": false,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/secrets",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List repository secrets",
            "description": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-repository-secrets"
            },
            "operationId": "actions/list-repo-secrets",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "secrets"
                      ],
                      "properties": {
                        "secrets": {
                          "type": "array",
                          "items": {
                            "description": "Set secrets for GitHub Actions.",
                            "type": "object",
                            "required": [
                              "name",
                              "created_at",
                              "updated_at"
                            ],
                            "properties": {
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "name": {
                                "description": "The name of the secret.",
                                "type": "string",
                                "example": "SECRET_TOKEN"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "title": "Actions Secret"
                          }
                        },
                        "total_count": {
                          "type": "integer"
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "secrets": [
                            {
                              "created_at": "2019-08-10T14:59:22Z",
                              "name": "GH_TOKEN",
                              "updated_at": "2020-01-10T14:59:22Z"
                            },
                            {
                              "created_at": "2020-01-10T10:59:22Z",
                              "name": "GIST_ID",
                              "updated_at": "2020-01-11T11:59:22Z"
                            }
                          ],
                          "total_count": 2
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/secrets/public-key",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get a repository public key",
            "description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-repository-public-key"
            },
            "operationId": "actions/get-repo-public-key",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "The public key used for setting Actions Secrets.",
                      "type": "object",
                      "required": [
                        "key_id",
                        "key"
                      ],
                      "properties": {
                        "created_at": {
                          "type": "string",
                          "example": "2011-01-26T19:01:12Z"
                        },
                        "id": {
                          "type": "integer",
                          "example": 2
                        },
                        "key": {
                          "description": "The Base64 encoded public key.",
                          "type": "string",
                          "example": "hBT5WZEj8ZoOv6TYJsfWq7MxTEQopZO5/IT3ZCVQPzs="
                        },
                        "key_id": {
                          "description": "The identifier for the key.",
                          "type": "string",
                          "example": "1234567"
                        },
                        "title": {
                          "type": "string",
                          "example": "ssh-rsa AAAAB3NzaC1yc2EAAA"
                        },
                        "url": {
                          "type": "string",
                          "example": "https://api.github.com/user/keys/2"
                        }
                      },
                      "title": "ActionsPublicKey"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "key": "2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234",
                          "key_id": "012345678912345678"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get a repository secret",
            "description": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-repository-secret"
            },
            "operationId": "actions/get-repo-secret",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Set secrets for GitHub Actions.",
                      "type": "object",
                      "required": [
                        "name",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "name": {
                          "description": "The name of the secret.",
                          "type": "string",
                          "example": "SECRET_TOKEN"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "title": "Actions Secret"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2019-08-10T14:59:22Z",
                          "name": "GH_TOKEN",
                          "updated_at": "2020-01-10T14:59:22Z"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          },
          "put": {
            "tags": [
              "actions"
            ],
            "summary": "Create or update a repository secret",
            "description": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use\nthis endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n```\nconst sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n```\n\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-or-update-a-repository-secret"
            },
            "operationId": "actions/create-or-update-repo-secret",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "encrypted_value": {
                        "description": "Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-repository-public-key) endpoint.",
                        "type": "string",
                        "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
                      },
                      "key_id": {
                        "description": "ID of the key you used to encrypt the secret.",
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "encrypted_value": "c2VjcmV0",
                    "key_id": "012345678912345678"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "201": {
                "description": "Response when creating a secret",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {},
                      "additionalProperties": false
                    }
                  }
                }
              },
              "204": {
                "description": "Response when updating a secret"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          },
          "delete": {
            "tags": [
              "actions"
            ],
            "summary": "Delete a repository secret",
            "description": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#delete-a-repository-secret"
            },
            "operationId": "actions/delete-repo-secret",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "secret_name",
                "description": "secret_name parameter",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "secrets"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/workflows",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List repository workflows",
            "description": "Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-repository-workflows"
            },
            "operationId": "actions/list-repo-workflows",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "workflows"
                      ],
                      "properties": {
                        "total_count": {
                          "type": "integer"
                        },
                        "workflows": {
                          "type": "array",
                          "items": {
                            "description": "A GitHub Actions workflow",
                            "type": "object",
                            "required": [
                              "id",
                              "node_id",
                              "name",
                              "path",
                              "state",
                              "url",
                              "html_url",
                              "badge_url",
                              "created_at",
                              "updated_at"
                            ],
                            "properties": {
                              "badge_url": {
                                "type": "string",
                                "example": "https://github.com/actions/setup-ruby/workflows/CI/badge.svg"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-12-06T14:20:20.000Z"
                              },
                              "deleted_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-12-06T14:20:20.000Z"
                              },
                              "html_url": {
                                "type": "string",
                                "example": "https://github.com/actions/setup-ruby/blob/master/.github/workflows/ruby.yaml"
                              },
                              "id": {
                                "type": "integer",
                                "example": 5
                              },
                              "name": {
                                "type": "string",
                                "example": "CI"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDg6V29ya2Zsb3cxMg=="
                              },
                              "path": {
                                "type": "string",
                                "example": "ruby.yaml"
                              },
                              "state": {
                                "type": "string",
                                "enum": [
                                  "active",
                                  "deleted",
                                  "disabled_fork",
                                  "disabled_inactivity",
                                  "disabled_manually"
                                ],
                                "example": "active"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-12-06T14:20:20.000Z"
                              },
                              "url": {
                                "type": "string",
                                "example": "https://api.github.com/repos/actions/setup-ruby/workflows/5"
                              }
                            },
                            "title": "Workflow"
                          }
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "total_count": 2,
                          "workflows": [
                            {
                              "badge_url": "https://github.com/octo-org/octo-repo/workflows/CI/badge.svg",
                              "created_at": "2020-01-08T23:48:37.000-08:00",
                              "html_url": "https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335",
                              "id": 161335,
                              "name": "CI",
                              "node_id": "MDg6V29ya2Zsb3cxNjEzMzU=",
                              "path": ".github/workflows/blank.yaml",
                              "state": "active",
                              "updated_at": "2020-01-08T23:50:21.000-08:00",
                              "url": "https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335"
                            },
                            {
                              "badge_url": "https://github.com/octo-org/octo-repo/workflows/Linter/badge.svg",
                              "created_at": "2020-01-08T23:48:37.000-08:00",
                              "html_url": "https://github.com/octo-org/octo-repo/blob/master/.github/workflows/269289",
                              "id": 269289,
                              "name": "Linter",
                              "node_id": "MDE4OldvcmtmbG93IFNlY29uZGFyeTI2OTI4OQ==",
                              "path": ".github/workflows/linter.yaml",
                              "state": "active",
                              "updated_at": "2020-01-08T23:50:21.000-08:00",
                              "url": "https://api.github.com/repos/octo-org/octo-repo/actions/workflows/269289"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflows"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/workflows/{workflow_id}",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "Get a workflow",
            "description": "Gets a specific workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-workflow"
            },
            "operationId": "actions/get-workflow",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "workflow_id",
                "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
                "required": true,
                "schema": {
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "A GitHub Actions workflow",
                      "type": "object",
                      "required": [
                        "id",
                        "node_id",
                        "name",
                        "path",
                        "state",
                        "url",
                        "html_url",
                        "badge_url",
                        "created_at",
                        "updated_at"
                      ],
                      "properties": {
                        "badge_url": {
                          "type": "string",
                          "example": "https://github.com/actions/setup-ruby/workflows/CI/badge.svg"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-12-06T14:20:20.000Z"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-12-06T14:20:20.000Z"
                        },
                        "html_url": {
                          "type": "string",
                          "example": "https://github.com/actions/setup-ruby/blob/master/.github/workflows/ruby.yaml"
                        },
                        "id": {
                          "type": "integer",
                          "example": 5
                        },
                        "name": {
                          "type": "string",
                          "example": "CI"
                        },
                        "node_id": {
                          "type": "string",
                          "example": "MDg6V29ya2Zsb3cxMg=="
                        },
                        "path": {
                          "type": "string",
                          "example": "ruby.yaml"
                        },
                        "state": {
                          "type": "string",
                          "enum": [
                            "active",
                            "deleted",
                            "disabled_fork",
                            "disabled_inactivity",
                            "disabled_manually"
                          ],
                          "example": "active"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-12-06T14:20:20.000Z"
                        },
                        "url": {
                          "type": "string",
                          "example": "https://api.github.com/repos/actions/setup-ruby/workflows/5"
                        }
                      },
                      "title": "Workflow"
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "badge_url": "https://github.com/octo-org/octo-repo/workflows/CI/badge.svg",
                          "created_at": "2020-01-08T23:48:37.000-08:00",
                          "html_url": "https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335",
                          "id": 161335,
                          "name": "CI",
                          "node_id": "MDg6V29ya2Zsb3cxNjEzMzU=",
                          "path": ".github/workflows/blank.yaml",
                          "state": "active",
                          "updated_at": "2020-01-08T23:50:21.000-08:00",
                          "url": "https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflows"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches",
        {
          "post": {
            "tags": [
              "actions"
            ],
            "summary": "Create a workflow dispatch event",
            "description": "You can use this endpoint to manually trigger a GitHub Actions workflow run. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`.\n\nYou must configure your GitHub Actions workflow to run when the [`workflow_dispatch` webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch) event occurs. The `inputs` are configured in the workflow file. For more information about how to configure the `workflow_dispatch` event in the workflow file, see \"[Events that trigger workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch).\"\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint. For more information, see \"[Creating a personal access token for the command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line).\"",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#create-a-workflow-dispatch-event"
            },
            "operationId": "actions/create-workflow-dispatch",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "workflow_id",
                "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
                "required": true,
                "schema": {
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "ref"
                    ],
                    "properties": {
                      "inputs": {
                        "description": "Input keys and values configured in the workflow file. The maximum number of properties is 10. Any default properties configured in the workflow file will be used when `inputs` are omitted.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "maxProperties": 10
                      },
                      "ref": {
                        "description": "The git reference for the workflow. The reference can be a branch or tag name.",
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "inputs": {
                      "home": "San Francisco, CA",
                      "name": "Mona the Octocat"
                    },
                    "ref": "topic-branch"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "204": {
                "description": "Response"
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflows"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
        {
          "get": {
            "tags": [
              "actions"
            ],
            "summary": "List workflow runs",
            "description": "List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-workflow-runs"
            },
            "operationId": "actions/list-workflow-runs",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "workflow_id",
                "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
                "required": true,
                "schema": {
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "actor",
                "description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run.",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "branch",
                "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`.",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "event",
                "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"[Events that trigger workflows](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows).\"",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "status",
                "description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Only GitHub can set a status of `waiting` or `requested`. For a list of the possible `status` and `conclusion` options, see \"[Create a check run](https://docs.github.com/enterprise-server@2.22/rest/reference/checks#create-a-check-run).\"",
                "required": false,
                "schema": {
                  "type": "string",
                  "enum": [
                    "completed",
                    "action_required",
                    "cancelled",
                    "failure",
                    "neutral",
                    "skipped",
                    "stale",
                    "success",
                    "timed_out",
                    "in_progress",
                    "queued",
                    "requested",
                    "waiting"
                  ]
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "created",
                "required": false,
                "schema": {
                  "type": "string",
                  "format": "date-time"
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "headers": {
                  "Link": {
                    "style": "simple",
                    "required": null,
                    "schema": {
                      "type": "string"
                    },
                    "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\""
                  }
                },
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "total_count",
                        "workflow_runs"
                      ],
                      "properties": {
                        "total_count": {
                          "type": "integer"
                        },
                        "workflow_runs": {
                          "type": "array",
                          "items": {
                            "description": "An invocation of a workflow",
                            "type": "object",
                            "required": [
                              "id",
                              "node_id",
                              "head_branch",
                              "run_number",
                              "event",
                              "status",
                              "conclusion",
                              "head_sha",
                              "workflow_id",
                              "url",
                              "html_url",
                              "created_at",
                              "updated_at",
                              "head_commit",
                              "head_repository",
                              "repository",
                              "jobs_url",
                              "logs_url",
                              "check_suite_url",
                              "cancel_url",
                              "rerun_url",
                              "artifacts_url",
                              "workflow_url",
                              "pull_requests"
                            ],
                            "properties": {
                              "artifacts_url": {
                                "description": "The URL to the artifacts for the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts"
                              },
                              "cancel_url": {
                                "description": "The URL to cancel the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/cancel"
                              },
                              "check_suite_id": {
                                "description": "The ID of the associated check suite.",
                                "type": "integer",
                                "example": 42
                              },
                              "check_suite_node_id": {
                                "description": "The node ID of the associated check suite.",
                                "type": "string",
                                "example": "MDEwOkNoZWNrU3VpdGU0Mg=="
                              },
                              "check_suite_url": {
                                "description": "The URL to the associated check suite.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/check-suites/12"
                              },
                              "conclusion": {
                                "type": "string",
                                "nullable": true,
                                "example": "neutral"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "event": {
                                "type": "string",
                                "example": "push"
                              },
                              "head_branch": {
                                "type": "string",
                                "nullable": true,
                                "example": "master"
                              },
                              "head_commit": {
                                "nullable": true,
                                "allOf": [
                                  {
                                    "description": "Simple Commit",
                                    "type": "object",
                                    "required": [
                                      "id",
                                      "tree_id",
                                      "message",
                                      "timestamp",
                                      "author",
                                      "committer"
                                    ],
                                    "properties": {
                                      "author": {
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "email"
                                        ],
                                        "properties": {
                                          "email": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "nullable": true
                                      },
                                      "committer": {
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "email"
                                        ],
                                        "properties": {
                                          "email": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "nullable": true
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "message": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string",
                                        "format": "date-time"
                                      },
                                      "tree_id": {
                                        "type": "string"
                                      }
                                    },
                                    "title": "Simple Commit"
                                  }
                                ]
                              },
                              "head_repository": {
                                "description": "Minimal Repository",
                                "type": "object",
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url"
                                ],
                                "properties": {
                                  "archive_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                  },
                                  "blobs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                  },
                                  "branches_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "code_of_conduct": {
                                    "description": "Code Of Conduct",
                                    "type": "object",
                                    "required": [
                                      "url",
                                      "html_url",
                                      "key",
                                      "name"
                                    ],
                                    "properties": {
                                      "body": {
                                        "type": "string",
                                        "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "contributor_covenant"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "Contributor Covenant"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                                      }
                                    },
                                    "title": "Code Of Conduct"
                                  },
                                  "collaborators_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                  },
                                  "comments_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                  },
                                  "commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                  },
                                  "compare_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                  },
                                  "contents_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                  },
                                  "contributors_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:01:12Z"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "This your first repo!"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                  },
                                  "full_name": {
                                    "type": "string",
                                    "example": "octocat/Hello-World"
                                  },
                                  "git_commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                  },
                                  "git_refs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                  },
                                  "git_tags_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "hooks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat/Hello-World"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1296269
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                  },
                                  "issue_events_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                  },
                                  "issues_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                  },
                                  "keys_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                  },
                                  "labels_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                  },
                                  "language": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "languages_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                  },
                                  "license": {
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "spdx_id": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    },
                                    "nullable": true
                                  },
                                  "merges_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                  },
                                  "milestones_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                  },
                                  "mirror_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Hello-World"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                  },
                                  "notifications_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                  },
                                  "open_issues": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                  },
                                  "pushed_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:06:43Z"
                                  },
                                  "releases_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                  },
                                  "statuses_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                  },
                                  "subscription_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                  },
                                  "teams_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "template_repository": {
                                    "type": "object",
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "A git repository",
                                        "type": "object",
                                        "required": [
                                          "archive_url",
                                          "assignees_url",
                                          "blobs_url",
                                          "branches_url",
                                          "collaborators_url",
                                          "comments_url",
                                          "commits_url",
                                          "compare_url",
                                          "contents_url",
                                          "contributors_url",
                                          "deployments_url",
                                          "description",
                                          "downloads_url",
                                          "events_url",
                                          "fork",
                                          "forks_url",
                                          "full_name",
                                          "git_commits_url",
                                          "git_refs_url",
                                          "git_tags_url",
                                          "hooks_url",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "issue_comment_url",
                                          "issue_events_url",
                                          "issues_url",
                                          "keys_url",
                                          "labels_url",
                                          "languages_url",
                                          "merges_url",
                                          "milestones_url",
                                          "name",
                                          "notifications_url",
                                          "owner",
                                          "private",
                                          "pulls_url",
                                          "releases_url",
                                          "stargazers_url",
                                          "statuses_url",
                                          "subscribers_url",
                                          "subscription_url",
                                          "tags_url",
                                          "teams_url",
                                          "trees_url",
                                          "url",
                                          "clone_url",
                                          "default_branch",
                                          "forks",
                                          "forks_count",
                                          "git_url",
                                          "has_downloads",
                                          "has_issues",
                                          "has_projects",
                                          "has_wiki",
                                          "has_pages",
                                          "homepage",
                                          "language",
                                          "archived",
                                          "disabled",
                                          "mirror_url",
                                          "open_issues",
                                          "open_issues_count",
                                          "license",
                                          "pushed_at",
                                          "size",
                                          "ssh_url",
                                          "stargazers_count",
                                          "svn_url",
                                          "watchers",
                                          "watchers_count",
                                          "created_at",
                                          "updated_at"
                                        ],
                                        "properties": {
                                          "allow_merge_commit": {
                                            "description": "Whether to allow merge commits for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "allow_rebase_merge": {
                                            "description": "Whether to allow rebase merges for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "allow_squash_merge": {
                                            "description": "Whether to allow squash merges for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "archive_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                          },
                                          "archived": {
                                            "description": "Whether the repository is archived.",
                                            "type": "boolean",
                                            "default": false
                                          },
                                          "assignees_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                          },
                                          "blobs_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                          },
                                          "branches_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                          },
                                          "clone_url": {
                                            "type": "string",
                                            "example": "https://github.com/octocat/Hello-World.git"
                                          },
                                          "collaborators_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                          },
                                          "comments_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                          },
                                          "commits_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                          },
                                          "compare_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                          },
                                          "contents_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                          },
                                          "contributors_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                          },
                                          "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:01:12Z"
                                          },
                                          "default_branch": {
                                            "description": "The default branch of the repository.",
                                            "type": "string",
                                            "example": "master"
                                          },
                                          "delete_branch_on_merge": {
                                            "description": "Whether to delete head branches when pull requests are merged",
                                            "type": "boolean",
                                            "example": false,
                                            "default": false
                                          },
                                          "deployments_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                          },
                                          "description": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "This your first repo!"
                                          },
                                          "disabled": {
                                            "description": "Returns whether or not this repository disabled.",
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                          },
                                          "fork": {
                                            "type": "boolean"
                                          },
                                          "forks": {
                                            "type": "integer"
                                          },
                                          "forks_count": {
                                            "type": "integer",
                                            "example": 9
                                          },
                                          "forks_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                          },
                                          "full_name": {
                                            "type": "string",
                                            "example": "octocat/Hello-World"
                                          },
                                          "git_commits_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                          },
                                          "git_refs_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                          },
                                          "git_tags_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                          },
                                          "git_url": {
                                            "type": "string",
                                            "example": "git:github.com/octocat/Hello-World.git"
                                          },
                                          "has_downloads": {
                                            "description": "Whether downloads are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_issues": {
                                            "description": "Whether issues are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_pages": {
                                            "type": "boolean"
                                          },
                                          "has_projects": {
                                            "description": "Whether projects are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_wiki": {
                                            "description": "Whether the wiki is enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "homepage": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "https://github.com"
                                          },
                                          "hooks_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat/Hello-World"
                                          },
                                          "id": {
                                            "description": "Unique identifier of the repository",
                                            "type": "integer",
                                            "example": 42
                                          },
                                          "is_template": {
                                            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": false
                                          },
                                          "issue_comment_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                          },
                                          "issue_events_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                          },
                                          "issues_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                          },
                                          "keys_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                          },
                                          "labels_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                          },
                                          "language": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "languages_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                          },
                                          "license": {
                                            "nullable": true,
                                            "allOf": [
                                              {
                                                "description": "License Simple",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "name",
                                                  "url",
                                                  "spdx_id",
                                                  "node_id"
                                                ],
                                                "properties": {
                                                  "html_url": {
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "key": {
                                                    "type": "string",
                                                    "example": "mit"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "example": "MIT License"
                                                  },
                                                  "node_id": {
                                                    "type": "string",
                                                    "example": "MDc6TGljZW5zZW1pdA=="
                                                  },
                                                  "spdx_id": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "example": "MIT"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "nullable": true,
                                                    "example": "https://api.github.com/licenses/mit"
                                                  }
                                                },
                                                "title": "License Simple"
                                              }
                                            ]
                                          },
                                          "master_branch": {
                                            "type": "string"
                                          },
                                          "merges_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                          },
                                          "milestones_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                          },
                                          "mirror_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "git:git.example.com/octocat/Hello-World"
                                          },
                                          "name": {
                                            "description": "The name of the repository.",
                                            "type": "string",
                                            "example": "Team Environment"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                          },
                                          "notifications_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                          },
                                          "open_issues": {
                                            "type": "integer"
                                          },
                                          "open_issues_count": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "organization": {
                                            "nullable": true,
                                            "allOf": [
                                              {
                                                "description": "Simple User",
                                                "type": "object",
                                                "required": [
                                                  "avatar_url",
                                                  "events_url",
                                                  "followers_url",
                                                  "following_url",
                                                  "gists_url",
                                                  "gravatar_id",
                                                  "html_url",
                                                  "id",
                                                  "node_id",
                                                  "login",
                                                  "organizations_url",
                                                  "received_events_url",
                                                  "repos_url",
                                                  "site_admin",
                                                  "starred_url",
                                                  "subscriptions_url",
                                                  "type",
                                                  "url"
                                                ],
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                                  },
                                                  "email": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "events_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                                  },
                                                  "followers_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/followers"
                                                  },
                                                  "following_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                                  },
                                                  "gists_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                                  },
                                                  "html_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://github.com/octocat"
                                                  },
                                                  "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                  },
                                                  "login": {
                                                    "type": "string",
                                                    "example": "octocat"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "node_id": {
                                                    "type": "string",
                                                    "example": "MDQ6VXNlcjE="
                                                  },
                                                  "organizations_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/orgs"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/received_events"
                                                  },
                                                  "repos_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/repos"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_at": {
                                                    "type": "string",
                                                    "example": "\"2020-07-09T00:17:55Z\""
                                                  },
                                                  "starred_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "example": "User"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat"
                                                  }
                                                },
                                                "nullable": true,
                                                "title": "Simple User"
                                              }
                                            ]
                                          },
                                          "owner": {
                                            "description": "Simple User",
                                            "type": "object",
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/images/error/octocat_happy.gif"
                                              },
                                              "email": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "events_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                                              },
                                              "followers_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/followers"
                                              },
                                              "following_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                                              },
                                              "gists_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                              },
                                              "gravatar_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "41d064eb2195891e12d0413f63227ea7"
                                              },
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/octocat"
                                              },
                                              "id": {
                                                "type": "integer",
                                                "example": 1
                                              },
                                              "login": {
                                                "type": "string",
                                                "example": "octocat"
                                              },
                                              "name": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDQ6VXNlcjE="
                                              },
                                              "organizations_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/orgs"
                                              },
                                              "received_events_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/received_events"
                                              },
                                              "repos_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/repos"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "type": "string",
                                                "example": "\"2020-07-09T00:17:55Z\""
                                              },
                                              "starred_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                              },
                                              "subscriptions_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/subscriptions"
                                              },
                                              "type": {
                                                "type": "string",
                                                "example": "User"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat"
                                              }
                                            },
                                            "nullable": true,
                                            "title": "Simple User"
                                          },
                                          "permissions": {
                                            "type": "object",
                                            "required": [
                                              "admin",
                                              "pull",
                                              "push"
                                            ],
                                            "properties": {
                                              "admin": {
                                                "type": "boolean"
                                              },
                                              "maintain": {
                                                "type": "boolean"
                                              },
                                              "pull": {
                                                "type": "boolean"
                                              },
                                              "push": {
                                                "type": "boolean"
                                              },
                                              "triage": {
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "private": {
                                            "description": "Whether the repository is private or public.",
                                            "type": "boolean",
                                            "default": false
                                          },
                                          "pulls_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                          },
                                          "pushed_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:06:43Z"
                                          },
                                          "releases_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                          },
                                          "size": {
                                            "type": "integer",
                                            "example": 108
                                          },
                                          "ssh_url": {
                                            "type": "string",
                                            "example": "git@github.com:octocat/Hello-World.git"
                                          },
                                          "stargazers_count": {
                                            "type": "integer",
                                            "example": 80
                                          },
                                          "stargazers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:42Z\""
                                          },
                                          "statuses_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                          },
                                          "subscription_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                          },
                                          "svn_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://svn.github.com/octocat/Hello-World"
                                          },
                                          "tags_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                          },
                                          "teams_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                          },
                                          "temp_clone_token": {
                                            "type": "string"
                                          },
                                          "template_repository": {
                                            "type": "object",
                                            "properties": {
                                              "allow_merge_commit": {
                                                "type": "boolean"
                                              },
                                              "allow_rebase_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_squash_merge": {
                                                "type": "boolean"
                                              },
                                              "archive_url": {
                                                "type": "string"
                                              },
                                              "archived": {
                                                "type": "boolean"
                                              },
                                              "assignees_url": {
                                                "type": "string"
                                              },
                                              "blobs_url": {
                                                "type": "string"
                                              },
                                              "branches_url": {
                                                "type": "string"
                                              },
                                              "clone_url": {
                                                "type": "string"
                                              },
                                              "collaborators_url": {
                                                "type": "string"
                                              },
                                              "comments_url": {
                                                "type": "string"
                                              },
                                              "commits_url": {
                                                "type": "string"
                                              },
                                              "compare_url": {
                                                "type": "string"
                                              },
                                              "contents_url": {
                                                "type": "string"
                                              },
                                              "contributors_url": {
                                                "type": "string"
                                              },
                                              "created_at": {
                                                "type": "string"
                                              },
                                              "default_branch": {
                                                "type": "string"
                                              },
                                              "delete_branch_on_merge": {
                                                "type": "boolean"
                                              },
                                              "deployments_url": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "disabled": {
                                                "type": "boolean"
                                              },
                                              "downloads_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "fork": {
                                                "type": "boolean"
                                              },
                                              "forks_count": {
                                                "type": "integer"
                                              },
                                              "forks_url": {
                                                "type": "string"
                                              },
                                              "full_name": {
                                                "type": "string"
                                              },
                                              "git_commits_url": {
                                                "type": "string"
                                              },
                                              "git_refs_url": {
                                                "type": "string"
                                              },
                                              "git_tags_url": {
                                                "type": "string"
                                              },
                                              "git_url": {
                                                "type": "string"
                                              },
                                              "has_downloads": {
                                                "type": "boolean"
                                              },
                                              "has_issues": {
                                                "type": "boolean"
                                              },
                                              "has_pages": {
                                                "type": "boolean"
                                              },
                                              "has_projects": {
                                                "type": "boolean"
                                              },
                                              "has_wiki": {
                                                "type": "boolean"
                                              },
                                              "homepage": {
                                                "type": "string"
                                              },
                                              "hooks_url": {
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "integer"
                                              },
                                              "is_template": {
                                                "type": "boolean"
                                              },
                                              "issue_comment_url": {
                                                "type": "string"
                                              },
                                              "issue_events_url": {
                                                "type": "string"
                                              },
                                              "issues_url": {
                                                "type": "string"
                                              },
                                              "keys_url": {
                                                "type": "string"
                                              },
                                              "labels_url": {
                                                "type": "string"
                                              },
                                              "language": {
                                                "type": "string"
                                              },
                                              "languages_url": {
                                                "type": "string"
                                              },
                                              "merges_url": {
                                                "type": "string"
                                              },
                                              "milestones_url": {
                                                "type": "string"
                                              },
                                              "mirror_url": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "network_count": {
                                                "type": "integer"
                                              },
                                              "node_id": {
                                                "type": "string"
                                              },
                                              "notifications_url": {
                                                "type": "string"
                                              },
                                              "open_issues_count": {
                                                "type": "integer"
                                              },
                                              "owner": {
                                                "type": "object",
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "type": "integer"
                                                  },
                                                  "login": {
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_url": {
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "permissions": {
                                                "type": "object",
                                                "properties": {
                                                  "admin": {
                                                    "type": "boolean"
                                                  },
                                                  "maintain": {
                                                    "type": "boolean"
                                                  },
                                                  "pull": {
                                                    "type": "boolean"
                                                  },
                                                  "push": {
                                                    "type": "boolean"
                                                  },
                                                  "triage": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "private": {
                                                "type": "boolean"
                                              },
                                              "pulls_url": {
                                                "type": "string"
                                              },
                                              "pushed_at": {
                                                "type": "string"
                                              },
                                              "releases_url": {
                                                "type": "string"
                                              },
                                              "size": {
                                                "type": "integer"
                                              },
                                              "ssh_url": {
                                                "type": "string"
                                              },
                                              "stargazers_count": {
                                                "type": "integer"
                                              },
                                              "stargazers_url": {
                                                "type": "string"
                                              },
                                              "statuses_url": {
                                                "type": "string"
                                              },
                                              "subscribers_count": {
                                                "type": "integer"
                                              },
                                              "subscribers_url": {
                                                "type": "string"
                                              },
                                              "subscription_url": {
                                                "type": "string"
                                              },
                                              "svn_url": {
                                                "type": "string"
                                              },
                                              "tags_url": {
                                                "type": "string"
                                              },
                                              "teams_url": {
                                                "type": "string"
                                              },
                                              "temp_clone_token": {
                                                "type": "string"
                                              },
                                              "topics": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "trees_url": {
                                                "type": "string"
                                              },
                                              "updated_at": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              },
                                              "visibility": {
                                                "type": "string"
                                              },
                                              "watchers_count": {
                                                "type": "integer"
                                              }
                                            },
                                            "nullable": true
                                          },
                                          "topics": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "trees_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                          },
                                          "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:14:43Z"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/repos/octocat/Hello-World"
                                          },
                                          "visibility": {
                                            "description": "The repository visibility: public, private, or internal.",
                                            "type": "string",
                                            "default": "public"
                                          },
                                          "watchers": {
                                            "type": "integer"
                                          },
                                          "watchers_count": {
                                            "type": "integer",
                                            "example": 80
                                          }
                                        },
                                        "title": "Repository"
                                      }
                                    ]
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:14:43Z"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/repos/octocat/Hello-World"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "title": "Minimal Repository"
                              },
                              "head_repository_id": {
                                "type": "integer",
                                "example": 5
                              },
                              "head_sha": {
                                "description": "The SHA of the head commit that points to the version of the worflow being run.",
                                "type": "string",
                                "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d"
                              },
                              "html_url": {
                                "type": "string",
                                "example": "https://github.com/github/hello-world/suites/4"
                              },
                              "id": {
                                "description": "The ID of the workflow run.",
                                "type": "integer",
                                "example": 5
                              },
                              "jobs_url": {
                                "description": "The URL to the jobs for the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/jobs"
                              },
                              "logs_url": {
                                "description": "The URL to download the logs for the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/logs"
                              },
                              "name": {
                                "description": "The name of the workflow run.",
                                "type": "string",
                                "nullable": true,
                                "example": "Build"
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDEwOkNoZWNrU3VpdGU1"
                              },
                              "pull_requests": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "number",
                                    "url",
                                    "head",
                                    "base"
                                  ],
                                  "properties": {
                                    "base": {
                                      "type": "object",
                                      "required": [
                                        "ref",
                                        "sha",
                                        "repo"
                                      ],
                                      "properties": {
                                        "ref": {
                                          "type": "string"
                                        },
                                        "repo": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "url",
                                            "name"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "integer"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "sha": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "head": {
                                      "type": "object",
                                      "required": [
                                        "ref",
                                        "sha",
                                        "repo"
                                      ],
                                      "properties": {
                                        "ref": {
                                          "type": "string"
                                        },
                                        "repo": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "url",
                                            "name"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "integer"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "url": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "sha": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "number": {
                                      "type": "integer"
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "title": "Pull Request Minimal"
                                },
                                "nullable": true
                              },
                              "repository": {
                                "description": "Minimal Repository",
                                "type": "object",
                                "required": [
                                  "archive_url",
                                  "assignees_url",
                                  "blobs_url",
                                  "branches_url",
                                  "collaborators_url",
                                  "comments_url",
                                  "commits_url",
                                  "compare_url",
                                  "contents_url",
                                  "contributors_url",
                                  "deployments_url",
                                  "description",
                                  "downloads_url",
                                  "events_url",
                                  "fork",
                                  "forks_url",
                                  "full_name",
                                  "git_commits_url",
                                  "git_refs_url",
                                  "git_tags_url",
                                  "hooks_url",
                                  "html_url",
                                  "id",
                                  "node_id",
                                  "issue_comment_url",
                                  "issue_events_url",
                                  "issues_url",
                                  "keys_url",
                                  "labels_url",
                                  "languages_url",
                                  "merges_url",
                                  "milestones_url",
                                  "name",
                                  "notifications_url",
                                  "owner",
                                  "private",
                                  "pulls_url",
                                  "releases_url",
                                  "stargazers_url",
                                  "statuses_url",
                                  "subscribers_url",
                                  "subscription_url",
                                  "tags_url",
                                  "teams_url",
                                  "trees_url",
                                  "url"
                                ],
                                "properties": {
                                  "archive_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                  },
                                  "archived": {
                                    "type": "boolean"
                                  },
                                  "assignees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                  },
                                  "blobs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                  },
                                  "branches_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                  },
                                  "clone_url": {
                                    "type": "string"
                                  },
                                  "code_of_conduct": {
                                    "description": "Code Of Conduct",
                                    "type": "object",
                                    "required": [
                                      "url",
                                      "html_url",
                                      "key",
                                      "name"
                                    ],
                                    "properties": {
                                      "body": {
                                        "type": "string",
                                        "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "nullable": true
                                      },
                                      "key": {
                                        "type": "string",
                                        "example": "contributor_covenant"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "Contributor Covenant"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
                                      }
                                    },
                                    "title": "Code Of Conduct"
                                  },
                                  "collaborators_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                  },
                                  "comments_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                  },
                                  "commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                  },
                                  "compare_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                  },
                                  "contents_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                  },
                                  "contributors_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:01:12Z"
                                  },
                                  "default_branch": {
                                    "type": "string"
                                  },
                                  "delete_branch_on_merge": {
                                    "type": "boolean"
                                  },
                                  "deployments_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "This your first repo!"
                                  },
                                  "disabled": {
                                    "type": "boolean"
                                  },
                                  "downloads_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                  },
                                  "events_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                  },
                                  "fork": {
                                    "type": "boolean"
                                  },
                                  "forks": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "forks_count": {
                                    "type": "integer"
                                  },
                                  "forks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                  },
                                  "full_name": {
                                    "type": "string",
                                    "example": "octocat/Hello-World"
                                  },
                                  "git_commits_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                  },
                                  "git_refs_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                  },
                                  "git_tags_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                  },
                                  "git_url": {
                                    "type": "string"
                                  },
                                  "has_downloads": {
                                    "type": "boolean"
                                  },
                                  "has_issues": {
                                    "type": "boolean"
                                  },
                                  "has_pages": {
                                    "type": "boolean"
                                  },
                                  "has_projects": {
                                    "type": "boolean"
                                  },
                                  "has_wiki": {
                                    "type": "boolean"
                                  },
                                  "homepage": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "hooks_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                  },
                                  "html_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://github.com/octocat/Hello-World"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "example": 1296269
                                  },
                                  "is_template": {
                                    "type": "boolean"
                                  },
                                  "issue_comment_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                  },
                                  "issue_events_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                  },
                                  "issues_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                  },
                                  "keys_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                  },
                                  "labels_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                  },
                                  "language": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "languages_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                  },
                                  "license": {
                                    "type": "object",
                                    "properties": {
                                      "key": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "node_id": {
                                        "type": "string"
                                      },
                                      "spdx_id": {
                                        "type": "string"
                                      },
                                      "url": {
                                        "type": "string"
                                      }
                                    },
                                    "nullable": true
                                  },
                                  "merges_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                  },
                                  "milestones_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                  },
                                  "mirror_url": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Hello-World"
                                  },
                                  "network_count": {
                                    "type": "integer"
                                  },
                                  "node_id": {
                                    "type": "string",
                                    "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                  },
                                  "notifications_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                  },
                                  "open_issues": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "open_issues_count": {
                                    "type": "integer"
                                  },
                                  "owner": {
                                    "description": "Simple User",
                                    "type": "object",
                                    "required": [
                                      "avatar_url",
                                      "events_url",
                                      "followers_url",
                                      "following_url",
                                      "gists_url",
                                      "gravatar_id",
                                      "html_url",
                                      "id",
                                      "node_id",
                                      "login",
                                      "organizations_url",
                                      "received_events_url",
                                      "repos_url",
                                      "site_admin",
                                      "starred_url",
                                      "subscriptions_url",
                                      "type",
                                      "url"
                                    ],
                                    "properties": {
                                      "avatar_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/images/error/octocat_happy.gif"
                                      },
                                      "email": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "events_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/events{/privacy}"
                                      },
                                      "followers_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/followers"
                                      },
                                      "following_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/following{/other_user}"
                                      },
                                      "gists_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                      },
                                      "gravatar_id": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "41d064eb2195891e12d0413f63227ea7"
                                      },
                                      "html_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://github.com/octocat"
                                      },
                                      "id": {
                                        "type": "integer",
                                        "example": 1
                                      },
                                      "login": {
                                        "type": "string",
                                        "example": "octocat"
                                      },
                                      "name": {
                                        "type": "string",
                                        "nullable": true
                                      },
                                      "node_id": {
                                        "type": "string",
                                        "example": "MDQ6VXNlcjE="
                                      },
                                      "organizations_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/orgs"
                                      },
                                      "received_events_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/received_events"
                                      },
                                      "repos_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/repos"
                                      },
                                      "site_admin": {
                                        "type": "boolean"
                                      },
                                      "starred_at": {
                                        "type": "string",
                                        "example": "\"2020-07-09T00:17:55Z\""
                                      },
                                      "starred_url": {
                                        "type": "string",
                                        "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                      },
                                      "subscriptions_url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat/subscriptions"
                                      },
                                      "type": {
                                        "type": "string",
                                        "example": "User"
                                      },
                                      "url": {
                                        "type": "string",
                                        "format": "uri",
                                        "example": "https://api.github.com/users/octocat"
                                      }
                                    },
                                    "nullable": true,
                                    "title": "Simple User"
                                  },
                                  "permissions": {
                                    "type": "object",
                                    "properties": {
                                      "admin": {
                                        "type": "boolean"
                                      },
                                      "maintain": {
                                        "type": "boolean"
                                      },
                                      "pull": {
                                        "type": "boolean"
                                      },
                                      "push": {
                                        "type": "boolean"
                                      },
                                      "triage": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "private": {
                                    "type": "boolean"
                                  },
                                  "pulls_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                  },
                                  "pushed_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:06:43Z"
                                  },
                                  "releases_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                  },
                                  "size": {
                                    "type": "integer"
                                  },
                                  "ssh_url": {
                                    "type": "string"
                                  },
                                  "stargazers_count": {
                                    "type": "integer"
                                  },
                                  "stargazers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                  },
                                  "statuses_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                  },
                                  "subscribers_count": {
                                    "type": "integer"
                                  },
                                  "subscribers_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                  },
                                  "subscription_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                  },
                                  "svn_url": {
                                    "type": "string"
                                  },
                                  "tags_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                  },
                                  "teams_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                  },
                                  "temp_clone_token": {
                                    "type": "string"
                                  },
                                  "template_repository": {
                                    "type": "object",
                                    "nullable": true,
                                    "allOf": [
                                      {
                                        "description": "A git repository",
                                        "type": "object",
                                        "required": [
                                          "archive_url",
                                          "assignees_url",
                                          "blobs_url",
                                          "branches_url",
                                          "collaborators_url",
                                          "comments_url",
                                          "commits_url",
                                          "compare_url",
                                          "contents_url",
                                          "contributors_url",
                                          "deployments_url",
                                          "description",
                                          "downloads_url",
                                          "events_url",
                                          "fork",
                                          "forks_url",
                                          "full_name",
                                          "git_commits_url",
                                          "git_refs_url",
                                          "git_tags_url",
                                          "hooks_url",
                                          "html_url",
                                          "id",
                                          "node_id",
                                          "issue_comment_url",
                                          "issue_events_url",
                                          "issues_url",
                                          "keys_url",
                                          "labels_url",
                                          "languages_url",
                                          "merges_url",
                                          "milestones_url",
                                          "name",
                                          "notifications_url",
                                          "owner",
                                          "private",
                                          "pulls_url",
                                          "releases_url",
                                          "stargazers_url",
                                          "statuses_url",
                                          "subscribers_url",
                                          "subscription_url",
                                          "tags_url",
                                          "teams_url",
                                          "trees_url",
                                          "url",
                                          "clone_url",
                                          "default_branch",
                                          "forks",
                                          "forks_count",
                                          "git_url",
                                          "has_downloads",
                                          "has_issues",
                                          "has_projects",
                                          "has_wiki",
                                          "has_pages",
                                          "homepage",
                                          "language",
                                          "archived",
                                          "disabled",
                                          "mirror_url",
                                          "open_issues",
                                          "open_issues_count",
                                          "license",
                                          "pushed_at",
                                          "size",
                                          "ssh_url",
                                          "stargazers_count",
                                          "svn_url",
                                          "watchers",
                                          "watchers_count",
                                          "created_at",
                                          "updated_at"
                                        ],
                                        "properties": {
                                          "allow_merge_commit": {
                                            "description": "Whether to allow merge commits for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "allow_rebase_merge": {
                                            "description": "Whether to allow rebase merges for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "allow_squash_merge": {
                                            "description": "Whether to allow squash merges for pull requests.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "archive_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
                                          },
                                          "archived": {
                                            "description": "Whether the repository is archived.",
                                            "type": "boolean",
                                            "default": false
                                          },
                                          "assignees_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
                                          },
                                          "blobs_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
                                          },
                                          "branches_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
                                          },
                                          "clone_url": {
                                            "type": "string",
                                            "example": "https://github.com/octocat/Hello-World.git"
                                          },
                                          "collaborators_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
                                          },
                                          "comments_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
                                          },
                                          "commits_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
                                          },
                                          "compare_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
                                          },
                                          "contents_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
                                          },
                                          "contributors_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
                                          },
                                          "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:01:12Z"
                                          },
                                          "default_branch": {
                                            "description": "The default branch of the repository.",
                                            "type": "string",
                                            "example": "master"
                                          },
                                          "delete_branch_on_merge": {
                                            "description": "Whether to delete head branches when pull requests are merged",
                                            "type": "boolean",
                                            "example": false,
                                            "default": false
                                          },
                                          "deployments_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
                                          },
                                          "description": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "This your first repo!"
                                          },
                                          "disabled": {
                                            "description": "Returns whether or not this repository disabled.",
                                            "type": "boolean"
                                          },
                                          "downloads_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
                                          },
                                          "events_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/events"
                                          },
                                          "fork": {
                                            "type": "boolean"
                                          },
                                          "forks": {
                                            "type": "integer"
                                          },
                                          "forks_count": {
                                            "type": "integer",
                                            "example": 9
                                          },
                                          "forks_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
                                          },
                                          "full_name": {
                                            "type": "string",
                                            "example": "octocat/Hello-World"
                                          },
                                          "git_commits_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
                                          },
                                          "git_refs_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
                                          },
                                          "git_tags_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
                                          },
                                          "git_url": {
                                            "type": "string",
                                            "example": "git:github.com/octocat/Hello-World.git"
                                          },
                                          "has_downloads": {
                                            "description": "Whether downloads are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_issues": {
                                            "description": "Whether issues are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_pages": {
                                            "type": "boolean"
                                          },
                                          "has_projects": {
                                            "description": "Whether projects are enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "has_wiki": {
                                            "description": "Whether the wiki is enabled.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": true
                                          },
                                          "homepage": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "https://github.com"
                                          },
                                          "hooks_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
                                          },
                                          "html_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://github.com/octocat/Hello-World"
                                          },
                                          "id": {
                                            "description": "Unique identifier of the repository",
                                            "type": "integer",
                                            "example": 42
                                          },
                                          "is_template": {
                                            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                                            "type": "boolean",
                                            "example": true,
                                            "default": false
                                          },
                                          "issue_comment_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
                                          },
                                          "issue_events_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
                                          },
                                          "issues_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
                                          },
                                          "keys_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
                                          },
                                          "labels_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
                                          },
                                          "language": {
                                            "type": "string",
                                            "nullable": true
                                          },
                                          "languages_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
                                          },
                                          "license": {
                                            "nullable": true,
                                            "allOf": [
                                              {
                                                "description": "License Simple",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "name",
                                                  "url",
                                                  "spdx_id",
                                                  "node_id"
                                                ],
                                                "properties": {
                                                  "html_url": {
                                                    "type": "string",
                                                    "format": "uri"
                                                  },
                                                  "key": {
                                                    "type": "string",
                                                    "example": "mit"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "example": "MIT License"
                                                  },
                                                  "node_id": {
                                                    "type": "string",
                                                    "example": "MDc6TGljZW5zZW1pdA=="
                                                  },
                                                  "spdx_id": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "example": "MIT"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "nullable": true,
                                                    "example": "https://api.github.com/licenses/mit"
                                                  }
                                                },
                                                "title": "License Simple"
                                              }
                                            ]
                                          },
                                          "master_branch": {
                                            "type": "string"
                                          },
                                          "merges_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
                                          },
                                          "milestones_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
                                          },
                                          "mirror_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "nullable": true,
                                            "example": "git:git.example.com/octocat/Hello-World"
                                          },
                                          "name": {
                                            "description": "The name of the repository.",
                                            "type": "string",
                                            "example": "Team Environment"
                                          },
                                          "network_count": {
                                            "type": "integer"
                                          },
                                          "node_id": {
                                            "type": "string",
                                            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
                                          },
                                          "notifications_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
                                          },
                                          "open_issues": {
                                            "type": "integer"
                                          },
                                          "open_issues_count": {
                                            "type": "integer",
                                            "example": 0
                                          },
                                          "organization": {
                                            "nullable": true,
                                            "allOf": [
                                              {
                                                "description": "Simple User",
                                                "type": "object",
                                                "required": [
                                                  "avatar_url",
                                                  "events_url",
                                                  "followers_url",
                                                  "following_url",
                                                  "gists_url",
                                                  "gravatar_id",
                                                  "html_url",
                                                  "id",
                                                  "node_id",
                                                  "login",
                                                  "organizations_url",
                                                  "received_events_url",
                                                  "repos_url",
                                                  "site_admin",
                                                  "starred_url",
                                                  "subscriptions_url",
                                                  "type",
                                                  "url"
                                                ],
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://github.com/images/error/octocat_happy.gif"
                                                  },
                                                  "email": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "events_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/events{/privacy}"
                                                  },
                                                  "followers_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/followers"
                                                  },
                                                  "following_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/following{/other_user}"
                                                  },
                                                  "gists_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string",
                                                    "nullable": true,
                                                    "example": "41d064eb2195891e12d0413f63227ea7"
                                                  },
                                                  "html_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://github.com/octocat"
                                                  },
                                                  "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                  },
                                                  "login": {
                                                    "type": "string",
                                                    "example": "octocat"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "nullable": true
                                                  },
                                                  "node_id": {
                                                    "type": "string",
                                                    "example": "MDQ6VXNlcjE="
                                                  },
                                                  "organizations_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/orgs"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/received_events"
                                                  },
                                                  "repos_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/repos"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_at": {
                                                    "type": "string",
                                                    "example": "\"2020-07-09T00:17:55Z\""
                                                  },
                                                  "starred_url": {
                                                    "type": "string",
                                                    "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat/subscriptions"
                                                  },
                                                  "type": {
                                                    "type": "string",
                                                    "example": "User"
                                                  },
                                                  "url": {
                                                    "type": "string",
                                                    "format": "uri",
                                                    "example": "https://api.github.com/users/octocat"
                                                  }
                                                },
                                                "nullable": true,
                                                "title": "Simple User"
                                              }
                                            ]
                                          },
                                          "owner": {
                                            "description": "Simple User",
                                            "type": "object",
                                            "required": [
                                              "avatar_url",
                                              "events_url",
                                              "followers_url",
                                              "following_url",
                                              "gists_url",
                                              "gravatar_id",
                                              "html_url",
                                              "id",
                                              "node_id",
                                              "login",
                                              "organizations_url",
                                              "received_events_url",
                                              "repos_url",
                                              "site_admin",
                                              "starred_url",
                                              "subscriptions_url",
                                              "type",
                                              "url"
                                            ],
                                            "properties": {
                                              "avatar_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/images/error/octocat_happy.gif"
                                              },
                                              "email": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "events_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                                              },
                                              "followers_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/followers"
                                              },
                                              "following_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                                              },
                                              "gists_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                                              },
                                              "gravatar_id": {
                                                "type": "string",
                                                "nullable": true,
                                                "example": "41d064eb2195891e12d0413f63227ea7"
                                              },
                                              "html_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://github.com/octocat"
                                              },
                                              "id": {
                                                "type": "integer",
                                                "example": 1
                                              },
                                              "login": {
                                                "type": "string",
                                                "example": "octocat"
                                              },
                                              "name": {
                                                "type": "string",
                                                "nullable": true
                                              },
                                              "node_id": {
                                                "type": "string",
                                                "example": "MDQ6VXNlcjE="
                                              },
                                              "organizations_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/orgs"
                                              },
                                              "received_events_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/received_events"
                                              },
                                              "repos_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/repos"
                                              },
                                              "site_admin": {
                                                "type": "boolean"
                                              },
                                              "starred_at": {
                                                "type": "string",
                                                "example": "\"2020-07-09T00:17:55Z\""
                                              },
                                              "starred_url": {
                                                "type": "string",
                                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                                              },
                                              "subscriptions_url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat/subscriptions"
                                              },
                                              "type": {
                                                "type": "string",
                                                "example": "User"
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "example": "https://api.github.com/users/octocat"
                                              }
                                            },
                                            "nullable": true,
                                            "title": "Simple User"
                                          },
                                          "permissions": {
                                            "type": "object",
                                            "required": [
                                              "admin",
                                              "pull",
                                              "push"
                                            ],
                                            "properties": {
                                              "admin": {
                                                "type": "boolean"
                                              },
                                              "maintain": {
                                                "type": "boolean"
                                              },
                                              "pull": {
                                                "type": "boolean"
                                              },
                                              "push": {
                                                "type": "boolean"
                                              },
                                              "triage": {
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "private": {
                                            "description": "Whether the repository is private or public.",
                                            "type": "boolean",
                                            "default": false
                                          },
                                          "pulls_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
                                          },
                                          "pushed_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:06:43Z"
                                          },
                                          "releases_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
                                          },
                                          "size": {
                                            "type": "integer",
                                            "example": 108
                                          },
                                          "ssh_url": {
                                            "type": "string",
                                            "example": "git@github.com:octocat/Hello-World.git"
                                          },
                                          "stargazers_count": {
                                            "type": "integer",
                                            "example": 80
                                          },
                                          "stargazers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
                                          },
                                          "starred_at": {
                                            "type": "string",
                                            "example": "\"2020-07-09T00:17:42Z\""
                                          },
                                          "statuses_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
                                          },
                                          "subscribers_count": {
                                            "type": "integer"
                                          },
                                          "subscribers_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
                                          },
                                          "subscription_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
                                          },
                                          "svn_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://svn.github.com/octocat/Hello-World"
                                          },
                                          "tags_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
                                          },
                                          "teams_url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
                                          },
                                          "temp_clone_token": {
                                            "type": "string"
                                          },
                                          "template_repository": {
                                            "type": "object",
                                            "properties": {
                                              "allow_merge_commit": {
                                                "type": "boolean"
                                              },
                                              "allow_rebase_merge": {
                                                "type": "boolean"
                                              },
                                              "allow_squash_merge": {
                                                "type": "boolean"
                                              },
                                              "archive_url": {
                                                "type": "string"
                                              },
                                              "archived": {
                                                "type": "boolean"
                                              },
                                              "assignees_url": {
                                                "type": "string"
                                              },
                                              "blobs_url": {
                                                "type": "string"
                                              },
                                              "branches_url": {
                                                "type": "string"
                                              },
                                              "clone_url": {
                                                "type": "string"
                                              },
                                              "collaborators_url": {
                                                "type": "string"
                                              },
                                              "comments_url": {
                                                "type": "string"
                                              },
                                              "commits_url": {
                                                "type": "string"
                                              },
                                              "compare_url": {
                                                "type": "string"
                                              },
                                              "contents_url": {
                                                "type": "string"
                                              },
                                              "contributors_url": {
                                                "type": "string"
                                              },
                                              "created_at": {
                                                "type": "string"
                                              },
                                              "default_branch": {
                                                "type": "string"
                                              },
                                              "delete_branch_on_merge": {
                                                "type": "boolean"
                                              },
                                              "deployments_url": {
                                                "type": "string"
                                              },
                                              "description": {
                                                "type": "string"
                                              },
                                              "disabled": {
                                                "type": "boolean"
                                              },
                                              "downloads_url": {
                                                "type": "string"
                                              },
                                              "events_url": {
                                                "type": "string"
                                              },
                                              "fork": {
                                                "type": "boolean"
                                              },
                                              "forks_count": {
                                                "type": "integer"
                                              },
                                              "forks_url": {
                                                "type": "string"
                                              },
                                              "full_name": {
                                                "type": "string"
                                              },
                                              "git_commits_url": {
                                                "type": "string"
                                              },
                                              "git_refs_url": {
                                                "type": "string"
                                              },
                                              "git_tags_url": {
                                                "type": "string"
                                              },
                                              "git_url": {
                                                "type": "string"
                                              },
                                              "has_downloads": {
                                                "type": "boolean"
                                              },
                                              "has_issues": {
                                                "type": "boolean"
                                              },
                                              "has_pages": {
                                                "type": "boolean"
                                              },
                                              "has_projects": {
                                                "type": "boolean"
                                              },
                                              "has_wiki": {
                                                "type": "boolean"
                                              },
                                              "homepage": {
                                                "type": "string"
                                              },
                                              "hooks_url": {
                                                "type": "string"
                                              },
                                              "html_url": {
                                                "type": "string"
                                              },
                                              "id": {
                                                "type": "integer"
                                              },
                                              "is_template": {
                                                "type": "boolean"
                                              },
                                              "issue_comment_url": {
                                                "type": "string"
                                              },
                                              "issue_events_url": {
                                                "type": "string"
                                              },
                                              "issues_url": {
                                                "type": "string"
                                              },
                                              "keys_url": {
                                                "type": "string"
                                              },
                                              "labels_url": {
                                                "type": "string"
                                              },
                                              "language": {
                                                "type": "string"
                                              },
                                              "languages_url": {
                                                "type": "string"
                                              },
                                              "merges_url": {
                                                "type": "string"
                                              },
                                              "milestones_url": {
                                                "type": "string"
                                              },
                                              "mirror_url": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "network_count": {
                                                "type": "integer"
                                              },
                                              "node_id": {
                                                "type": "string"
                                              },
                                              "notifications_url": {
                                                "type": "string"
                                              },
                                              "open_issues_count": {
                                                "type": "integer"
                                              },
                                              "owner": {
                                                "type": "object",
                                                "properties": {
                                                  "avatar_url": {
                                                    "type": "string"
                                                  },
                                                  "events_url": {
                                                    "type": "string"
                                                  },
                                                  "followers_url": {
                                                    "type": "string"
                                                  },
                                                  "following_url": {
                                                    "type": "string"
                                                  },
                                                  "gists_url": {
                                                    "type": "string"
                                                  },
                                                  "gravatar_id": {
                                                    "type": "string"
                                                  },
                                                  "html_url": {
                                                    "type": "string"
                                                  },
                                                  "id": {
                                                    "type": "integer"
                                                  },
                                                  "login": {
                                                    "type": "string"
                                                  },
                                                  "node_id": {
                                                    "type": "string"
                                                  },
                                                  "organizations_url": {
                                                    "type": "string"
                                                  },
                                                  "received_events_url": {
                                                    "type": "string"
                                                  },
                                                  "repos_url": {
                                                    "type": "string"
                                                  },
                                                  "site_admin": {
                                                    "type": "boolean"
                                                  },
                                                  "starred_url": {
                                                    "type": "string"
                                                  },
                                                  "subscriptions_url": {
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "permissions": {
                                                "type": "object",
                                                "properties": {
                                                  "admin": {
                                                    "type": "boolean"
                                                  },
                                                  "maintain": {
                                                    "type": "boolean"
                                                  },
                                                  "pull": {
                                                    "type": "boolean"
                                                  },
                                                  "push": {
                                                    "type": "boolean"
                                                  },
                                                  "triage": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "private": {
                                                "type": "boolean"
                                              },
                                              "pulls_url": {
                                                "type": "string"
                                              },
                                              "pushed_at": {
                                                "type": "string"
                                              },
                                              "releases_url": {
                                                "type": "string"
                                              },
                                              "size": {
                                                "type": "integer"
                                              },
                                              "ssh_url": {
                                                "type": "string"
                                              },
                                              "stargazers_count": {
                                                "type": "integer"
                                              },
                                              "stargazers_url": {
                                                "type": "string"
                                              },
                                              "statuses_url": {
                                                "type": "string"
                                              },
                                              "subscribers_count": {
                                                "type": "integer"
                                              },
                                              "subscribers_url": {
                                                "type": "string"
                                              },
                                              "subscription_url": {
                                                "type": "string"
                                              },
                                              "svn_url": {
                                                "type": "string"
                                              },
                                              "tags_url": {
                                                "type": "string"
                                              },
                                              "teams_url": {
                                                "type": "string"
                                              },
                                              "temp_clone_token": {
                                                "type": "string"
                                              },
                                              "topics": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "trees_url": {
                                                "type": "string"
                                              },
                                              "updated_at": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              },
                                              "visibility": {
                                                "type": "string"
                                              },
                                              "watchers_count": {
                                                "type": "integer"
                                              }
                                            },
                                            "nullable": true
                                          },
                                          "topics": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "trees_url": {
                                            "type": "string",
                                            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                          },
                                          "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "nullable": true,
                                            "example": "2011-01-26T19:14:43Z"
                                          },
                                          "url": {
                                            "type": "string",
                                            "format": "uri",
                                            "example": "https://api.github.com/repos/octocat/Hello-World"
                                          },
                                          "visibility": {
                                            "description": "The repository visibility: public, private, or internal.",
                                            "type": "string",
                                            "default": "public"
                                          },
                                          "watchers": {
                                            "type": "integer"
                                          },
                                          "watchers_count": {
                                            "type": "integer",
                                            "example": 80
                                          }
                                        },
                                        "title": "Repository"
                                      }
                                    ]
                                  },
                                  "topics": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "trees_url": {
                                    "type": "string",
                                    "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": true,
                                    "example": "2011-01-26T19:14:43Z"
                                  },
                                  "url": {
                                    "type": "string",
                                    "format": "uri",
                                    "example": "https://api.github.com/repos/octocat/Hello-World"
                                  },
                                  "visibility": {
                                    "type": "string"
                                  },
                                  "watchers": {
                                    "type": "integer",
                                    "example": 0
                                  },
                                  "watchers_count": {
                                    "type": "integer"
                                  }
                                },
                                "title": "Minimal Repository"
                              },
                              "rerun_url": {
                                "description": "The URL to rerun the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun"
                              },
                              "run_number": {
                                "description": "The auto incrementing run number for the workflow run.",
                                "type": "integer",
                                "example": 106
                              },
                              "status": {
                                "type": "string",
                                "nullable": true,
                                "example": "completed"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "url": {
                                "description": "The URL to the workflow run.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/runs/5"
                              },
                              "workflow_id": {
                                "description": "The ID of the parent workflow.",
                                "type": "integer",
                                "example": 5
                              },
                              "workflow_url": {
                                "description": "The URL to the workflow.",
                                "type": "string",
                                "example": "https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml"
                              }
                            },
                            "title": "Workflow Run"
                          }
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "total_count": 1,
                          "workflow_runs": [
                            {
                              "artifacts_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts",
                              "cancel_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel",
                              "check_suite_url": "https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374",
                              "conclusion": null,
                              "created_at": "2020-01-22T19:33:08Z",
                              "event": "push",
                              "head_branch": "master",
                              "head_commit": {
                                "author": {
                                  "email": "octocat@github.com",
                                  "name": "Octo Cat"
                                },
                                "committer": {
                                  "email": "noreply@github.com",
                                  "name": "GitHub"
                                },
                                "id": "acb5820ced9479c074f688cc328bf03f341a511d",
                                "message": "Create linter.yaml",
                                "timestamp": "2020-01-22T19:33:05Z",
                                "tree_id": "d23f6eedb1e1b9610bbc754ddb5197bfe7271223"
                              },
                              "head_repository": {
                                "archive_url": "https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}",
                                "assignees_url": "https://api.github.com/repos/octo-org/octo-repo/assignees{/user}",
                                "blobs_url": "https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}",
                                "branches_url": "https://api.github.com/repos/octo-org/octo-repo/branches{/branch}",
                                "collaborators_url": "https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}",
                                "comments_url": "https://api.github.com/repos/octo-org/octo-repo/comments{/number}",
                                "commits_url": "https://api.github.com/repos/octo-org/octo-repo/commits{/sha}",
                                "compare_url": "https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}",
                                "contents_url": "https://api.github.com/repos/octo-org/octo-repo/contents/{+path}",
                                "contributors_url": "https://api.github.com/repos/octo-org/octo-repo/contributors",
                                "deployments_url": "https://api.github.com/repos/octo-org/octo-repo/deployments",
                                "description": null,
                                "downloads_url": "https://api.github.com/repos/octo-org/octo-repo/downloads",
                                "events_url": "https://api.github.com/repos/octo-org/octo-repo/events",
                                "fork": false,
                                "forks_url": "https://api.github.com/repos/octo-org/octo-repo/forks",
                                "full_name": "octo-org/octo-repo",
                                "git_commits_url": "https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}",
                                "git_refs_url": "https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}",
                                "git_tags_url": "https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}",
                                "hooks_url": "https://api.github.com/repos/octo-org/octo-repo/hooks",
                                "html_url": "https://github.com/octo-org/octo-repo",
                                "id": 217723378,
                                "issue_comment_url": "https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}",
                                "issue_events_url": "https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}",
                                "issues_url": "https://api.github.com/repos/octo-org/octo-repo/issues{/number}",
                                "keys_url": "https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}",
                                "labels_url": "https://api.github.com/repos/octo-org/octo-repo/labels{/name}",
                                "languages_url": "https://api.github.com/repos/octo-org/octo-repo/languages",
                                "merges_url": "https://api.github.com/repos/octo-org/octo-repo/merges",
                                "milestones_url": "https://api.github.com/repos/octo-org/octo-repo/milestones{/number}",
                                "name": "octo-repo",
                                "node_id": "MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=",
                                "notifications_url": "https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}",
                                "owner": {
                                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                  "followers_url": "https://api.github.com/users/octocat/followers",
                                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "gravatar_id": "",
                                  "html_url": "https://github.com/octocat",
                                  "id": 1,
                                  "login": "octocat",
                                  "node_id": "MDQ6VXNlcjE=",
                                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                                  "repos_url": "https://api.github.com/users/octocat/repos",
                                  "site_admin": false,
                                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                  "type": "User",
                                  "url": "https://api.github.com/users/octocat"
                                },
                                "private": true,
                                "pulls_url": "https://api.github.com/repos/octo-org/octo-repo/pulls{/number}",
                                "releases_url": "https://api.github.com/repos/octo-org/octo-repo/releases{/id}",
                                "stargazers_url": "https://api.github.com/repos/octo-org/octo-repo/stargazers",
                                "statuses_url": "https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}",
                                "subscribers_url": "https://api.github.com/repos/octo-org/octo-repo/subscribers",
                                "subscription_url": "https://api.github.com/repos/octo-org/octo-repo/subscription",
                                "tags_url": "https://api.github.com/repos/octo-org/octo-repo/tags",
                                "teams_url": "https://api.github.com/repos/octo-org/octo-repo/teams",
                                "trees_url": "https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}",
                                "url": "https://api.github.com/repos/octo-org/octo-repo"
                              },
                              "head_sha": "acb5820ced9479c074f688cc328bf03f341a511d",
                              "html_url": "https://github.com/octo-org/octo-repo/actions/runs/30433642",
                              "id": 30433642,
                              "jobs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs",
                              "logs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs",
                              "name": "Build",
                              "node_id": "MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==",
                              "pull_requests": [],
                              "repository": {
                                "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                                "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                                "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                                "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                                "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                                "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                                "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                                "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                                "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                                "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                                "description": "This your first repo!",
                                "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                                "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                                "fork": false,
                                "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                                "full_name": "octocat/Hello-World",
                                "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                                "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                                "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                                "git_url": "git:github.com/octocat/Hello-World.git",
                                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks",
                                "html_url": "https://github.com/octocat/Hello-World",
                                "id": 1296269,
                                "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                                "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                                "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                                "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                                "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                                "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                                "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                                "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                                "name": "Hello-World",
                                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                                "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                                "owner": {
                                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                  "followers_url": "https://api.github.com/users/octocat/followers",
                                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "gravatar_id": "",
                                  "html_url": "https://github.com/octocat",
                                  "id": 1,
                                  "login": "octocat",
                                  "node_id": "MDQ6VXNlcjE=",
                                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                                  "repos_url": "https://api.github.com/users/octocat/repos",
                                  "site_admin": false,
                                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                  "type": "User",
                                  "url": "https://api.github.com/users/octocat"
                                },
                                "private": false,
                                "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                                "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                                "ssh_url": "git@github.com:octocat/Hello-World.git",
                                "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                                "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                                "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                                "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                                "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                                "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                                "url": "https://api.github.com/repos/octocat/Hello-World"
                              },
                              "rerun_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun",
                              "run_number": 562,
                              "status": "queued",
                              "updated_at": "2020-01-22T19:33:08Z",
                              "url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642",
                              "workflow_id": 159038,
                              "workflow_url": "https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "actions",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": "workflow-runs"
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/code-scanning/alerts",
        {
          "get": {
            "tags": [
              "code-scanning"
            ],
            "summary": "List code scanning alerts for a repository",
            "description": "Lists all open code scanning alerts for the default branch (usually `main`\nor `master`). You must use an access token with the `security_events` scope to use\nthis endpoint. GitHub Apps must have the `security_events` read permission to use\nthis endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository"
            },
            "operationId": "code-scanning/list-alerts-for-repo",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "tool_name",
                "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.",
                "required": false,
                "schema": {
                  "description": "The name of the tool used to generate the code scanning analysis.",
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "tool_guid",
                "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.",
                "required": false,
                "schema": {
                  "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                  "type": "string",
                  "nullable": true
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "ref",
                "description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.",
                "required": false,
                "schema": {
                  "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`.",
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "state",
                "description": "Set to `open`, `fixed`, or `dismissed` to list code scanning alerts in a specific state.",
                "required": false,
                "schema": {
                  "description": "State of a code scanning alert.",
                  "type": "string",
                  "enum": [
                    "open",
                    "closed",
                    "dismissed",
                    "fixed"
                  ]
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "number",
                          "created_at",
                          "url",
                          "html_url",
                          "state",
                          "dismissed_by",
                          "dismissed_at",
                          "dismissed_reason",
                          "rule",
                          "tool",
                          "instance",
                          "classification"
                        ],
                        "properties": {
                          "classification": {
                            "description": "A classification of the file. For example to identify it as generated.",
                            "type": "string",
                            "enum": [
                              "source",
                              "generated",
                              "test",
                              "library"
                            ],
                            "nullable": true
                          },
                          "created_at": {
                            "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "nullable": false
                          },
                          "dismissed_at": {
                            "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "nullable": true
                          },
                          "dismissed_by": {
                            "description": "Simple User",
                            "type": "object",
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "properties": {
                              "avatar_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/images/error/octocat_happy.gif"
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "events_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/events{/privacy}"
                              },
                              "followers_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/followers"
                              },
                              "following_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/following{/other_user}"
                              },
                              "gists_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                              },
                              "gravatar_id": {
                                "type": "string",
                                "nullable": true,
                                "example": "41d064eb2195891e12d0413f63227ea7"
                              },
                              "html_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://github.com/octocat"
                              },
                              "id": {
                                "type": "integer",
                                "example": 1
                              },
                              "login": {
                                "type": "string",
                                "example": "octocat"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true
                              },
                              "node_id": {
                                "type": "string",
                                "example": "MDQ6VXNlcjE="
                              },
                              "organizations_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/orgs"
                              },
                              "received_events_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/received_events"
                              },
                              "repos_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/repos"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "type": "string",
                                "example": "\"2020-07-09T00:17:55Z\""
                              },
                              "starred_url": {
                                "type": "string",
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                              },
                              "subscriptions_url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat/subscriptions"
                              },
                              "type": {
                                "type": "string",
                                "example": "User"
                              },
                              "url": {
                                "type": "string",
                                "format": "uri",
                                "example": "https://api.github.com/users/octocat"
                              }
                            },
                            "nullable": true,
                            "title": "Simple User"
                          },
                          "dismissed_reason": {
                            "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
                            "type": "string",
                            "enum": [
                              null,
                              "false positive",
                              "won't fix",
                              "used in tests"
                            ],
                            "nullable": true
                          },
                          "html_url": {
                            "description": "The GitHub URL of the alert resource.",
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": false
                          },
                          "instance": {
                            "type": "object",
                            "properties": {
                              "analysis_key": {
                                "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.",
                                "type": "string"
                              },
                              "classifications": {
                                "description": "Classifications that have been applied to the file that triggered the alert.\nFor example identifying it as documentation, or a generated file.",
                                "type": "array",
                                "items": {
                                  "description": "A classification of the file. For example to identify it as generated.",
                                  "type": "string",
                                  "enum": [
                                    "source",
                                    "generated",
                                    "test",
                                    "library"
                                  ],
                                  "nullable": true
                                }
                              },
                              "commit_sha": {
                                "type": "string"
                              },
                              "environment": {
                                "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed.",
                                "type": "string"
                              },
                              "html_url": {
                                "type": "string"
                              },
                              "location": {
                                "description": "Describe a region within a file for the alert.",
                                "type": "object",
                                "properties": {
                                  "end_column": {
                                    "type": "integer"
                                  },
                                  "end_line": {
                                    "type": "integer"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "start_column": {
                                    "type": "integer"
                                  },
                                  "start_line": {
                                    "type": "integer"
                                  }
                                }
                              },
                              "message": {
                                "type": "object",
                                "properties": {
                                  "text": {
                                    "type": "string"
                                  }
                                }
                              },
                              "ref": {
                                "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`.",
                                "type": "string"
                              },
                              "state": {
                                "description": "State of a code scanning alert.",
                                "type": "string",
                                "enum": [
                                  "open",
                                  "closed",
                                  "dismissed",
                                  "fixed"
                                ]
                              }
                            }
                          },
                          "number": {
                            "description": "The security alert number.",
                            "type": "integer",
                            "readOnly": true,
                            "nullable": false
                          },
                          "rule": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "description": "A short description of the rule used to detect the alert.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier for the rule used to detect the alert.",
                                "type": "string",
                                "nullable": true
                              },
                              "name": {
                                "description": "The name of the rule used to detect the alert.",
                                "type": "string"
                              },
                              "severity": {
                                "description": "The severity of the alert.",
                                "type": "string",
                                "enum": [
                                  "none",
                                  "note",
                                  "warning",
                                  "error"
                                ],
                                "nullable": true
                              }
                            }
                          },
                          "state": {
                            "description": "State of a code scanning alert.",
                            "type": "string",
                            "enum": [
                              "open",
                              "closed",
                              "dismissed",
                              "fixed"
                            ]
                          },
                          "tool": {
                            "type": "object",
                            "properties": {
                              "guid": {
                                "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                                "type": "string",
                                "nullable": true
                              },
                              "name": {
                                "description": "The name of the tool used to generate the code scanning analysis.",
                                "type": "string"
                              },
                              "version": {
                                "description": "The version of the tool used to generate the code scanning analysis.",
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "url": {
                            "description": "The REST API URL of the alert resource.",
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": false
                          }
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "created_at": "2020-02-13T12:29:18Z",
                            "dismissed_at": null,
                            "dismissed_by": null,
                            "dismissed_reason": null,
                            "html_url": "https://github.com/octocat/hello-world/code-scanning/4",
                            "instance": {
                              "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                              "classifications": [
                                "test"
                              ],
                              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
                              "environment": "{}",
                              "location": {
                                "end_column": 18,
                                "end_line": 917,
                                "path": "spec-main/api-session-spec.ts",
                                "start_column": 7,
                                "start_line": 917
                              },
                              "message": {
                                "text": "This path depends on a user-provided value."
                              },
                              "ref": "refs/heads/main",
                              "state": "open"
                            },
                            "number": 4,
                            "rule": {
                              "description": "Arbitrary file write during zip extraction",
                              "id": "js/zipslip",
                              "name": "js/zipslip",
                              "severity": "error"
                            },
                            "state": "open",
                            "tool": {
                              "guid": null,
                              "name": "CodeQL",
                              "version": "2.4.0"
                            },
                            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4"
                          },
                          {
                            "created_at": "2020-02-13T12:29:18Z",
                            "dismissed_at": "2020-02-14T12:29:18Z",
                            "dismissed_by": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "gravatar_id": "",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "dismissed_reason": "false positive",
                            "html_url": "https://github.com/octocat/hello-world/code-scanning/3",
                            "instance": {
                              "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                              "classifications": [],
                              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
                              "environment": "{}",
                              "location": {
                                "end_column": 18,
                                "end_line": 917,
                                "path": "lib/ab12-gen.js",
                                "start_column": 7,
                                "start_line": 917
                              },
                              "message": {
                                "text": "This path depends on a user-provided value."
                              },
                              "ref": "refs/heads/main",
                              "state": "open"
                            },
                            "number": 3,
                            "rule": {
                              "description": "Arbitrary file write during zip extraction",
                              "id": "js/zipslip",
                              "name": "js/zipslip",
                              "severity": "error"
                            },
                            "state": "dismissed",
                            "tool": {
                              "guid": null,
                              "name": "CodeQL",
                              "version": "2.4.0"
                            },
                            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "403": {
                "description": "Forbidden",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "404": {
                "description": "Resource not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "503": {
                "description": "Service unavailable",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "code-scanning",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",
        {
          "get": {
            "tags": [
              "code-scanning"
            ],
            "summary": "Get a code scanning alert",
            "description": "Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.\n\n**Deprecation notice**:\nThe instances field is deprecated and will, in future, not be included in the response for this endpoint. From GitHub Enterprise Server 3.0, the same information can be retrieved via a GET request to the URL specified by `instances_url`, added in that release.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/code-scanning#get-a-code-scanning-alert"
            },
            "operationId": "code-scanning/get-alert",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "alert_number",
                "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.",
                "required": true,
                "schema": {
                  "description": "The security alert number.",
                  "type": "integer",
                  "readOnly": true,
                  "nullable": false
                },
                "style": "simple"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "number",
                        "created_at",
                        "url",
                        "html_url",
                        "state",
                        "dismissed_by",
                        "dismissed_at",
                        "dismissed_reason",
                        "rule",
                        "tool"
                      ],
                      "properties": {
                        "created_at": {
                          "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": false
                        },
                        "dismissed_at": {
                          "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true
                        },
                        "dismissed_by": {
                          "description": "Simple User",
                          "type": "object",
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "properties": {
                            "avatar_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://github.com/images/error/octocat_happy.gif"
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "events_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/events{/privacy}"
                            },
                            "followers_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/followers"
                            },
                            "following_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/following{/other_user}"
                            },
                            "gists_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                            },
                            "gravatar_id": {
                              "type": "string",
                              "nullable": true,
                              "example": "41d064eb2195891e12d0413f63227ea7"
                            },
                            "html_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://github.com/octocat"
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "login": {
                              "type": "string",
                              "example": "octocat"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "node_id": {
                              "type": "string",
                              "example": "MDQ6VXNlcjE="
                            },
                            "organizations_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/orgs"
                            },
                            "received_events_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/received_events"
                            },
                            "repos_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/repos"
                            },
                            "site_admin": {
                              "type": "boolean"
                            },
                            "starred_at": {
                              "type": "string",
                              "example": "\"2020-07-09T00:17:55Z\""
                            },
                            "starred_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                            },
                            "subscriptions_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/subscriptions"
                            },
                            "type": {
                              "type": "string",
                              "example": "User"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat"
                            }
                          },
                          "nullable": true,
                          "title": "Simple User"
                        },
                        "dismissed_reason": {
                          "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
                          "type": "string",
                          "enum": [
                            null,
                            "false positive",
                            "won't fix",
                            "used in tests"
                          ],
                          "nullable": true
                        },
                        "html_url": {
                          "description": "The GitHub URL of the alert resource.",
                          "type": "string",
                          "format": "uri",
                          "readOnly": true,
                          "nullable": false
                        },
                        "instances": {
                          "deprecated": true
                        },
                        "number": {
                          "description": "The security alert number.",
                          "type": "integer",
                          "readOnly": true,
                          "nullable": false
                        },
                        "rule": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "description": "A short description of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "full_description": {
                              "description": "description of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "help": {
                              "description": "Detailed documentation for the rule as GitHub Flavored Markdown.",
                              "type": "string",
                              "nullable": true
                            },
                            "id": {
                              "description": "A unique identifier for the rule used to detect the alert.",
                              "type": "string",
                              "nullable": true
                            },
                            "name": {
                              "description": "The name of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "severity": {
                              "description": "The severity of the alert.",
                              "type": "string",
                              "enum": [
                                "none",
                                "note",
                                "warning",
                                "error"
                              ],
                              "nullable": true
                            },
                            "tags": {
                              "description": "A set of tags applicable for the rule.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true
                            }
                          }
                        },
                        "state": {
                          "description": "State of a code scanning alert.",
                          "type": "string",
                          "enum": [
                            "open",
                            "closed",
                            "dismissed",
                            "fixed"
                          ]
                        },
                        "tool": {
                          "type": "object",
                          "properties": {
                            "guid": {
                              "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                              "type": "string",
                              "nullable": true
                            },
                            "name": {
                              "description": "The name of the tool used to generate the code scanning analysis.",
                              "type": "string"
                            },
                            "version": {
                              "description": "The version of the tool used to generate the code scanning analysis.",
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "url": {
                          "description": "The REST API URL of the alert resource.",
                          "type": "string",
                          "format": "uri",
                          "readOnly": true,
                          "nullable": false
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2020-06-19T11:21:34Z",
                          "dismissed_at": "2020-02-14T12:29:18Z",
                          "dismissed_by": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 54933897,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "dismissed_reason": "false positive",
                          "html_url": "https://github.com/octocat/hello-world/code-scanning/42",
                          "instances": [
                            {
                              "analysis_key": ".github/workflows/codeql-analysis.yml:analyze",
                              "classifications": [
                                "test"
                              ],
                              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
                              "environment": "{\"language\":\"javascript\"}",
                              "location": {
                                "end_column": 18,
                                "end_line": 917,
                                "path": "src/badcode.js",
                                "start_column": 7,
                                "start_line": 917
                              },
                              "message": {
                                "text": "Unsanitized zip archive item path, which may contain '..', is used in a file system operation."
                              },
                              "ref": "refs/heads/main",
                              "state": "dismissed"
                            },
                            {
                              "analysis_key": ".github/workflows/codeql-analysis.yml:analyze",
                              "classifications": [
                                "test"
                              ],
                              "commit_sha": "42cb832f6839406e3daa691dd652a8dc36ee8930",
                              "environment": "{\"language\":\"javascript\"}",
                              "location": {
                                "end_column": 18,
                                "end_line": 917,
                                "path": "src/badcode.js",
                                "start_column": 7,
                                "start_line": 917
                              },
                              "message": {
                                "text": "Unsanitized zip archive item path, which may contain '..', is used in a file system operation."
                              },
                              "ref": "refs/pull/3740/head",
                              "state": "dismissed"
                            }
                          ],
                          "number": 42,
                          "rule": {
                            "description": "Arbitrary file write during zip extraction (\"Zip Slip\")",
                            "full_description": "Extracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten.",
                            "help": "# Arbitrary file write during zip extraction (\"Zip Slip\")\\nExtracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten ...",
                            "id": "js/zipslip",
                            "name": "js/zipslip",
                            "security_severity_level": "high",
                            "severity": "error",
                            "tags": [
                              "security",
                              "external/cwe/cwe-022"
                            ]
                          },
                          "state": "dismissed",
                          "tool": {
                            "guid": null,
                            "name": "CodeQL",
                            "version": "2.4.0"
                          },
                          "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/42"
                        }
                      }
                    }
                  }
                }
              },
              "403": {
                "description": "Forbidden",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "404": {
                "description": "Resource not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "503": {
                "description": "Service unavailable",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "code-scanning",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": [],
              "subcategory": null
            },
            "x-octokit": {
              "changes": [
                {
                  "before": {
                    "name": "alert_id"
                  },
                  "date": "2020-09-17",
                  "parameter": "alert_number",
                  "type": "PARAMETER"
                }
              ]
            }
          },
          "patch": {
            "tags": [
              "code-scanning"
            ],
            "summary": "Update a code scanning alert",
            "description": "Updates the status of a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` write permission to use this endpoint.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/code-scanning#update-a-code-scanning-alert"
            },
            "operationId": "code-scanning/update-alert",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "alert_number",
                "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.",
                "required": true,
                "schema": {
                  "description": "The security alert number.",
                  "type": "integer",
                  "readOnly": true,
                  "nullable": false
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "state"
                    ],
                    "properties": {
                      "dismissed_reason": {
                        "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
                        "type": "string",
                        "enum": [
                          null,
                          "false positive",
                          "won't fix",
                          "used in tests"
                        ],
                        "nullable": true
                      },
                      "state": {
                        "description": "Sets the state of the code scanning alert. Can be one of `open` or `dismissed`. You must provide `dismissed_reason` when you set the state to `dismissed`.",
                        "type": "string",
                        "enum": [
                          "open",
                          "dismissed"
                        ]
                      }
                    }
                  },
                  "example": {
                    "dismissed_reason": "false positive",
                    "state": "dismissed"
                  }
                }
              },
              "required": null
            },
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "required": [
                        "number",
                        "created_at",
                        "url",
                        "html_url",
                        "state",
                        "dismissed_by",
                        "dismissed_at",
                        "dismissed_reason",
                        "rule",
                        "tool"
                      ],
                      "properties": {
                        "created_at": {
                          "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": false
                        },
                        "dismissed_at": {
                          "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true
                        },
                        "dismissed_by": {
                          "description": "Simple User",
                          "type": "object",
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "properties": {
                            "avatar_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://github.com/images/error/octocat_happy.gif"
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "events_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/events{/privacy}"
                            },
                            "followers_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/followers"
                            },
                            "following_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/following{/other_user}"
                            },
                            "gists_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}"
                            },
                            "gravatar_id": {
                              "type": "string",
                              "nullable": true,
                              "example": "41d064eb2195891e12d0413f63227ea7"
                            },
                            "html_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://github.com/octocat"
                            },
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "login": {
                              "type": "string",
                              "example": "octocat"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "node_id": {
                              "type": "string",
                              "example": "MDQ6VXNlcjE="
                            },
                            "organizations_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/orgs"
                            },
                            "received_events_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/received_events"
                            },
                            "repos_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/repos"
                            },
                            "site_admin": {
                              "type": "boolean"
                            },
                            "starred_at": {
                              "type": "string",
                              "example": "\"2020-07-09T00:17:55Z\""
                            },
                            "starred_url": {
                              "type": "string",
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
                            },
                            "subscriptions_url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat/subscriptions"
                            },
                            "type": {
                              "type": "string",
                              "example": "User"
                            },
                            "url": {
                              "type": "string",
                              "format": "uri",
                              "example": "https://api.github.com/users/octocat"
                            }
                          },
                          "nullable": true,
                          "title": "Simple User"
                        },
                        "dismissed_reason": {
                          "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
                          "type": "string",
                          "enum": [
                            null,
                            "false positive",
                            "won't fix",
                            "used in tests"
                          ],
                          "nullable": true
                        },
                        "html_url": {
                          "description": "The GitHub URL of the alert resource.",
                          "type": "string",
                          "format": "uri",
                          "readOnly": true,
                          "nullable": false
                        },
                        "instances": {
                          "deprecated": true
                        },
                        "number": {
                          "description": "The security alert number.",
                          "type": "integer",
                          "readOnly": true,
                          "nullable": false
                        },
                        "rule": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "description": "A short description of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "full_description": {
                              "description": "description of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "help": {
                              "description": "Detailed documentation for the rule as GitHub Flavored Markdown.",
                              "type": "string",
                              "nullable": true
                            },
                            "id": {
                              "description": "A unique identifier for the rule used to detect the alert.",
                              "type": "string",
                              "nullable": true
                            },
                            "name": {
                              "description": "The name of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "severity": {
                              "description": "The severity of the alert.",
                              "type": "string",
                              "enum": [
                                "none",
                                "note",
                                "warning",
                                "error"
                              ],
                              "nullable": true
                            },
                            "tags": {
                              "description": "A set of tags applicable for the rule.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true
                            }
                          }
                        },
                        "state": {
                          "description": "State of a code scanning alert.",
                          "type": "string",
                          "enum": [
                            "open",
                            "closed",
                            "dismissed",
                            "fixed"
                          ]
                        },
                        "tool": {
                          "type": "object",
                          "properties": {
                            "guid": {
                              "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                              "type": "string",
                              "nullable": true
                            },
                            "name": {
                              "description": "The name of the tool used to generate the code scanning analysis.",
                              "type": "string"
                            },
                            "version": {
                              "description": "The version of the tool used to generate the code scanning analysis.",
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        "url": {
                          "description": "The REST API URL of the alert resource.",
                          "type": "string",
                          "format": "uri",
                          "readOnly": true,
                          "nullable": false
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": {
                          "created_at": "2020-08-25T21:28:36Z",
                          "dismissed_at": "2020-09-02T22:34:56Z",
                          "dismissed_by": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "gravatar_id": "",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "dismissed_reason": "false positive",
                          "html_url": "https://github.com/octocat/hello-world/code-scanning/42",
                          "instances": [
                            {
                              "analysis_key": ".github/workflows/codeql-analysis.yml:analyze",
                              "classifications": [
                                "test"
                              ],
                              "commit_sha": "4ed4204b0e16480197a64500c4b5848ddfda9561",
                              "environment": "{\"language\":\"javascript\"}",
                              "location": {
                                "end_column": 45,
                                "end_line": 20,
                                "path": "src/zipslip.js",
                                "start_column": 37,
                                "start_line": 20
                              },
                              "message": {
                                "text": "Unsanitized zip archive item path, which may contain '..', is used in a file system operation."
                              },
                              "ref": "refs/heads/main",
                              "state": "dismissed"
                            },
                            {
                              "analysis_key": ".github/workflows/codeql-analysis.yml:analyze",
                              "classifications": [
                                "test"
                              ],
                              "commit_sha": "fdc19ddaf04649b910b7267b82c0997a4bbe165e",
                              "environment": "{\"language\":\"javascript\"}",
                              "location": {
                                "end_column": 45,
                                "end_line": 20,
                                "path": "src/zipslip.js",
                                "start_column": 37,
                                "start_line": 20
                              },
                              "message": {
                                "text": "Unsanitized zip archive item path, which may contain '..', is used in a file system operation."
                              },
                              "ref": "refs/pull/3740/head",
                              "state": "dismissed"
                            }
                          ],
                          "number": 42,
                          "rule": {
                            "description": "Arbitrary file write during zip extraction (\"Zip Slip\")",
                            "full_description": "Extracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten.",
                            "help": "# Arbitrary file write during zip extraction (\"Zip Slip\")\\nExtracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten ...",
                            "id": "js/zipslip",
                            "name": "js/zipslip",
                            "security_severity_level": "high",
                            "severity": "error",
                            "tags": [
                              "security",
                              "external/cwe/cwe-022"
                            ]
                          },
                          "state": "dismissed",
                          "tool": {
                            "guid": null,
                            "name": "CodeQL",
                            "version": "2.4.0"
                          },
                          "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/42"
                        }
                      }
                    }
                  }
                }
              },
              "403": {
                "description": "Forbidden",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "404": {
                "description": "Resource not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "503": {
                "description": "Service unavailable",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "code-scanning",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": []
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/code-scanning/analyses",
        {
          "get": {
            "tags": [
              "code-scanning"
            ],
            "summary": "List code scanning analyses for a repository",
            "description": "Lists the details of all code scanning analyses for a repository,\nstarting with the most recent.\nThe response is paginated and you can use the `page` and `per_page` parameters\nto list the analyses you're interested in.\nBy default 30 analyses are listed per page.\n\nThe `rules_count` field in the response give the number of rules\nthat were run in the analysis.\nFor very old analyses this data is not available,\nand `0` is returned in this field.\n\nYou must use an access token with the `security_events` scope to use this endpoint.\nGitHub Apps must have the `security_events` read permission to use this endpoint.\n\n**Deprecation notice**:\nThe `tool_name` field is deprecated and will, in future, not be included in the response for this endpoint. The example response reflects this change. The tool name can now be found inside the `tool` field.",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/code-scanning#list-code-scanning-analyses-for-a-repository"
            },
            "operationId": "code-scanning/list-recent-analyses",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "query",
                "name": "tool_name",
                "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.",
                "required": false,
                "schema": {
                  "description": "The name of the tool used to generate the code scanning analysis.",
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "tool_guid",
                "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.",
                "required": false,
                "schema": {
                  "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                  "type": "string",
                  "nullable": true
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "page",
                "description": "Page number of the results to fetch.",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 1
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "per_page",
                "description": "Results per page (max 100)",
                "required": false,
                "schema": {
                  "type": "integer",
                  "default": 30
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "ref",
                "description": "The Git reference for the analyses you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.",
                "required": false,
                "schema": {
                  "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`.",
                  "type": "string"
                },
                "allowReserved": null,
                "style": "form"
              },
              {
                "in": "query",
                "name": "sarif_id",
                "description": "Filter analyses belonging to the same SARIF upload.",
                "required": false,
                "schema": {
                  "description": "An identifier for the upload.",
                  "type": "string",
                  "nullable": false,
                  "example": "6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53"
                },
                "allowReserved": null,
                "style": "form"
              }
            ],
            "responses": {
              "200": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "ref",
                          "commit_sha",
                          "analysis_key",
                          "environment",
                          "error",
                          "created_at",
                          "results_count",
                          "rules_count",
                          "id",
                          "url",
                          "sarif_id",
                          "tool",
                          "deletable",
                          "warning"
                        ],
                        "properties": {
                          "analysis_key": {
                            "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.",
                            "type": "string"
                          },
                          "category": {
                            "description": "Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code.",
                            "type": "string"
                          },
                          "commit_sha": {
                            "description": "The SHA of the commit to which the analysis you are uploading relates.",
                            "type": "string",
                            "maxLength": 40,
                            "minLength": 40,
                            "pattern": "^[0-9a-fA-F]+$"
                          },
                          "created_at": {
                            "description": "The time that the analysis was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "nullable": false
                          },
                          "deletable": {
                            "type": "boolean"
                          },
                          "environment": {
                            "description": "Identifies the variable values associated with the environment in which this analysis was performed.",
                            "type": "string"
                          },
                          "error": {
                            "type": "string",
                            "example": "error reading field xyz"
                          },
                          "id": {
                            "description": "Unique identifier for this analysis.",
                            "type": "integer"
                          },
                          "ref": {
                            "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`.",
                            "type": "string"
                          },
                          "results_count": {
                            "description": "The total number of results in the analysis.",
                            "type": "integer"
                          },
                          "rules_count": {
                            "description": "The total number of rules used in the analysis.",
                            "type": "integer"
                          },
                          "sarif_id": {
                            "description": "An identifier for the upload.",
                            "type": "string",
                            "nullable": false,
                            "example": "6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53"
                          },
                          "tool": {
                            "type": "object",
                            "properties": {
                              "guid": {
                                "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                                "type": "string",
                                "nullable": true
                              },
                              "name": {
                                "description": "The name of the tool used to generate the code scanning analysis.",
                                "type": "string"
                              },
                              "version": {
                                "description": "The version of the tool used to generate the code scanning analysis.",
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "tool_name": {
                            "type": "string"
                          },
                          "url": {
                            "description": "The REST API URL of the analysis resource.",
                            "type": "string",
                            "format": "uri",
                            "readOnly": true,
                            "nullable": false
                          },
                          "warning": {
                            "description": "Warning generated when processing the analysis",
                            "type": "string",
                            "example": "123 results were ignored"
                          }
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "value": [
                          {
                            "analysis_key": ".github/workflows/codeql-analysis.yml:analyze",
                            "category": ".github/workflows/codeql-analysis.yml:analyze/language:python",
                            "commit_sha": "d99612c3e1f2970085cfbaeadf8f010ef69bad83",
                            "created_at": "2020-08-27T15:05:21Z",
                            "deletable": true,
                            "environment": "{\"language\":\"python\"}",
                            "error": "",
                            "id": 201,
                            "ref": "refs/heads/main",
                            "results_count": 17,
                            "rules_count": 49,
                            "sarif_id": "6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53",
                            "tool": {
                              "guid": null,
                              "name": "CodeQL",
                              "version": "2.4.0"
                            },
                            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/analyses/201",
                            "warning": ""
                          },
                          {
                            "analysis_key": ".github/workflows/shiftleft.yml:build",
                            "category": ".github/workflows/shiftleft.yml:build/",
                            "commit_sha": "c8cff6510d4d084fb1b4aa13b64b97ca12b07321",
                            "created_at": "2020-08-31T22:46:44Z",
                            "deletable": true,
                            "environment": "{}",
                            "error": "",
                            "id": 200,
                            "ref": "refs/heads/my-branch",
                            "results_count": 17,
                            "rules_count": 32,
                            "sarif_id": "8981cd8e-b078-4ac3-a3be-1dad7dbd0b582",
                            "tool": {
                              "guid": null,
                              "name": "Python Security Analysis",
                              "version": "1.2.0"
                            },
                            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/analyses/200",
                            "warning": ""
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "403": {
                "description": "Forbidden",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "404": {
                "description": "Resource not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "503": {
                "description": "Service unavailable",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "code-scanning",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": []
            },
            "x-octokit": {}
          }
        }
      ],
      [
        "/repos/{owner}/{repo}/code-scanning/sarifs",
        {
          "post": {
            "tags": [
              "code-scanning"
            ],
            "summary": "Upload an analysis as SARIF data",
            "description": "Uploads SARIF data containing the results of a code scanning analysis to make the results available in a repository. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` write permission to use this endpoint.\n\nThere are two places where you can upload code scanning results.\n - If you upload to a pull request, for example `--ref refs/pull/42/merge` or `--ref refs/pull/42/head`, then the results appear as alerts in a pull request check. For more information, see \"[Triaging code scanning alerts in pull requests](/github/finding-security-vulnerabilities-and-errors-in-your-code/automatically-scanning-your-code-for-vulnerabilities-and-errors/triaging-code-scanning-alerts-in-pull-requests).\"\n - If you upload to a branch, for example `--ref refs/heads/my-branch`, then the results appear in the **Security** tab for your repository. For more information, see \"[Managing code scanning alerts for your repository](/github/finding-security-vulnerabilities-and-errors-in-your-code/automatically-scanning-your-code-for-vulnerabilities-and-errors/managing-code-scanning-alerts-for-your-repository#viewing-the-alerts-for-a-repository).\"\n\nYou must compress the SARIF-formatted analysis data that you want to upload, using `gzip`, and then encode it as a Base64 format string. For example:\n\n```\ngzip -c analysis-data.sarif | base64 -w0\n```\n\nSARIF upload supports a maximum of 1000 results per analysis run. Any results over this limit are ignored. Typically, but not necessarily, a SARIF file contains a single run of a single tool. If a code scanning tool generates too many results, you should update the analysis configuration to run only the most important rules or queries.\n\nThe `202 Accepted`, response includes an `id` value.\nYou can use this ID to check the status of the upload by using this for the `/sarifs/{sarif_id}` endpoint.\nFor more information, see \"[Get information about a SARIF upload](/rest/reference/code-scanning#get-information-about-a-sarif-upload).\"",
            "externalDocs": {
              "description": "API method documentation",
              "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/code-scanning#upload-a-sarif-file"
            },
            "operationId": "code-scanning/upload-sarif",
            "parameters": [
              {
                "in": "path",
                "name": "owner",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              },
              {
                "in": "path",
                "name": "repo",
                "required": true,
                "schema": {
                  "type": "string"
                },
                "style": "simple"
              }
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "commit_sha",
                      "ref",
                      "sarif"
                    ],
                    "properties": {
                      "checkout_uri": {
                        "description": "The base directory used in the analysis, as it appears in the SARIF file.\nThis property is used to convert file paths from absolute to relative, so that alerts can be mapped to their correct location in the repository.",
                        "type": "string",
                        "format": "uri",
                        "example": "file:///github/workspace/"
                      },
                      "commit_sha": {
                        "description": "The SHA of the commit to which the analysis you are uploading relates.",
                        "type": "string",
                        "maxLength": 40,
                        "minLength": 40,
                        "pattern": "^[0-9a-fA-F]+$"
                      },
                      "ref": {
                        "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`.",
                        "type": "string"
                      },
                      "sarif": {
                        "description": "A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using [`gzip`](http://www.gnu.org/software/gzip/manual/gzip.html) and then translate the contents of the file into a Base64 encoding string. For more information, see \"[SARIF support for code scanning](https://docs.github.com/enterprise-server@2.22/github/finding-security-vulnerabilities-and-errors-in-your-code/integrating-with-code-scanning/sarif-support-for-code-scanning).\"",
                        "type": "string"
                      },
                      "started_at": {
                        "description": "The time that the analysis run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "tool_name": {
                        "description": "The name of the tool used to generate the code scanning analysis. If this parameter is not used, the tool name defaults to \"API\". If the uploaded SARIF contains a tool GUID, this will be available for filtering using the `tool_guid` parameter of operations such as `GET /repos/{owner}/{repo}/code-scanning/alerts`.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": null
            },
            "responses": {
              "202": {
                "description": "Response",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "An identifier for the upload.",
                          "type": "string",
                          "nullable": false,
                          "example": "6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53"
                        },
                        "url": {
                          "description": "The REST API URL for checking the status of the upload.",
                          "type": "string",
                          "format": "uri",
                          "readOnly": true,
                          "nullable": false
                        }
                      }
                    },
                    "examples": {
                      "default": {
                        "summary": "Default response",
                        "value": {
                          "id": "47177e22-5596-11eb-80a1-c1e54ef945c6",
                          "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/sarifs/47177e22-5596-11eb-80a1-c1e54ef945c6"
                        }
                      }
                    }
                  }
                }
              },
              "400": {
                "description": "Bad Request if the sarif field is invalid"
              },
              "403": {
                "description": "Forbidden",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "404": {
                "description": "Resource not found",
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "Basic Error",
                      "type": "object",
                      "properties": {
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "title": "Basic Error"
                    }
                  }
                }
              },
              "413": {
                "description": "Payload Too Large if the sarif field is too large"
              },
              "503": {
                "description": "Service unavailable",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "documentation_url": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "deprecated": null,
            "x-github": {
              "category": "code-scanning",
              "enabledForGitHubApps": true,
              "githubCloudOnly": false,
              "previews": []
            },
            "x-octokit": {}
          }
        }
      ]
    ],
    "changed": {
      "/users/{username}/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [
                                                        [
                                                          "anonymous_access_enabled",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "removed": [
                                                        [
                                                          "temp_clone_token",
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/memberships/{username}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see see [Create a team](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#create-a-team).",
              "to": "Team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see see [Create a team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-team)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/readme": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.",
              "to": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}/installation": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.machine-man-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases/{release_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#hypermedia).",
              "to": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#hypermedia)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/stargazers": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/) via the `Accept` header:",
              "to": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/public_emails": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/enterprise-server@2.22/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope.",
              "to": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://docs.github.com/enterprise-server@2.21/rest/reference/users#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/authorizations/{authorization_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.22/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.22/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/organizations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists all organizations, in the order that they were created on GitHub Enterprise Server.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations.",
              "to": "Lists all organizations, in the order that they were created on GitHub Enterprise Server.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of organizations."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/gitignore/templates/{name}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/) to get the raw contents.",
              "to": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) to get the raw contents."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/orgs": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/enterprise-server@2.22/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead.",
              "to": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/enterprise-server@2.21/rest/reference/orgs#list-organizations-for-the-authenticated-user) API instead."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
              "to": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team, GitHub Enterprise Server 2.17+, and GitHub Enterprise Cloud."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "head": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repo": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "base": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repo": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/contents/{path}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\nFiles and symlinks support [a custom media type](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/enterprise-server@2.22/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/enterprise-server@2.22/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values.",
              "to": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of the repository's root directory. See the description below regarding what the API response includes for directories. \n\nFiles and symlinks support [a custom media type](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/enterprise-server@2.21/rest/reference/git#trees).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://docs.github.com/enterprise-server@2.21/rest/reference/git#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "issue": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.",
              "to": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/compare/{basehead}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
              "to": "The `basehead` param is comprised of two parts: `base` and `head`. Both must be branch names in `repo`. To compare branches across other repositories in the same network as `repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long\nto generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/hooks/{hook_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "config": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [],
                                  "changed": {
                                    "secret": {
                                      "type_changed": null,
                                      "description_changed": {
                                        "from": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.22/webhooks/event-payloads/#delivery-headers).",
                                        "to": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#delivery-headers)."
                                      },
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": null,
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/forks": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists all users, in the order that they signed up on GitHub Enterprise Server. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users.",
              "to": "Lists all users, in the order that they signed up on GitHub Enterprise Server. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of users."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/notifications/threads/{thread_id}/subscription": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/enterprise-server@2.22/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread.",
              "to": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://docs.github.com/enterprise-server@2.21/rest/reference/activity#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/repos": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/projects/{project_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#check-team-permissions-for-a-project) endpoint.\n\nChecks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#check-team-permissions-for-a-project) endpoint.\n\nChecks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#discussion-comments/). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.",
              "to": "List the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments/). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [
                              [
                                "temp_clone_token",
                                {
                                  "type": "string",
                                  "nullable": true
                                }
                              ]
                            ],
                            "changed": {
                              "parent": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [
                                    [
                                      "anonymous_access_enabled",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "removed": [
                                    [
                                      "temp_clone_token",
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  ],
                                  "changed": {
                                    "template_repository": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "anonymous_access_enabled",
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        ],
                                        "removed": [
                                          [
                                            "temp_clone_token",
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "changed": {}
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "source": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [
                                    [
                                      "anonymous_access_enabled",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "removed": [
                                    [
                                      "temp_clone_token",
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  ],
                                  "changed": {
                                    "template_repository": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "anonymous_access_enabled",
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        ],
                                        "removed": [
                                          [
                                            "temp_clone_token",
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "changed": {}
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [
                                                        [
                                                          "anonymous_access_enabled",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "removed": [
                                                        [
                                                          "temp_clone_token",
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [
                                                        [
                                                          "anonymous_access_enabled",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "removed": [
                                                        [
                                                          "temp_clone_token",
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/apps/{app_slug}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
              "to": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/installation": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.machine-man-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/keys": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}/status": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
              "to": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [
                                    [
                                      "anonymous_access_enabled",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "removed": [
                                    [
                                      "temp_clone_token",
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/comments/{comment_id}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to a [commit comment](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#comments).",
              "to": "List the reactions to a [commit comment](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#comments)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/users": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.22/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.22/rest/reference/search#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.",
              "to": "Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/repository_invitations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/repos": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#list-team-repositories) endpoint.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-repositories) endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.\n\nIf a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.",
              "to": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.\n\nIf a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [
                              [
                                "anonymous_access_enabled",
                                {
                                  "type": "boolean"
                                }
                              ]
                            ],
                            "removed": [
                              [
                                "temp_clone_token",
                                {
                                  "type": "string"
                                }
                              ]
                            ],
                            "changed": {
                              "template_repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [
                                    [
                                      "anonymous_access_enabled",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "removed": [],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/installation": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.machine-man-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/gpg_keys/{gpg_key_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.",
              "to": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/git/matching-refs/{ref}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.\n\nWhen you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.22/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nIf you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`.",
              "to": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.\n\nWhen you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.21/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nIf you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/gists/public": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page.",
              "to": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/events/{event_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "issue": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [],
                                  "changed": {
                                    "repository": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "anonymous_access_enabled",
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        ],
                                        "removed": [
                                          [
                                            "temp_clone_token",
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "changed": {
                                          "template_repository": {
                                            "type_changed": null,
                                            "description_changed": null,
                                            "format_changed": null,
                                            "required_changed": null,
                                            "properties_changed": {
                                              "added": [
                                                [
                                                  "anonymous_access_enabled",
                                                  {
                                                    "type": "boolean"
                                                  }
                                                ]
                                              ],
                                              "removed": [
                                                [
                                                  "temp_clone_token",
                                                  {
                                                    "type": "string"
                                                  }
                                                ]
                                              ],
                                              "changed": {}
                                            },
                                            "enum_changed": null,
                                            "items_changed": null,
                                            "nullable_changed": null
                                          }
                                        }
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations/{installation_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.machine-man-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "organization": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "is_verified",
                                      {
                                        "type": "boolean",
                                        "example": true
                                      }
                                    ],
                                    [
                                      "twitter_username",
                                      {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "github"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.",
              "to": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/applications/grants/{grant_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.22/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.22/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/members": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#list-team-members) endpoint.\n\nTeam members will include the members of child teams.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-members) endpoint.\n\nTeam members will include the members of child teams."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/repositories": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.22/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`",
              "to": "Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/readme/{dir}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Gets the README from a repository directory.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML.",
              "to": "Gets the README from a repository directory.\n\nREADMEs support [custom media types](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types) for retrieving the raw content or rendered HTML."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/repos": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/teams": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List child teams`](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#list-child-teams) endpoint.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List child teams`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-child-teams) endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/license": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.",
              "to": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types) for retrieving the raw license content or rendered license HTML."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/gitignore/templates": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#create-a-repository-for-the-authenticated-user).",
              "to": "List all templates available to pass as an option when [creating a repository](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#create-a-repository-for-the-authenticated-user)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/teams": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/).",
              "to": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "organization": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [
                                      [
                                        "is_verified",
                                        {
                                          "type": "boolean",
                                          "example": true
                                        }
                                      ],
                                      [
                                        "twitter_username",
                                        {
                                          "type": "string",
                                          "nullable": true,
                                          "example": "github"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/discussions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.",
              "to": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/invitations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/notifications": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/repos": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {
                                "template_repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/memberships/{username}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#get-team-membership-for-a-user) endpoint.\n\nTeam members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#create-a-team).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-membership-for-a-user) endpoint.\n\nTeam members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:**\nThe response contains the `state` of the membership and the member's `role`.\n\nThe `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#create-a-team)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/installation/repositories": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint.",
              "to": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.machine-man-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repositories": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases.",
              "to": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.",
              "to": "List the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://docs.github.com/enterprise-server@2.22/rest/reference/reactions#list-reactions-for-a-team-discussion-comment) endpoint.\n\nList the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion-comment) endpoint.\n\nList the reactions to a [team discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussion-comments). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/applications/grants": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.22/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.22/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.22/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/enterprise-server@2.22/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`.",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.21/developers/apps/authorizing-oauth-apps#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/received_events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [
                                                        [
                                                          "anonymous_access_enabled",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "removed": [
                                                        [
                                                          "temp_clone_token",
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [
                                                        [
                                                          "anonymous_access_enabled",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "removed": [
                                                        [
                                                          "temp_clone_token",
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases/assets/{asset_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.",
              "to": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/received_events/public": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [
                                                        [
                                                          "anonymous_access_enabled",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "removed": [
                                                        [
                                                          "temp_clone_token",
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#get-a-discussion) endpoint.\n\nGet a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion) endpoint.\n\nGet a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}/installations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.machine-man-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/keys/{key_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}/check-suites": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "check_suites": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repositories": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists all public repositories in the order that they were created.\n\nNote:\n- For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n- Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.",
              "to": "Lists all public repositories in the order that they were created.\n\nNote:\n- For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n- Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/notifications": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/applications/{client_id}/tokens/{access_token}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.22/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://docs.github.com/enterprise-server@2.22/rest/reference/reactions#list-reactions-for-a-team-discussion) endpoint.\n\nList the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://docs.github.com/enterprise-server@2.21/rest/reference/reactions#list-reactions-for-a-team-discussion) endpoint.\n\nList the reactions to a [team discussion](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#discussions). OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/repos/{owner}/{repo}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Note**: Repositories inherited through a parent team will also be checked.\n\n**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/) via the `Accept` header:",
              "to": "**Note**: Repositories inherited through a parent team will also be checked.\n\n**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [
                              [
                                "anonymous_access_enabled",
                                {
                                  "type": "boolean"
                                }
                              ]
                            ],
                            "removed": [
                              [
                                "temp_clone_token",
                                {
                                  "type": "string"
                                }
                              ]
                            ],
                            "changed": {
                              "template_repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [
                                    [
                                      "anonymous_access_enabled",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "removed": [],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#get-a-discussion-comment) endpoint.\n\nGet a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-discussion-comment) endpoint.\n\nGet a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/feeds": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "GitHub Enterprise Server provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub Enterprise Server global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/enterprise-server@2.22/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens.",
              "to": "GitHub Enterprise Server provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub Enterprise Server global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub Enterprise Server.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://docs.github.com/enterprise-server@2.21/rest/overview/other-authentication-methods#basic-authentication) since current feed URIs use the older, non revocable auth tokens."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to a [pull request review comment](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#review-comments).",
              "to": "List the reactions to a [pull request review comment](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#review-comments)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/starred": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/) via the `Accept` header:",
              "to": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/vnd.github.v3.star+json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repo": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      },
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {
                                "template_repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {}
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/events/public": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [
                                                        [
                                                          "anonymous_access_enabled",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "removed": [
                                                        [
                                                          "temp_clone_token",
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/comments": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Commit Comments use [these custom media types](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/).\n\nComments are ordered by ascending ID.",
              "to": "Commit Comments use [these custom media types](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#custom-media-types). You can read more about the use of media types in the API [here](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/).\n\nComments are ordered by ascending ID."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/networks/{owner}/{repo}/events": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [
                                                        [
                                                          "anonymous_access_enabled",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "removed": [
                                                        [
                                                          "temp_clone_token",
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/search/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://docs.github.com/enterprise-server@2.22/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.\n\n**Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see \"[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests).\"",
              "to": "Find issues by state and keyword. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, which means the oldest issues appear first in the search results.\n\n**Note:** For [user-to-server](https://docs.github.com/developers/apps/identifying-and-authorizing-users-for-github-apps#user-to-server-requests) GitHub App requests, you can't retrieve a combination of issues and pull requests in a single query. Requests that don't include the `is:issue` or `is:pull-request` qualifier will receive an HTTP `422 Unprocessable Entity` response. To get results for both issues and pull requests, you must send separate queries for issues and pull requests. For more information about the `is` qualifier, see \"[Searching only issues or pull requests](https://docs.github.com/github/searching-for-information-on-github/searching-issues-and-pull-requests#search-only-issues-or-pull-requests).\""
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "items": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls/{pull_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#update-a-pull-request) a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.22/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.",
              "to": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls/#create-a-pull-request), or [edit](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#update-a-pull-request) a pull request, GitHub Enterprise Server creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.21/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub Enterprise Server has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "head": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [],
                                  "changed": {
                                    "repo": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "anonymous_access_enabled",
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        ],
                                        "removed": [
                                          [
                                            "temp_clone_token",
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "changed": {}
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              },
                              "base": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [],
                                  "changed": {
                                    "repo": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "anonymous_access_enabled",
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        ],
                                        "removed": [
                                          [
                                            "temp_clone_token",
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "changed": {}
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/members/{username}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user.",
              "to": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/starred": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/) via the `Accept` header:",
              "to": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/) via the `Accept` header:"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/installations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.",
              "to": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key."
            },
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.machine-man-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{commit_sha}/pulls": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#list-pull-requests) endpoint.",
              "to": "Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open pull requests associated with the commit. The results may include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests) endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "head": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repo": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "base": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repo": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {
                                            "template_repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {}
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/search/commits": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/enterprise-server@2.22/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`",
              "to": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "items": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/enterprise-server@2.22/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
              "to": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://docs.github.com/enterprise-server@2.21/rest/reference/apps#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/{issue_number}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to an [issue](https://docs.github.com/enterprise-server@2.22/rest/reference/issues).",
              "to": "List the reactions to an [issue](https://docs.github.com/enterprise-server@2.21/rest/reference/issues)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |",
              "to": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\n**Note:** If there are more than 300 files in the commit diff, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.\n\nYou can pass the appropriate [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) to  fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://docs.github.com/enterprise-server@2.21/rest/overview/media-types/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\n| Name | Type | Description |\n| ---- | ---- | ----------- |\n| `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |\n| `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |\n| `signature` | `string` | The signature that was extracted from the commit. |\n| `payload` | `string` | The value that was signed. |\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value | Description |\n| ----- | ----------- |\n| `expired_key` | The key that made the signature is expired. |\n| `not_signing_key` | The \"signing\" flag is not among the usage flags in the GPG key that made the signature. |\n| `gpgverify_error` | There was an error communicating with the signature verification service. |\n| `gpgverify_unavailable` | The signature verification service is currently unavailable. |\n| `unsigned` | The object does not include a signature. |\n| `unknown_signature_type` | A non-PGP signature was found in the commit. |\n| `no_user` | No user was associated with the `committer` email address in the commit. |\n| `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |\n| `unknown_key` | The key that made the signature has not been registered with any user's account. |\n| `malformed_signature` | There was an error parsing the signature. |\n| `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |\n| `valid` | None of the above errors applied, so the signature is considered to be verified. |"
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/orgs/{org}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub Enterprise Server plan information' below.\"",
              "to": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub Enterprise Server plan. See \"[Authenticating with GitHub Apps](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see 'Response with GitHub Enterprise Server plan information' below.\""
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [
                              [
                                "is_verified",
                                {
                                  "type": "boolean",
                                  "example": true
                                }
                              ],
                              [
                                "twitter_username",
                                {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "github"
                                }
                              ]
                            ],
                            "changed": {}
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the [Get a team by name](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#get-a-team-by-name) endpoint.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the [Get a team by name](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#get-a-team-by-name) endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "organization": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [],
                                  "removed": [
                                    [
                                      "is_verified",
                                      {
                                        "type": "boolean",
                                        "example": true
                                      }
                                    ],
                                    [
                                      "twitter_username",
                                      {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "github"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub Enterprise Server plan information' below\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub Enterprise Server [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see [Authentication](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/enterprise-server@2.22/rest/reference/users#emails)\".",
              "to": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub Enterprise Server plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see 'Response with GitHub Enterprise Server plan information' below\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub Enterprise Server [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub Enterprise Server. For more information, see [Authentication](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://docs.github.com/enterprise-server@2.21/rest/reference/users#emails)\"."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/events/orgs/{org}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "payload": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "issue": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [],
                                          "removed": [],
                                          "changed": {
                                            "repository": {
                                              "type_changed": null,
                                              "description_changed": null,
                                              "format_changed": null,
                                              "required_changed": null,
                                              "properties_changed": {
                                                "added": [
                                                  [
                                                    "anonymous_access_enabled",
                                                    {
                                                      "type": "boolean"
                                                    }
                                                  ]
                                                ],
                                                "removed": [
                                                  [
                                                    "temp_clone_token",
                                                    {
                                                      "type": "string"
                                                    }
                                                  ]
                                                ],
                                                "changed": {
                                                  "template_repository": {
                                                    "type_changed": null,
                                                    "description_changed": null,
                                                    "format_changed": null,
                                                    "required_changed": null,
                                                    "properties_changed": {
                                                      "added": [
                                                        [
                                                          "anonymous_access_enabled",
                                                          {
                                                            "type": "boolean"
                                                          }
                                                        ]
                                                      ],
                                                      "removed": [
                                                        [
                                                          "temp_clone_token",
                                                          {
                                                            "type": "string"
                                                          }
                                                        ]
                                                      ],
                                                      "changed": {}
                                                    },
                                                    "enum_changed": null,
                                                    "items_changed": null,
                                                    "nullable_changed": null
                                                  }
                                                }
                                              },
                                              "enum_changed": null,
                                              "items_changed": null,
                                              "nullable_changed": null
                                            }
                                          }
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/installations/{installation_id}/repositories": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key.",
              "to": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key."
            },
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.machine-man-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repositories": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/gpg_keys": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/code": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.22/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.",
              "to": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "items": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": null,
                                "enum_changed": null,
                                "items_changed": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                },
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/discussions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#list-discussions) endpoint.\n\nList all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussions) endpoint.\n\nList all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/teams/{team_id}/discussions/{discussion_number}/comments": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#list-discussion-comments) endpoint.\n\nList all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-discussion-comments) endpoint.\n\nList all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/users/{username}/subscriptions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List the reactions to an [issue comment](https://docs.github.com/enterprise-server@2.22/rest/reference/issues#comments).",
              "to": "List the reactions to an [issue comment](https://docs.github.com/enterprise-server@2.21/rest/reference/issues#comments)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/authorizations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.22/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.22/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.22/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
              "to": "**Deprecation Notice:** GitHub Enterprise Server will discontinue the [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://docs.github.com/enterprise-server@2.21/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://docs.github.com/enterprise-server@2.21/rest/reference/oauth-authorizations) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/app/installations": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "You must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.",
              "to": "You must use a [JWT](https://docs.github.com/enterprise-server@2.21/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key."
            },
            "operation_id": null,
            "parameters": {
              "added": [
                {
                  "in": "header",
                  "name": "accept",
                  "description": "This API is under preview and subject to change.",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "default": "application/vnd.github.machine-man-preview+json"
                  },
                  "style": "simple"
                }
              ],
              "removed": [
                {
                  "in": "query",
                  "name": "since",
                  "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
                  "required": false,
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "allowReserved": null,
                  "style": "form"
                },
                {
                  "in": "query",
                  "name": "outdated",
                  "required": false,
                  "schema": {
                    "type": "string"
                  },
                  "allowReserved": null,
                  "style": "form"
                }
              ],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/topics": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.22/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.",
              "to": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/search/labels": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.22/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results.",
              "to": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@2.21/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/user/subscriptions": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/{issue_number}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/enterprise-server@2.22/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/enterprise-server@2.22/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "The API returns a [`301 Moved Permanently` status](https://docs.github.com/enterprise-server@2.21/rest/overview/resources-in-the-rest-api#http-redirects-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [
                                    [
                                      "anonymous_access_enabled",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "removed": [
                                    [
                                      "temp_clone_token",
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  ],
                                  "changed": {
                                    "template_repository": {
                                      "type_changed": null,
                                      "description_changed": null,
                                      "format_changed": null,
                                      "required_changed": null,
                                      "properties_changed": {
                                        "added": [
                                          [
                                            "anonymous_access_enabled",
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        ],
                                        "removed": [
                                          [
                                            "temp_clone_token",
                                            {
                                              "type": "string"
                                            }
                                          ]
                                        ],
                                        "changed": {}
                                      },
                                      "enum_changed": null,
                                      "items_changed": null,
                                      "nullable_changed": null
                                    }
                                  }
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/check-suites/{check_suite_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [
                                    [
                                      "anonymous_access_enabled",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "removed": [
                                    [
                                      "temp_clone_token",
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls/{pull_number}/commits": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#list-commits) endpoint.",
              "to": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/enterprise-server@2.21/rest/reference/repos#list-commits) endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/repos/{owner}/{repo}/hooks": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "config": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [],
                                    "removed": [],
                                    "changed": {
                                      "secret": {
                                        "type_changed": null,
                                        "description_changed": {
                                          "from": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.22/webhooks/event-payloads/#delivery-headers).",
                                          "to": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.21/webhooks/event-payloads/#delivery-headers)."
                                        },
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": null,
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/issues": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#list-pull-requests)\" endpoint.",
              "to": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#list-pull-requests)\" endpoint."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [],
                              "removed": [],
                              "changed": {
                                "repository": {
                                  "type_changed": null,
                                  "description_changed": null,
                                  "format_changed": null,
                                  "required_changed": null,
                                  "properties_changed": {
                                    "added": [
                                      [
                                        "anonymous_access_enabled",
                                        {
                                          "type": "boolean"
                                        }
                                      ]
                                    ],
                                    "removed": [
                                      [
                                        "temp_clone_token",
                                        {
                                          "type": "string"
                                        }
                                      ]
                                    ],
                                    "changed": {
                                      "template_repository": {
                                        "type_changed": null,
                                        "description_changed": null,
                                        "format_changed": null,
                                        "required_changed": null,
                                        "properties_changed": {
                                          "added": [
                                            [
                                              "anonymous_access_enabled",
                                              {
                                                "type": "boolean"
                                              }
                                            ]
                                          ],
                                          "removed": [
                                            [
                                              "temp_clone_token",
                                              {
                                                "type": "string"
                                              }
                                            ]
                                          ],
                                          "changed": {}
                                        },
                                        "enum_changed": null,
                                        "items_changed": null,
                                        "nullable_changed": null
                                      }
                                    }
                                  },
                                  "enum_changed": null,
                                  "items_changed": null,
                                  "nullable_changed": null
                                }
                              }
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/git/ref/{ref}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.22/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.22/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\".",
              "to": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://docs.github.com/enterprise-server@2.21/rest/reference/pulls#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://docs.github.com/enterprise-server@2.21/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)\"."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      },
      "/notifications/threads/{thread_id}": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": {
                            "added": [],
                            "removed": [],
                            "changed": {
                              "repository": {
                                "type_changed": null,
                                "description_changed": null,
                                "format_changed": null,
                                "required_changed": null,
                                "properties_changed": {
                                  "added": [
                                    [
                                      "anonymous_access_enabled",
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  ],
                                  "removed": [
                                    [
                                      "temp_clone_token",
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  ],
                                  "changed": {}
                                },
                                "enum_changed": null,
                                "items_changed": null,
                                "nullable_changed": null
                              }
                            }
                          },
                          "enum_changed": null,
                          "items_changed": null,
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/repos": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": null,
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {
                "200": {
                  "content": {
                    "added": [],
                    "removed": [],
                    "changed": {
                      "application/json": {
                        "schema_changed": {
                          "type_changed": null,
                          "description_changed": null,
                          "format_changed": null,
                          "required_changed": null,
                          "properties_changed": null,
                          "enum_changed": null,
                          "items_changed": {
                            "type_changed": null,
                            "description_changed": null,
                            "format_changed": null,
                            "required_changed": null,
                            "properties_changed": {
                              "added": [
                                [
                                  "anonymous_access_enabled",
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              ],
                              "removed": [
                                [
                                  "temp_clone_token",
                                  {
                                    "type": "string"
                                  }
                                ]
                              ],
                              "changed": {}
                            },
                            "enum_changed": null,
                            "items_changed": null,
                            "nullable_changed": null
                          },
                          "nullable_changed": null
                        },
                        "schema_added": null,
                        "schema_removed": null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/projects": {
        "operations_added": [],
        "operations_removed": [],
        "operations_changed": {
          "get": {
            "tags": {
              "added": [],
              "removed": []
            },
            "summary": null,
            "description": {
              "from": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://docs.github.com/enterprise-server@2.22/rest/reference/teams#list-team-projects) endpoint.\n\nLists the organization projects for a team.",
              "to": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://docs.github.com/enterprise-server@2.21/rest/reference/teams#list-team-projects) endpoint.\n\nLists the organization projects for a team."
            },
            "operation_id": null,
            "parameters": {
              "added": [],
              "removed": [],
              "changed": {}
            },
            "request_body": null,
            "responses": {
              "added": [],
              "removed": [],
              "changed": {}
            }
          }
        }
      }
    }
  },
  "info": null
}
