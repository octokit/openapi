{
  "info": {
    "contact": null,
    "description": null,
    "extensions": {
      "changed": {
        "x-github-plan": {
          "from": "api.github.com",
          "to": "ghec"
        }
      }
    },
    "license": null,
    "terms_of_service": null,
    "title": null,
    "version": null
  },
  "paths": {
    "added": {
      "/enterprise-installation/{enterprise_or_org}/server-statistics": {
        "get": {
          "deprecated": null,
          "description": "Returns aggregate usage metrics for your GitHub Enterprise Server 3.5+ instance for a specified time period up to 365 days.\n\nTo use this endpoint, your GitHub Enterprise Server instance must be connected to GitHub Enterprise Cloud using GitHub Connect. You must enable Server Statistics, and for the API request provide your enterprise account name or organization name connected to the GitHub Enterprise Server. For more information, see \"[Enabling Server Statistics for your enterprise](/admin/configuration/configuring-github-connect/enabling-server-statistics-for-your-enterprise)\" in the GitHub Enterprise Server documentation.\n\nYou'll need to use a personal access token:\n  - If you connected your GitHub Enterprise Server to an enterprise account and enabled Server Statistics, you'll need a personal access token with the `read:enterprise` permission.\n  - If you connected your GitHub Enterprise Server to an organization account and enabled Server Statistics, you'll need a personal access token with the `read:org` permission.\n\nFor more information on creating a personal access token, see \"[Creating a personal access token](/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#get-github-enterprise-server-statistics"
          },
          "operationId": "enterprise-admin/get-server-statistics",
          "parameters": [
            {
              "description": "The slug version of the enterprise name or the login of an organization.",
              "in": "path",
              "name": "enterprise_or_org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events after this cursor.",
              "in": "query",
              "name": "date_start",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events before this cursor.",
              "in": "query",
              "name": "date_end",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "collection_date": "2021-12-14T23:59:59Z",
                        "dormant_users": {
                          "dormancy_threshold": "90 days",
                          "total_dormant_users": 5
                        },
                        "ghe_stats": {
                          "comments": {
                            "total_commit_comments": 1000,
                            "total_gist_comments": 1000,
                            "total_issue_comments": 0,
                            "total_pull_request_comments": 0
                          },
                          "gists": {
                            "private_gists": 59,
                            "public_gists": 41,
                            "total_gists": 100
                          },
                          "hooks": {
                            "active_hooks": 1,
                            "inactive_hooks": 1,
                            "total_hooks": 2
                          },
                          "issues": {
                            "closed_issues": 1222,
                            "open_issues": 1234,
                            "total_issues": 3421
                          },
                          "milestones": {
                            "closed_milestones": 30,
                            "open_milestones": 20,
                            "total_milestones": 50
                          },
                          "orgs": {
                            "disabled_orgs": 22,
                            "total_orgs": 100,
                            "total_team_members": 400,
                            "total_teams": 299
                          },
                          "pages": {
                            "total_pages": 10
                          },
                          "pulls": {
                            "mergeable_pulls": 435,
                            "merged_pulls": 223,
                            "total_pulls": 1232,
                            "unmergeable_pulls": 0
                          },
                          "repos": {
                            "fork_repos": 2,
                            "org_repos": 1,
                            "root_repos": 1,
                            "total_pushes": 42,
                            "total_repos": 12,
                            "total_wikis": 1
                          },
                          "users": {
                            "admin_users": 299,
                            "suspended_users": 423,
                            "total_users": 2000
                          }
                        },
                        "ghes_version": "3.5.0",
                        "github_connect": {
                          "features_enabled": [
                            "license_usage_sync",
                            "content_analysis",
                            "content_analysis_notifications"
                          ]
                        },
                        "host_name": "github.example.com",
                        "schema_version": "20220111",
                        "server_id": "ea6088f3-f095-4bf2-8d7f-c573819e8768"
                      }
                    }
                  },
                  "schema": {
                    "description": "Response of S4 Proxy endpoint that provides GHES statistics",
                    "items": {
                      "properties": {
                        "collection_date": {
                          "type": "string"
                        },
                        "dormant_users": {
                          "properties": {
                            "dormancy_threshold": {
                              "type": "string"
                            },
                            "total_dormant_users": {
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "ghe_stats": {
                          "properties": {
                            "comments": {
                              "properties": {
                                "total_commit_comments": {
                                  "type": "integer"
                                },
                                "total_gist_comments": {
                                  "type": "integer"
                                },
                                "total_issue_comments": {
                                  "type": "integer"
                                },
                                "total_pull_request_comments": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "gists": {
                              "properties": {
                                "private_gists": {
                                  "type": "integer"
                                },
                                "public_gists": {
                                  "type": "integer"
                                },
                                "total_gists": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "hooks": {
                              "properties": {
                                "active_hooks": {
                                  "type": "integer"
                                },
                                "inactive_hooks": {
                                  "type": "integer"
                                },
                                "total_hooks": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "issues": {
                              "properties": {
                                "closed_issues": {
                                  "type": "integer"
                                },
                                "open_issues": {
                                  "type": "integer"
                                },
                                "total_issues": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "milestones": {
                              "properties": {
                                "closed_milestones": {
                                  "type": "integer"
                                },
                                "open_milestones": {
                                  "type": "integer"
                                },
                                "total_milestones": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "orgs": {
                              "properties": {
                                "disabled_orgs": {
                                  "type": "integer"
                                },
                                "total_orgs": {
                                  "type": "integer"
                                },
                                "total_team_members": {
                                  "type": "integer"
                                },
                                "total_teams": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "pages": {
                              "properties": {
                                "total_pages": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "pulls": {
                              "properties": {
                                "mergeable_pulls": {
                                  "type": "integer"
                                },
                                "merged_pulls": {
                                  "type": "integer"
                                },
                                "total_pulls": {
                                  "type": "integer"
                                },
                                "unmergeable_pulls": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "repos": {
                              "properties": {
                                "fork_repos": {
                                  "type": "integer"
                                },
                                "org_repos": {
                                  "type": "integer"
                                },
                                "root_repos": {
                                  "type": "integer"
                                },
                                "total_pushes": {
                                  "type": "integer"
                                },
                                "total_repos": {
                                  "type": "integer"
                                },
                                "total_wikis": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "users": {
                              "properties": {
                                "admin_users": {
                                  "type": "integer"
                                },
                                "suspended_users": {
                                  "type": "integer"
                                },
                                "total_users": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "ghes_version": {
                          "type": "string"
                        },
                        "github_connect": {
                          "properties": {
                            "features_enabled": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "host_name": {
                          "type": "string"
                        },
                        "schema_version": {
                          "type": "string"
                        },
                        "server_id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "title": "Server Statistics Proxy Endpoint",
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get GitHub Enterprise Server statistics",
          "tags": [
            "server-statistics",
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprises/{enterprise}/actions/cache/usage": {
        "get": {
          "deprecated": null,
          "description": "Gets the total GitHub Actions cache usage for an enterprise.\nThe data fetched using this API is refreshed approximately every 5 minutes, so values returned from this endpoint may take at least 5 minutes to get updated.\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-github-actions-cache-usage-for-an-enterprise"
          },
          "operationId": "actions/get-actions-cache-usage-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "total_active_caches_count": 5,
                        "total_active_caches_size_in_bytes": 3344284
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "total_active_caches_count": {
                        "description": "The count of active caches across all repositories of an enterprise or an organization.",
                        "type": "integer"
                      },
                      "total_active_caches_size_in_bytes": {
                        "description": "The total size in bytes of all active cache items across all repositories of an enterprise or an organization.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_active_caches_count",
                      "total_active_caches_size_in_bytes"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "Get GitHub Actions cache usage for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "cache"
          }
        }
      },
      "/enterprises/{enterprise}/actions/oidc/customization/issuer": {
        "put": {
          "deprecated": null,
          "description": "Sets the GitHub Actions OpenID Connect (OIDC) custom issuer policy for an enterprise.\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions/oidc#set-actions-oidc-custom-issuer-policy-for-enterprise"
          },
          "operationId": "actions/set-actions-oidc-custom-issuer-policy-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "include_enterprise_slug": true
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "include_enterprise_slug": {
                      "description": "Whether the enterprise customer requested a custom issuer URL.",
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set the GitHub Actions OIDC custom issuer policy for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "oidc"
          }
        }
      },
      "/enterprises/{enterprise}/actions/permissions": {
        "get": {
          "deprecated": null,
          "description": "Gets the GitHub Actions permissions policy for organizations and allowed actions and reusable workflows in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-github-actions-permissions-for-an-enterprise"
          },
          "operationId": "enterprise-admin/get-github-actions-permissions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allowed_actions": "selected",
                        "enabled_organizations": "all",
                        "selected_actions_url": "https://api.github.com/enterprises/2/actions/permissions/selected-actions"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allowed_actions": {
                        "description": "The permissions policy that controls the actions and reusable workflows that are allowed to run.",
                        "enum": [
                          "all",
                          "local_only",
                          "selected"
                        ],
                        "type": "string"
                      },
                      "enabled_organizations": {
                        "description": "The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions.",
                        "enum": [
                          "all",
                          "none",
                          "selected"
                        ],
                        "type": "string"
                      },
                      "selected_actions_url": {
                        "description": "The API URL to use to get or set the actions and reusable workflows that are allowed to run, when `allowed_actions` is set to `selected`.",
                        "type": "string"
                      },
                      "selected_organizations_url": {
                        "description": "The API URL to use to get or set the selected organizations that are allowed to run GitHub Actions, when `enabled_organizations` is set to `selected`.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "enabled_organizations"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get GitHub Actions permissions for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Sets the GitHub Actions permissions policy for organizations and allowed actions and reusable workflows in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-github-actions-permissions-for-an-enterprise"
          },
          "operationId": "enterprise-admin/set-github-actions-permissions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "allowed_actions": "selected",
                      "enabled_organizations": "all"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "allowed_actions": {
                      "description": "The permissions policy that controls the actions and reusable workflows that are allowed to run.",
                      "enum": [
                        "all",
                        "local_only",
                        "selected"
                      ],
                      "type": "string"
                    },
                    "enabled_organizations": {
                      "description": "The policy that controls the organizations in the enterprise that are allowed to run GitHub Actions.",
                      "enum": [
                        "all",
                        "none",
                        "selected"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "enabled_organizations"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set GitHub Actions permissions for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        }
      },
      "/enterprises/{enterprise}/actions/permissions/organizations": {
        "get": {
          "deprecated": null,
          "description": "Lists the organizations that are selected to have GitHub Actions enabled in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-selected-organizations-enabled-for-github-actions-in-an-enterprise"
          },
          "operationId": "enterprise-admin/list-selected-organizations-enabled-github-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "organizations": [
                          {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "description": "A great organization",
                            "events_url": "https://api.github.com/orgs/octo-org/events",
                            "hooks_url": "https://api.github.com/orgs/octo-org/hooks",
                            "id": 161335,
                            "issues_url": "https://api.github.com/orgs/octo-org/issues",
                            "login": "octocat",
                            "members_url": "https://api.github.com/orgs/octo-org/members{/member}",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "public_members_url": "https://api.github.com/orgs/octo-org/public_members{/member}",
                            "repos_url": "https://api.github.com/orgs/octo-org/repos",
                            "url": "https://api.github.com/orgs/octo-org"
                          }
                        ],
                        "total_count": 1
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "organizations": {
                        "items": {
                          "description": "A GitHub organization.",
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "type": "string"
                            },
                            "description": {
                              "example": "A great organization",
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/orgs/github/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "hooks_url": {
                              "example": "https://api.github.com/orgs/github/hooks",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "issues_url": {
                              "example": "https://api.github.com/orgs/github/issues",
                              "type": "string"
                            },
                            "login": {
                              "example": "github",
                              "type": "string"
                            },
                            "members_url": {
                              "example": "https://api.github.com/orgs/github/members{/member}",
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDEyOk9yZ2FuaXphdGlvbjE=",
                              "type": "string"
                            },
                            "public_members_url": {
                              "example": "https://api.github.com/orgs/github/public_members{/member}",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/orgs/github/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/orgs/github",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "login",
                            "url",
                            "id",
                            "node_id",
                            "repos_url",
                            "events_url",
                            "hooks_url",
                            "issues_url",
                            "members_url",
                            "public_members_url",
                            "avatar_url",
                            "description"
                          ],
                          "title": "Organization Simple",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "organizations"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List selected organizations enabled for GitHub Actions in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-selected-organizations-enabled-for-github-actions-in-an-enterprise"
          },
          "operationId": "enterprise-admin/set-selected-organizations-enabled-github-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "selected_organization_ids": [
                        32,
                        91
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "selected_organization_ids": {
                      "description": "List of organization IDs to enable for GitHub Actions.",
                      "items": {
                        "description": "Unique identifier of the organization.",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "selected_organization_ids"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set selected organizations enabled for GitHub Actions in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        }
      },
      "/enterprises/{enterprise}/actions/permissions/organizations/{org_id}": {
        "delete": {
          "deprecated": null,
          "description": "Removes an organization from the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#disable-a-selected-organization-for-github-actions-in-an-enterprise"
          },
          "operationId": "enterprise-admin/disable-selected-organization-github-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the organization.",
              "in": "path",
              "name": "org_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Disable a selected organization for GitHub Actions in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Adds an organization to the list of selected organizations that are enabled for GitHub Actions in an enterprise. To use this endpoint, the enterprise permission policy for `enabled_organizations` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#enable-a-selected-organization-for-github-actions-in-an-enterprise"
          },
          "operationId": "enterprise-admin/enable-selected-organization-github-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the organization.",
              "in": "path",
              "name": "org_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Enable a selected organization for GitHub Actions in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        }
      },
      "/enterprises/{enterprise}/actions/permissions/selected-actions": {
        "get": {
          "deprecated": null,
          "description": "Gets the selected actions and reusable workflows that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-allowed-actions-for-an-enterprise"
          },
          "operationId": "enterprise-admin/get-allowed-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "github_owned_allowed": true,
                        "patterns_allowed": [
                          "monalisa/octocat@*",
                          "docker/*"
                        ],
                        "verified_allowed": false
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "github_owned_allowed": {
                        "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.",
                        "type": "boolean"
                      },
                      "patterns_allowed": {
                        "description": "Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "verified_allowed": {
                        "description": "Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Marketplace verified creators.",
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get allowed actions and reusable workflows for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Sets the actions and reusable workflows that are allowed in an enterprise. To use this endpoint, the enterprise permission policy for `allowed_actions` must be configured to `selected`. For more information, see \"[Set GitHub Actions permissions for an enterprise](#set-github-actions-permissions-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-allowed-actions-for-an-enterprise"
          },
          "operationId": "enterprise-admin/set-allowed-actions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "selected_actions": {
                    "value": {
                      "github_owned_allowed": true,
                      "patterns_allowed": [
                        "monalisa/octocat@*",
                        "docker/*"
                      ],
                      "verified_allowed": false
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "github_owned_allowed": {
                      "description": "Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.",
                      "type": "boolean"
                    },
                    "patterns_allowed": {
                      "description": "Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "verified_allowed": {
                      "description": "Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Marketplace verified creators.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set allowed actions and reusable workflows for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        }
      },
      "/enterprises/{enterprise}/actions/permissions/workflow": {
        "get": {
          "deprecated": null,
          "description": "Gets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an enterprise,\nas well as whether GitHub Actions can submit approving pull request reviews. For more information, see\n\"[Enforcing a policy for workflow permissions in your enterprise](https://docs.github.com/enterprise-cloud@latest//admin/policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-github-actions-in-your-enterprise#enforcing-a-policy-for-workflow-permissions-in-your-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-default-workflow-permissions-for-an-enterprise"
          },
          "operationId": "actions/get-github-actions-default-workflow-permissions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Give read-only permission, and allow approving PRs.",
                      "value": {
                        "can_approve_pull_request_reviews": true,
                        "default_workflow_permissions": "read"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "can_approve_pull_request_reviews": {
                        "description": "Whether GitHub Actions can approve pull requests. Enabling this can be a security risk.",
                        "type": "boolean"
                      },
                      "default_workflow_permissions": {
                        "description": "The default workflow permissions granted to the GITHUB_TOKEN when running workflows.",
                        "enum": [
                          "read",
                          "write"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "default_workflow_permissions",
                      "can_approve_pull_request_reviews"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Success response"
            }
          },
          "summary": "Get default workflow permissions for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Sets the default workflow permissions granted to the `GITHUB_TOKEN` when running workflows in an enterprise, and sets\nwhether GitHub Actions can submit approving pull request reviews. For more information, see\n\"[Enforcing a policy for workflow permissions in your enterprise](https://docs.github.com/enterprise-cloud@latest//admin/policies/enforcing-policies-for-your-enterprise/enforcing-policies-for-github-actions-in-your-enterprise#enforcing-a-policy-for-workflow-permissions-in-your-enterprise).\"\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-default-workflow-permissions-for-an-enterprise"
          },
          "operationId": "actions/set-github-actions-default-workflow-permissions-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "summary": "Give read-only permission, and allow approving PRs.",
                    "value": {
                      "can_approve_pull_request_reviews": true,
                      "default_workflow_permissions": "read"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "can_approve_pull_request_reviews": {
                      "description": "Whether GitHub Actions can approve pull requests. Enabling this can be a security risk.",
                      "type": "boolean"
                    },
                    "default_workflow_permissions": {
                      "description": "The default workflow permissions granted to the GITHUB_TOKEN when running workflows.",
                      "enum": [
                        "read",
                        "write"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Success response"
            }
          },
          "summary": "Set default workflow permissions for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "permissions"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups": {
        "get": {
          "deprecated": null,
          "description": "Lists all self-hosted runner groups for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runner-groups-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-self-hosted-runner-groups-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Only return runner groups that are allowed to be used by this organization.",
              "in": "query",
              "name": "visible_to_organization",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "runner_groups": [
                          {
                            "allows_public_repositories": false,
                            "default": true,
                            "id": 1,
                            "name": "Default",
                            "restricted_to_workflows": false,
                            "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/1/runners",
                            "visibility": "all",
                            "workflow_restrictions_read_only": false
                          },
                          {
                            "allows_public_repositories": true,
                            "default": false,
                            "id": 2,
                            "name": "octo-runner-group",
                            "restricted_to_workflows": true,
                            "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/2/runners",
                            "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/2/organizations",
                            "selected_workflows": [
                              "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                            ],
                            "visibility": "selected",
                            "workflow_restrictions_read_only": false
                          },
                          {
                            "allows_public_repositories": true,
                            "default": false,
                            "id": 3,
                            "name": "expensive-hardware",
                            "restricted_to_workflows": false,
                            "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/3/runners",
                            "selected_workflows": [
                              "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                            ],
                            "visibility": "private",
                            "workflow_restrictions_read_only": false
                          }
                        ],
                        "total_count": 3
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "runner_groups": {
                        "items": {
                          "properties": {
                            "allows_public_repositories": {
                              "type": "boolean"
                            },
                            "default": {
                              "type": "boolean"
                            },
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "restricted_to_workflows": {
                              "default": false,
                              "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                              "type": "boolean"
                            },
                            "runners_url": {
                              "type": "string"
                            },
                            "selected_organizations_url": {
                              "type": "string"
                            },
                            "selected_workflows": {
                              "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                              "items": {
                                "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                                "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "visibility": {
                              "type": "string"
                            },
                            "workflow_restrictions_read_only": {
                              "default": false,
                              "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "visibility",
                            "allows_public_repositories",
                            "default",
                            "runners_url"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "runner_groups"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List self-hosted runner groups for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "post": {
          "deprecated": null,
          "description": "Creates a new self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#create-self-hosted-runner-group-for-an-enterprise"
          },
          "operationId": "enterprise-admin/create-self-hosted-runner-group-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "name": "Expensive hardware runners",
                      "runners": [
                        9,
                        2
                      ],
                      "selected_organization_ids": [
                        32,
                        91
                      ],
                      "visibility": "selected"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "allows_public_repositories": {
                      "default": false,
                      "description": "Whether the runner group can be used by `public` repositories.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Name of the runner group.",
                      "type": "string"
                    },
                    "restricted_to_workflows": {
                      "default": false,
                      "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                      "type": "boolean"
                    },
                    "runners": {
                      "description": "List of runner IDs to add to the runner group.",
                      "items": {
                        "description": "Unique identifier of the runner.",
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    "selected_organization_ids": {
                      "description": "List of organization IDs that can access the runner group.",
                      "items": {
                        "description": "Unique identifier of the organization.",
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    "selected_workflows": {
                      "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                      "items": {
                        "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                        "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "visibility": {
                      "description": "Visibility of a runner group. You can select all organizations or select individual organization.",
                      "enum": [
                        "selected",
                        "all"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allows_public_repositories": false,
                        "default": false,
                        "id": 2,
                        "name": "octo-runner-group",
                        "restricted_to_workflows": true,
                        "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
                        "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
                        "selected_workflows": [
                          "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                        ],
                        "visibility": "selected",
                        "workflow_restrictions_read_only": false
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allows_public_repositories": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "restricted_to_workflows": {
                        "default": false,
                        "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                        "type": "boolean"
                      },
                      "runners_url": {
                        "type": "string"
                      },
                      "selected_organizations_url": {
                        "type": "string"
                      },
                      "selected_workflows": {
                        "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                        "items": {
                          "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                          "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "visibility": {
                        "type": "string"
                      },
                      "workflow_restrictions_read_only": {
                        "default": false,
                        "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "visibility",
                      "allows_public_repositories",
                      "default",
                      "runners_url"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a self-hosted runner group for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}": {
        "delete": {
          "deprecated": null,
          "description": "Deletes a self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#delete-a-self-hosted-runner-group-from-an-enterprise"
          },
          "operationId": "enterprise-admin/delete-self-hosted-runner-group-from-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a self-hosted runner group from an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Gets a specific self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-a-self-hosted-runner-group-for-an-enterprise"
          },
          "operationId": "enterprise-admin/get-self-hosted-runner-group-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allows_public_repositories": false,
                        "default": false,
                        "id": 2,
                        "name": "octo-runner-group",
                        "restricted_to_workflows": true,
                        "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
                        "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
                        "selected_workflows": [
                          "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                        ],
                        "visibility": "selected",
                        "workflow_restrictions_read_only": false
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allows_public_repositories": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "restricted_to_workflows": {
                        "default": false,
                        "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                        "type": "boolean"
                      },
                      "runners_url": {
                        "type": "string"
                      },
                      "selected_organizations_url": {
                        "type": "string"
                      },
                      "selected_workflows": {
                        "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                        "items": {
                          "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                          "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "visibility": {
                        "type": "string"
                      },
                      "workflow_restrictions_read_only": {
                        "default": false,
                        "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "visibility",
                      "allows_public_repositories",
                      "default",
                      "runners_url"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a self-hosted runner group for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Updates the `name` and `visibility` of a self-hosted runner group in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#update-a-self-hosted-runner-group-for-an-enterprise"
          },
          "operationId": "enterprise-admin/update-self-hosted-runner-group-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "name": "Expensive hardware runners",
                      "visibility": "selected"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "allows_public_repositories": {
                      "default": false,
                      "description": "Whether the runner group can be used by `public` repositories.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Name of the runner group.",
                      "type": "string"
                    },
                    "restricted_to_workflows": {
                      "default": false,
                      "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                      "type": "boolean"
                    },
                    "selected_workflows": {
                      "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                      "items": {
                        "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                        "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "visibility": {
                      "default": "all",
                      "description": "Visibility of a runner group. You can select all organizations or select individual organizations.",
                      "enum": [
                        "selected",
                        "all"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": false
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allows_public_repositories": true,
                        "default": false,
                        "id": 2,
                        "name": "Expensive hardware runners",
                        "restricted_to_workflows": false,
                        "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
                        "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
                        "selected_workflows": [
                          "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                        ],
                        "visibility": "selected",
                        "workflow_restrictions_read_only": false
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allows_public_repositories": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "restricted_to_workflows": {
                        "default": false,
                        "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                        "type": "boolean"
                      },
                      "runners_url": {
                        "type": "string"
                      },
                      "selected_organizations_url": {
                        "type": "string"
                      },
                      "selected_workflows": {
                        "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                        "items": {
                          "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                          "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "visibility": {
                        "type": "string"
                      },
                      "workflow_restrictions_read_only": {
                        "default": false,
                        "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "visibility",
                      "allows_public_repositories",
                      "default",
                      "runners_url"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update a self-hosted runner group for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations": {
        "get": {
          "deprecated": null,
          "description": "Lists the organizations with access to a self-hosted runner group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-organization-access-to-a-self-hosted-runner-group-in-a-enterprise"
          },
          "operationId": "enterprise-admin/list-org-access-to-self-hosted-runner-group-in-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "organizations": [
                          {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "description": "A great organization",
                            "events_url": "https://api.github.com/orgs/octo-org/events",
                            "hooks_url": "https://api.github.com/orgs/octo-org/hooks",
                            "id": 161335,
                            "issues_url": "https://api.github.com/orgs/octo-org/issues",
                            "login": "octocat",
                            "members_url": "https://api.github.com/orgs/octo-org/members{/member}",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "public_members_url": "https://api.github.com/orgs/octo-org/public_members{/member}",
                            "repos_url": "https://api.github.com/orgs/octo-org/repos",
                            "url": "https://api.github.com/orgs/octo-org"
                          }
                        ],
                        "total_count": 1
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "organizations": {
                        "items": {
                          "description": "A GitHub organization.",
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "type": "string"
                            },
                            "description": {
                              "example": "A great organization",
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/orgs/github/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "hooks_url": {
                              "example": "https://api.github.com/orgs/github/hooks",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "issues_url": {
                              "example": "https://api.github.com/orgs/github/issues",
                              "type": "string"
                            },
                            "login": {
                              "example": "github",
                              "type": "string"
                            },
                            "members_url": {
                              "example": "https://api.github.com/orgs/github/members{/member}",
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDEyOk9yZ2FuaXphdGlvbjE=",
                              "type": "string"
                            },
                            "public_members_url": {
                              "example": "https://api.github.com/orgs/github/public_members{/member}",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/orgs/github/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/orgs/github",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "login",
                            "url",
                            "id",
                            "node_id",
                            "repos_url",
                            "events_url",
                            "hooks_url",
                            "issues_url",
                            "members_url",
                            "public_members_url",
                            "avatar_url",
                            "description"
                          ],
                          "title": "Organization Simple",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "organizations"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List organization access to a self-hosted runner group in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces the list of organizations that have access to a self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
          },
          "operationId": "enterprise-admin/set-org-access-to-self-hosted-runner-group-in-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "selected_organization_ids": [
                        32,
                        91
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "selected_organization_ids": {
                      "description": "List of organization IDs that can access the runner group.",
                      "items": {
                        "description": "Unique identifier of the organization.",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "selected_organization_ids"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set organization access for a self-hosted runner group in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations/{org_id}": {
        "delete": {
          "deprecated": null,
          "description": "Removes an organization from the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
          },
          "operationId": "enterprise-admin/remove-org-access-to-self-hosted-runner-group-in-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the organization.",
              "in": "path",
              "name": "org_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove organization access to a self-hosted runner group in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Adds an organization to the list of selected organizations that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an enterprise](#create-a-self-hosted-runner-group-for-an-enterprise).\"\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-organization-access-to-a-self-hosted-runner-group-in-an-enterprise"
          },
          "operationId": "enterprise-admin/add-org-access-to-self-hosted-runner-group-in-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the organization.",
              "in": "path",
              "name": "org_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Add organization access to a self-hosted runner group in an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners": {
        "get": {
          "deprecated": null,
          "description": "Lists the self-hosted runners that are in a specific enterprise group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-self-hosted-runners-in-group-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "runners": [
                          {
                            "busy": true,
                            "id": 23,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 11,
                                "name": "Linux",
                                "type": "read-only"
                              }
                            ],
                            "name": "linux_runner",
                            "os": "linux",
                            "status": "online"
                          },
                          {
                            "busy": false,
                            "id": 24,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 20,
                                "name": "macOS",
                                "type": "read-only"
                              },
                              {
                                "id": 21,
                                "name": "no-gpu",
                                "type": "custom"
                              }
                            ],
                            "name": "mac_runner",
                            "os": "macos",
                            "status": "offline"
                          }
                        ],
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "runners": {
                        "items": {
                          "description": "A self hosted runner",
                          "properties": {
                            "busy": {
                              "type": "boolean"
                            },
                            "id": {
                              "description": "The id of the runner.",
                              "example": 5,
                              "type": "integer"
                            },
                            "labels": {
                              "items": {
                                "description": "A label for a self hosted runner",
                                "properties": {
                                  "id": {
                                    "description": "Unique identifier of the label.",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the label.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                                    "enum": [
                                      "read-only",
                                      "custom"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "title": "Self hosted runner label",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the runner.",
                              "example": "iMac",
                              "type": "string"
                            },
                            "os": {
                              "description": "The Operating System of the runner.",
                              "example": "macos",
                              "type": "string"
                            },
                            "runner_group_id": {
                              "description": "The id of the runner group.",
                              "example": 1,
                              "type": "integer"
                            },
                            "status": {
                              "description": "The status of the runner.",
                              "example": "online",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "os",
                            "status",
                            "busy",
                            "labels"
                          ],
                          "title": "Self hosted runners",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "runners"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List self-hosted runners in a group for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces the list of self-hosted runners that are part of an enterprise runner group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-self-hosted-runners-in-a-group-for-an-enterprise"
          },
          "operationId": "enterprise-admin/set-self-hosted-runners-in-group-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "runners": [
                        9,
                        2
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "runners": {
                      "description": "List of runner IDs to add to the runner group.",
                      "items": {
                        "description": "Unique identifier of the runner.",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "runners"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set self-hosted runners in a group for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners/{runner_id}": {
        "delete": {
          "deprecated": null,
          "description": "Removes a self-hosted runner from a group configured in an enterprise. The runner is then returned to the default group.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-a-self-hosted-runner-from-a-group-for-an-enterprise"
          },
          "operationId": "enterprise-admin/remove-self-hosted-runner-from-group-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove a self-hosted runner from a group for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Adds a self-hosted runner to a runner group configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise`\nscope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-a-self-hosted-runner-to-a-group-for-an-enterprise"
          },
          "operationId": "enterprise-admin/add-self-hosted-runner-to-group-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Add a self-hosted runner to a group for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners": {
        "get": {
          "deprecated": null,
          "description": "Lists all self-hosted runners configured for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runners-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-self-hosted-runners-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "runners": [
                          {
                            "busy": true,
                            "id": 23,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 11,
                                "name": "Linux",
                                "type": "read-only"
                              }
                            ],
                            "name": "linux_runner",
                            "os": "linux",
                            "status": "online"
                          },
                          {
                            "busy": false,
                            "id": 24,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 20,
                                "name": "macOS",
                                "type": "read-only"
                              },
                              {
                                "id": 21,
                                "name": "no-gpu",
                                "type": "custom"
                              }
                            ],
                            "name": "mac_runner",
                            "os": "macos",
                            "status": "offline"
                          }
                        ],
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "runners": {
                        "items": {
                          "description": "A self hosted runner",
                          "properties": {
                            "busy": {
                              "type": "boolean"
                            },
                            "id": {
                              "description": "The id of the runner.",
                              "example": 5,
                              "type": "integer"
                            },
                            "labels": {
                              "items": {
                                "description": "A label for a self hosted runner",
                                "properties": {
                                  "id": {
                                    "description": "Unique identifier of the label.",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the label.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                                    "enum": [
                                      "read-only",
                                      "custom"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "title": "Self hosted runner label",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the runner.",
                              "example": "iMac",
                              "type": "string"
                            },
                            "os": {
                              "description": "The Operating System of the runner.",
                              "example": "macos",
                              "type": "string"
                            },
                            "runner_group_id": {
                              "description": "The id of the runner group.",
                              "example": 1,
                              "type": "integer"
                            },
                            "status": {
                              "description": "The status of the runner.",
                              "example": "online",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "os",
                            "status",
                            "busy",
                            "labels"
                          ],
                          "title": "Self hosted runners",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List self-hosted runners for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/downloads": {
        "get": {
          "deprecated": null,
          "description": "Lists binaries for the runner application that you can download and run.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-runner-applications-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-runner-applications-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "architecture": "x64",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz",
                          "filename": "actions-runner-osx-x64-2.164.0.tar.gz",
                          "os": "osx"
                        },
                        {
                          "architecture": "x64",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz",
                          "filename": "actions-runner-linux-x64-2.164.0.tar.gz",
                          "os": "linux"
                        },
                        {
                          "architecture": "arm",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz",
                          "filename": "actions-runner-linux-arm-2.164.0.tar.gz",
                          "os": "linux"
                        },
                        {
                          "architecture": "x64",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip",
                          "filename": "actions-runner-win-x64-2.164.0.zip",
                          "os": "win"
                        },
                        {
                          "architecture": "arm64",
                          "download_url": "https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz",
                          "filename": "actions-runner-linux-arm64-2.164.0.tar.gz",
                          "os": "linux"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "Runner Application",
                      "properties": {
                        "architecture": {
                          "type": "string"
                        },
                        "download_url": {
                          "type": "string"
                        },
                        "filename": {
                          "type": "string"
                        },
                        "os": {
                          "type": "string"
                        },
                        "sha256_checksum": {
                          "type": "string"
                        },
                        "temp_download_token": {
                          "description": "A short lived bearer token used to download the runner, if needed.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "os",
                        "architecture",
                        "download_url",
                        "filename"
                      ],
                      "title": "Runner Application",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List runner applications for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/registration-token": {
        "post": {
          "deprecated": null,
          "description": "Returns a token that you can pass to the `config` script. The token expires after one hour.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.\n\n#### Example using registration token\n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/enterprises/octo-enterprise --token TOKEN\n```",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#create-a-registration-token-for-an-enterprise"
          },
          "operationId": "enterprise-admin/create-registration-token-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "expires_at": "2020-01-22T12:13:35.123-08:00",
                        "token": "LLBF3JGZDX3P5PMEXLND6TS6FCWO6"
                      }
                    }
                  },
                  "schema": {
                    "description": "Authentication Token",
                    "properties": {
                      "expires_at": {
                        "description": "The time this token expires",
                        "example": "2016-07-11T22:14:10Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissions": {
                        "example": {
                          "deployments": "write",
                          "issues": "read"
                        },
                        "type": "object"
                      },
                      "repositories": {
                        "description": "The repositories this token has access to",
                        "items": {
                          "description": "A repository on GitHub.",
                          "properties": {
                            "allow_auto_merge": {
                              "default": false,
                              "description": "Whether to allow Auto-merge to be used on pull requests.",
                              "example": false,
                              "type": "boolean"
                            },
                            "allow_forking": {
                              "description": "Whether to allow forking this repo",
                              "type": "boolean"
                            },
                            "allow_merge_commit": {
                              "default": true,
                              "description": "Whether to allow merge commits for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_rebase_merge": {
                              "default": true,
                              "description": "Whether to allow rebase merges for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_squash_merge": {
                              "default": true,
                              "description": "Whether to allow squash merges for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_update_branch": {
                              "default": false,
                              "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
                              "example": false,
                              "type": "boolean"
                            },
                            "anonymous_access_enabled": {
                              "description": "Whether anonymous git access is enabled for this repository",
                              "type": "boolean"
                            },
                            "archive_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "type": "string"
                            },
                            "archived": {
                              "default": false,
                              "description": "Whether the repository is archived.",
                              "type": "boolean"
                            },
                            "assignees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "type": "string"
                            },
                            "blobs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "type": "string"
                            },
                            "branches_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "type": "string"
                            },
                            "clone_url": {
                              "example": "https://github.com/octocat/Hello-World.git",
                              "type": "string"
                            },
                            "collaborators_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "type": "string"
                            },
                            "comments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "type": "string"
                            },
                            "commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "type": "string"
                            },
                            "compare_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "type": "string"
                            },
                            "contents_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "type": "string"
                            },
                            "contributors_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                              "format": "uri",
                              "type": "string"
                            },
                            "created_at": {
                              "example": "2011-01-26T19:01:12Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "default_branch": {
                              "description": "The default branch of the repository.",
                              "example": "master",
                              "type": "string"
                            },
                            "delete_branch_on_merge": {
                              "default": false,
                              "description": "Whether to delete head branches when pull requests are merged",
                              "example": false,
                              "type": "boolean"
                            },
                            "deployments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                              "format": "uri",
                              "type": "string"
                            },
                            "description": {
                              "example": "This your first repo!",
                              "nullable": true,
                              "type": "string"
                            },
                            "disabled": {
                              "description": "Returns whether or not this repository disabled.",
                              "type": "boolean"
                            },
                            "downloads_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                              "format": "uri",
                              "type": "string"
                            },
                            "events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "fork": {
                              "type": "boolean"
                            },
                            "forks": {
                              "type": "integer"
                            },
                            "forks_count": {
                              "example": 9,
                              "type": "integer"
                            },
                            "forks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                              "format": "uri",
                              "type": "string"
                            },
                            "full_name": {
                              "example": "octocat/Hello-World",
                              "type": "string"
                            },
                            "git_commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "type": "string"
                            },
                            "git_refs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "type": "string"
                            },
                            "git_tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "type": "string"
                            },
                            "git_url": {
                              "example": "git:github.com/octocat/Hello-World.git",
                              "type": "string"
                            },
                            "has_discussions": {
                              "default": false,
                              "description": "Whether discussions are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_downloads": {
                              "default": true,
                              "description": "Whether downloads are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_issues": {
                              "default": true,
                              "description": "Whether issues are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_pages": {
                              "type": "boolean"
                            },
                            "has_projects": {
                              "default": true,
                              "description": "Whether projects are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_wiki": {
                              "default": true,
                              "description": "Whether the wiki is enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "homepage": {
                              "example": "https://github.com",
                              "format": "uri",
                              "nullable": true,
                              "type": "string"
                            },
                            "hooks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                              "format": "uri",
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "description": "Unique identifier of the repository",
                              "example": 42,
                              "type": "integer"
                            },
                            "is_template": {
                              "default": false,
                              "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                              "example": true,
                              "type": "boolean"
                            },
                            "issue_comment_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "type": "string"
                            },
                            "issue_events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "type": "string"
                            },
                            "issues_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "type": "string"
                            },
                            "keys_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "type": "string"
                            },
                            "labels_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "type": "string"
                            },
                            "language": {
                              "nullable": true,
                              "type": "string"
                            },
                            "languages_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                              "format": "uri",
                              "type": "string"
                            },
                            "license": {
                              "description": "License Simple",
                              "nullable": true,
                              "properties": {
                                "html_url": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "key": {
                                  "example": "mit",
                                  "type": "string"
                                },
                                "name": {
                                  "example": "MIT License",
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDc6TGljZW5zZW1pdA==",
                                  "type": "string"
                                },
                                "spdx_id": {
                                  "example": "MIT",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/licenses/mit",
                                  "format": "uri",
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "key",
                                "name",
                                "url",
                                "spdx_id",
                                "node_id"
                              ],
                              "title": "License Simple",
                              "type": "object"
                            },
                            "master_branch": {
                              "type": "string"
                            },
                            "merge_commit_message": {
                              "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
                              "enum": [
                                "PR_BODY",
                                "PR_TITLE",
                                "BLANK"
                              ],
                              "type": "string"
                            },
                            "merge_commit_title": {
                              "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
                              "enum": [
                                "PR_TITLE",
                                "MERGE_MESSAGE"
                              ],
                              "type": "string"
                            },
                            "merges_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                              "format": "uri",
                              "type": "string"
                            },
                            "milestones_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "type": "string"
                            },
                            "mirror_url": {
                              "example": "git:git.example.com/octocat/Hello-World",
                              "format": "uri",
                              "nullable": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the repository.",
                              "example": "Team Environment",
                              "type": "string"
                            },
                            "network_count": {
                              "type": "integer"
                            },
                            "node_id": {
                              "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "type": "string"
                            },
                            "notifications_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "type": "string"
                            },
                            "open_issues": {
                              "type": "integer"
                            },
                            "open_issues_count": {
                              "example": 0,
                              "type": "integer"
                            },
                            "organization": {
                              "description": "A GitHub user.",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "owner": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "permissions": {
                              "properties": {
                                "admin": {
                                  "type": "boolean"
                                },
                                "maintain": {
                                  "type": "boolean"
                                },
                                "pull": {
                                  "type": "boolean"
                                },
                                "push": {
                                  "type": "boolean"
                                },
                                "triage": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "admin",
                                "pull",
                                "push"
                              ],
                              "type": "object"
                            },
                            "private": {
                              "default": false,
                              "description": "Whether the repository is private or public.",
                              "type": "boolean"
                            },
                            "pulls_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "type": "string"
                            },
                            "pushed_at": {
                              "example": "2011-01-26T19:06:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "releases_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "type": "string"
                            },
                            "size": {
                              "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
                              "example": 108,
                              "type": "integer"
                            },
                            "squash_merge_commit_message": {
                              "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
                              "enum": [
                                "PR_BODY",
                                "COMMIT_MESSAGES",
                                "BLANK"
                              ],
                              "type": "string"
                            },
                            "squash_merge_commit_title": {
                              "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
                              "enum": [
                                "PR_TITLE",
                                "COMMIT_OR_PR_TITLE"
                              ],
                              "type": "string"
                            },
                            "ssh_url": {
                              "example": "git@github.com:octocat/Hello-World.git",
                              "type": "string"
                            },
                            "stargazers_count": {
                              "example": 80,
                              "type": "integer"
                            },
                            "stargazers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                              "format": "uri",
                              "type": "string"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:42Z\"",
                              "type": "string"
                            },
                            "statuses_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "type": "string"
                            },
                            "subscribers_count": {
                              "type": "integer"
                            },
                            "subscribers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                              "format": "uri",
                              "type": "string"
                            },
                            "subscription_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                              "format": "uri",
                              "type": "string"
                            },
                            "svn_url": {
                              "example": "https://svn.github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                              "format": "uri",
                              "type": "string"
                            },
                            "teams_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                              "format": "uri",
                              "type": "string"
                            },
                            "temp_clone_token": {
                              "type": "string"
                            },
                            "template_repository": {
                              "nullable": true,
                              "properties": {
                                "allow_auto_merge": {
                                  "type": "boolean"
                                },
                                "allow_merge_commit": {
                                  "type": "boolean"
                                },
                                "allow_rebase_merge": {
                                  "type": "boolean"
                                },
                                "allow_squash_merge": {
                                  "type": "boolean"
                                },
                                "allow_update_branch": {
                                  "type": "boolean"
                                },
                                "archive_url": {
                                  "type": "string"
                                },
                                "archived": {
                                  "type": "boolean"
                                },
                                "assignees_url": {
                                  "type": "string"
                                },
                                "blobs_url": {
                                  "type": "string"
                                },
                                "branches_url": {
                                  "type": "string"
                                },
                                "clone_url": {
                                  "type": "string"
                                },
                                "collaborators_url": {
                                  "type": "string"
                                },
                                "comments_url": {
                                  "type": "string"
                                },
                                "commits_url": {
                                  "type": "string"
                                },
                                "compare_url": {
                                  "type": "string"
                                },
                                "contents_url": {
                                  "type": "string"
                                },
                                "contributors_url": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "type": "string"
                                },
                                "default_branch": {
                                  "type": "string"
                                },
                                "delete_branch_on_merge": {
                                  "type": "boolean"
                                },
                                "deployments_url": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "disabled": {
                                  "type": "boolean"
                                },
                                "downloads_url": {
                                  "type": "string"
                                },
                                "events_url": {
                                  "type": "string"
                                },
                                "fork": {
                                  "type": "boolean"
                                },
                                "forks_count": {
                                  "type": "integer"
                                },
                                "forks_url": {
                                  "type": "string"
                                },
                                "full_name": {
                                  "type": "string"
                                },
                                "git_commits_url": {
                                  "type": "string"
                                },
                                "git_refs_url": {
                                  "type": "string"
                                },
                                "git_tags_url": {
                                  "type": "string"
                                },
                                "git_url": {
                                  "type": "string"
                                },
                                "has_downloads": {
                                  "type": "boolean"
                                },
                                "has_issues": {
                                  "type": "boolean"
                                },
                                "has_pages": {
                                  "type": "boolean"
                                },
                                "has_projects": {
                                  "type": "boolean"
                                },
                                "has_wiki": {
                                  "type": "boolean"
                                },
                                "homepage": {
                                  "type": "string"
                                },
                                "hooks_url": {
                                  "type": "string"
                                },
                                "html_url": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "integer"
                                },
                                "is_template": {
                                  "type": "boolean"
                                },
                                "issue_comment_url": {
                                  "type": "string"
                                },
                                "issue_events_url": {
                                  "type": "string"
                                },
                                "issues_url": {
                                  "type": "string"
                                },
                                "keys_url": {
                                  "type": "string"
                                },
                                "labels_url": {
                                  "type": "string"
                                },
                                "language": {
                                  "type": "string"
                                },
                                "languages_url": {
                                  "type": "string"
                                },
                                "merge_commit_message": {
                                  "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
                                  "enum": [
                                    "PR_BODY",
                                    "PR_TITLE",
                                    "BLANK"
                                  ],
                                  "type": "string"
                                },
                                "merge_commit_title": {
                                  "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
                                  "enum": [
                                    "PR_TITLE",
                                    "MERGE_MESSAGE"
                                  ],
                                  "type": "string"
                                },
                                "merges_url": {
                                  "type": "string"
                                },
                                "milestones_url": {
                                  "type": "string"
                                },
                                "mirror_url": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "network_count": {
                                  "type": "integer"
                                },
                                "node_id": {
                                  "type": "string"
                                },
                                "notifications_url": {
                                  "type": "string"
                                },
                                "open_issues_count": {
                                  "type": "integer"
                                },
                                "owner": {
                                  "properties": {
                                    "avatar_url": {
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "login": {
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "type": "string"
                                    },
                                    "site_admin": {
                                      "type": "boolean"
                                    },
                                    "starred_url": {
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "permissions": {
                                  "properties": {
                                    "admin": {
                                      "type": "boolean"
                                    },
                                    "maintain": {
                                      "type": "boolean"
                                    },
                                    "pull": {
                                      "type": "boolean"
                                    },
                                    "push": {
                                      "type": "boolean"
                                    },
                                    "triage": {
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "private": {
                                  "type": "boolean"
                                },
                                "pulls_url": {
                                  "type": "string"
                                },
                                "pushed_at": {
                                  "type": "string"
                                },
                                "releases_url": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "integer"
                                },
                                "squash_merge_commit_message": {
                                  "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
                                  "enum": [
                                    "PR_BODY",
                                    "COMMIT_MESSAGES",
                                    "BLANK"
                                  ],
                                  "type": "string"
                                },
                                "squash_merge_commit_title": {
                                  "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
                                  "enum": [
                                    "PR_TITLE",
                                    "COMMIT_OR_PR_TITLE"
                                  ],
                                  "type": "string"
                                },
                                "ssh_url": {
                                  "type": "string"
                                },
                                "stargazers_count": {
                                  "type": "integer"
                                },
                                "stargazers_url": {
                                  "type": "string"
                                },
                                "statuses_url": {
                                  "type": "string"
                                },
                                "subscribers_count": {
                                  "type": "integer"
                                },
                                "subscribers_url": {
                                  "type": "string"
                                },
                                "subscription_url": {
                                  "type": "string"
                                },
                                "svn_url": {
                                  "type": "string"
                                },
                                "tags_url": {
                                  "type": "string"
                                },
                                "teams_url": {
                                  "type": "string"
                                },
                                "temp_clone_token": {
                                  "type": "string"
                                },
                                "topics": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "trees_url": {
                                  "type": "string"
                                },
                                "updated_at": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                },
                                "use_squash_pr_title_as_default": {
                                  "type": "boolean"
                                },
                                "visibility": {
                                  "type": "string"
                                },
                                "watchers_count": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "topics": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "trees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "type": "string"
                            },
                            "updated_at": {
                              "example": "2011-01-26T19:14:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/repos/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "use_squash_pr_title_as_default": {
                              "default": false,
                              "deprecated": true,
                              "description": "Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
                              "type": "boolean"
                            },
                            "visibility": {
                              "default": "public",
                              "description": "The repository visibility: public, private, or internal.",
                              "type": "string"
                            },
                            "watchers": {
                              "type": "integer"
                            },
                            "watchers_count": {
                              "example": 80,
                              "type": "integer"
                            },
                            "web_commit_signoff_required": {
                              "default": false,
                              "description": "Whether to require contributors to sign off on web-based commits",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "archive_url",
                            "assignees_url",
                            "blobs_url",
                            "branches_url",
                            "collaborators_url",
                            "comments_url",
                            "commits_url",
                            "compare_url",
                            "contents_url",
                            "contributors_url",
                            "deployments_url",
                            "description",
                            "downloads_url",
                            "events_url",
                            "fork",
                            "forks_url",
                            "full_name",
                            "git_commits_url",
                            "git_refs_url",
                            "git_tags_url",
                            "hooks_url",
                            "html_url",
                            "id",
                            "node_id",
                            "issue_comment_url",
                            "issue_events_url",
                            "issues_url",
                            "keys_url",
                            "labels_url",
                            "languages_url",
                            "merges_url",
                            "milestones_url",
                            "name",
                            "notifications_url",
                            "owner",
                            "private",
                            "pulls_url",
                            "releases_url",
                            "stargazers_url",
                            "statuses_url",
                            "subscribers_url",
                            "subscription_url",
                            "tags_url",
                            "teams_url",
                            "trees_url",
                            "url",
                            "clone_url",
                            "default_branch",
                            "forks",
                            "forks_count",
                            "git_url",
                            "has_downloads",
                            "has_issues",
                            "has_projects",
                            "has_wiki",
                            "has_pages",
                            "homepage",
                            "language",
                            "archived",
                            "disabled",
                            "mirror_url",
                            "open_issues",
                            "open_issues_count",
                            "license",
                            "pushed_at",
                            "size",
                            "ssh_url",
                            "stargazers_count",
                            "svn_url",
                            "watchers",
                            "watchers_count",
                            "created_at",
                            "updated_at"
                          ],
                          "title": "Repository",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "repository_selection": {
                        "description": "Describe whether all repositories have been selected or there's a selection involved",
                        "enum": [
                          "all",
                          "selected"
                        ],
                        "type": "string"
                      },
                      "single_file": {
                        "example": "config.yaml",
                        "nullable": true,
                        "type": "string"
                      },
                      "token": {
                        "description": "The token used for authentication",
                        "example": "v1.1f699f1069f60xxx",
                        "type": "string"
                      }
                    },
                    "required": [
                      "token",
                      "expires_at"
                    ],
                    "title": "Authentication Token",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a registration token for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/remove-token": {
        "post": {
          "deprecated": null,
          "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner from an enterprise. The token expires after one hour.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.\n\n#### Example using remove token\n\nTo remove your self-hosted runner from an enterprise, replace `TOKEN` with the remove token provided by this\nendpoint.\n\n```\n./config.sh remove --token TOKEN\n```",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#create-a-remove-token-for-an-enterprise"
          },
          "operationId": "enterprise-admin/create-remove-token-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "expires_at": "2020-01-29T12:13:35.123-08:00",
                        "token": "AABF3JGZDX3P5PMEXLND6TS6FCWO6"
                      }
                    }
                  },
                  "schema": {
                    "description": "Authentication Token",
                    "properties": {
                      "expires_at": {
                        "description": "The time this token expires",
                        "example": "2016-07-11T22:14:10Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "permissions": {
                        "example": {
                          "deployments": "write",
                          "issues": "read"
                        },
                        "type": "object"
                      },
                      "repositories": {
                        "description": "The repositories this token has access to",
                        "items": {
                          "description": "A repository on GitHub.",
                          "properties": {
                            "allow_auto_merge": {
                              "default": false,
                              "description": "Whether to allow Auto-merge to be used on pull requests.",
                              "example": false,
                              "type": "boolean"
                            },
                            "allow_forking": {
                              "description": "Whether to allow forking this repo",
                              "type": "boolean"
                            },
                            "allow_merge_commit": {
                              "default": true,
                              "description": "Whether to allow merge commits for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_rebase_merge": {
                              "default": true,
                              "description": "Whether to allow rebase merges for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_squash_merge": {
                              "default": true,
                              "description": "Whether to allow squash merges for pull requests.",
                              "example": true,
                              "type": "boolean"
                            },
                            "allow_update_branch": {
                              "default": false,
                              "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
                              "example": false,
                              "type": "boolean"
                            },
                            "anonymous_access_enabled": {
                              "description": "Whether anonymous git access is enabled for this repository",
                              "type": "boolean"
                            },
                            "archive_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "type": "string"
                            },
                            "archived": {
                              "default": false,
                              "description": "Whether the repository is archived.",
                              "type": "boolean"
                            },
                            "assignees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "type": "string"
                            },
                            "blobs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "type": "string"
                            },
                            "branches_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "type": "string"
                            },
                            "clone_url": {
                              "example": "https://github.com/octocat/Hello-World.git",
                              "type": "string"
                            },
                            "collaborators_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "type": "string"
                            },
                            "comments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "type": "string"
                            },
                            "commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "type": "string"
                            },
                            "compare_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "type": "string"
                            },
                            "contents_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "type": "string"
                            },
                            "contributors_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                              "format": "uri",
                              "type": "string"
                            },
                            "created_at": {
                              "example": "2011-01-26T19:01:12Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "default_branch": {
                              "description": "The default branch of the repository.",
                              "example": "master",
                              "type": "string"
                            },
                            "delete_branch_on_merge": {
                              "default": false,
                              "description": "Whether to delete head branches when pull requests are merged",
                              "example": false,
                              "type": "boolean"
                            },
                            "deployments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                              "format": "uri",
                              "type": "string"
                            },
                            "description": {
                              "example": "This your first repo!",
                              "nullable": true,
                              "type": "string"
                            },
                            "disabled": {
                              "description": "Returns whether or not this repository disabled.",
                              "type": "boolean"
                            },
                            "downloads_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                              "format": "uri",
                              "type": "string"
                            },
                            "events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "fork": {
                              "type": "boolean"
                            },
                            "forks": {
                              "type": "integer"
                            },
                            "forks_count": {
                              "example": 9,
                              "type": "integer"
                            },
                            "forks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                              "format": "uri",
                              "type": "string"
                            },
                            "full_name": {
                              "example": "octocat/Hello-World",
                              "type": "string"
                            },
                            "git_commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "type": "string"
                            },
                            "git_refs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "type": "string"
                            },
                            "git_tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "type": "string"
                            },
                            "git_url": {
                              "example": "git:github.com/octocat/Hello-World.git",
                              "type": "string"
                            },
                            "has_discussions": {
                              "default": false,
                              "description": "Whether discussions are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_downloads": {
                              "default": true,
                              "description": "Whether downloads are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_issues": {
                              "default": true,
                              "description": "Whether issues are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_pages": {
                              "type": "boolean"
                            },
                            "has_projects": {
                              "default": true,
                              "description": "Whether projects are enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "has_wiki": {
                              "default": true,
                              "description": "Whether the wiki is enabled.",
                              "example": true,
                              "type": "boolean"
                            },
                            "homepage": {
                              "example": "https://github.com",
                              "format": "uri",
                              "nullable": true,
                              "type": "string"
                            },
                            "hooks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                              "format": "uri",
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "description": "Unique identifier of the repository",
                              "example": 42,
                              "type": "integer"
                            },
                            "is_template": {
                              "default": false,
                              "description": "Whether this repository acts as a template that can be used to generate new repositories.",
                              "example": true,
                              "type": "boolean"
                            },
                            "issue_comment_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "type": "string"
                            },
                            "issue_events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "type": "string"
                            },
                            "issues_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "type": "string"
                            },
                            "keys_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "type": "string"
                            },
                            "labels_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "type": "string"
                            },
                            "language": {
                              "nullable": true,
                              "type": "string"
                            },
                            "languages_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                              "format": "uri",
                              "type": "string"
                            },
                            "license": {
                              "description": "License Simple",
                              "nullable": true,
                              "properties": {
                                "html_url": {
                                  "format": "uri",
                                  "type": "string"
                                },
                                "key": {
                                  "example": "mit",
                                  "type": "string"
                                },
                                "name": {
                                  "example": "MIT License",
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDc6TGljZW5zZW1pdA==",
                                  "type": "string"
                                },
                                "spdx_id": {
                                  "example": "MIT",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/licenses/mit",
                                  "format": "uri",
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "key",
                                "name",
                                "url",
                                "spdx_id",
                                "node_id"
                              ],
                              "title": "License Simple",
                              "type": "object"
                            },
                            "master_branch": {
                              "type": "string"
                            },
                            "merge_commit_message": {
                              "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
                              "enum": [
                                "PR_BODY",
                                "PR_TITLE",
                                "BLANK"
                              ],
                              "type": "string"
                            },
                            "merge_commit_title": {
                              "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
                              "enum": [
                                "PR_TITLE",
                                "MERGE_MESSAGE"
                              ],
                              "type": "string"
                            },
                            "merges_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                              "format": "uri",
                              "type": "string"
                            },
                            "milestones_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "type": "string"
                            },
                            "mirror_url": {
                              "example": "git:git.example.com/octocat/Hello-World",
                              "format": "uri",
                              "nullable": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the repository.",
                              "example": "Team Environment",
                              "type": "string"
                            },
                            "network_count": {
                              "type": "integer"
                            },
                            "node_id": {
                              "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "type": "string"
                            },
                            "notifications_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "type": "string"
                            },
                            "open_issues": {
                              "type": "integer"
                            },
                            "open_issues_count": {
                              "example": 0,
                              "type": "integer"
                            },
                            "organization": {
                              "description": "A GitHub user.",
                              "nullable": true,
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "owner": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "permissions": {
                              "properties": {
                                "admin": {
                                  "type": "boolean"
                                },
                                "maintain": {
                                  "type": "boolean"
                                },
                                "pull": {
                                  "type": "boolean"
                                },
                                "push": {
                                  "type": "boolean"
                                },
                                "triage": {
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "admin",
                                "pull",
                                "push"
                              ],
                              "type": "object"
                            },
                            "private": {
                              "default": false,
                              "description": "Whether the repository is private or public.",
                              "type": "boolean"
                            },
                            "pulls_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "type": "string"
                            },
                            "pushed_at": {
                              "example": "2011-01-26T19:06:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "releases_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "type": "string"
                            },
                            "size": {
                              "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
                              "example": 108,
                              "type": "integer"
                            },
                            "squash_merge_commit_message": {
                              "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
                              "enum": [
                                "PR_BODY",
                                "COMMIT_MESSAGES",
                                "BLANK"
                              ],
                              "type": "string"
                            },
                            "squash_merge_commit_title": {
                              "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
                              "enum": [
                                "PR_TITLE",
                                "COMMIT_OR_PR_TITLE"
                              ],
                              "type": "string"
                            },
                            "ssh_url": {
                              "example": "git@github.com:octocat/Hello-World.git",
                              "type": "string"
                            },
                            "stargazers_count": {
                              "example": 80,
                              "type": "integer"
                            },
                            "stargazers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                              "format": "uri",
                              "type": "string"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:42Z\"",
                              "type": "string"
                            },
                            "statuses_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "type": "string"
                            },
                            "subscribers_count": {
                              "type": "integer"
                            },
                            "subscribers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                              "format": "uri",
                              "type": "string"
                            },
                            "subscription_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                              "format": "uri",
                              "type": "string"
                            },
                            "svn_url": {
                              "example": "https://svn.github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                              "format": "uri",
                              "type": "string"
                            },
                            "teams_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                              "format": "uri",
                              "type": "string"
                            },
                            "temp_clone_token": {
                              "type": "string"
                            },
                            "template_repository": {
                              "nullable": true,
                              "properties": {
                                "allow_auto_merge": {
                                  "type": "boolean"
                                },
                                "allow_merge_commit": {
                                  "type": "boolean"
                                },
                                "allow_rebase_merge": {
                                  "type": "boolean"
                                },
                                "allow_squash_merge": {
                                  "type": "boolean"
                                },
                                "allow_update_branch": {
                                  "type": "boolean"
                                },
                                "archive_url": {
                                  "type": "string"
                                },
                                "archived": {
                                  "type": "boolean"
                                },
                                "assignees_url": {
                                  "type": "string"
                                },
                                "blobs_url": {
                                  "type": "string"
                                },
                                "branches_url": {
                                  "type": "string"
                                },
                                "clone_url": {
                                  "type": "string"
                                },
                                "collaborators_url": {
                                  "type": "string"
                                },
                                "comments_url": {
                                  "type": "string"
                                },
                                "commits_url": {
                                  "type": "string"
                                },
                                "compare_url": {
                                  "type": "string"
                                },
                                "contents_url": {
                                  "type": "string"
                                },
                                "contributors_url": {
                                  "type": "string"
                                },
                                "created_at": {
                                  "type": "string"
                                },
                                "default_branch": {
                                  "type": "string"
                                },
                                "delete_branch_on_merge": {
                                  "type": "boolean"
                                },
                                "deployments_url": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "disabled": {
                                  "type": "boolean"
                                },
                                "downloads_url": {
                                  "type": "string"
                                },
                                "events_url": {
                                  "type": "string"
                                },
                                "fork": {
                                  "type": "boolean"
                                },
                                "forks_count": {
                                  "type": "integer"
                                },
                                "forks_url": {
                                  "type": "string"
                                },
                                "full_name": {
                                  "type": "string"
                                },
                                "git_commits_url": {
                                  "type": "string"
                                },
                                "git_refs_url": {
                                  "type": "string"
                                },
                                "git_tags_url": {
                                  "type": "string"
                                },
                                "git_url": {
                                  "type": "string"
                                },
                                "has_downloads": {
                                  "type": "boolean"
                                },
                                "has_issues": {
                                  "type": "boolean"
                                },
                                "has_pages": {
                                  "type": "boolean"
                                },
                                "has_projects": {
                                  "type": "boolean"
                                },
                                "has_wiki": {
                                  "type": "boolean"
                                },
                                "homepage": {
                                  "type": "string"
                                },
                                "hooks_url": {
                                  "type": "string"
                                },
                                "html_url": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "integer"
                                },
                                "is_template": {
                                  "type": "boolean"
                                },
                                "issue_comment_url": {
                                  "type": "string"
                                },
                                "issue_events_url": {
                                  "type": "string"
                                },
                                "issues_url": {
                                  "type": "string"
                                },
                                "keys_url": {
                                  "type": "string"
                                },
                                "labels_url": {
                                  "type": "string"
                                },
                                "language": {
                                  "type": "string"
                                },
                                "languages_url": {
                                  "type": "string"
                                },
                                "merge_commit_message": {
                                  "description": "The default value for a merge commit message.\n\n- `PR_TITLE` - default to the pull request's title.\n- `PR_BODY` - default to the pull request's body.\n- `BLANK` - default to a blank commit message.",
                                  "enum": [
                                    "PR_BODY",
                                    "PR_TITLE",
                                    "BLANK"
                                  ],
                                  "type": "string"
                                },
                                "merge_commit_title": {
                                  "description": "The default value for a merge commit title.\n\n- `PR_TITLE` - default to the pull request's title.\n- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).",
                                  "enum": [
                                    "PR_TITLE",
                                    "MERGE_MESSAGE"
                                  ],
                                  "type": "string"
                                },
                                "merges_url": {
                                  "type": "string"
                                },
                                "milestones_url": {
                                  "type": "string"
                                },
                                "mirror_url": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "network_count": {
                                  "type": "integer"
                                },
                                "node_id": {
                                  "type": "string"
                                },
                                "notifications_url": {
                                  "type": "string"
                                },
                                "open_issues_count": {
                                  "type": "integer"
                                },
                                "owner": {
                                  "properties": {
                                    "avatar_url": {
                                      "type": "string"
                                    },
                                    "events_url": {
                                      "type": "string"
                                    },
                                    "followers_url": {
                                      "type": "string"
                                    },
                                    "following_url": {
                                      "type": "string"
                                    },
                                    "gists_url": {
                                      "type": "string"
                                    },
                                    "gravatar_id": {
                                      "type": "string"
                                    },
                                    "html_url": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "login": {
                                      "type": "string"
                                    },
                                    "node_id": {
                                      "type": "string"
                                    },
                                    "organizations_url": {
                                      "type": "string"
                                    },
                                    "received_events_url": {
                                      "type": "string"
                                    },
                                    "repos_url": {
                                      "type": "string"
                                    },
                                    "site_admin": {
                                      "type": "boolean"
                                    },
                                    "starred_url": {
                                      "type": "string"
                                    },
                                    "subscriptions_url": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "url": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "permissions": {
                                  "properties": {
                                    "admin": {
                                      "type": "boolean"
                                    },
                                    "maintain": {
                                      "type": "boolean"
                                    },
                                    "pull": {
                                      "type": "boolean"
                                    },
                                    "push": {
                                      "type": "boolean"
                                    },
                                    "triage": {
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "private": {
                                  "type": "boolean"
                                },
                                "pulls_url": {
                                  "type": "string"
                                },
                                "pushed_at": {
                                  "type": "string"
                                },
                                "releases_url": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "integer"
                                },
                                "squash_merge_commit_message": {
                                  "description": "The default value for a squash merge commit message:\n\n- `PR_BODY` - default to the pull request's body.\n- `COMMIT_MESSAGES` - default to the branch's commit messages.\n- `BLANK` - default to a blank commit message.",
                                  "enum": [
                                    "PR_BODY",
                                    "COMMIT_MESSAGES",
                                    "BLANK"
                                  ],
                                  "type": "string"
                                },
                                "squash_merge_commit_title": {
                                  "description": "The default value for a squash merge commit title:\n\n- `PR_TITLE` - default to the pull request's title.\n- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).",
                                  "enum": [
                                    "PR_TITLE",
                                    "COMMIT_OR_PR_TITLE"
                                  ],
                                  "type": "string"
                                },
                                "ssh_url": {
                                  "type": "string"
                                },
                                "stargazers_count": {
                                  "type": "integer"
                                },
                                "stargazers_url": {
                                  "type": "string"
                                },
                                "statuses_url": {
                                  "type": "string"
                                },
                                "subscribers_count": {
                                  "type": "integer"
                                },
                                "subscribers_url": {
                                  "type": "string"
                                },
                                "subscription_url": {
                                  "type": "string"
                                },
                                "svn_url": {
                                  "type": "string"
                                },
                                "tags_url": {
                                  "type": "string"
                                },
                                "teams_url": {
                                  "type": "string"
                                },
                                "temp_clone_token": {
                                  "type": "string"
                                },
                                "topics": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "trees_url": {
                                  "type": "string"
                                },
                                "updated_at": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                },
                                "use_squash_pr_title_as_default": {
                                  "type": "boolean"
                                },
                                "visibility": {
                                  "type": "string"
                                },
                                "watchers_count": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "topics": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "trees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "type": "string"
                            },
                            "updated_at": {
                              "example": "2011-01-26T19:14:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/repos/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "use_squash_pr_title_as_default": {
                              "default": false,
                              "deprecated": true,
                              "description": "Whether a squash merge commit can use the pull request title as default. **This property has been deprecated. Please use `squash_merge_commit_title` instead.",
                              "type": "boolean"
                            },
                            "visibility": {
                              "default": "public",
                              "description": "The repository visibility: public, private, or internal.",
                              "type": "string"
                            },
                            "watchers": {
                              "type": "integer"
                            },
                            "watchers_count": {
                              "example": 80,
                              "type": "integer"
                            },
                            "web_commit_signoff_required": {
                              "default": false,
                              "description": "Whether to require contributors to sign off on web-based commits",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "archive_url",
                            "assignees_url",
                            "blobs_url",
                            "branches_url",
                            "collaborators_url",
                            "comments_url",
                            "commits_url",
                            "compare_url",
                            "contents_url",
                            "contributors_url",
                            "deployments_url",
                            "description",
                            "downloads_url",
                            "events_url",
                            "fork",
                            "forks_url",
                            "full_name",
                            "git_commits_url",
                            "git_refs_url",
                            "git_tags_url",
                            "hooks_url",
                            "html_url",
                            "id",
                            "node_id",
                            "issue_comment_url",
                            "issue_events_url",
                            "issues_url",
                            "keys_url",
                            "labels_url",
                            "languages_url",
                            "merges_url",
                            "milestones_url",
                            "name",
                            "notifications_url",
                            "owner",
                            "private",
                            "pulls_url",
                            "releases_url",
                            "stargazers_url",
                            "statuses_url",
                            "subscribers_url",
                            "subscription_url",
                            "tags_url",
                            "teams_url",
                            "trees_url",
                            "url",
                            "clone_url",
                            "default_branch",
                            "forks",
                            "forks_count",
                            "git_url",
                            "has_downloads",
                            "has_issues",
                            "has_projects",
                            "has_wiki",
                            "has_pages",
                            "homepage",
                            "language",
                            "archived",
                            "disabled",
                            "mirror_url",
                            "open_issues",
                            "open_issues_count",
                            "license",
                            "pushed_at",
                            "size",
                            "ssh_url",
                            "stargazers_count",
                            "svn_url",
                            "watchers",
                            "watchers_count",
                            "created_at",
                            "updated_at"
                          ],
                          "title": "Repository",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "repository_selection": {
                        "description": "Describe whether all repositories have been selected or there's a selection involved",
                        "enum": [
                          "all",
                          "selected"
                        ],
                        "type": "string"
                      },
                      "single_file": {
                        "example": "config.yaml",
                        "nullable": true,
                        "type": "string"
                      },
                      "token": {
                        "description": "The token used for authentication",
                        "example": "v1.1f699f1069f60xxx",
                        "type": "string"
                      }
                    },
                    "required": [
                      "token",
                      "expires_at"
                    ],
                    "title": "Authentication Token",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a remove token for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/{runner_id}": {
        "delete": {
          "deprecated": null,
          "description": "Forces the removal of a self-hosted runner from an enterprise. You can use this endpoint to completely remove the runner when the machine you were using no longer exists.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#delete-self-hosted-runner-from-an-enterprise"
          },
          "operationId": "enterprise-admin/delete-self-hosted-runner-from-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a self-hosted runner from an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Gets a specific self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-a-self-hosted-runner-for-an-enterprise"
          },
          "operationId": "enterprise-admin/get-self-hosted-runner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "busy": true,
                        "id": 23,
                        "labels": [
                          {
                            "id": 5,
                            "name": "self-hosted",
                            "type": "read-only"
                          },
                          {
                            "id": 7,
                            "name": "X64",
                            "type": "read-only"
                          },
                          {
                            "id": 20,
                            "name": "macOS",
                            "type": "read-only"
                          },
                          {
                            "id": 21,
                            "name": "no-gpu",
                            "type": "custom"
                          }
                        ],
                        "name": "MBP",
                        "os": "macos",
                        "status": "online"
                      }
                    }
                  },
                  "schema": {
                    "description": "A self hosted runner",
                    "properties": {
                      "busy": {
                        "type": "boolean"
                      },
                      "id": {
                        "description": "The id of the runner.",
                        "example": 5,
                        "type": "integer"
                      },
                      "labels": {
                        "items": {
                          "description": "A label for a self hosted runner",
                          "properties": {
                            "id": {
                              "description": "Unique identifier of the label.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the label.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                              "enum": [
                                "read-only",
                                "custom"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "title": "Self hosted runner label",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "name": {
                        "description": "The name of the runner.",
                        "example": "iMac",
                        "type": "string"
                      },
                      "os": {
                        "description": "The Operating System of the runner.",
                        "example": "macos",
                        "type": "string"
                      },
                      "runner_group_id": {
                        "description": "The id of the runner group.",
                        "example": 1,
                        "type": "integer"
                      },
                      "status": {
                        "description": "The status of the runner.",
                        "example": "online",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "os",
                      "status",
                      "busy",
                      "labels"
                    ],
                    "title": "Self hosted runners",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a self-hosted runner for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/{runner_id}/labels": {
        "delete": {
          "deprecated": null,
          "description": "Remove all custom labels from a self-hosted runner configured in an\nenterprise. Returns the remaining read-only labels from the runner.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-all-custom-labels-from-a-self-hosted-runner-for-an-enterprise"
          },
          "operationId": "enterprise-admin/remove-all-custom-labels-from-self-hosted-runner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "labels": [
                          {
                            "id": 5,
                            "name": "self-hosted",
                            "type": "read-only"
                          },
                          {
                            "id": 7,
                            "name": "X64",
                            "type": "read-only"
                          },
                          {
                            "id": 20,
                            "name": "macOS",
                            "type": "read-only"
                          }
                        ],
                        "total_count": 3
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "labels": {
                        "items": {
                          "description": "A label for a self hosted runner",
                          "properties": {
                            "id": {
                              "description": "Unique identifier of the label.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the label.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                              "enum": [
                                "read-only",
                                "custom"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "title": "Self hosted runner label",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_count",
                      "labels"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error Simple",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error Simple",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Remove all custom labels from a self-hosted runner for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Lists all labels for a self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-labels-for-a-self-hosted-runner-for-an-enterprise"
          },
          "operationId": "enterprise-admin/list-labels-for-self-hosted-runner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "labels": [
                          {
                            "id": 5,
                            "name": "self-hosted",
                            "type": "read-only"
                          },
                          {
                            "id": 7,
                            "name": "X64",
                            "type": "read-only"
                          },
                          {
                            "id": 20,
                            "name": "macOS",
                            "type": "read-only"
                          },
                          {
                            "id": 21,
                            "name": "no-gpu",
                            "type": "custom"
                          }
                        ],
                        "total_count": 4
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "labels": {
                        "items": {
                          "description": "A label for a self hosted runner",
                          "properties": {
                            "id": {
                              "description": "Unique identifier of the label.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the label.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                              "enum": [
                                "read-only",
                                "custom"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "title": "Self hosted runner label",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_count",
                      "labels"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "List labels for a self-hosted runner for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        },
        "post": {
          "deprecated": null,
          "description": "Add custom labels to a self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-custom-labels-to-a-self-hosted-runner-for-an-enterprise"
          },
          "operationId": "enterprise-admin/add-custom-labels-to-self-hosted-runner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "labels": [
                        "gpu",
                        "accelerated"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "labels": {
                      "description": "The names of the custom labels to add to the runner.",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 1,
                      "type": "array"
                    }
                  },
                  "required": [
                    "labels"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "labels": [
                          {
                            "id": 5,
                            "name": "self-hosted",
                            "type": "read-only"
                          },
                          {
                            "id": 7,
                            "name": "X64",
                            "type": "read-only"
                          },
                          {
                            "id": 20,
                            "name": "macOS",
                            "type": "read-only"
                          },
                          {
                            "id": 21,
                            "name": "no-gpu",
                            "type": "custom"
                          }
                        ],
                        "total_count": 4
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "labels": {
                        "items": {
                          "description": "A label for a self hosted runner",
                          "properties": {
                            "id": {
                              "description": "Unique identifier of the label.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the label.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                              "enum": [
                                "read-only",
                                "custom"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "title": "Self hosted runner label",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_count",
                      "labels"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error Simple",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error Simple",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Add custom labels to a self-hosted runner for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Remove all previous custom labels and set the new custom labels for a specific\nself-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-custom-labels-for-a-self-hosted-runner-for-an-enterprise"
          },
          "operationId": "enterprise-admin/set-custom-labels-for-self-hosted-runner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "labels": [
                        "gpu",
                        "accelerated"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "labels": {
                      "description": "The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels.",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 100,
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "labels"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "labels": [
                          {
                            "id": 5,
                            "name": "self-hosted",
                            "type": "read-only"
                          },
                          {
                            "id": 7,
                            "name": "X64",
                            "type": "read-only"
                          },
                          {
                            "id": 20,
                            "name": "macOS",
                            "type": "read-only"
                          },
                          {
                            "id": 21,
                            "name": "no-gpu",
                            "type": "custom"
                          }
                        ],
                        "total_count": 4
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "labels": {
                        "items": {
                          "description": "A label for a self hosted runner",
                          "properties": {
                            "id": {
                              "description": "Unique identifier of the label.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the label.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                              "enum": [
                                "read-only",
                                "custom"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "title": "Self hosted runner label",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_count",
                      "labels"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error Simple",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error Simple",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Set custom labels for a self-hosted runner for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}": {
        "delete": {
          "deprecated": null,
          "description": "Remove a custom label from a self-hosted runner configured\nin an enterprise. Returns the remaining labels from the runner.\n\nThis endpoint returns a `404 Not Found` status if the custom label is not\npresent on the runner.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-a-custom-label-from-a-self-hosted-runner-for-an-enterprise"
          },
          "operationId": "enterprise-admin/remove-custom-label-from-self-hosted-runner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "The name of a self-hosted runner's custom label.",
              "in": "path",
              "name": "name",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "labels": [
                          {
                            "id": 5,
                            "name": "self-hosted",
                            "type": "read-only"
                          },
                          {
                            "id": 7,
                            "name": "X64",
                            "type": "read-only"
                          },
                          {
                            "id": 20,
                            "name": "macOS",
                            "type": "read-only"
                          },
                          {
                            "id": 21,
                            "name": "no-gpu",
                            "type": "custom"
                          }
                        ],
                        "total_count": 4
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "labels": {
                        "items": {
                          "description": "A label for a self hosted runner",
                          "properties": {
                            "id": {
                              "description": "Unique identifier of the label.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the label.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                              "enum": [
                                "read-only",
                                "custom"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "title": "Self hosted runner label",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_count",
                      "labels"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error Simple",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error Simple",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Remove a custom label from a self-hosted runner for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runners"
          }
        }
      },
      "/enterprises/{enterprise}/announcement": {
        "delete": {
          "deprecated": null,
          "description": "Removes the announcement banner currently set for the enterprise.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/announcement-banners/enterprises#remove-announcement-banner-from-enterprise"
          },
          "operationId": "announcement-banners/remove-announcement-banner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove announcement banner from enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "announcement-banners",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "enterprises"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Gets the announcement banner currently set for the enterprise.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/announcement-banners#get-announcement-banner-for-enterprise"
          },
          "operationId": "announcement-banners/get-announcement-banner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Announcement banner",
                      "value": {
                        "announcement": "Very **important** announcement about _something_.",
                        "expires_at": "2021-01-01T00:00:00.000+00:00",
                        "user_dismissible": false
                      }
                    }
                  },
                  "schema": {
                    "description": "Announcement at either the repository, organization, or enterprise level",
                    "properties": {
                      "announcement": {
                        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-cloud@latest//github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                        "example": "Very **important** announcement about _something_.",
                        "nullable": true,
                        "type": "string"
                      },
                      "expires_at": {
                        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                        "example": "\"2021-01-01T00:00:00.000-07:00\"",
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "user_dismissible": {
                        "default": false,
                        "description": "Whether an announcement can be dismissed by the user.",
                        "example": false,
                        "nullable": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "announcement",
                      "expires_at",
                      "user_dismissible"
                    ],
                    "title": "Announcement Banner",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get announcement banner for enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "announcement-banners",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "enterprises"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Sets the announcement banner to display for the enterprise.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/announcement-banners/enterprises#set-announcement-banner-for-enterprise"
          },
          "operationId": "announcement-banners/set-announcement-banner-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "summary": "Announcement banner",
                    "value": {
                      "announcement": "Very **important** announcement about _something_.",
                      "expires_at": "2021-01-01T00:00:00.000+00:00",
                      "user_dismissible": false
                    }
                  }
                },
                "schema": {
                  "description": "Enterprise global announcement",
                  "properties": {
                    "announcement": {
                      "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-cloud@latest//github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                      "example": "Very **important** announcement about _something_.",
                      "nullable": true,
                      "type": "string"
                    },
                    "expires_at": {
                      "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                      "example": "\"2021-01-01T00:00:00.000-07:00\"",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "announcement"
                  ],
                  "title": "Enterprise Announcement",
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Announcement banner",
                      "value": {
                        "announcement": "Very **important** announcement about _something_.",
                        "expires_at": "2021-01-01T00:00:00.000+00:00",
                        "user_dismissible": false
                      }
                    }
                  },
                  "schema": {
                    "description": "Announcement at either the repository, organization, or enterprise level",
                    "properties": {
                      "announcement": {
                        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-cloud@latest//github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                        "example": "Very **important** announcement about _something_.",
                        "nullable": true,
                        "type": "string"
                      },
                      "expires_at": {
                        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                        "example": "\"2021-01-01T00:00:00.000-07:00\"",
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "user_dismissible": {
                        "default": false,
                        "description": "Whether an announcement can be dismissed by the user.",
                        "example": false,
                        "nullable": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "announcement",
                      "expires_at",
                      "user_dismissible"
                    ],
                    "title": "Announcement Banner",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Set announcement banner for enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "announcement-banners",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "enterprises"
          }
        }
      },
      "/enterprises/{enterprise}/audit-log": {
        "get": {
          "deprecated": null,
          "description": "Gets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the `read:audit_log` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#get-the-audit-log-for-an-enterprise"
          },
          "operationId": "enterprise-admin/get-audit-log",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-cloud@latest//admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/searching-the-audit-log-for-your-enterprise#searching-the-audit-log).",
              "in": "query",
              "name": "phrase",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
              "in": "query",
              "name": "include",
              "required": false,
              "schema": {
                "enum": [
                  "web",
                  "git",
                  "all"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events after this cursor.",
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events before this cursor.",
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\nThe default is `desc`.",
              "in": "query",
              "name": "order",
              "required": false,
              "schema": {
                "enum": [
                  "desc",
                  "asc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "@timestamp": 1606929874512,
                          "_document_id": "xJJFlFOhQ6b-5vaAFy9Rjw",
                          "action": "team.add_member",
                          "actor": "octocat",
                          "created_at": 1606929874512,
                          "org": "octo-corp",
                          "team": "octo-corp/example-team",
                          "user": "monalisa"
                        },
                        {
                          "@timestamp": 1606507117008,
                          "_document_id": "Vqvg6kZ4MYqwWRKFDzlMoQ",
                          "action": "org.create",
                          "actor": "octocat",
                          "created_at": 1606507117008,
                          "org": "octocat-test-org"
                        },
                        {
                          "@timestamp": 1605719148837,
                          "_document_id": "LwW2vpJZCDS-WUmo9Z-ifw",
                          "action": "repo.destroy",
                          "actor": "monalisa",
                          "created_at": 1605719148837,
                          "org": "mona-org",
                          "repo": "mona-org/mona-test-repo",
                          "visibility": "private"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "@timestamp": {
                          "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "_document_id": {
                          "description": "A unique identifier for an audit event.",
                          "type": "string"
                        },
                        "action": {
                          "description": "The name of the action that was performed, for example `user.login` or `repo.create`.",
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "active_was": {
                          "type": "boolean"
                        },
                        "actor": {
                          "description": "The actor who performed the action.",
                          "type": "string"
                        },
                        "actor_id": {
                          "description": "The id of the actor who performed the action.",
                          "type": "integer"
                        },
                        "actor_location": {
                          "properties": {
                            "country_name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "blocked_user": {
                          "description": "The username of the account being blocked.",
                          "type": "string"
                        },
                        "business": {
                          "type": "string"
                        },
                        "business_id": {
                          "type": "integer"
                        },
                        "config": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "config_was": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "content_type": {
                          "type": "string"
                        },
                        "created_at": {
                          "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "data": {
                          "additionalProperties": true,
                          "type": "object"
                        },
                        "deploy_key_fingerprint": {
                          "type": "string"
                        },
                        "emoji": {
                          "type": "string"
                        },
                        "events": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "events_were": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "explanation": {
                          "type": "string"
                        },
                        "fingerprint": {
                          "type": "string"
                        },
                        "hook_id": {
                          "type": "integer"
                        },
                        "limited_availability": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "old_user": {
                          "type": "string"
                        },
                        "openssh_public_key": {
                          "type": "string"
                        },
                        "operation_type": {
                          "type": "string"
                        },
                        "org": {
                          "type": "string"
                        },
                        "org_id": {
                          "type": "integer"
                        },
                        "previous_visibility": {
                          "type": "string"
                        },
                        "read_only": {
                          "type": "boolean"
                        },
                        "repo": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository_public": {
                          "type": "boolean"
                        },
                        "target_login": {
                          "type": "string"
                        },
                        "team": {
                          "type": "string"
                        },
                        "transport_protocol": {
                          "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "integer"
                        },
                        "transport_protocol_name": {
                          "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "string"
                        },
                        "user": {
                          "description": "The user that was affected by the action performed (if available).",
                          "type": "string"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "visibility": {
                          "description": "The repository visibility, for example `public` or `private`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the audit log for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "audit-log"
          },
          "x-octokit": {
            "changes": [
              {
                "before": {
                  "operationId": "audit-log/get-audit-log"
                },
                "date": "2021-04-30",
                "type": "OPERATION"
              }
            ]
          }
        }
      },
      "/enterprises/{enterprise}/code-scanning/alerts": {
        "get": {
          "deprecated": null,
          "description": "Lists code scanning alerts for the default branch for all eligible repositories in an enterprise. Eligible repositories are repositories that are owned by organizations that you own or for which you are a security manager. For more information, see \"[Managing security managers in your organization](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).\"\n\nTo use this endpoint, you must be a member of the enterprise,\nand you must use an access token with the `repo` scope or `security_events` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/code-scanning#list-code-scanning-alerts-for-an-enterprise"
          },
          "operationId": "code-scanning/list-alerts-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.",
              "in": "query",
              "name": "tool_name",
              "required": false,
              "schema": {
                "description": "The name of the tool used to generate the code scanning analysis.",
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.",
              "in": "query",
              "name": "tool_guid",
              "required": false,
              "schema": {
                "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                "nullable": true,
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor.",
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor.",
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The direction to sort the results by.",
              "in": "query",
              "name": "direction",
              "required": false,
              "schema": {
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "If specified, only code scanning alerts with this state will be returned.",
              "in": "query",
              "name": "state",
              "required": false,
              "schema": {
                "description": "State of a code scanning alert.",
                "enum": [
                  "open",
                  "closed",
                  "dismissed",
                  "fixed"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The property by which to sort the results.",
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "default": "created",
                "enum": [
                  "created",
                  "updated"
                ],
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "created_at": "2020-02-13T12:29:18Z",
                          "dismissed_at": null,
                          "dismissed_by": null,
                          "dismissed_comment": null,
                          "dismissed_reason": null,
                          "html_url": "https://github.com/octocat/hello-world/code-scanning/4",
                          "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4/instances",
                          "most_recent_instance": {
                            "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                            "category": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                            "classifications": [
                              "test"
                            ],
                            "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
                            "environment": "{}",
                            "location": {
                              "end_column": 18,
                              "end_line": 917,
                              "path": "spec-main/api-session-spec.ts",
                              "start_column": 7,
                              "start_line": 917
                            },
                            "message": {
                              "text": "This path depends on a user-provided value."
                            },
                            "ref": "refs/heads/main",
                            "state": "open"
                          },
                          "number": 4,
                          "repository": {
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                            "description": "This your first repo!",
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                            "fork": false,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                            "full_name": "octocat/Hello-World",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                            "html_url": "https://github.com/octocat/Hello-World",
                            "id": 1296269,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "name": "Hello-World",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "url": "https://api.github.com/repos/octocat/Hello-World"
                          },
                          "rule": {
                            "description": "Arbitrary file write during zip extraction",
                            "id": "js/zipslip",
                            "name": "js/zipslip",
                            "severity": "error",
                            "tags": [
                              "security",
                              "external/cwe/cwe-022"
                            ]
                          },
                          "state": "open",
                          "tool": {
                            "guid": null,
                            "name": "CodeQL",
                            "version": "2.4.0"
                          },
                          "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4"
                        },
                        {
                          "created_at": "2020-02-13T12:29:18Z",
                          "dismissed_at": "2020-02-14T12:29:18Z",
                          "dismissed_by": {
                            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                            "followers_url": "https://api.github.com/users/octocat/followers",
                            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "html_url": "https://github.com/octocat",
                            "id": 1,
                            "login": "octocat",
                            "node_id": "MDQ6VXNlcjE=",
                            "organizations_url": "https://api.github.com/users/octocat/orgs",
                            "received_events_url": "https://api.github.com/users/octocat/received_events",
                            "repos_url": "https://api.github.com/users/octocat/repos",
                            "site_admin": false,
                            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                            "type": "User",
                            "url": "https://api.github.com/users/octocat"
                          },
                          "dismissed_comment": "This alert is not actually correct, because there's a sanitizer included in the library.",
                          "dismissed_reason": "false positive",
                          "html_url": "https://github.com/octocat/hello-world/code-scanning/3",
                          "instances_url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3/instances",
                          "most_recent_instance": {
                            "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                            "category": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
                            "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
                            "environment": "{}",
                            "location": {
                              "end_column": 18,
                              "end_line": 917,
                              "path": "lib/ab12-gen.js",
                              "start_column": 7,
                              "start_line": 917
                            },
                            "message": {
                              "text": "This path depends on a user-provided value."
                            },
                            "ref": "refs/heads/main",
                            "state": "open"
                          },
                          "number": 3,
                          "repository": {
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                            "description": "This your first repo!",
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                            "fork": false,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                            "full_name": "octocat/Hello-World",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                            "html_url": "https://github.com/octocat/Hello-World",
                            "id": 1296269,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "name": "Hello-World",
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "url": "https://api.github.com/repos/octocat/Hello-World"
                          },
                          "rule": {
                            "description": "Arbitrary file write during zip extraction",
                            "id": "js/zipslip",
                            "name": "js/zipslip",
                            "severity": "error",
                            "tags": [
                              "security",
                              "external/cwe/cwe-022"
                            ]
                          },
                          "state": "dismissed",
                          "tool": {
                            "guid": null,
                            "name": "CodeQL",
                            "version": "2.4.0"
                          },
                          "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string"
                        },
                        "dismissed_at": {
                          "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "format": "date-time",
                          "nullable": true,
                          "readOnly": true,
                          "type": "string"
                        },
                        "dismissed_by": {
                          "description": "A GitHub user.",
                          "nullable": true,
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                              "type": "string"
                            },
                            "followers_url": {
                              "example": "https://api.github.com/users/octocat/followers",
                              "format": "uri",
                              "type": "string"
                            },
                            "following_url": {
                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                              "type": "string"
                            },
                            "gists_url": {
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "type": "string"
                            },
                            "gravatar_id": {
                              "example": "41d064eb2195891e12d0413f63227ea7",
                              "nullable": true,
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "login": {
                              "example": "octocat",
                              "type": "string"
                            },
                            "name": {
                              "nullable": true,
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDQ6VXNlcjE=",
                              "type": "string"
                            },
                            "organizations_url": {
                              "example": "https://api.github.com/users/octocat/orgs",
                              "format": "uri",
                              "type": "string"
                            },
                            "received_events_url": {
                              "example": "https://api.github.com/users/octocat/received_events",
                              "format": "uri",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "site_admin": {
                              "type": "boolean"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:55Z\"",
                              "type": "string"
                            },
                            "starred_url": {
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "type": "string"
                            },
                            "subscriptions_url": {
                              "example": "https://api.github.com/users/octocat/subscriptions",
                              "format": "uri",
                              "type": "string"
                            },
                            "type": {
                              "example": "User",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/users/octocat",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "title": "Simple User",
                          "type": "object"
                        },
                        "dismissed_comment": {
                          "description": "The dismissal comment associated with the dismissal of the alert.",
                          "maxLength": 280,
                          "nullable": true,
                          "type": "string"
                        },
                        "dismissed_reason": {
                          "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert.",
                          "enum": [
                            null,
                            "false positive",
                            "won't fix",
                            "used in tests"
                          ],
                          "nullable": true,
                          "type": "string"
                        },
                        "fixed_at": {
                          "description": "The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "format": "date-time",
                          "nullable": true,
                          "readOnly": true,
                          "type": "string"
                        },
                        "html_url": {
                          "description": "The GitHub URL of the alert resource.",
                          "format": "uri",
                          "readOnly": true,
                          "type": "string"
                        },
                        "instances_url": {
                          "description": "The REST API URL for fetching the list of instances for an alert.",
                          "format": "uri",
                          "readOnly": true,
                          "type": "string"
                        },
                        "most_recent_instance": {
                          "properties": {
                            "analysis_key": {
                              "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name.",
                              "type": "string"
                            },
                            "category": {
                              "description": "Identifies the configuration under which the analysis was executed. Used to distinguish between multiple analyses for the same tool and commit, but performed on different languages or different parts of the code.",
                              "type": "string"
                            },
                            "classifications": {
                              "description": "Classifications that have been applied to the file that triggered the alert.\nFor example identifying it as documentation, or a generated file.",
                              "items": {
                                "description": "A classification of the file. For example to identify it as generated.",
                                "enum": [
                                  "source",
                                  "generated",
                                  "test",
                                  "library"
                                ],
                                "nullable": true,
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "commit_sha": {
                              "type": "string"
                            },
                            "environment": {
                              "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed.",
                              "type": "string"
                            },
                            "html_url": {
                              "type": "string"
                            },
                            "location": {
                              "description": "Describe a region within a file for the alert.",
                              "properties": {
                                "end_column": {
                                  "type": "integer"
                                },
                                "end_line": {
                                  "type": "integer"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "start_column": {
                                  "type": "integer"
                                },
                                "start_line": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "message": {
                              "properties": {
                                "text": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "ref": {
                              "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`.",
                              "type": "string"
                            },
                            "state": {
                              "description": "State of a code scanning alert.",
                              "enum": [
                                "open",
                                "closed",
                                "dismissed",
                                "fixed"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "number": {
                          "description": "The security alert number.",
                          "readOnly": true,
                          "type": "integer"
                        },
                        "repository": {
                          "description": "A GitHub repository.",
                          "properties": {
                            "archive_url": {
                              "description": "A template for the API URL to download the repository as an archive.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "type": "string"
                            },
                            "assignees_url": {
                              "description": "A template for the API URL to list the available assignees for issues in the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "type": "string"
                            },
                            "blobs_url": {
                              "description": "A template for the API URL to create or retrieve a raw Git blob in the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "type": "string"
                            },
                            "branches_url": {
                              "description": "A template for the API URL to get information about branches in the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "type": "string"
                            },
                            "collaborators_url": {
                              "description": "A template for the API URL to get information about collaborators of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "type": "string"
                            },
                            "comments_url": {
                              "description": "A template for the API URL to get information about comments on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "type": "string"
                            },
                            "commits_url": {
                              "description": "A template for the API URL to get information about commits on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "type": "string"
                            },
                            "compare_url": {
                              "description": "A template for the API URL to compare two commits or refs.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "type": "string"
                            },
                            "contents_url": {
                              "description": "A template for the API URL to get the contents of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "type": "string"
                            },
                            "contributors_url": {
                              "description": "A template for the API URL to list the contributors to the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/contributors",
                              "format": "uri",
                              "type": "string"
                            },
                            "deployments_url": {
                              "description": "The API URL to list the deployments of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/deployments",
                              "format": "uri",
                              "type": "string"
                            },
                            "description": {
                              "description": "The repository description.",
                              "example": "This your first repo!",
                              "nullable": true,
                              "type": "string"
                            },
                            "downloads_url": {
                              "description": "The API URL to list the downloads on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/downloads",
                              "format": "uri",
                              "type": "string"
                            },
                            "events_url": {
                              "description": "The API URL to list the events of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "fork": {
                              "description": "Whether the repository is a fork.",
                              "type": "boolean"
                            },
                            "forks_url": {
                              "description": "The API URL to list the forks of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/forks",
                              "format": "uri",
                              "type": "string"
                            },
                            "full_name": {
                              "description": "The full, globally unique, name of the repository.",
                              "example": "octocat/Hello-World",
                              "type": "string"
                            },
                            "git_commits_url": {
                              "description": "A template for the API URL to get information about Git commits of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "type": "string"
                            },
                            "git_refs_url": {
                              "description": "A template for the API URL to get information about Git refs of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "type": "string"
                            },
                            "git_tags_url": {
                              "description": "A template for the API URL to get information about Git tags of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "type": "string"
                            },
                            "hooks_url": {
                              "description": "The API URL to list the hooks on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/hooks",
                              "format": "uri",
                              "type": "string"
                            },
                            "html_url": {
                              "description": "The URL to view the repository on GitHub.com.",
                              "example": "https://github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "description": "A unique identifier of the repository.",
                              "example": 1296269,
                              "type": "integer"
                            },
                            "issue_comment_url": {
                              "description": "A template for the API URL to get information about issue comments on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "type": "string"
                            },
                            "issue_events_url": {
                              "description": "A template for the API URL to get information about issue events on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "type": "string"
                            },
                            "issues_url": {
                              "description": "A template for the API URL to get information about issues on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "type": "string"
                            },
                            "keys_url": {
                              "description": "A template for the API URL to get information about deploy keys on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "type": "string"
                            },
                            "labels_url": {
                              "description": "A template for the API URL to get information about labels of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "type": "string"
                            },
                            "languages_url": {
                              "description": "The API URL to get information about the languages of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/languages",
                              "format": "uri",
                              "type": "string"
                            },
                            "merges_url": {
                              "description": "The API URL to merge branches in the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/merges",
                              "format": "uri",
                              "type": "string"
                            },
                            "milestones_url": {
                              "description": "A template for the API URL to get information about milestones of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the repository.",
                              "example": "Hello-World",
                              "type": "string"
                            },
                            "node_id": {
                              "description": "The GraphQL identifier of the repository.",
                              "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "type": "string"
                            },
                            "notifications_url": {
                              "description": "A template for the API URL to get information about notifications on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "type": "string"
                            },
                            "owner": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "private": {
                              "description": "Whether the repository is private.",
                              "type": "boolean"
                            },
                            "pulls_url": {
                              "description": "A template for the API URL to get information about pull requests on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "type": "string"
                            },
                            "releases_url": {
                              "description": "A template for the API URL to get information about releases on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "type": "string"
                            },
                            "stargazers_url": {
                              "description": "The API URL to list the stargazers on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                              "format": "uri",
                              "type": "string"
                            },
                            "statuses_url": {
                              "description": "A template for the API URL to get information about statuses of a commit.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "type": "string"
                            },
                            "subscribers_url": {
                              "description": "The API URL to list the subscribers on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                              "format": "uri",
                              "type": "string"
                            },
                            "subscription_url": {
                              "description": "The API URL to subscribe to notifications for this repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/subscription",
                              "format": "uri",
                              "type": "string"
                            },
                            "tags_url": {
                              "description": "The API URL to get information about tags on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/tags",
                              "format": "uri",
                              "type": "string"
                            },
                            "teams_url": {
                              "description": "The API URL to list the teams on the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/teams",
                              "format": "uri",
                              "type": "string"
                            },
                            "trees_url": {
                              "description": "A template for the API URL to create or retrieve a raw Git tree of the repository.",
                              "example": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "type": "string"
                            },
                            "url": {
                              "description": "The URL to get more information about the repository from the GitHub API.",
                              "example": "https://api.github.com/repos/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "archive_url",
                            "assignees_url",
                            "blobs_url",
                            "branches_url",
                            "collaborators_url",
                            "comments_url",
                            "commits_url",
                            "compare_url",
                            "contents_url",
                            "contributors_url",
                            "deployments_url",
                            "description",
                            "downloads_url",
                            "events_url",
                            "fork",
                            "forks_url",
                            "full_name",
                            "git_commits_url",
                            "git_refs_url",
                            "git_tags_url",
                            "hooks_url",
                            "html_url",
                            "id",
                            "node_id",
                            "issue_comment_url",
                            "issue_events_url",
                            "issues_url",
                            "keys_url",
                            "labels_url",
                            "languages_url",
                            "merges_url",
                            "milestones_url",
                            "name",
                            "notifications_url",
                            "owner",
                            "private",
                            "pulls_url",
                            "releases_url",
                            "stargazers_url",
                            "statuses_url",
                            "subscribers_url",
                            "subscription_url",
                            "tags_url",
                            "teams_url",
                            "trees_url",
                            "url"
                          ],
                          "title": "Simple Repository",
                          "type": "object"
                        },
                        "rule": {
                          "properties": {
                            "description": {
                              "description": "A short description of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "full_description": {
                              "description": "description of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "help": {
                              "description": "Detailed documentation for the rule as GitHub Flavored Markdown.",
                              "nullable": true,
                              "type": "string"
                            },
                            "help_uri": {
                              "description": "A link to the documentation for the rule used to detect the alert.",
                              "nullable": true,
                              "type": "string"
                            },
                            "id": {
                              "description": "A unique identifier for the rule used to detect the alert.",
                              "nullable": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the rule used to detect the alert.",
                              "type": "string"
                            },
                            "security_severity_level": {
                              "description": "The security severity of the alert.",
                              "enum": [
                                "low",
                                "medium",
                                "high",
                                "critical"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "severity": {
                              "description": "The severity of the alert.",
                              "enum": [
                                "none",
                                "note",
                                "warning",
                                "error"
                              ],
                              "nullable": true,
                              "type": "string"
                            },
                            "tags": {
                              "description": "A set of tags applicable for the rule.",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true,
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "state": {
                          "description": "State of a code scanning alert.",
                          "enum": [
                            "open",
                            "closed",
                            "dismissed",
                            "fixed"
                          ],
                          "type": "string"
                        },
                        "tool": {
                          "properties": {
                            "guid": {
                              "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.",
                              "nullable": true,
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the tool used to generate the code scanning analysis.",
                              "type": "string"
                            },
                            "version": {
                              "description": "The version of the tool used to generate the code scanning analysis.",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "updated_at": {
                          "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string"
                        },
                        "url": {
                          "description": "The REST API URL of the alert resource.",
                          "format": "uri",
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "number",
                        "created_at",
                        "url",
                        "html_url",
                        "instances_url",
                        "state",
                        "dismissed_by",
                        "dismissed_at",
                        "dismissed_reason",
                        "rule",
                        "tool",
                        "most_recent_instance",
                        "repository"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "503": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Service unavailable"
            }
          },
          "summary": "List code scanning alerts for an enterprise",
          "tags": [
            "code-scanning"
          ],
          "x-github": {
            "category": "code-scanning",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/enterprises/{enterprise}/code_security_and_analysis": {
        "get": {
          "deprecated": null,
          "description": "Gets code security and analysis settings for the specified enterprise.\nTo use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/enterprise-admin#get-code-security-analysis-features-for-an-enterprise"
          },
          "operationId": "secret-scanning/get-security-analysis-settings-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "advanced_security_enabled_for_new_repositories": true,
                        "dependabot_alerts_enabled_for_new_repositories": true,
                        "secret_scanning_enabled_for_new_repositories": true,
                        "secret_scanning_push_protection_custom_link": "https://github.com/test-org/test-repo/blob/main/README.md",
                        "secret_scanning_push_protection_enabled_for_new_repositories": true
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "advanced_security_enabled_for_new_repositories": {
                        "description": "Whether GitHub advanced security is automatically enabled for new repositories and repositories transferred to\nthis enterprise.",
                        "example": false,
                        "type": "boolean"
                      },
                      "dependabot_alerts_enabled_for_new_repositories": {
                        "description": "Whether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this\nenterprise.",
                        "example": false,
                        "type": "boolean"
                      },
                      "secret_scanning_enabled_for_new_repositories": {
                        "description": "Whether secret scanning is automatically enabled for new repositories and repositories transferred to this\nenterprise.",
                        "example": false,
                        "type": "boolean"
                      },
                      "secret_scanning_push_protection_custom_link": {
                        "description": "An optional URL string to display to contributors who are blocked from pushing a secret.",
                        "example": "https://github.com/test-org/test-repo/blob/main/README.md",
                        "nullable": true,
                        "type": "string"
                      },
                      "secret_scanning_push_protection_enabled_for_new_repositories": {
                        "description": "Whether secret scanning push protection is automatically enabled for new repositories and repositories\ntransferred to this enterprise.",
                        "example": false,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "advanced_security_enabled_for_new_repositories",
                      "dependabot_alerts_enabled_for_new_repositories",
                      "secret_scanning_enabled_for_new_repositories",
                      "secret_scanning_push_protection_enabled_for_new_repositories"
                    ],
                    "title": "Enterprise Security Analysis Settings",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Get code security and analysis features for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "code-security-and-analysis"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Updates the settings for advanced security, Dependabot alerts, secret scanning, and push protection for new repositories in an enterprise.\nTo use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/enterprise-admin#update-code-security-and-analysis-features-for-an-enterprise"
          },
          "operationId": "secret-scanning/patch-security-analysis-settings-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "advanced_security_enabled_for_new_repositories": true,
                      "dependabot_alerts_enabled_for_new_repositories": true,
                      "secret_scanning_enabled_for_new_repositories": true,
                      "secret_scanning_push_protection_custom_link": "https://github.com/test-org/test-repo/blob/main/README.md",
                      "secret_scanning_push_protection_enabled_for_new_repositories": true
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "advanced_security_enabled_for_new_repositories": {
                      "description": "Whether GitHub Advanced Security is automatically enabled for new repositories. For more information, see \"[About GitHub Advanced Security](https://docs.github.com/enterprise-cloud@latest//get-started/learning-about-github/about-github-advanced-security).\"",
                      "type": "boolean"
                    },
                    "dependabot_alerts_enabled_for_new_repositories": {
                      "description": "Whether Dependabot alerts are automatically enabled for new repositories. For more information, see \"[About Dependabot alerts](https://docs.github.com/enterprise-cloud@latest//code-security/dependabot/dependabot-alerts/about-dependabot-alerts).\"",
                      "type": "boolean"
                    },
                    "secret_scanning_enabled_for_new_repositories": {
                      "description": "Whether secret scanning is automatically enabled for new repositories. For more information, see \"[About secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/about-secret-scanning).\"",
                      "type": "boolean"
                    },
                    "secret_scanning_push_protection_custom_link": {
                      "description": "The URL that will be displayed to contributors who are blocked from pushing a secret. For more information, see \"[Protecting pushes with secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/protecting-pushes-with-secret-scanning).\"\nTo disable this functionality, set this field to `null`.",
                      "nullable": true,
                      "type": "string"
                    },
                    "secret_scanning_push_protection_enabled_for_new_repositories": {
                      "description": "Whether secret scanning push protection is automatically enabled for new repositories. For more information, see \"[Protecting pushes with secret scanning](https://docs.github.com/enterprise-cloud@latest//code-security/secret-scanning/protecting-pushes-with-secret-scanning).\"",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": false
          },
          "responses": {
            "204": {
              "description": "Action started"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "description": "The action could not be taken due to an in progress enablement, or a policy is preventing enablement"
            }
          },
          "summary": "Update code security and analysis features for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "code-security-and-analysis"
          }
        }
      },
      "/enterprises/{enterprise}/consumed-licenses": {
        "get": {
          "deprecated": null,
          "description": "Lists the license consumption information for all users, including those from connected servers, associated with an enterprise.\nTo use this endpoint, you must be an enterprise admin, and you must use an access\ntoken with the `read:enterprise` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#list-enterprise-consumed-licenses"
          },
          "operationId": "enterprise-admin/get-consumed-licenses",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "total_seats_consumed": 5000,
                        "total_seats_purchased": 4500,
                        "users": [
                          {
                            "enterprise_server_primary_emails": [
                              "monalisa@github.com"
                            ],
                            "enterprise_server_user": true,
                            "enterprise_server_user_ids": [
                              "example_host_name.com:123",
                              "example_host_name_2:222"
                            ],
                            "github_com_enterprise_roles": [
                              "owner"
                            ],
                            "github_com_login": "monalisa",
                            "github_com_member_roles": [
                              "org1:Owner",
                              "org2:Owner"
                            ],
                            "github_com_name": "Mona Lisa",
                            "github_com_orgs_with_pending_invites": [
                              "org1",
                              "org2"
                            ],
                            "github_com_profile": "https://github.com/monalisa",
                            "github_com_saml_name_id": "monalisa",
                            "github_com_two_factor_auth": true,
                            "github_com_user": true,
                            "github_com_verified_domain_emails": [
                              "monalisa@github.com"
                            ],
                            "license_type": "enterprise",
                            "total_user_accounts": 3,
                            "visual_studio_subscription_user": false
                          },
                          {
                            "enterprise_server_emails": [
                              "hubot@example.com"
                            ],
                            "enterprise_server_user": true,
                            "enterprise_server_user_ids": [
                              "example_host_name:123"
                            ],
                            "github_com_user": false,
                            "license_type": "enterprise",
                            "total_user_accounts": 1,
                            "visual_studio_subscription_user": false
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "A breakdown of the licenses consumed by an enterprise.",
                    "properties": {
                      "total_seats_consumed": {
                        "type": "integer"
                      },
                      "total_seats_purchased": {
                        "type": "integer"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "enterprise_server_emails": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "enterprise_server_user": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "enterprise_server_user_ids": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "github_com_enterprise_roles": {
                              "description": "All enterprise roles for a user.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "github_com_login": {
                              "type": "string"
                            },
                            "github_com_member_roles": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "github_com_name": {
                              "nullable": true,
                              "type": "string"
                            },
                            "github_com_orgs_with_pending_invites": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "github_com_profile": {
                              "nullable": true,
                              "type": "string"
                            },
                            "github_com_saml_name_id": {
                              "nullable": true,
                              "type": "string"
                            },
                            "github_com_two_factor_auth": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "github_com_user": {
                              "type": "boolean"
                            },
                            "github_com_verified_domain_emails": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "license_type": {
                              "type": "string"
                            },
                            "total_user_accounts": {
                              "type": "integer"
                            },
                            "visual_studio_license_status": {
                              "nullable": true,
                              "type": "string"
                            },
                            "visual_studio_subscription_email": {
                              "nullable": true,
                              "type": "string"
                            },
                            "visual_studio_subscription_user": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "Enterprise Consumed Licenses"
                  }
                }
              },
              "description": "Consumed Licenses Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List enterprise consumed licenses",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "license"
          }
        }
      },
      "/enterprises/{enterprise}/license-sync-status": {
        "get": {
          "deprecated": null,
          "description": "Gets information about the status of a license sync job for an enterprise.\nTo use this endpoint, you must be an enterprise admin, and you must use an access\ntoken with the `read:enterprise` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#get-a-license-sync-status"
          },
          "operationId": "enterprise-admin/get-license-sync-status",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "server_instances": [
                          {
                            "hostname": "github.example.com",
                            "last_sync": {
                              "date": "2020-01-01T00:00:00Z",
                              "status": "success"
                            },
                            "server_id": "deadbeef1"
                          },
                          {
                            "hostname": "github2.example.com",
                            "last_sync": {
                              "date": "2020-01-01T00:00:00Z",
                              "status": "success"
                            },
                            "server_id": "filetoffish1"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "Information about the status of a license sync job for an enterprise.",
                    "properties": {
                      "server_instances": {
                        "items": {
                          "properties": {
                            "hostname": {
                              "type": "string"
                            },
                            "last_sync": {
                              "properties": {
                                "date": {
                                  "type": "string"
                                },
                                "error": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "server_id": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "License Sync Status"
                  }
                }
              },
              "description": "License Sync Status Response"
            }
          },
          "summary": "Get a license sync status",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "license"
          }
        }
      },
      "/enterprises/{enterprise}/settings/billing/actions": {
        "get": {
          "deprecated": null,
          "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nThe authenticated user must be an enterprise admin.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-github-actions-billing-for-an-enterprise"
          },
          "operationId": "billing/get-github-actions-billing-ghe",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "included_minutes": 3000,
                        "minutes_used_breakdown": {
                          "MACOS": 10,
                          "UBUNTU": 205,
                          "WINDOWS": 90
                        },
                        "total_minutes_used": 305,
                        "total_paid_minutes_used": 0
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "included_minutes": {
                        "description": "The amount of free GitHub Actions minutes available.",
                        "type": "integer"
                      },
                      "minutes_used_breakdown": {
                        "properties": {
                          "MACOS": {
                            "description": "Total minutes used on macOS runner machines.",
                            "type": "integer"
                          },
                          "UBUNTU": {
                            "description": "Total minutes used on Ubuntu runner machines.",
                            "type": "integer"
                          },
                          "WINDOWS": {
                            "description": "Total minutes used on Windows runner machines.",
                            "type": "integer"
                          },
                          "macos_12_core": {
                            "description": "Total minutes used on macOS 12 core runner machines.",
                            "type": "integer"
                          },
                          "total": {
                            "description": "Total minutes used on all runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_16_core": {
                            "description": "Total minutes used on Ubuntu 16 core runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_32_core": {
                            "description": "Total minutes used on Ubuntu 32 core runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_4_core": {
                            "description": "Total minutes used on Ubuntu 4 core runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_64_core": {
                            "description": "Total minutes used on Ubuntu 64 core runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_8_core": {
                            "description": "Total minutes used on Ubuntu 8 core runner machines.",
                            "type": "integer"
                          },
                          "windows_16_core": {
                            "description": "Total minutes used on Windows 16 core runner machines.",
                            "type": "integer"
                          },
                          "windows_32_core": {
                            "description": "Total minutes used on Windows 32 core runner machines.",
                            "type": "integer"
                          },
                          "windows_4_core": {
                            "description": "Total minutes used on Windows 4 core runner machines.",
                            "type": "integer"
                          },
                          "windows_64_core": {
                            "description": "Total minutes used on Windows 64 core runner machines.",
                            "type": "integer"
                          },
                          "windows_8_core": {
                            "description": "Total minutes used on Windows 8 core runner machines.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "total_minutes_used": {
                        "description": "The sum of the free and paid GitHub Actions minutes used.",
                        "type": "integer"
                      },
                      "total_paid_minutes_used": {
                        "description": "The total paid GitHub Actions minutes used.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_minutes_used",
                      "total_paid_minutes_used",
                      "included_minutes",
                      "minutes_used_breakdown"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get GitHub Actions billing for an enterprise",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "billing"
          }
        }
      },
      "/enterprises/{enterprise}/settings/billing/advanced-security": {
        "get": {
          "deprecated": null,
          "description": "Gets the GitHub Advanced Security active committers for an enterprise per repository.\n\nEach distinct user login across all repositories is counted as a single Advanced Security seat, so the `total_advanced_security_committers` is not the sum of active_users for each repository.\n\nThe total number of repositories with committer information is tracked by the `total_count` field.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#export-advanced-security-active-committers-data-for-enterprise"
          },
          "operationId": "billing/get-github-advanced-security-billing-ghe",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "repositories": [
                          {
                            "advanced_security_committers": 2,
                            "advanced_security_committers_breakdown": [
                              {
                                "last_pushed_date": "2021-11-03",
                                "user_login": "octocat"
                              },
                              {
                                "last_pushed_date": "2021-10-25",
                                "user_login": "octokitten"
                              }
                            ],
                            "name": "octocat-org/Hello-World"
                          },
                          {
                            "advanced_security_committers": 1,
                            "advanced_security_committers_breakdown": [
                              {
                                "last_pushed_date": "2021-10-26",
                                "user_login": "octokitten"
                              }
                            ],
                            "name": "octocat-org/server"
                          }
                        ],
                        "total_advanced_security_committers": 2,
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "repositories": {
                        "items": {
                          "properties": {
                            "advanced_security_committers": {
                              "example": 25,
                              "type": "integer"
                            },
                            "advanced_security_committers_breakdown": {
                              "items": {
                                "properties": {
                                  "last_pushed_date": {
                                    "example": "2021-11-03",
                                    "type": "string"
                                  },
                                  "user_login": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "user_login",
                                  "last_pushed_date"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "example": "octocat/Hello-World",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "advanced_security_committers",
                            "advanced_security_committers_breakdown"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_advanced_security_committers": {
                        "example": 25,
                        "type": "integer"
                      },
                      "total_count": {
                        "example": 2,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "repositories"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Success"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Response if GitHub Advanced Security is not enabled for this repository"
            }
          },
          "summary": "Get GitHub Advanced Security active committers for an enterprise",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "billing"
          }
        }
      },
      "/enterprises/{enterprise}/settings/billing/packages": {
        "get": {
          "deprecated": null,
          "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-github-packages-billing-for-an-enterprise"
          },
          "operationId": "billing/get-github-packages-billing-ghe",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "included_gigabytes_bandwidth": 10,
                        "total_gigabytes_bandwidth_used": 50,
                        "total_paid_gigabytes_bandwidth_used": 40
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "included_gigabytes_bandwidth": {
                        "description": "Free storage space (GB) for GitHub Packages.",
                        "type": "integer"
                      },
                      "total_gigabytes_bandwidth_used": {
                        "description": "Sum of the free and paid storage space (GB) for GitHuub Packages.",
                        "type": "integer"
                      },
                      "total_paid_gigabytes_bandwidth_used": {
                        "description": "Total paid storage space (GB) for GitHuub Packages.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_gigabytes_bandwidth_used",
                      "total_paid_gigabytes_bandwidth_used",
                      "included_gigabytes_bandwidth"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get GitHub Packages billing for an enterprise",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "billing"
          }
        }
      },
      "/enterprises/{enterprise}/settings/billing/shared-storage": {
        "get": {
          "deprecated": null,
          "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-shared-storage-billing-for-an-enterprise"
          },
          "operationId": "billing/get-shared-storage-billing-ghe",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "days_left_in_billing_cycle": 20,
                        "estimated_paid_storage_for_month": 15,
                        "estimated_storage_for_month": 40
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "days_left_in_billing_cycle": {
                        "description": "Numbers of days left in billing cycle.",
                        "type": "integer"
                      },
                      "estimated_paid_storage_for_month": {
                        "description": "Estimated storage space (GB) used in billing cycle.",
                        "type": "integer"
                      },
                      "estimated_storage_for_month": {
                        "description": "Estimated sum of free and paid storage space (GB) used in billing cycle.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "days_left_in_billing_cycle",
                      "estimated_paid_storage_for_month",
                      "estimated_storage_for_month"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get shared storage billing for an enterprise",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "billing"
          }
        }
      },
      "/enterprises/{enterprise}/{security_product}/{enablement}": {
        "post": {
          "deprecated": null,
          "description": "Enables or disables the specified security feature for all repositories in an enterprise.\n\nTo use this endpoint, you must be an administrator of the enterprise, and you must use an access token with the `admin:enterprise` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/enterprise-admin#enable-or-disable-a-security-feature"
          },
          "operationId": "secret-scanning/post-security-product-enablement-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The security feature to enable or disable.",
              "in": "path",
              "name": "security_product",
              "required": true,
              "schema": {
                "enum": [
                  "advanced_security",
                  "dependabot_alerts",
                  "secret_scanning",
                  "secret_scanning_push_protection"
                ],
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The action to take.\n\n`enable_all` means to enable the specified security feature for all repositories in the enterprise.\n`disable_all` means to disable the specified security feature for all repositories in the enterprise.",
              "in": "path",
              "name": "enablement",
              "required": true,
              "schema": {
                "enum": [
                  "enable_all",
                  "disable_all"
                ],
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Action started"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "description": "The action could not be taken due to an in progress enablement, or a policy is preventing enablement"
            }
          },
          "summary": "Enable or disable a security feature",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "code-security-and-analysis"
          }
        }
      },
      "/organizations/{organization_id}/custom_roles": {
        "get": {
          "deprecated": true,
          "description": "**Note**: This operation is deprecated and will be removed in the future.\nUse the \"[List custom repository roles](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#list-custom-repository-roles-in-an-organization)\" endpoint instead.\n\nList the custom repository roles available in this organization. In order to see custom\nrepository roles in an organization, the authenticated user must be an organization owner.\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#deprecated-list-custom-repository-roles-in-an-organization"
          },
          "operationId": "orgs/list-custom-roles",
          "parameters": [
            {
              "description": "The unique identifier of the organization.",
              "in": "path",
              "name": "organization_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "base_role": "maintain",
                        "created_at": "2022-07-04T22:19:11Z",
                        "description": "Able to contribute code and maintain the security pipeline",
                        "id": 8030,
                        "name": "Security Engineer",
                        "organization": {
                          "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                          "events_url": "https://api.github.com/users/github/events{/privacy}",
                          "followers_url": "https://api.github.com/users/github/followers",
                          "following_url": "https://api.github.com/users/github/following{/other_user}",
                          "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                          "html_url": "https://github.com/github",
                          "id": 9919,
                          "login": "github",
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                          "organizations_url": "https://api.github.com/users/github/orgs",
                          "received_events_url": "https://api.github.com/users/github/received_events",
                          "repos_url": "https://api.github.com/users/github/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                          "type": "Organization",
                          "url": "https://api.github.com/users/github"
                        },
                        "permissions": [
                          "delete_alerts_code_scanning"
                        ],
                        "updated_at": "2022-07-04T22:20:11Z"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "custom_roles": {
                        "items": {
                          "description": "Custom repository roles created by organization administrators",
                          "properties": {
                            "base_role": {
                              "description": "The system role from which this role inherits permissions.",
                              "enum": [
                                "read",
                                "triage",
                                "write",
                                "maintain"
                              ],
                              "type": "string"
                            },
                            "created_at": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "description": {
                              "description": "A short description about who this role is for or what permissions it grants.",
                              "nullable": true,
                              "type": "string"
                            },
                            "id": {
                              "description": "The unique identifier of the custom role.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "The name of the custom role.",
                              "type": "string"
                            },
                            "organization": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "permissions": {
                              "description": "A list of additional permissions included in this role.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "updated_at": {
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "base_role",
                            "permissions",
                            "organization",
                            "created_at",
                            "updated_at"
                          ],
                          "title": "Organization Custom Repository Role",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "description": "The number of custom roles in this organization",
                        "example": 3,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response - list of custom role names"
            }
          },
          "summary": "Deprecated - List custom repository roles in an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "deprecationDate": "2023-02-15",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "removalDate": "2025-02-15",
            "subcategory": "custom-roles"
          }
        }
      },
      "/orgs/{org}/actions/runner-groups": {
        "get": {
          "deprecated": null,
          "description": "Lists all self-hosted runner groups configured in an organization and inherited from an enterprise.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runner-groups-for-an-organization"
          },
          "operationId": "actions/list-self-hosted-runner-groups-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Only return runner groups that are allowed to be used by this repository.",
              "in": "query",
              "name": "visible_to_repository",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "runner_groups": [
                          {
                            "allows_public_repositories": true,
                            "default": true,
                            "id": 1,
                            "inherited": false,
                            "name": "Default",
                            "restricted_to_workflows": false,
                            "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/1/runners",
                            "visibility": "all",
                            "workflow_restrictions_read_only": false
                          },
                          {
                            "allows_public_repositories": true,
                            "default": false,
                            "id": 2,
                            "inherited": true,
                            "name": "octo-runner-group",
                            "restricted_to_workflows": true,
                            "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
                            "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories",
                            "selected_workflows": [
                              "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                            ],
                            "visibility": "selected",
                            "workflow_restrictions_read_only": true
                          },
                          {
                            "allows_public_repositories": true,
                            "default": false,
                            "id": 3,
                            "inherited": false,
                            "name": "expensive-hardware",
                            "restricted_to_workflows": false,
                            "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/3/runners",
                            "selected_workflows": [
                              "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                            ],
                            "visibility": "private",
                            "workflow_restrictions_read_only": false
                          }
                        ],
                        "total_count": 3
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "runner_groups": {
                        "items": {
                          "properties": {
                            "allows_public_repositories": {
                              "type": "boolean"
                            },
                            "default": {
                              "type": "boolean"
                            },
                            "id": {
                              "type": "number"
                            },
                            "inherited": {
                              "type": "boolean"
                            },
                            "inherited_allows_public_repositories": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            },
                            "restricted_to_workflows": {
                              "default": false,
                              "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                              "type": "boolean"
                            },
                            "runners_url": {
                              "type": "string"
                            },
                            "selected_repositories_url": {
                              "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
                              "type": "string"
                            },
                            "selected_workflows": {
                              "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                              "items": {
                                "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                                "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "visibility": {
                              "type": "string"
                            },
                            "workflow_restrictions_read_only": {
                              "default": false,
                              "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "visibility",
                            "default",
                            "runners_url",
                            "inherited",
                            "allows_public_repositories"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "runner_groups"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List self-hosted runner groups for an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "post": {
          "deprecated": null,
          "description": "Creates a new self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#create-a-self-hosted-runner-group-for-an-organization"
          },
          "operationId": "actions/create-self-hosted-runner-group-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "name": "Expensive hardware runners",
                      "runners": [
                        9,
                        2
                      ],
                      "selected_repository_ids": [
                        32,
                        91
                      ],
                      "visibility": "selected"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "allows_public_repositories": {
                      "default": false,
                      "description": "Whether the runner group can be used by `public` repositories.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Name of the runner group.",
                      "type": "string"
                    },
                    "restricted_to_workflows": {
                      "default": false,
                      "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                      "type": "boolean"
                    },
                    "runners": {
                      "description": "List of runner IDs to add to the runner group.",
                      "items": {
                        "description": "Unique identifier of the runner.",
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    "selected_repository_ids": {
                      "description": "List of repository IDs that can access the runner group.",
                      "items": {
                        "description": "Unique identifier of the repository.",
                        "type": "integer"
                      },
                      "type": "array"
                    },
                    "selected_workflows": {
                      "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                      "items": {
                        "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                        "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "visibility": {
                      "default": "all",
                      "description": "Visibility of a runner group. You can select all repositories, select individual repositories, or limit access to private repositories.",
                      "enum": [
                        "selected",
                        "all",
                        "private"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allows_public_repositories": true,
                        "default": false,
                        "id": 2,
                        "inherited": false,
                        "name": "octo-runner-group",
                        "restricted_to_workflows": true,
                        "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
                        "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner-groups/2/repositories",
                        "selected_workflows": [
                          "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                        ],
                        "visibility": "selected",
                        "workflow_restrictions_read_only": false
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allows_public_repositories": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "inherited": {
                        "type": "boolean"
                      },
                      "inherited_allows_public_repositories": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "restricted_to_workflows": {
                        "default": false,
                        "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                        "type": "boolean"
                      },
                      "runners_url": {
                        "type": "string"
                      },
                      "selected_repositories_url": {
                        "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
                        "type": "string"
                      },
                      "selected_workflows": {
                        "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                        "items": {
                          "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                          "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "visibility": {
                        "type": "string"
                      },
                      "workflow_restrictions_read_only": {
                        "default": false,
                        "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "visibility",
                      "default",
                      "runners_url",
                      "inherited",
                      "allows_public_repositories"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a self-hosted runner group for an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/orgs/{org}/actions/runner-groups/{runner_group_id}": {
        "delete": {
          "deprecated": null,
          "description": "Deletes a self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#delete-a-self-hosted-runner-group-from-an-organization"
          },
          "operationId": "actions/delete-self-hosted-runner-group-from-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a self-hosted runner group from an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Gets a specific self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#get-a-self-hosted-runner-group-for-an-organization"
          },
          "operationId": "actions/get-self-hosted-runner-group-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allows_public_repositories": true,
                        "default": false,
                        "id": 2,
                        "inherited": false,
                        "name": "octo-runner-group",
                        "restricted_to_workflows": true,
                        "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
                        "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories",
                        "selected_workflows": [
                          "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                        ],
                        "visibility": "selected",
                        "workflow_restrictions_read_only": false
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allows_public_repositories": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "inherited": {
                        "type": "boolean"
                      },
                      "inherited_allows_public_repositories": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "restricted_to_workflows": {
                        "default": false,
                        "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                        "type": "boolean"
                      },
                      "runners_url": {
                        "type": "string"
                      },
                      "selected_repositories_url": {
                        "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
                        "type": "string"
                      },
                      "selected_workflows": {
                        "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                        "items": {
                          "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                          "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "visibility": {
                        "type": "string"
                      },
                      "workflow_restrictions_read_only": {
                        "default": false,
                        "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "visibility",
                      "default",
                      "runners_url",
                      "inherited",
                      "allows_public_repositories"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a self-hosted runner group for an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Updates the `name` and `visibility` of a self-hosted runner group in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#update-a-self-hosted-runner-group-for-an-organization"
          },
          "operationId": "actions/update-self-hosted-runner-group-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "name": "Expensive hardware runners",
                      "visibility": "selected"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "allows_public_repositories": {
                      "default": false,
                      "description": "Whether the runner group can be used by `public` repositories.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Name of the runner group.",
                      "type": "string"
                    },
                    "restricted_to_workflows": {
                      "default": false,
                      "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                      "type": "boolean"
                    },
                    "selected_workflows": {
                      "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                      "items": {
                        "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                        "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "visibility": {
                      "description": "Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories.",
                      "enum": [
                        "selected",
                        "all",
                        "private"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "allows_public_repositories": true,
                        "default": false,
                        "id": 2,
                        "inherited": false,
                        "name": "octo-runner-group",
                        "restricted_to_workflows": true,
                        "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
                        "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner-groups/2/repositories",
                        "selected_workflows": [
                          "octo-org/octo-repo/.github/workflows/deploy.yaml@refs/heads/main"
                        ],
                        "visibility": "selected",
                        "workflow_restrictions_read_only": false
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "allows_public_repositories": {
                        "type": "boolean"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "inherited": {
                        "type": "boolean"
                      },
                      "inherited_allows_public_repositories": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      },
                      "restricted_to_workflows": {
                        "default": false,
                        "description": "If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.",
                        "type": "boolean"
                      },
                      "runners_url": {
                        "type": "string"
                      },
                      "selected_repositories_url": {
                        "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
                        "type": "string"
                      },
                      "selected_workflows": {
                        "description": "List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.",
                        "items": {
                          "description": "Name of workflow the runner group should be allowed to run. Note that a ref, tag, or long SHA is required.",
                          "example": "octo-org/octo-repo/.github/workflows/deploy.yaml@main",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "visibility": {
                        "type": "string"
                      },
                      "workflow_restrictions_read_only": {
                        "default": false,
                        "description": "If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "visibility",
                      "default",
                      "runners_url",
                      "inherited",
                      "allows_public_repositories"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update a self-hosted runner group for an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories": {
        "get": {
          "deprecated": null,
          "description": "Lists the repositories with access to a self-hosted runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-repository-access-to-a-self-hosted-runner-group-in-an-organization"
          },
          "operationId": "actions/list-repo-access-to-self-hosted-runner-group-in-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "repositories": [
                          {
                            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                            "archived": false,
                            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                            "clone_url": "https://github.com/octocat/Hello-World.git",
                            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                            "created_at": "2011-01-26T19:01:12Z",
                            "default_branch": "master",
                            "delete_branch_on_merge": true,
                            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                            "description": "This your first repo!",
                            "disabled": false,
                            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                            "fork": false,
                            "forks": 1,
                            "forks_count": 9,
                            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                            "full_name": "octocat/Hello-World",
                            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                            "git_url": "git:github.com/octocat/Hello-World.git",
                            "has_downloads": true,
                            "has_issues": true,
                            "has_pages": false,
                            "has_projects": true,
                            "has_wiki": true,
                            "homepage": "https://github.com",
                            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                            "html_url": "https://github.com/octocat/Hello-World",
                            "id": 1296269,
                            "is_template": true,
                            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                            "language": null,
                            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                            "license": {
                              "key": "mit",
                              "name": "MIT License",
                              "node_id": "MDc6TGljZW5zZW1pdA==",
                              "spdx_id": "MIT",
                              "url": "https://api.github.com/licenses/mit"
                            },
                            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                            "mirror_url": "git:git.example.com/octocat/Hello-World",
                            "name": "Hello-World",
                            "network_count": 0,
                            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                            "open_issues": 1,
                            "open_issues_count": 0,
                            "owner": {
                              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                              "followers_url": "https://api.github.com/users/octocat/followers",
                              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "html_url": "https://github.com/octocat",
                              "id": 1,
                              "login": "octocat",
                              "node_id": "MDQ6VXNlcjE=",
                              "organizations_url": "https://api.github.com/users/octocat/orgs",
                              "received_events_url": "https://api.github.com/users/octocat/received_events",
                              "repos_url": "https://api.github.com/users/octocat/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                              "type": "User",
                              "url": "https://api.github.com/users/octocat"
                            },
                            "permissions": {
                              "admin": false,
                              "pull": true,
                              "push": false
                            },
                            "private": false,
                            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                            "pushed_at": "2011-01-26T19:06:43Z",
                            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                            "size": 108,
                            "ssh_url": "git@github.com:octocat/Hello-World.git",
                            "stargazers_count": 80,
                            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                            "subscribers_count": 42,
                            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                            "svn_url": "https://svn.github.com/octocat/Hello-World",
                            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                            "template_repository": {
                              "allow_auto_merge": false,
                              "allow_merge_commit": true,
                              "allow_rebase_merge": true,
                              "allow_squash_merge": true,
                              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "archived": false,
                              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "clone_url": "https://github.com/octocat/Hello-World.git",
                              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                              "created_at": "2011-01-26T19:01:12Z",
                              "default_branch": "master",
                              "delete_branch_on_merge": true,
                              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                              "description": "This your first repo!",
                              "disabled": false,
                              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                              "fork": false,
                              "forks": 9,
                              "forks_count": 9,
                              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                              "full_name": "octocat/Hello-World",
                              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "git_url": "git:github.com/octocat/Hello-World.git",
                              "has_downloads": true,
                              "has_issues": true,
                              "has_pages": false,
                              "has_projects": true,
                              "has_wiki": true,
                              "homepage": "https://github.com",
                              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                              "html_url": "https://github.com/octocat/Hello-World",
                              "id": 1296269,
                              "is_template": true,
                              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "language": null,
                              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                              "license": {
                                "html_url": "https://api.github.com/licenses/mit",
                                "key": "mit",
                                "name": "MIT License",
                                "node_id": "MDc6TGljZW5zZW1pdA==",
                                "spdx_id": "MIT",
                                "url": "https://api.github.com/licenses/mit"
                              },
                              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "mirror_url": "git:git.example.com/octocat/Hello-World",
                              "name": "Hello-World",
                              "network_count": 0,
                              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "open_issues": 0,
                              "open_issues_count": 0,
                              "organization": null,
                              "owner": {
                                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                                "followers_url": "https://api.github.com/users/octocat/followers",
                                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "html_url": "https://github.com/octocat",
                                "id": 1,
                                "login": "octocat",
                                "node_id": "MDQ6VXNlcjE=",
                                "organizations_url": "https://api.github.com/users/octocat/orgs",
                                "received_events_url": "https://api.github.com/users/octocat/received_events",
                                "repos_url": "https://api.github.com/users/octocat/repos",
                                "site_admin": false,
                                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                                "type": "User",
                                "url": "https://api.github.com/users/octocat"
                              },
                              "permissions": {
                                "admin": false,
                                "pull": true,
                                "push": false
                              },
                              "private": false,
                              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "pushed_at": "2011-01-26T19:06:43Z",
                              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "size": 108,
                              "ssh_url": "git@github.com:octocat/Hello-World.git",
                              "stargazers_count": 80,
                              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "subscribers_count": 42,
                              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                              "svn_url": "https://svn.github.com/octocat/Hello-World",
                              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                              "template_repository": null,
                              "topics": [
                                "octocat",
                                "atom",
                                "electron",
                                "api"
                              ],
                              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "updated_at": "2011-01-26T19:14:43Z",
                              "url": "https://api.github.com/repos/octocat/Hello-World",
                              "visibility": "public",
                              "watchers": 80,
                              "watchers_count": 80
                            },
                            "topics": [
                              "octocat",
                              "atom",
                              "electron",
                              "api"
                            ],
                            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                            "updated_at": "2011-01-26T19:14:43Z",
                            "url": "https://api.github.com/repos/octocat/Hello-World",
                            "visibility": "public",
                            "watchers": 1,
                            "watchers_count": 80
                          }
                        ],
                        "total_count": 1
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "repositories": {
                        "items": {
                          "description": "Minimal Repository",
                          "properties": {
                            "allow_forking": {
                              "type": "boolean"
                            },
                            "archive_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                              "type": "string"
                            },
                            "archived": {
                              "type": "boolean"
                            },
                            "assignees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                              "type": "string"
                            },
                            "blobs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                              "type": "string"
                            },
                            "branches_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                              "type": "string"
                            },
                            "clone_url": {
                              "type": "string"
                            },
                            "code_of_conduct": {
                              "description": "Code Of Conduct",
                              "properties": {
                                "body": {
                                  "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n",
                                  "type": "string"
                                },
                                "html_url": {
                                  "format": "uri",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "key": {
                                  "example": "contributor_covenant",
                                  "type": "string"
                                },
                                "name": {
                                  "example": "Contributor Covenant",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/codes_of_conduct/contributor_covenant",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "url",
                                "html_url",
                                "key",
                                "name"
                              ],
                              "title": "Code Of Conduct",
                              "type": "object"
                            },
                            "collaborators_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                              "type": "string"
                            },
                            "comments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}",
                              "type": "string"
                            },
                            "commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                              "type": "string"
                            },
                            "compare_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                              "type": "string"
                            },
                            "contents_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                              "type": "string"
                            },
                            "contributors_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/contributors",
                              "format": "uri",
                              "type": "string"
                            },
                            "created_at": {
                              "example": "2011-01-26T19:01:12Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "default_branch": {
                              "type": "string"
                            },
                            "delete_branch_on_merge": {
                              "type": "boolean"
                            },
                            "deployments_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/deployments",
                              "format": "uri",
                              "type": "string"
                            },
                            "description": {
                              "example": "This your first repo!",
                              "nullable": true,
                              "type": "string"
                            },
                            "disabled": {
                              "type": "boolean"
                            },
                            "downloads_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/downloads",
                              "format": "uri",
                              "type": "string"
                            },
                            "events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/events",
                              "format": "uri",
                              "type": "string"
                            },
                            "fork": {
                              "type": "boolean"
                            },
                            "forks": {
                              "example": 0,
                              "type": "integer"
                            },
                            "forks_count": {
                              "type": "integer"
                            },
                            "forks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/forks",
                              "format": "uri",
                              "type": "string"
                            },
                            "full_name": {
                              "example": "octocat/Hello-World",
                              "type": "string"
                            },
                            "git_commits_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                              "type": "string"
                            },
                            "git_refs_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                              "type": "string"
                            },
                            "git_tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                              "type": "string"
                            },
                            "git_url": {
                              "type": "string"
                            },
                            "has_discussions": {
                              "type": "boolean"
                            },
                            "has_downloads": {
                              "type": "boolean"
                            },
                            "has_issues": {
                              "type": "boolean"
                            },
                            "has_pages": {
                              "type": "boolean"
                            },
                            "has_projects": {
                              "type": "boolean"
                            },
                            "has_wiki": {
                              "type": "boolean"
                            },
                            "homepage": {
                              "nullable": true,
                              "type": "string"
                            },
                            "hooks_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/hooks",
                              "format": "uri",
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "example": 1296269,
                              "type": "integer"
                            },
                            "is_template": {
                              "type": "boolean"
                            },
                            "issue_comment_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                              "type": "string"
                            },
                            "issue_events_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                              "type": "string"
                            },
                            "issues_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}",
                              "type": "string"
                            },
                            "keys_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                              "type": "string"
                            },
                            "labels_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}",
                              "type": "string"
                            },
                            "language": {
                              "nullable": true,
                              "type": "string"
                            },
                            "languages_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/languages",
                              "format": "uri",
                              "type": "string"
                            },
                            "license": {
                              "nullable": true,
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "node_id": {
                                  "type": "string"
                                },
                                "spdx_id": {
                                  "type": "string"
                                },
                                "url": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "merges_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/merges",
                              "format": "uri",
                              "type": "string"
                            },
                            "milestones_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                              "type": "string"
                            },
                            "mirror_url": {
                              "nullable": true,
                              "type": "string"
                            },
                            "name": {
                              "example": "Hello-World",
                              "type": "string"
                            },
                            "network_count": {
                              "type": "integer"
                            },
                            "node_id": {
                              "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                              "type": "string"
                            },
                            "notifications_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                              "type": "string"
                            },
                            "open_issues": {
                              "example": 0,
                              "type": "integer"
                            },
                            "open_issues_count": {
                              "type": "integer"
                            },
                            "owner": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "permissions": {
                              "properties": {
                                "admin": {
                                  "type": "boolean"
                                },
                                "maintain": {
                                  "type": "boolean"
                                },
                                "pull": {
                                  "type": "boolean"
                                },
                                "push": {
                                  "type": "boolean"
                                },
                                "triage": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "private": {
                              "type": "boolean"
                            },
                            "pulls_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                              "type": "string"
                            },
                            "pushed_at": {
                              "example": "2011-01-26T19:06:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "releases_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}",
                              "type": "string"
                            },
                            "role_name": {
                              "example": "admin",
                              "type": "string"
                            },
                            "security_and_analysis": {
                              "nullable": true,
                              "properties": {
                                "advanced_security": {
                                  "properties": {
                                    "status": {
                                      "enum": [
                                        "enabled",
                                        "disabled"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "secret_scanning": {
                                  "properties": {
                                    "status": {
                                      "enum": [
                                        "enabled",
                                        "disabled"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "secret_scanning_push_protection": {
                                  "properties": {
                                    "status": {
                                      "enum": [
                                        "enabled",
                                        "disabled"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "size": {
                              "description": "The size of the repository. Size is calculated hourly. When a repository is initially created, the size is 0.",
                              "type": "integer"
                            },
                            "ssh_url": {
                              "type": "string"
                            },
                            "stargazers_count": {
                              "type": "integer"
                            },
                            "stargazers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/stargazers",
                              "format": "uri",
                              "type": "string"
                            },
                            "statuses_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                              "type": "string"
                            },
                            "subscribers_count": {
                              "type": "integer"
                            },
                            "subscribers_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscribers",
                              "format": "uri",
                              "type": "string"
                            },
                            "subscription_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/subscription",
                              "format": "uri",
                              "type": "string"
                            },
                            "svn_url": {
                              "type": "string"
                            },
                            "tags_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/tags",
                              "format": "uri",
                              "type": "string"
                            },
                            "teams_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/teams",
                              "format": "uri",
                              "type": "string"
                            },
                            "temp_clone_token": {
                              "type": "string"
                            },
                            "topics": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "trees_url": {
                              "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                              "type": "string"
                            },
                            "updated_at": {
                              "example": "2011-01-26T19:14:43Z",
                              "format": "date-time",
                              "nullable": true,
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/repos/octocat/Hello-World",
                              "format": "uri",
                              "type": "string"
                            },
                            "visibility": {
                              "type": "string"
                            },
                            "watchers": {
                              "example": 0,
                              "type": "integer"
                            },
                            "watchers_count": {
                              "type": "integer"
                            },
                            "web_commit_signoff_required": {
                              "example": false,
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "archive_url",
                            "assignees_url",
                            "blobs_url",
                            "branches_url",
                            "collaborators_url",
                            "comments_url",
                            "commits_url",
                            "compare_url",
                            "contents_url",
                            "contributors_url",
                            "deployments_url",
                            "description",
                            "downloads_url",
                            "events_url",
                            "fork",
                            "forks_url",
                            "full_name",
                            "git_commits_url",
                            "git_refs_url",
                            "git_tags_url",
                            "hooks_url",
                            "html_url",
                            "id",
                            "node_id",
                            "issue_comment_url",
                            "issue_events_url",
                            "issues_url",
                            "keys_url",
                            "labels_url",
                            "languages_url",
                            "merges_url",
                            "milestones_url",
                            "name",
                            "notifications_url",
                            "owner",
                            "private",
                            "pulls_url",
                            "releases_url",
                            "stargazers_url",
                            "statuses_url",
                            "subscribers_url",
                            "subscription_url",
                            "tags_url",
                            "teams_url",
                            "trees_url",
                            "url"
                          ],
                          "title": "Minimal Repository",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "repositories"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List repository access to a self-hosted runner group in an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces the list of repositories that have access to a self-hosted runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-repository-access-to-a-self-hosted-runner-group-in-an-organization"
          },
          "operationId": "actions/set-repo-access-to-self-hosted-runner-group-in-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "selected_repository_ids": [
                        32,
                        91
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "selected_repository_ids": {
                      "description": "List of repository IDs that can access the runner group.",
                      "items": {
                        "description": "Unique identifier of the repository.",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "selected_repository_ids"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set repository access for a self-hosted runner group in an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}": {
        "delete": {
          "deprecated": null,
          "description": "Removes a repository from the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-repository-access-to-a-self-hosted-runner-group-in-an-organization"
          },
          "operationId": "actions/remove-repo-access-to-self-hosted-runner-group-in-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the repository.",
              "in": "path",
              "name": "repository_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove repository access to a self-hosted runner group in an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Adds a repository to the list of selected repositories that can access a self-hosted runner group. The runner group must have `visibility` set to `selected`. For more information, see \"[Create a self-hosted runner group for an organization](#create-a-self-hosted-runner-group-for-an-organization).\"\n\nYou must authenticate using an access token with the `admin:org`\nscope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-repository-acess-to-a-self-hosted-runner-group-in-an-organization"
          },
          "operationId": "actions/add-repo-access-to-self-hosted-runner-group-in-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the repository.",
              "in": "path",
              "name": "repository_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Add repository access to a self-hosted runner group in an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners": {
        "get": {
          "deprecated": null,
          "description": "Lists self-hosted runners that are in a specific organization group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-organization"
          },
          "operationId": "actions/list-self-hosted-runners-in-group-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "runners": [
                          {
                            "busy": true,
                            "id": 23,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 11,
                                "name": "Linux",
                                "type": "read-only"
                              }
                            ],
                            "name": "linux_runner",
                            "os": "linux",
                            "status": "online"
                          },
                          {
                            "busy": false,
                            "id": 24,
                            "labels": [
                              {
                                "id": 5,
                                "name": "self-hosted",
                                "type": "read-only"
                              },
                              {
                                "id": 7,
                                "name": "X64",
                                "type": "read-only"
                              },
                              {
                                "id": 20,
                                "name": "macOS",
                                "type": "read-only"
                              },
                              {
                                "id": 21,
                                "name": "no-gpu",
                                "type": "custom"
                              }
                            ],
                            "name": "mac_runner",
                            "os": "macos",
                            "status": "offline"
                          }
                        ],
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "runners": {
                        "items": {
                          "description": "A self hosted runner",
                          "properties": {
                            "busy": {
                              "type": "boolean"
                            },
                            "id": {
                              "description": "The id of the runner.",
                              "example": 5,
                              "type": "integer"
                            },
                            "labels": {
                              "items": {
                                "description": "A label for a self hosted runner",
                                "properties": {
                                  "id": {
                                    "description": "Unique identifier of the label.",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "Name of the label.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of label. Read-only labels are applied automatically when the runner is configured.",
                                    "enum": [
                                      "read-only",
                                      "custom"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ],
                                "title": "Self hosted runner label",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "The name of the runner.",
                              "example": "iMac",
                              "type": "string"
                            },
                            "os": {
                              "description": "The Operating System of the runner.",
                              "example": "macos",
                              "type": "string"
                            },
                            "runner_group_id": {
                              "description": "The id of the runner group.",
                              "example": 1,
                              "type": "integer"
                            },
                            "status": {
                              "description": "The status of the runner.",
                              "example": "online",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "os",
                            "status",
                            "busy",
                            "labels"
                          ],
                          "title": "Self hosted runners",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "total_count",
                      "runners"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List self-hosted runners in a group for an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces the list of self-hosted runners that are part of an organization runner group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#set-self-hosted-runners-in-a-group-for-an-organization"
          },
          "operationId": "actions/set-self-hosted-runners-in-group-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "runners": [
                        9,
                        2
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "runners": {
                      "description": "List of runner IDs to add to the runner group.",
                      "items": {
                        "description": "Unique identifier of the runner.",
                        "type": "integer"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "runners"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set self-hosted runners in a group for an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}": {
        "delete": {
          "deprecated": null,
          "description": "Removes a self-hosted runner from a group configured in an organization. The runner is then returned to the default group.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#remove-a-self-hosted-runner-from-a-group-for-an-organization"
          },
          "operationId": "actions/remove-self-hosted-runner-from-group-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove a self-hosted runner from a group for an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Adds a self-hosted runner to a runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org`\nscope to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions#add-a-self-hosted-runner-to-a-group-for-an-organization"
          },
          "operationId": "actions/add-self-hosted-runner-to-group-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner group.",
              "in": "path",
              "name": "runner_group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            },
            {
              "description": "Unique identifier of the self-hosted runner.",
              "in": "path",
              "name": "runner_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Add a self-hosted runner to a group for an organization",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "self-hosted-runner-groups"
          }
        }
      },
      "/orgs/{org}/announcement": {
        "delete": {
          "deprecated": null,
          "description": "Removes the announcement banner currently set for the organization.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/announcement-banners/organizations#remove-announcement-banner-from-organization"
          },
          "operationId": "announcement-banners/remove-announcement-banner-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove announcement banner from organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "announcement-banners",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "organizations"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Gets the announcement banner currently set for the organization. Only returns the announcement banner set at the\norganization level. Organization members may also see an enterprise-level announcement banner. To get an\nannouncement banner displayed at the enterprise level, use the enterprise-level endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/announcement-banners#get-enterprise-announcement-banner-for-org"
          },
          "operationId": "announcement-banners/get-announcement-banner-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Announcement banner",
                      "value": {
                        "announcement": "Very **important** announcement about _something_.",
                        "expires_at": "2021-01-01T00:00:00.000+00:00",
                        "user_dismissible": false
                      }
                    }
                  },
                  "schema": {
                    "description": "Announcement at either the repository, organization, or enterprise level",
                    "properties": {
                      "announcement": {
                        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-cloud@latest//github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                        "example": "Very **important** announcement about _something_.",
                        "nullable": true,
                        "type": "string"
                      },
                      "expires_at": {
                        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                        "example": "\"2021-01-01T00:00:00.000-07:00\"",
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "user_dismissible": {
                        "default": false,
                        "description": "Whether an announcement can be dismissed by the user.",
                        "example": false,
                        "nullable": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "announcement",
                      "expires_at",
                      "user_dismissible"
                    ],
                    "title": "Announcement Banner",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get announcement banner for organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "announcement-banners",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "organizations"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Sets the announcement banner to display for the organization.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/announcement-banners/organizations#set-announcement-banner-for-organization"
          },
          "operationId": "announcement-banners/set-announcement-banner-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "summary": "Announcement banner",
                    "value": {
                      "announcement": "Very **important** announcement about _something_.",
                      "expires_at": "2021-01-01T00:00:00.000+00:00",
                      "user_dismissible": false
                    }
                  }
                },
                "schema": {
                  "description": "Enterprise global announcement",
                  "properties": {
                    "announcement": {
                      "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-cloud@latest//github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                      "example": "Very **important** announcement about _something_.",
                      "nullable": true,
                      "type": "string"
                    },
                    "expires_at": {
                      "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                      "example": "\"2021-01-01T00:00:00.000-07:00\"",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "announcement"
                  ],
                  "title": "Enterprise Announcement",
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Announcement banner",
                      "value": {
                        "announcement": "Very **important** announcement about _something_.",
                        "expires_at": "2021-01-01T00:00:00.000+00:00",
                        "user_dismissible": false
                      }
                    }
                  },
                  "schema": {
                    "description": "Announcement at either the repository, organization, or enterprise level",
                    "properties": {
                      "announcement": {
                        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/enterprise-cloud@latest//github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                        "example": "Very **important** announcement about _something_.",
                        "nullable": true,
                        "type": "string"
                      },
                      "expires_at": {
                        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                        "example": "\"2021-01-01T00:00:00.000-07:00\"",
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "user_dismissible": {
                        "default": false,
                        "description": "Whether an announcement can be dismissed by the user.",
                        "example": false,
                        "nullable": true,
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "announcement",
                      "expires_at",
                      "user_dismissible"
                    ],
                    "title": "Announcement Banner",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Set announcement banner for organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "announcement-banners",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "organizations"
          }
        }
      },
      "/orgs/{org}/audit-log": {
        "get": {
          "deprecated": null,
          "description": "Gets the audit log for an organization. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization).\"\n\nTo use this endpoint, you must be an organization owner, and you must use an access token with the `read:audit_log` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint.\n\nBy default, the response includes up to 30 events from the past three months. Use the `phrase` parameter to filter results and retrieve older events. For example, use the `phrase` parameter with the `created` qualifier to filter events based on when the events occurred. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/enterprise-cloud@latest//organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).\"\n\nUse pagination to retrieve fewer or more than 30 events. For more information, see \"[Resources in the REST API](https://docs.github.com/enterprise-cloud@latest//rest/overview/resources-in-the-rest-api#pagination).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#get-audit-log"
          },
          "operationId": "orgs/get-audit-log",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).",
              "in": "query",
              "name": "phrase",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
              "in": "query",
              "name": "include",
              "required": false,
              "schema": {
                "enum": [
                  "web",
                  "git",
                  "all"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events after this cursor.",
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events before this cursor.",
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\nThe default is `desc`.",
              "in": "query",
              "name": "order",
              "required": false,
              "schema": {
                "enum": [
                  "desc",
                  "asc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "@timestamp": 1606929874512,
                          "_document_id": "xJJFlFOhQ6b-5vaAFy9Rjw",
                          "action": "team.add_member",
                          "actor": "octocat",
                          "created_at": 1606929874512,
                          "org": "octo-corp",
                          "team": "octo-corp/example-team",
                          "user": "monalisa"
                        },
                        {
                          "@timestamp": 1606507117008,
                          "_document_id": "Vqvg6kZ4MYqwWRKFDzlMoQ",
                          "action": "org.create",
                          "actor": "octocat",
                          "created_at": 1606507117008,
                          "org": "octocat-test-org"
                        },
                        {
                          "@timestamp": 1605719148837,
                          "_document_id": "LwW2vpJZCDS-WUmo9Z-ifw",
                          "action": "repo.destroy",
                          "actor": "monalisa",
                          "created_at": 1605719148837,
                          "org": "mona-org",
                          "repo": "mona-org/mona-test-repo",
                          "visibility": "private"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "@timestamp": {
                          "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "_document_id": {
                          "description": "A unique identifier for an audit event.",
                          "type": "string"
                        },
                        "action": {
                          "description": "The name of the action that was performed, for example `user.login` or `repo.create`.",
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "active_was": {
                          "type": "boolean"
                        },
                        "actor": {
                          "description": "The actor who performed the action.",
                          "type": "string"
                        },
                        "actor_id": {
                          "description": "The id of the actor who performed the action.",
                          "type": "integer"
                        },
                        "actor_location": {
                          "properties": {
                            "country_name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "blocked_user": {
                          "description": "The username of the account being blocked.",
                          "type": "string"
                        },
                        "business": {
                          "type": "string"
                        },
                        "business_id": {
                          "type": "integer"
                        },
                        "config": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "config_was": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "content_type": {
                          "type": "string"
                        },
                        "created_at": {
                          "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "data": {
                          "additionalProperties": true,
                          "type": "object"
                        },
                        "deploy_key_fingerprint": {
                          "type": "string"
                        },
                        "emoji": {
                          "type": "string"
                        },
                        "events": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "events_were": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "explanation": {
                          "type": "string"
                        },
                        "fingerprint": {
                          "type": "string"
                        },
                        "hook_id": {
                          "type": "integer"
                        },
                        "limited_availability": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "old_user": {
                          "type": "string"
                        },
                        "openssh_public_key": {
                          "type": "string"
                        },
                        "operation_type": {
                          "type": "string"
                        },
                        "org": {
                          "type": "string"
                        },
                        "org_id": {
                          "type": "integer"
                        },
                        "previous_visibility": {
                          "type": "string"
                        },
                        "read_only": {
                          "type": "boolean"
                        },
                        "repo": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository_public": {
                          "type": "boolean"
                        },
                        "target_login": {
                          "type": "string"
                        },
                        "team": {
                          "type": "string"
                        },
                        "transport_protocol": {
                          "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "integer"
                        },
                        "transport_protocol_name": {
                          "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "string"
                        },
                        "user": {
                          "description": "The user that was affected by the action performed (if available).",
                          "type": "string"
                        },
                        "user_id": {
                          "type": "integer"
                        },
                        "visibility": {
                          "description": "The repository visibility, for example `public` or `private`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the audit log for an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/orgs/{org}/credential-authorizations": {
        "get": {
          "deprecated": null,
          "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://docs.github.com/enterprise-cloud@latest//articles/about-authentication-with-saml-single-sign-on).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#list-saml-sso-authorizations-for-an-organization"
          },
          "operationId": "orgs/list-saml-sso-authorizations",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page token",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Limits the list of credentials authorizations for an organization to a specific login",
              "in": "query",
              "name": "login",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "authorized_credential_expires_at": "2011-02-25T19:06:43Z",
                          "credential_accessed_at": "2011-01-26T19:06:43Z",
                          "credential_authorized_at": "2011-01-26T19:06:43Z",
                          "credential_id": 161195,
                          "credential_type": "personal access token",
                          "login": "octocat",
                          "scopes": [
                            "user",
                            "repo"
                          ],
                          "token_last_eight": "71c3fc11"
                        },
                        {
                          "authorized_credential_expires_at": "2019-04-28T19:06:43Z",
                          "credential_accessed_at": "2011-01-26T19:06:43Z",
                          "credential_authorized_at": "2019-03-29T19:06:43Z",
                          "credential_id": 161196,
                          "credential_type": "personal access token",
                          "login": "hubot",
                          "scopes": [
                            "repo"
                          ],
                          "token_last_eight": "Ae178B4a"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "Credential Authorization",
                      "properties": {
                        "authorized_credential_expires_at": {
                          "description": "The expiry for the token. This will only be present when the credential is a token.",
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "authorized_credential_id": {
                          "example": 12345678,
                          "nullable": true,
                          "type": "integer"
                        },
                        "authorized_credential_note": {
                          "description": "The note given to the token. This will only be present when the credential is a token.",
                          "example": "my token",
                          "nullable": true,
                          "type": "string"
                        },
                        "authorized_credential_title": {
                          "description": "The title given to the ssh key. This will only be present when the credential is an ssh key.",
                          "example": "my ssh key",
                          "nullable": true,
                          "type": "string"
                        },
                        "credential_accessed_at": {
                          "description": "Date when the credential was last accessed. May be null if it was never accessed",
                          "example": "2011-01-26T19:06:43Z",
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "credential_authorized_at": {
                          "description": "Date when the credential was authorized for use.",
                          "example": "2011-01-26T19:06:43Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "credential_id": {
                          "description": "Unique identifier for the credential.",
                          "example": 1,
                          "type": "integer"
                        },
                        "credential_type": {
                          "description": "Human-readable description of the credential type.",
                          "example": "SSH Key",
                          "type": "string"
                        },
                        "fingerprint": {
                          "description": "Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key.",
                          "example": "jklmnop12345678",
                          "type": "string"
                        },
                        "login": {
                          "description": "User login that owns the underlying credential.",
                          "example": "monalisa",
                          "type": "string"
                        },
                        "scopes": {
                          "description": "List of oauth scopes the token has been granted.",
                          "example": [
                            "user",
                            "repo"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "token_last_eight": {
                          "description": "Last eight characters of the credential. Only included in responses with credential_type of personal access token.",
                          "example": "12345678",
                          "type": "string"
                        }
                      },
                      "required": [
                        "login",
                        "credential_id",
                        "credential_type",
                        "credential_authorized_at",
                        "credential_accessed_at",
                        "authorized_credential_id"
                      ],
                      "title": "Credential Authorization",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List SAML SSO authorizations for an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/orgs/{org}/credential-authorizations/{credential_id}": {
        "delete": {
          "deprecated": null,
          "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#remove-a-saml-sso-authorization-for-an-organization"
          },
          "operationId": "orgs/remove-saml-sso-authorization",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "in": "path",
              "name": "credential_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Remove a SAML SSO authorization for an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/orgs/{org}/custom-repository-roles": {
        "get": {
          "deprecated": null,
          "description": "List the custom repository roles available in this organization. In order to see custom\nrepository roles in an organization, the authenticated user must be an organization owner.\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#list-custom-repository-roles-in-an-organization"
          },
          "operationId": "orgs/list-custom-repo-roles",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "custom_roles": [
                          {
                            "base_role": "maintain",
                            "created_at": "2022-07-04T22:19:11Z",
                            "description": "Able to contribute code and maintain the security pipeline",
                            "id": 8030,
                            "name": "Security Engineer",
                            "organization": {
                              "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                              "events_url": "https://api.github.com/users/github/events{/privacy}",
                              "followers_url": "https://api.github.com/users/github/followers",
                              "following_url": "https://api.github.com/users/github/following{/other_user}",
                              "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                              "html_url": "https://github.com/github",
                              "id": 9919,
                              "login": "github",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                              "organizations_url": "https://api.github.com/users/github/orgs",
                              "received_events_url": "https://api.github.com/users/github/received_events",
                              "repos_url": "https://api.github.com/users/github/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                              "type": "Organization",
                              "url": "https://api.github.com/users/github"
                            },
                            "permissions": [
                              "delete_alerts_code_scanning"
                            ],
                            "updated_at": "2022-07-04T22:20:11Z"
                          },
                          {
                            "base_role": "read",
                            "created_at": "2022-07-05T12:01:11Z",
                            "description": "Able to handle all the community interactions without being able to contribute code",
                            "id": 8031,
                            "name": "Community manager",
                            "organization": {
                              "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                              "events_url": "https://api.github.com/users/github/events{/privacy}",
                              "followers_url": "https://api.github.com/users/github/followers",
                              "following_url": "https://api.github.com/users/github/following{/other_user}",
                              "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                              "html_url": "https://github.com/github",
                              "id": 9919,
                              "login": "github",
                              "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                              "organizations_url": "https://api.github.com/users/github/orgs",
                              "received_events_url": "https://api.github.com/users/github/received_events",
                              "repos_url": "https://api.github.com/users/github/repos",
                              "site_admin": false,
                              "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                              "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                              "type": "Organization",
                              "url": "https://api.github.com/users/github"
                            },
                            "permissions": [
                              "mark_as_duplicate",
                              "manage_settings_pages",
                              "manage_settings_wiki",
                              "set_social_preview",
                              "edit_repo_metadata",
                              "toggle_discussion_comment_minimize"
                            ],
                            "updated_at": "2022-07-05T12:20:11Z"
                          }
                        ],
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "custom_roles": {
                        "items": {
                          "description": "Custom repository roles created by organization administrators",
                          "properties": {
                            "base_role": {
                              "description": "The system role from which this role inherits permissions.",
                              "enum": [
                                "read",
                                "triage",
                                "write",
                                "maintain"
                              ],
                              "type": "string"
                            },
                            "created_at": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "description": {
                              "description": "A short description about who this role is for or what permissions it grants.",
                              "nullable": true,
                              "type": "string"
                            },
                            "id": {
                              "description": "The unique identifier of the custom role.",
                              "type": "integer"
                            },
                            "name": {
                              "description": "The name of the custom role.",
                              "type": "string"
                            },
                            "organization": {
                              "description": "A GitHub user.",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "permissions": {
                              "description": "A list of additional permissions included in this role.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "updated_at": {
                              "format": "date-time",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "base_role",
                            "permissions",
                            "organization",
                            "created_at",
                            "updated_at"
                          ],
                          "title": "Organization Custom Repository Role",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_count": {
                        "description": "The number of custom roles in this organization",
                        "example": 3,
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response - list of custom role names"
            }
          },
          "summary": "List custom repository roles in an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "custom-roles"
          }
        },
        "post": {
          "deprecated": null,
          "description": "Creates a custom repository role that can be used by all repositories owned by the organization.\n\nTo use this endpoint, the authenticated user must be an administrator for the organization and must use an personal access token (classic) with `admin:org` scope or a fine-grained personal access token with the `organization_custom_roles:write` organization permission.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#create-a-custom-repository-role"
          },
          "operationId": "orgs/create-custom-repo-role",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "base_role": "read",
                      "description": "A role for issue and pull request labelers",
                      "name": "Labeler",
                      "permissions": [
                        "add_label"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "base_role": {
                      "description": "The system role from which this role inherits permissions.",
                      "enum": [
                        "read",
                        "triage",
                        "write",
                        "maintain"
                      ],
                      "type": "string"
                    },
                    "description": {
                      "description": "A short description about who this role is for or what permissions it grants.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the custom role.",
                      "type": "string"
                    },
                    "permissions": {
                      "description": "A list of additional permissions included in this role.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "name",
                    "base_role",
                    "permissions"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "base_role": "maintain",
                        "created_at": "2022-07-04T22:19:11Z",
                        "description": "Able to contribute code and maintain the security pipeline",
                        "id": 8030,
                        "name": "Security Engineer",
                        "organization": {
                          "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                          "events_url": "https://api.github.com/users/github/events{/privacy}",
                          "followers_url": "https://api.github.com/users/github/followers",
                          "following_url": "https://api.github.com/users/github/following{/other_user}",
                          "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                          "html_url": "https://github.com/github",
                          "id": 9919,
                          "login": "github",
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                          "organizations_url": "https://api.github.com/users/github/orgs",
                          "received_events_url": "https://api.github.com/users/github/received_events",
                          "repos_url": "https://api.github.com/users/github/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                          "type": "Organization",
                          "url": "https://api.github.com/users/github"
                        },
                        "permissions": [
                          "delete_alerts_code_scanning"
                        ],
                        "updated_at": "2022-07-04T22:20:11Z"
                      }
                    }
                  },
                  "schema": {
                    "description": "Custom repository roles created by organization administrators",
                    "properties": {
                      "base_role": {
                        "description": "The system role from which this role inherits permissions.",
                        "enum": [
                          "read",
                          "triage",
                          "write",
                          "maintain"
                        ],
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "description": {
                        "description": "A short description about who this role is for or what permissions it grants.",
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique identifier of the custom role.",
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the custom role.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "A GitHub user.",
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      },
                      "permissions": {
                        "description": "A list of additional permissions included in this role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "base_role",
                      "permissions",
                      "organization",
                      "created_at",
                      "updated_at"
                    ],
                    "title": "Organization Custom Repository Role",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Create a custom repository role",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "custom-roles"
          }
        }
      },
      "/orgs/{org}/custom-repository-roles/{role_id}": {
        "delete": {
          "deprecated": null,
          "description": "Deletes a custom role from an organization. Once the custom role has been deleted, any\nuser, team, or invitation with the deleted custom role will be reassigned the inherited role.\n\nTo use this endpoint the authenticated user must be an administrator for the organization and must use an access token with `admin:org` scope.\nGitHub Apps must have the `organization_custom_roles:write` organization permission to use this endpoint.\n\nFor more information about custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#delete-a-custom-repository-role"
          },
          "operationId": "orgs/delete-custom-repo-role",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the role.",
              "in": "path",
              "name": "role_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a custom repository role",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "custom-roles"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Gets a custom repository role that is available to all repositories owned by the organization.\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#get-a-custom-repository-role"
          },
          "operationId": "orgs/get-custom-repo-role",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the role.",
              "in": "path",
              "name": "role_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "base_role": "maintain",
                        "created_at": "2022-07-04T22:19:11Z",
                        "description": "Able to contribute code and maintain the security pipeline",
                        "id": 8030,
                        "name": "Security Engineer",
                        "organization": {
                          "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                          "events_url": "https://api.github.com/users/github/events{/privacy}",
                          "followers_url": "https://api.github.com/users/github/followers",
                          "following_url": "https://api.github.com/users/github/following{/other_user}",
                          "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                          "html_url": "https://github.com/github",
                          "id": 9919,
                          "login": "github",
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                          "organizations_url": "https://api.github.com/users/github/orgs",
                          "received_events_url": "https://api.github.com/users/github/received_events",
                          "repos_url": "https://api.github.com/users/github/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                          "type": "Organization",
                          "url": "https://api.github.com/users/github"
                        },
                        "permissions": [
                          "delete_alerts_code_scanning"
                        ],
                        "updated_at": "2022-07-04T22:20:11Z"
                      }
                    }
                  },
                  "schema": {
                    "description": "Custom repository roles created by organization administrators",
                    "properties": {
                      "base_role": {
                        "description": "The system role from which this role inherits permissions.",
                        "enum": [
                          "read",
                          "triage",
                          "write",
                          "maintain"
                        ],
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "description": {
                        "description": "A short description about who this role is for or what permissions it grants.",
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique identifier of the custom role.",
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the custom role.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "A GitHub user.",
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      },
                      "permissions": {
                        "description": "A list of additional permissions included in this role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "base_role",
                      "permissions",
                      "organization",
                      "created_at",
                      "updated_at"
                    ],
                    "title": "Organization Custom Repository Role",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Get a custom repository role",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "custom-roles"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Updates a custom repository role that can be used by all repositories owned by the organization.\n\nTo use this endpoint the authenticated user must be an administrator for the organization and must use an access token with `admin:org` scope.\nGitHub Apps must have the `organization_custom_roles:write` organization permission to use this endpoint.\n\nFor more information about custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#update-a-custom-repository-role"
          },
          "operationId": "orgs/update-custom-repo-role",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the role.",
              "in": "path",
              "name": "role_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "base_role": "read",
                      "description": "A role for issue and PR labelers",
                      "name": "Labeler",
                      "permissions": [
                        "add_label",
                        "remove_label"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "base_role": {
                      "description": "The system role from which this role inherits permissions.",
                      "enum": [
                        "read",
                        "triage",
                        "write",
                        "maintain"
                      ],
                      "type": "string"
                    },
                    "description": {
                      "description": "A short description about who this role is for or what permissions it grants.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the custom role.",
                      "type": "string"
                    },
                    "permissions": {
                      "description": "A list of additional permissions included in this role.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "base_role": "maintain",
                        "created_at": "2022-07-04T22:19:11Z",
                        "description": "Able to contribute code and maintain the security pipeline",
                        "id": 8030,
                        "name": "Security Engineer",
                        "organization": {
                          "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                          "events_url": "https://api.github.com/users/github/events{/privacy}",
                          "followers_url": "https://api.github.com/users/github/followers",
                          "following_url": "https://api.github.com/users/github/following{/other_user}",
                          "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                          "html_url": "https://github.com/github",
                          "id": 9919,
                          "login": "github",
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                          "organizations_url": "https://api.github.com/users/github/orgs",
                          "received_events_url": "https://api.github.com/users/github/received_events",
                          "repos_url": "https://api.github.com/users/github/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                          "type": "Organization",
                          "url": "https://api.github.com/users/github"
                        },
                        "permissions": [
                          "delete_alerts_code_scanning"
                        ],
                        "updated_at": "2022-07-04T22:20:11Z"
                      }
                    }
                  },
                  "schema": {
                    "description": "Custom repository roles created by organization administrators",
                    "properties": {
                      "base_role": {
                        "description": "The system role from which this role inherits permissions.",
                        "enum": [
                          "read",
                          "triage",
                          "write",
                          "maintain"
                        ],
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "description": {
                        "description": "A short description about who this role is for or what permissions it grants.",
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique identifier of the custom role.",
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the custom role.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "A GitHub user.",
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      },
                      "permissions": {
                        "description": "A list of additional permissions included in this role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "base_role",
                      "permissions",
                      "organization",
                      "created_at",
                      "updated_at"
                    ],
                    "title": "Organization Custom Repository Role",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Update a custom repository role",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "custom-roles"
          }
        }
      },
      "/orgs/{org}/custom_roles": {
        "post": {
          "deprecated": true,
          "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[Create a custom repository role](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#create-a-custom-repository-role)\" endpoint instead.\n\nCreates a custom repository role that can be used by all repositories owned by the organization.\n\nTo use this endpoint, the authenticated user must be an administrator for the organization and must use an personal access token (classic) with `admin:org` scope or a fine-grained personal access token with the `organization_custom_roles:write` organization permission.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#create-a-custom-role"
          },
          "operationId": "orgs/create-custom-role",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "base_role": "read",
                      "description": "A role for issue and pull request labelers",
                      "name": "Labeler",
                      "permissions": [
                        "add_label"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "base_role": {
                      "description": "The system role from which this role inherits permissions.",
                      "enum": [
                        "read",
                        "triage",
                        "write",
                        "maintain"
                      ],
                      "type": "string"
                    },
                    "description": {
                      "description": "A short description about who this role is for or what permissions it grants.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the custom role.",
                      "type": "string"
                    },
                    "permissions": {
                      "description": "A list of additional permissions included in this role.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "name",
                    "base_role",
                    "permissions"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "base_role": "maintain",
                        "created_at": "2022-07-04T22:19:11Z",
                        "description": "Able to contribute code and maintain the security pipeline",
                        "id": 8030,
                        "name": "Security Engineer",
                        "organization": {
                          "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                          "events_url": "https://api.github.com/users/github/events{/privacy}",
                          "followers_url": "https://api.github.com/users/github/followers",
                          "following_url": "https://api.github.com/users/github/following{/other_user}",
                          "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                          "html_url": "https://github.com/github",
                          "id": 9919,
                          "login": "github",
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                          "organizations_url": "https://api.github.com/users/github/orgs",
                          "received_events_url": "https://api.github.com/users/github/received_events",
                          "repos_url": "https://api.github.com/users/github/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                          "type": "Organization",
                          "url": "https://api.github.com/users/github"
                        },
                        "permissions": [
                          "delete_alerts_code_scanning"
                        ],
                        "updated_at": "2022-07-04T22:20:11Z"
                      }
                    }
                  },
                  "schema": {
                    "description": "Custom repository roles created by organization administrators",
                    "properties": {
                      "base_role": {
                        "description": "The system role from which this role inherits permissions.",
                        "enum": [
                          "read",
                          "triage",
                          "write",
                          "maintain"
                        ],
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "description": {
                        "description": "A short description about who this role is for or what permissions it grants.",
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique identifier of the custom role.",
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the custom role.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "A GitHub user.",
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      },
                      "permissions": {
                        "description": "A list of additional permissions included in this role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "base_role",
                      "permissions",
                      "organization",
                      "created_at",
                      "updated_at"
                    ],
                    "title": "Organization Custom Repository Role",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Deprecated - Create a custom role",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "deprecationDate": "2023-03-06",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "removalDate": "2023-09-06",
            "subcategory": "custom-roles"
          }
        }
      },
      "/orgs/{org}/custom_roles/{role_id}": {
        "delete": {
          "deprecated": true,
          "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[Delete a custom repository role](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#delete-a-custom-repository-role)\" endpoint instead.\n\nDeletes a custom role from an organization. Once the custom role has been deleted, any\nuser, team, or invitation with the deleted custom role will be reassigned the inherited role.\n\nTo use this endpoint the authenticated user must be an administrator for the organization and must use an access token with `admin:org` scope.\nGitHub Apps must have the `organization_custom_roles:write` organization permission to use this endpoint.\n\nFor more information about custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#delete-a-custom-role"
          },
          "operationId": "orgs/delete-custom-role",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the role.",
              "in": "path",
              "name": "role_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Deprecated - Delete a custom role",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "deprecationDate": "2023-03-06",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "removalDate": "2022-09-06",
            "subcategory": "custom-roles"
          }
        },
        "get": {
          "deprecated": true,
          "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[Get a custom repository role](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#get-a-custom-repository-role)\" endpoint instead.\n\nGets a custom repository role that is available to all repositories owned by the organization.\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.\n\nFor more information on custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/#get-a-custom-role"
          },
          "operationId": "orgs/get-custom-role",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the role.",
              "in": "path",
              "name": "role_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "base_role": "maintain",
                        "created_at": "2022-07-04T22:19:11Z",
                        "description": "Able to contribute code and maintain the security pipeline",
                        "id": 8030,
                        "name": "Security Engineer",
                        "organization": {
                          "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                          "events_url": "https://api.github.com/users/github/events{/privacy}",
                          "followers_url": "https://api.github.com/users/github/followers",
                          "following_url": "https://api.github.com/users/github/following{/other_user}",
                          "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                          "html_url": "https://github.com/github",
                          "id": 9919,
                          "login": "github",
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                          "organizations_url": "https://api.github.com/users/github/orgs",
                          "received_events_url": "https://api.github.com/users/github/received_events",
                          "repos_url": "https://api.github.com/users/github/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                          "type": "Organization",
                          "url": "https://api.github.com/users/github"
                        },
                        "permissions": [
                          "delete_alerts_code_scanning"
                        ],
                        "updated_at": "2022-07-04T22:20:11Z"
                      }
                    }
                  },
                  "schema": {
                    "description": "Custom repository roles created by organization administrators",
                    "properties": {
                      "base_role": {
                        "description": "The system role from which this role inherits permissions.",
                        "enum": [
                          "read",
                          "triage",
                          "write",
                          "maintain"
                        ],
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "description": {
                        "description": "A short description about who this role is for or what permissions it grants.",
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique identifier of the custom role.",
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the custom role.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "A GitHub user.",
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      },
                      "permissions": {
                        "description": "A list of additional permissions included in this role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "base_role",
                      "permissions",
                      "organization",
                      "created_at",
                      "updated_at"
                    ],
                    "title": "Organization Custom Repository Role",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Deprecated - Get a custom role",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "deprecationDate": "2023-03-06",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "removalDate": "2022-09-06",
            "subcategory": "custom-roles"
          }
        },
        "patch": {
          "deprecated": true,
          "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[Update a custom repository role](https://docs.github.com/enterprise-cloud@latest//rest/orgs/custom-roles#update-a-custom-repository-role)\" endpoint instead.\n\nUpdates a custom repository role that can be used by all repositories owned by the organization.\n\nTo use this endpoint the authenticated user must be an administrator for the organization and must use an access token with `admin:org` scope.\nGitHub Apps must have the `organization_custom_roles:write` organization permission to use this endpoint.\n\nFor more information about custom repository roles, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#update-a-custom-role"
          },
          "operationId": "orgs/update-custom-role",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the role.",
              "in": "path",
              "name": "role_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "base_role": "read",
                      "description": "A role for issue and PR labelers",
                      "name": "Labeler",
                      "permissions": [
                        "add_label",
                        "remove_label"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "base_role": {
                      "description": "The system role from which this role inherits permissions.",
                      "enum": [
                        "read",
                        "triage",
                        "write",
                        "maintain"
                      ],
                      "type": "string"
                    },
                    "description": {
                      "description": "A short description about who this role is for or what permissions it grants.",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the custom role.",
                      "type": "string"
                    },
                    "permissions": {
                      "description": "A list of additional permissions included in this role.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "base_role": "maintain",
                        "created_at": "2022-07-04T22:19:11Z",
                        "description": "Able to contribute code and maintain the security pipeline",
                        "id": 8030,
                        "name": "Security Engineer",
                        "organization": {
                          "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                          "events_url": "https://api.github.com/users/github/events{/privacy}",
                          "followers_url": "https://api.github.com/users/github/followers",
                          "following_url": "https://api.github.com/users/github/following{/other_user}",
                          "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                          "html_url": "https://github.com/github",
                          "id": 9919,
                          "login": "github",
                          "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                          "organizations_url": "https://api.github.com/users/github/orgs",
                          "received_events_url": "https://api.github.com/users/github/received_events",
                          "repos_url": "https://api.github.com/users/github/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                          "type": "Organization",
                          "url": "https://api.github.com/users/github"
                        },
                        "permissions": [
                          "delete_alerts_code_scanning"
                        ],
                        "updated_at": "2022-07-04T22:20:11Z"
                      }
                    }
                  },
                  "schema": {
                    "description": "Custom repository roles created by organization administrators",
                    "properties": {
                      "base_role": {
                        "description": "The system role from which this role inherits permissions.",
                        "enum": [
                          "read",
                          "triage",
                          "write",
                          "maintain"
                        ],
                        "type": "string"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "description": {
                        "description": "A short description about who this role is for or what permissions it grants.",
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "description": "The unique identifier of the custom role.",
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the custom role.",
                        "type": "string"
                      },
                      "organization": {
                        "description": "A GitHub user.",
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      },
                      "permissions": {
                        "description": "A list of additional permissions included in this role.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "base_role",
                      "permissions",
                      "organization",
                      "created_at",
                      "updated_at"
                    ],
                    "title": "Organization Custom Repository Role",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Deprecated - Update a custom role",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "deprecationDate": "2023-03-06",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "removalDate": "2022-09-06",
            "subcategory": "custom-roles"
          }
        }
      },
      "/orgs/{org}/external-group/{group_id}": {
        "get": {
          "deprecated": null,
          "description": "Displays information about the specific group's usage.  Provides a list of the group's external members as well as a list of teams that this group is connected to.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#external-idp-group-info-for-an-organization"
          },
          "operationId": "teams/external-idp-group-info-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the group.",
              "in": "path",
              "name": "group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "group_id": "123",
                        "group_name": "Octocat admins",
                        "members": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "teams": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "updated_at": "2021-01-24T11:31:04-06:00"
                      }
                    }
                  },
                  "schema": {
                    "description": "Information about an external group's usage and its members",
                    "properties": {
                      "group_id": {
                        "description": "The internal ID of the group",
                        "example": 1,
                        "type": "integer"
                      },
                      "group_name": {
                        "description": "The display name for the group",
                        "example": "group-azuread-test",
                        "type": "string"
                      },
                      "members": {
                        "description": "An array of external members linked to this group",
                        "example": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "items": {
                          "properties": {
                            "member_email": {
                              "description": "An email attached to a user",
                              "example": "mona_lisa@github.com",
                              "type": "string"
                            },
                            "member_id": {
                              "description": "The internal user ID of the identity",
                              "example": 1,
                              "type": "integer"
                            },
                            "member_login": {
                              "description": "The handle/login for the user",
                              "example": "mona-lisa_eocsaxrs",
                              "type": "string"
                            },
                            "member_name": {
                              "description": "The user display name/profile name",
                              "example": "Mona Lisa",
                              "type": "string"
                            }
                          },
                          "required": [
                            "member_id",
                            "member_login",
                            "member_name",
                            "member_email"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "teams": {
                        "description": "An array of teams linked to this group",
                        "example": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "team_id": {
                              "description": "The id for a team",
                              "example": 1,
                              "type": "integer"
                            },
                            "team_name": {
                              "description": "The name of the team",
                              "example": "team-test",
                              "type": "string"
                            }
                          },
                          "required": [
                            "team_id",
                            "team_name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "description": "The date when the group was last updated_at",
                        "example": "2021-01-03 22:27:15:000 -700",
                        "type": "string"
                      }
                    },
                    "required": [
                      "group_id",
                      "group_name",
                      "teams",
                      "members"
                    ],
                    "title": "ExternalGroup",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get an external group",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        }
      },
      "/orgs/{org}/external-groups": {
        "get": {
          "deprecated": null,
          "description": "Lists external groups available in an organization. You can query the groups using the `display_name` parameter, only groups with a `group_name` containing the text provided in the `display_name` parameter will be returned.  You can also limit your page results using the `per_page` parameter. GitHub Enterprise Cloud generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-external-idp-groups-for-an-organization"
          },
          "operationId": "teams/list-external-idp-groups-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page token",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Limits the list to groups containing the text in the group name",
              "in": "query",
              "name": "display_name",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_id": "123",
                            "group_name": "Octocat admins",
                            "updated_at": "2021-01-24T11:31:04-06:00"
                          },
                          {
                            "group_id": "456",
                            "group_name": "Octocat docs members",
                            "updated_at": "2021-03-24T11:31:04-06:00"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "A list of external groups available to be connected to a team",
                    "properties": {
                      "groups": {
                        "description": "An array of external groups available to be mapped to a team",
                        "example": [
                          {
                            "group_id": 1,
                            "group_name": "group-azuread-test",
                            "updated_at": "2021-01-03 22:27:15:000 -700"
                          },
                          {
                            "group_id": 2,
                            "group_name": "group-azuread-test2",
                            "updated_at": "2021-06-03 22:27:15:000 -700"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_id": {
                              "description": "The internal ID of the group",
                              "example": 1,
                              "type": "integer"
                            },
                            "group_name": {
                              "description": "The display name of the group",
                              "example": "group-azuread-test",
                              "type": "string"
                            },
                            "updated_at": {
                              "description": "The time of the last update for this group",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "updated_at"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ExternalGroups",
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?per_page=2&page=url-encoded-next-page-token>; rel=\"next\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List external groups in an organization",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        }
      },
      "/orgs/{org}/fine_grained_permissions": {
        "get": {
          "deprecated": true,
          "description": "**Note**: This operation is deprecated and will be removed after September 6th 2023.\nUse the \"[List fine-grained repository permissions](https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#list-repository-fine-grained-permissions-for-an-organization)\" endpoint instead.\n\nLists the fine-grained permissions that can be used in custom repository roles for an organization. For more information, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#list-repository-fine-grained-permissions-for-an-organization"
          },
          "operationId": "orgs/list-fine-grained-permissions",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "description": "Assign or remove a user",
                          "name": "add_assignee"
                        },
                        {
                          "description": "Remove an assigned user",
                          "name": "remove_assignee"
                        },
                        {
                          "description": "Add or remove a label",
                          "name": "add_label"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "A fine-grained permission that protects repository resources.",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "description"
                      ],
                      "title": "Repository Fine-Grained Permission",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Deprecated - List fine-grained permissions for an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "deprecationDate": "2023-03-06",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "removalDate": "2022-09-06",
            "subcategory": "custom-roles"
          }
        }
      },
      "/orgs/{org}/repository-fine-grained-permissions": {
        "get": {
          "deprecated": null,
          "description": "Lists the fine-grained permissions that can be used in custom repository roles for an organization. For more information, see \"[About custom repository roles](https://docs.github.com/enterprise-cloud@latest//organizations/managing-peoples-access-to-your-organization-with-roles/about-custom-repository-roles).\"\n\nTo use this endpoint the authenticated user must be an administrator of the organization or of a repository of the organization and must use an access token with the `admin:org` or `repo` scope.\nGitHub Apps must have the `organization_custom_roles:read` or `organization_administration:read` organization permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs/custom-roles#list-repo-fine-grained-permissions"
          },
          "operationId": "orgs/list-repo-fine-grained-permissions",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "description": "Assign or remove a user",
                          "name": "add_assignee"
                        },
                        {
                          "description": "Remove an assigned user",
                          "name": "remove_assignee"
                        },
                        {
                          "description": "Add or remove a label",
                          "name": "add_label"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "A fine-grained permission that protects repository resources.",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "description"
                      ],
                      "title": "Repository Fine-Grained Permission",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List repository fine-grained permissions for an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "custom-roles"
          }
        }
      },
      "/orgs/{org}/settings/billing/advanced-security": {
        "get": {
          "deprecated": null,
          "description": "Gets the GitHub Advanced Security active committers for an organization per repository.\n\nEach distinct user login across all repositories is counted as a single Advanced Security seat, so the `total_advanced_security_committers` is not the sum of advanced_security_committers for each repository.\n\nIf this organization defers to an enterprise for billing, the `total_advanced_security_committers` returned from the organization API may include some users that are in more than one organization, so they will only consume a single Advanced Security seat at the enterprise level.\n\nThe total number of repositories with committer information is tracked by the `total_count` field.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-github-advanced-security-active-committers-for-an-organization"
          },
          "operationId": "billing/get-github-advanced-security-billing-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "repositories": [
                          {
                            "advanced_security_committers": 2,
                            "advanced_security_committers_breakdown": [
                              {
                                "last_pushed_date": "2021-11-03",
                                "user_login": "octocat"
                              },
                              {
                                "last_pushed_date": "2021-10-25",
                                "user_login": "octokitten"
                              }
                            ],
                            "name": "octocat-org/Hello-World"
                          },
                          {
                            "advanced_security_committers": 1,
                            "advanced_security_committers_breakdown": [
                              {
                                "last_pushed_date": "2021-10-26",
                                "user_login": "octokitten"
                              }
                            ],
                            "name": "octocat-org/server"
                          }
                        ],
                        "total_advanced_security_committers": 2,
                        "total_count": 2
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "repositories": {
                        "items": {
                          "properties": {
                            "advanced_security_committers": {
                              "example": 25,
                              "type": "integer"
                            },
                            "advanced_security_committers_breakdown": {
                              "items": {
                                "properties": {
                                  "last_pushed_date": {
                                    "example": "2021-11-03",
                                    "type": "string"
                                  },
                                  "user_login": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "user_login",
                                  "last_pushed_date"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "name": {
                              "example": "octocat/Hello-World",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "advanced_security_committers",
                            "advanced_security_committers_breakdown"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "total_advanced_security_committers": {
                        "example": 25,
                        "type": "integer"
                      },
                      "total_count": {
                        "example": 2,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "repositories"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Success"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Response if GitHub Advanced Security is not enabled for this repository"
            }
          },
          "summary": "Get GitHub Advanced Security active committers for an organization",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "billing",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/orgs/{org}/team-sync/groups": {
        "get": {
          "deprecated": null,
          "description": "Lists IdP groups available in an organization.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-an-organization"
          },
          "operationId": "teams/list-idp-groups-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page token",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Filters the results to return only those that begin with the value specified by this parameter. For example, a value of `ab` will return results that begin with \"ab\".",
              "in": "query",
              "name": "q",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          },
                          {
                            "group_description": "The people who make your octoworld come to life.",
                            "group_id": "456",
                            "group_name": "Octocat docs members"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?per_page=2&page=url-encoded-next-page-token>; rel=\"next\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List IdP groups for an organization",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "team-sync"
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/external-groups": {
        "delete": {
          "deprecated": null,
          "description": "Deletes a connection between a team and an external group.\n\nYou can manage team membership with your IdP using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#unlink-external-idp-group-team-connection"
          },
          "operationId": "teams/unlink-external-idp-group-from-team-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove the connection between an external group and a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Lists a connection between a team and an external group.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-external-idp-group-team-connection"
          },
          "operationId": "teams/list-linked-external-idp-groups-to-team-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_id": "123",
                            "group_name": "Octocat admins",
                            "updated_at": "2021-01-24T11:31:04-06:00"
                          },
                          {
                            "group_id": "456",
                            "group_name": "Octocat docs members",
                            "updated_at": "2021-03-24T11:31:04-06:00"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "A list of external groups available to be connected to a team",
                    "properties": {
                      "groups": {
                        "description": "An array of external groups available to be mapped to a team",
                        "example": [
                          {
                            "group_id": 1,
                            "group_name": "group-azuread-test",
                            "updated_at": "2021-01-03 22:27:15:000 -700"
                          },
                          {
                            "group_id": 2,
                            "group_name": "group-azuread-test2",
                            "updated_at": "2021-06-03 22:27:15:000 -700"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_id": {
                              "description": "The internal ID of the group",
                              "example": 1,
                              "type": "integer"
                            },
                            "group_name": {
                              "description": "The display name of the group",
                              "example": "group-azuread-test",
                              "type": "string"
                            },
                            "updated_at": {
                              "description": "The time of the last update for this group",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "updated_at"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ExternalGroups",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List a connection between an external group and a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Creates a connection between a team and an external group.  Only one external group can be linked to a team.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#link-external-idp-group-team-connection"
          },
          "operationId": "teams/link-external-idp-group-to-team-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "group_id": 123
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "group_id": {
                      "description": "External Group Id",
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "group_id"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "group_id": "123",
                        "group_name": "Octocat admins",
                        "members": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "teams": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "updated_at": "2021-01-24T11:31:04-06:00"
                      }
                    }
                  },
                  "schema": {
                    "description": "Information about an external group's usage and its members",
                    "properties": {
                      "group_id": {
                        "description": "The internal ID of the group",
                        "example": 1,
                        "type": "integer"
                      },
                      "group_name": {
                        "description": "The display name for the group",
                        "example": "group-azuread-test",
                        "type": "string"
                      },
                      "members": {
                        "description": "An array of external members linked to this group",
                        "example": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "items": {
                          "properties": {
                            "member_email": {
                              "description": "An email attached to a user",
                              "example": "mona_lisa@github.com",
                              "type": "string"
                            },
                            "member_id": {
                              "description": "The internal user ID of the identity",
                              "example": 1,
                              "type": "integer"
                            },
                            "member_login": {
                              "description": "The handle/login for the user",
                              "example": "mona-lisa_eocsaxrs",
                              "type": "string"
                            },
                            "member_name": {
                              "description": "The user display name/profile name",
                              "example": "Mona Lisa",
                              "type": "string"
                            }
                          },
                          "required": [
                            "member_id",
                            "member_login",
                            "member_name",
                            "member_email"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "teams": {
                        "description": "An array of teams linked to this group",
                        "example": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "team_id": {
                              "description": "The id for a team",
                              "example": 1,
                              "type": "integer"
                            },
                            "team_name": {
                              "description": "The name of the team",
                              "example": "team-test",
                              "type": "string"
                            }
                          },
                          "required": [
                            "team_id",
                            "team_name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "description": "The date when the group was last updated_at",
                        "example": "2021-01-03 22:27:15:000 -700",
                        "type": "string"
                      }
                    },
                    "required": [
                      "group_id",
                      "group_name",
                      "teams",
                      "members"
                    ],
                    "title": "ExternalGroup",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update the connection between an external group and a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/team-sync/group-mappings": {
        "get": {
          "deprecated": null,
          "description": "List IdP groups connected to a team on GitHub Enterprise Cloud.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-a-team"
          },
          "operationId": "teams/list-idp-groups-in-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          },
                          {
                            "group_description": "The people who make your octoworld come to life.",
                            "group_id": "456",
                            "group_name": "Octocat docs members"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List IdP groups for a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "team-sync"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Creates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#create-or-update-idp-group-connections"
          },
          "operationId": "teams/create-or-update-idp-group-connections-in-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "groups": [
                        {
                          "group_description": "string",
                          "group_id": "123",
                          "group_name": "Octocat admins"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "groups": {
                      "description": "The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.",
                      "items": {
                        "properties": {
                          "group_description": {
                            "description": "Description of the IdP group.",
                            "type": "string"
                          },
                          "group_id": {
                            "description": "ID of the IdP group.",
                            "type": "string"
                          },
                          "group_name": {
                            "description": "Name of the IdP group.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "group_id",
                          "group_name",
                          "group_description"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          },
                          {
                            "group_description": "The people who make your octoworld come to life.",
                            "group_id": "456",
                            "group_name": "Octocat docs members"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create or update IdP group connections",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "team-sync"
          }
        }
      },
      "/scim/v2/organizations/{org}/Users": {
        "get": {
          "deprecated": null,
          "description": "Retrieves a paginated list of all provisioned organization members, including pending invitations. If you provide the `filter` parameter, the resources for all matching provisions members are returned.\n\nWhen a user with a SAML-provisioned external identity leaves (or is removed from) an organization, the account's metadata is immediately removed. However, the returned list of user accounts might not always match the organization or enterprise member list you see on GitHub Enterprise Cloud. This can happen in certain cases where an external identity associated with an organization will not match an organization member:\n  - When a user with a SCIM-provisioned external identity is removed from an organization, the account's metadata is preserved to allow the user to re-join the organization in the future.\n  - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).\n  - When a user is invited over SCIM, an external identity is created that matches with the invitee's email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.\n\nThe returned list of external identities can include an entry for a `null` user. These are unlinked SAML identities that are created when a user goes through the following Single Sign-On (SSO) process but does not sign in to their GitHub Enterprise Cloud account after completing SSO:\n\n1. The user is granted access by the IdP and is not a member of the GitHub Enterprise Cloud organization.\n\n1. The user attempts to access the GitHub Enterprise Cloud organization and initiates the SAML SSO process, and is not currently signed in to their GitHub Enterprise Cloud account.\n\n1. After successfully authenticating with the SAML SSO IdP, the `null` external identity entry is created and the user is prompted to sign in to their GitHub Enterprise Cloud account:\n   - If the user signs in, their GitHub Enterprise Cloud account is linked to this entry.\n   - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub Enterprise Cloud organization, and the external identity `null` entry remains in place.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#list-scim-provisioned-identities"
          },
          "operationId": "scim/list-provisioned-identities",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "Used for pagination: the index of the first result to return.",
              "in": "query",
              "name": "startIndex",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Used for pagination: the number of results to return.",
              "in": "query",
              "name": "count",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query:\n\n`?filter=userName%20eq%20\\\"Octocat\\\"`.\n\nTo filter results for the identity with the email `octocat@github.com`, you would use this query:\n\n`?filter=emails%20eq%20\\\"octocat@github.com\\\"`.",
              "in": "query",
              "name": "filter",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "response-with-filter": {
                      "summary": "Response with filter",
                      "value": {
                        "Resources": [
                          {
                            "active": true,
                            "displayName": "Mona Octocat",
                            "emails": [
                              {
                                "primary": true,
                                "value": "octocat@github.com"
                              }
                            ],
                            "externalId": "00u1dhhb1fkIGP7RL1d8",
                            "id": "5fc0c238-1112-11e8-8e45-920c87bdbd75",
                            "meta": {
                              "created": "2018-02-13T15:05:24.000-08:00",
                              "lastModified": "2018-02-13T15:05:55.000-08:00",
                              "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/5fc0c238-1112-11e8-8e45-920c87bdbd75",
                              "resourceType": "User"
                            },
                            "name": {
                              "familyName": "Octocat",
                              "formatted": "Mona Octocat",
                              "givenName": "Mona"
                            },
                            "schemas": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "userName": "octocat@github.com"
                          }
                        ],
                        "itemsPerPage": 1,
                        "schemas": [
                          "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ],
                        "startIndex": 1,
                        "totalResults": 1
                      }
                    },
                    "response-without-filter": {
                      "summary": "Response without filter",
                      "value": {
                        "Resources": [
                          {
                            "active": true,
                            "displayName": "Mona Octocat",
                            "emails": [
                              {
                                "primary": true,
                                "value": "mona.octocat@okta.example.com"
                              }
                            ],
                            "externalId": "a7d0f98382",
                            "id": "edefdfedf-050c-11e7-8d32",
                            "meta": {
                              "created": "2017-03-09T16:11:13-05:00",
                              "lastModified": "2017-03-09T16:11:13-05:00",
                              "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                              "resourceType": "User"
                            },
                            "name": {
                              "familyName": "Octocat",
                              "formatted": "Mona Octocat",
                              "givenName": "Mona"
                            },
                            "schemas": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "userName": "mona.octocat@okta.example.com"
                          },
                          {
                            "active": true,
                            "displayName": "hu bot",
                            "emails": [
                              {
                                "primary": true,
                                "value": "hubot@example.com"
                              }
                            ],
                            "externalId": "sdfoiausdofiua",
                            "id": "77563764-eb6-24-0598234-958243",
                            "meta": {
                              "created": "2017-03-09T16:11:13-05:00",
                              "lastModified": "2017-03-09T16:11:13-05:00",
                              "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/77563764-eb6-24-0598234-958243",
                              "resourceType": "User"
                            },
                            "name": {
                              "familyName": "bot",
                              "formatted": "hu bot",
                              "givenName": "hu"
                            },
                            "schemas": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "userName": "hubot@example.com"
                          }
                        ],
                        "itemsPerPage": 2,
                        "schemas": [
                          "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ],
                        "startIndex": 1,
                        "totalResults": 2
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM User List",
                    "properties": {
                      "Resources": {
                        "items": {
                          "description": "SCIM /Users provisioning endpoints",
                          "properties": {
                            "active": {
                              "description": "The active status of the User.",
                              "example": true,
                              "type": "boolean"
                            },
                            "displayName": {
                              "description": "The name of the user, suitable for display to end-users",
                              "example": "Jon Doe",
                              "nullable": true,
                              "type": "string"
                            },
                            "emails": {
                              "description": "user emails",
                              "example": [
                                {
                                  "primary": true,
                                  "value": "someone@example.com"
                                },
                                {
                                  "primary": false,
                                  "value": "another@example.com"
                                }
                              ],
                              "items": {
                                "properties": {
                                  "primary": {
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "externalId": {
                              "description": "The ID of the User.",
                              "example": "a7b0f98395",
                              "nullable": true,
                              "type": "string"
                            },
                            "groups": {
                              "description": "associated groups",
                              "items": {
                                "properties": {
                                  "display": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "id": {
                              "description": "Unique identifier of an external identity",
                              "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                              "type": "string"
                            },
                            "meta": {
                              "properties": {
                                "created": {
                                  "example": "2019-01-24T22:45:36.000Z",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "lastModified": {
                                  "example": "2019-01-24T22:45:36.000Z",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "location": {
                                  "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "resourceType": {
                                  "example": "User",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "name": {
                              "example": {
                                "familyName": "User",
                                "givenName": "Jane"
                              },
                              "properties": {
                                "familyName": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "formatted": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "givenName": {
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "operations": {
                              "description": "Set of operations to be performed",
                              "example": [
                                {
                                  "op": "replace",
                                  "value": {
                                    "active": false
                                  }
                                }
                              ],
                              "items": {
                                "properties": {
                                  "op": {
                                    "enum": [
                                      "add",
                                      "remove",
                                      "replace"
                                    ],
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "op"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "organization_id": {
                              "description": "The ID of the organization.",
                              "type": "integer"
                            },
                            "roles": {
                              "items": {
                                "properties": {
                                  "display": {
                                    "type": "string"
                                  },
                                  "primary": {
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "schemas": {
                              "description": "SCIM schema used.",
                              "items": {
                                "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "userName": {
                              "description": "Configured by the admin. Could be an email, login, or username",
                              "example": "someone@example.com",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "schemas",
                            "emails",
                            "active",
                            "meta"
                          ],
                          "title": "SCIM /Users",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "itemsPerPage": {
                        "example": 10,
                        "type": "integer"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:api:messages:2.0:ListResponse",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "startIndex": {
                        "example": 1,
                        "type": "integer"
                      },
                      "totalResults": {
                        "example": 3,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "schemas",
                      "totalResults",
                      "itemsPerPage",
                      "startIndex",
                      "Resources"
                    ],
                    "title": "SCIM User List",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too many requests"
            }
          },
          "summary": "List SCIM provisioned identities",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        },
        "post": {
          "deprecated": null,
          "description": "Provisions organization membership for a user, and sends an activation email to the email address. If the user was previously a member of the organization, the invitation will reinstate any former privileges that the user had. For more information about reinstating former members, see \"[Reinstating a former member of your organization](https://docs.github.com/enterprise-cloud@latest//organizations/managing-membership-in-your-organization/reinstating-a-former-member-of-your-organization).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#provision-and-invite-a-scim-user"
          },
          "operationId": "scim/provision-and-invite-user",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "emails": [
                        {
                          "primary": true,
                          "value": "mona.octocat@github.com"
                        }
                      ],
                      "name": "Monalisa Octocat",
                      "userName": "octocat"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "displayName": {
                      "description": "The name of the user, suitable for display to end-users",
                      "example": "Jon Doe",
                      "type": "string"
                    },
                    "emails": {
                      "description": "user emails",
                      "example": [
                        {
                          "primary": true,
                          "value": "someone@example.com"
                        },
                        {
                          "primary": false,
                          "value": "another@example.com"
                        }
                      ],
                      "items": {
                        "properties": {
                          "primary": {
                            "type": "boolean"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "groups": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "example": {
                        "familyName": "User",
                        "givenName": "Jane"
                      },
                      "properties": {
                        "familyName": {
                          "type": "string"
                        },
                        "formatted": {
                          "type": "string"
                        },
                        "givenName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "givenName",
                        "familyName"
                      ],
                      "type": "object"
                    },
                    "schemas": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userName": {
                      "description": "Configured by the admin. Could be an email, login, or username",
                      "example": "someone@example.com",
                      "type": "string"
                    }
                  },
                  "required": [
                    "userName",
                    "name",
                    "emails"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "displayName": "Monalisa Octocat",
                        "emails": [
                          {
                            "primary": true,
                            "value": "mona.octocat@okta.example.com"
                          },
                          {
                            "value": "monalisa@octocat.github.com"
                          }
                        ],
                        "externalId": "a7d0f98382",
                        "id": "edefdfedf-050c-11e7-8d32",
                        "meta": {
                          "created": "2017-03-09T16:11:13-05:00",
                          "lastModified": "2017-03-09T16:11:13-05:00",
                          "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Monalisa Octocat",
                          "givenName": "Monalisa"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "mona.octocat@okta.example.com"
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM /Users provisioning endpoints",
                    "properties": {
                      "active": {
                        "description": "The active status of the User.",
                        "example": true,
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "nullable": true,
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          {
                            "primary": true,
                            "value": "someone@example.com"
                          },
                          {
                            "primary": false,
                            "value": "another@example.com"
                          }
                        ],
                        "items": {
                          "properties": {
                            "primary": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "externalId": {
                        "description": "The ID of the User.",
                        "example": "a7b0f98395",
                        "nullable": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "associated groups",
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "Unique identifier of an external identity",
                        "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                        "type": "string"
                      },
                      "meta": {
                        "properties": {
                          "created": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModified": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "location": {
                            "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                            "format": "uri",
                            "type": "string"
                          },
                          "resourceType": {
                            "example": "User",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": {
                            "nullable": true,
                            "type": "string"
                          },
                          "formatted": {
                            "nullable": true,
                            "type": "string"
                          },
                          "givenName": {
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "operations": {
                        "description": "Set of operations to be performed",
                        "example": [
                          {
                            "op": "replace",
                            "value": {
                              "active": false
                            }
                          }
                        ],
                        "items": {
                          "properties": {
                            "op": {
                              "enum": [
                                "add",
                                "remove",
                                "replace"
                              ],
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object"
                                },
                                {
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "op"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "organization_id": {
                        "description": "The ID of the organization.",
                        "type": "integer"
                      },
                      "roles": {
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "primary": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "schemas",
                      "emails",
                      "active",
                      "meta"
                    ],
                    "title": "SCIM /Users",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "409": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Conflict"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal server error"
            }
          },
          "summary": "Provision and invite a SCIM user",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/scim/v2/organizations/{org}/Users/{scim_user_id}": {
        "delete": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#delete-a-scim-user-from-an-organization"
          },
          "operationId": "scim/delete-user-from-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Delete a SCIM user from an organization",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#get-scim-provisioning-information-for-a-user"
          },
          "operationId": "scim/get-provisioning-information-for-user",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "displayName": "Monalisa Octocat",
                        "emails": [
                          {
                            "primary": true,
                            "value": "mona.octocat@okta.example.com"
                          },
                          {
                            "value": "monalisa@octocat.github.com"
                          }
                        ],
                        "externalId": "a7d0f98382",
                        "id": "edefdfedf-050c-11e7-8d32",
                        "meta": {
                          "created": "2017-03-09T16:11:13-05:00",
                          "lastModified": "2017-03-09T16:11:13-05:00",
                          "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Monalisa Octocat",
                          "givenName": "Monalisa"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "mona.octocat@okta.example.com"
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM /Users provisioning endpoints",
                    "properties": {
                      "active": {
                        "description": "The active status of the User.",
                        "example": true,
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "nullable": true,
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          {
                            "primary": true,
                            "value": "someone@example.com"
                          },
                          {
                            "primary": false,
                            "value": "another@example.com"
                          }
                        ],
                        "items": {
                          "properties": {
                            "primary": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "externalId": {
                        "description": "The ID of the User.",
                        "example": "a7b0f98395",
                        "nullable": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "associated groups",
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "Unique identifier of an external identity",
                        "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                        "type": "string"
                      },
                      "meta": {
                        "properties": {
                          "created": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModified": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "location": {
                            "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                            "format": "uri",
                            "type": "string"
                          },
                          "resourceType": {
                            "example": "User",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": {
                            "nullable": true,
                            "type": "string"
                          },
                          "formatted": {
                            "nullable": true,
                            "type": "string"
                          },
                          "givenName": {
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "operations": {
                        "description": "Set of operations to be performed",
                        "example": [
                          {
                            "op": "replace",
                            "value": {
                              "active": false
                            }
                          }
                        ],
                        "items": {
                          "properties": {
                            "op": {
                              "enum": [
                                "add",
                                "remove",
                                "replace"
                              ],
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object"
                                },
                                {
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "op"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "organization_id": {
                        "description": "The ID of the organization.",
                        "type": "integer"
                      },
                      "roles": {
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "primary": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "schemas",
                      "emails",
                      "active",
                      "meta"
                    ],
                    "title": "SCIM /Users",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Get SCIM provisioning information for a user",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Allows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n```",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#update-an-attribute-for-a-scim-user"
          },
          "operationId": "scim/update-attribute-for-user",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "Operations": [
                        {
                          "op": "replace",
                          "value": {
                            "displayName": "Octocat"
                          }
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "Operations": {
                      "description": "Set of operations to be performed",
                      "example": [
                        {
                          "op": "replace",
                          "value": {
                            "active": false
                          }
                        }
                      ],
                      "items": {
                        "properties": {
                          "op": {
                            "enum": [
                              "add",
                              "remove",
                              "replace"
                            ],
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "properties": {
                                  "active": {
                                    "nullable": true,
                                    "type": "boolean"
                                  },
                                  "externalId": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "familyName": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "givenName": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "userName": {
                                    "nullable": true,
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "items": {
                                  "properties": {
                                    "primary": {
                                      "type": "boolean"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "required": [
                          "op"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "schemas": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "Operations"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "displayName": "Monalisa Octocat",
                        "emails": [
                          {
                            "primary": true,
                            "value": "mona.octocat@okta.example.com"
                          },
                          {
                            "value": "monalisa@octocat.github.com"
                          }
                        ],
                        "externalId": "a7d0f98382",
                        "id": "edefdfedf-050c-11e7-8d32",
                        "meta": {
                          "created": "2017-03-09T16:11:13-05:00",
                          "lastModified": "2017-03-09T16:11:13-05:00",
                          "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Monalisa Octocat",
                          "givenName": "Monalisa"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "mona.octocat@okta.example.com"
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM /Users provisioning endpoints",
                    "properties": {
                      "active": {
                        "description": "The active status of the User.",
                        "example": true,
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "nullable": true,
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          {
                            "primary": true,
                            "value": "someone@example.com"
                          },
                          {
                            "primary": false,
                            "value": "another@example.com"
                          }
                        ],
                        "items": {
                          "properties": {
                            "primary": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "externalId": {
                        "description": "The ID of the User.",
                        "example": "a7b0f98395",
                        "nullable": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "associated groups",
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "Unique identifier of an external identity",
                        "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                        "type": "string"
                      },
                      "meta": {
                        "properties": {
                          "created": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModified": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "location": {
                            "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                            "format": "uri",
                            "type": "string"
                          },
                          "resourceType": {
                            "example": "User",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": {
                            "nullable": true,
                            "type": "string"
                          },
                          "formatted": {
                            "nullable": true,
                            "type": "string"
                          },
                          "givenName": {
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "operations": {
                        "description": "Set of operations to be performed",
                        "example": [
                          {
                            "op": "replace",
                            "value": {
                              "active": false
                            }
                          }
                        ],
                        "items": {
                          "properties": {
                            "op": {
                              "enum": [
                                "add",
                                "remove",
                                "replace"
                              ],
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object"
                                },
                                {
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "op"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "organization_id": {
                        "description": "The ID of the organization.",
                        "type": "integer"
                      },
                      "roles": {
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "primary": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "schemas",
                      "emails",
                      "active",
                      "meta"
                    ],
                    "title": "SCIM /Users",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update an attribute for a SCIM user",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#update-an-attribute-for-a-scim-user) endpoint instead.\n\nYou must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `{scim_user_id}`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#set-scim-information-for-a-provisioned-user"
          },
          "operationId": "scim/set-information-for-provisioned-user",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "emails": [
                        {
                          "primary": true,
                          "value": "mona.octocat@github.com"
                        }
                      ],
                      "name": "Monalisa Octocat",
                      "userName": "octocat"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "displayName": {
                      "description": "The name of the user, suitable for display to end-users",
                      "example": "Jon Doe",
                      "type": "string"
                    },
                    "emails": {
                      "description": "user emails",
                      "example": [
                        {
                          "primary": true,
                          "value": "someone@example.com"
                        },
                        {
                          "primary": false,
                          "value": "another@example.com"
                        }
                      ],
                      "items": {
                        "properties": {
                          "primary": {
                            "type": "boolean"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "groups": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "example": {
                        "familyName": "User",
                        "givenName": "Jane"
                      },
                      "properties": {
                        "familyName": {
                          "type": "string"
                        },
                        "formatted": {
                          "type": "string"
                        },
                        "givenName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "givenName",
                        "familyName"
                      ],
                      "type": "object"
                    },
                    "schemas": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userName": {
                      "description": "Configured by the admin. Could be an email, login, or username",
                      "example": "someone@example.com",
                      "type": "string"
                    }
                  },
                  "required": [
                    "userName",
                    "name",
                    "emails"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "displayName": "Monalisa Octocat",
                        "emails": [
                          {
                            "primary": true,
                            "value": "mona.octocat@okta.example.com"
                          },
                          {
                            "value": "monalisa@octocat.github.com"
                          }
                        ],
                        "externalId": "a7d0f98382",
                        "id": "edefdfedf-050c-11e7-8d32",
                        "meta": {
                          "created": "2017-03-09T16:11:13-05:00",
                          "lastModified": "2017-03-09T16:11:13-05:00",
                          "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Monalisa Octocat",
                          "givenName": "Monalisa"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "mona.octocat@okta.example.com"
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM /Users provisioning endpoints",
                    "properties": {
                      "active": {
                        "description": "The active status of the User.",
                        "example": true,
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "nullable": true,
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          {
                            "primary": true,
                            "value": "someone@example.com"
                          },
                          {
                            "primary": false,
                            "value": "another@example.com"
                          }
                        ],
                        "items": {
                          "properties": {
                            "primary": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "externalId": {
                        "description": "The ID of the User.",
                        "example": "a7b0f98395",
                        "nullable": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "associated groups",
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "Unique identifier of an external identity",
                        "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                        "type": "string"
                      },
                      "meta": {
                        "properties": {
                          "created": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModified": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "location": {
                            "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                            "format": "uri",
                            "type": "string"
                          },
                          "resourceType": {
                            "example": "User",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": {
                            "nullable": true,
                            "type": "string"
                          },
                          "formatted": {
                            "nullable": true,
                            "type": "string"
                          },
                          "givenName": {
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "operations": {
                        "description": "Set of operations to be performed",
                        "example": [
                          {
                            "op": "replace",
                            "value": {
                              "active": false
                            }
                          }
                        ],
                        "items": {
                          "properties": {
                            "op": {
                              "enum": [
                                "add",
                                "remove",
                                "replace"
                              ],
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object"
                                },
                                {
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "op"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "organization_id": {
                        "description": "The ID of the organization.",
                        "type": "integer"
                      },
                      "roles": {
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "primary": {
                              "type": "boolean"
                            },
                            "type": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "schemas",
                      "emails",
                      "active",
                      "meta"
                    ],
                    "title": "SCIM /Users",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Update a provisioned organization membership",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/teams/{team_id}/team-sync/group-mappings": {
        "get": {
          "deprecated": true,
          "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List IdP groups for a team`](https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-a-team) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub Enterprise Cloud.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-a-team-legacy"
          },
          "operationId": "teams/list-idp-groups-for-legacy",
          "parameters": [
            {
              "description": "The unique identifier of the team.",
              "in": "path",
              "name": "team_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          },
                          {
                            "group_description": "The people who make your octoworld come to life.",
                            "group_id": "456",
                            "group_name": "Octocat docs members"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "List IdP groups for a team (Legacy)",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "deprecationDate": "2020-01-21",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "removalDate": "2021-02-01",
            "subcategory": "team-sync"
          }
        },
        "patch": {
          "deprecated": true,
          "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create or update IdP group connections`](https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#create-or-update-idp-group-connections) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#create-or-update-idp-group-connections-legacy"
          },
          "operationId": "teams/create-or-update-idp-group-connections-legacy",
          "parameters": [
            {
              "description": "The unique identifier of the team.",
              "in": "path",
              "name": "team_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "groups": [
                        {
                          "description": "The people who configure your octoworld.",
                          "group_description": "string",
                          "group_id": "123",
                          "group_name": "Octocat admins"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "groups": {
                      "description": "The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.",
                      "items": {
                        "properties": {
                          "description": {
                            "example": "\"moar cheese pleese\"",
                            "type": "string"
                          },
                          "group_description": {
                            "description": "Description of the IdP group.",
                            "type": "string"
                          },
                          "group_id": {
                            "description": "ID of the IdP group.",
                            "type": "string"
                          },
                          "group_name": {
                            "description": "Name of the IdP group.",
                            "type": "string"
                          },
                          "id": {
                            "example": "\"caceab43fc9ffa20081c\"",
                            "type": "string"
                          },
                          "name": {
                            "example": "\"external-team-6c13e7288ef7\"",
                            "type": "string"
                          }
                        },
                        "required": [
                          "group_id",
                          "group_name",
                          "group_description"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "synced_at": {
                      "example": "\"I am not a timestamp\"",
                      "type": "string"
                    }
                  },
                  "required": [
                    "groups"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Create or update IdP group connections (Legacy)",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "deprecationDate": "2020-01-21",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "removalDate": "2021-02-01",
            "subcategory": "team-sync"
          }
        }
      }
    },
    "changed": {
      "/orgs/{org}/actions/permissions/workflow": {
        "put": {
          "responses": {
            "added": [
              [
                "409",
                {
                  "description": "Conflict response when changing a setting is prevented by the owning enterprise"
                }
              ]
            ]
          }
        }
      },
      "/orgs/{org}/actions/secrets/{secret_name}": {
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "selected_repository_ids": {
                          "items_changed": {
                            "type_changed": {
                              "to": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/dependabot/secrets/{secret_name}": {
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "selected_repository_ids": {
                          "items_changed": {
                            "type_changed": {
                              "to": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/repos": {
        "get": {
          "parameters": {
            "changed": {
              "type": {
                "schema": {
                  "enum_changed": {
                    "added": false,
                    "removed": false,
                    "values_added": [
                      "internal"
                    ],
                    "values_removed": [
                      "public"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "visibility": {
                          "enum_changed": {
                            "added": false,
                            "removed": false,
                            "values_added": [
                              "internal"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}": {
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "visibility": {
                          "enum_changed": {
                            "added": false,
                            "removed": false,
                            "values_added": [
                              "internal"
                            ]
                          }
                        }
                      },
                      "removed": [
                        "security_and_analysis"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/permissions/access": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "access_level": {
                              "enum_changed": {
                                "added": false,
                                "removed": false,
                                "values_added": [
                                  "enterprise"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "access_level": {
                          "enum_changed": {
                            "added": false,
                            "removed": false,
                            "values_added": [
                              "enterprise"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/code-scanning/alerts": {
        "get": {
          "parameters": {
            "added": [
              {
                "description": "If specified, only code scanning alerts with this severity will be returned.",
                "in": "query",
                "name": "severity",
                "required": false,
                "schema": {
                  "description": "Severity of a code scanning alert.",
                  "enum": [
                    "critical",
                    "high",
                    "medium",
                    "low",
                    "warning",
                    "note",
                    "error"
                  ],
                  "type": "string"
                },
                "style": "form"
              }
            ],
            "changed": {
              "sort": {
                "schema": {
                  "enum_changed": {
                    "added": false,
                    "removed": false,
                    "values_removed": [
                      "number"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pages": {
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "added": [
                        [
                          "public",
                          {
                            "description": "Configures access controls for the GitHub Pages site. If public is set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site. This includes anyone in your Enterprise if the repository is set to `internal` visibility.",
                            "type": "boolean"
                          }
                        ]
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}