{
  "paths": {
    "added": {
      "/enterprises/{enterprise}/actions/oidc/customization/issuer": {
        "put": {
          "deprecated": null,
          "description": "Sets the GitHub Actions OpenID Connect (OIDC) custom issuer policy for an enterprise.\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.\nGitHub Apps must have the `enterprise_administration:write` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/actions/oidc#set-actions-oidc-custom-issuer-policy-for-enterprise"
          },
          "operationId": "actions/set-actions-oidc-custom-issuer-policy-for-enterprise",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "include_enterprise_slug": true
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "include_enterprise_slug": {
                      "description": "Whether the enterprise customer requested a custom issuer URL.",
                      "example": true,
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Set the GitHub Actions OIDC custom issuer policy for an enterprise",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "oidc"
          }
        }
      },
      "/enterprises/{enterprise}/audit-log": {
        "get": {
          "deprecated": null,
          "description": "Gets the audit log for an enterprise. To use this endpoint, you must be an enterprise admin, and you must use an access token with the `admin:enterprise` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#get-the-audit-log-for-an-enterprise"
          },
          "operationId": "enterprise-admin/get-audit-log",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).",
              "in": "query",
              "name": "phrase",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
              "in": "query",
              "name": "include",
              "required": false,
              "schema": {
                "enum": [
                  "web",
                  "git",
                  "all"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.",
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.",
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\nThe default is `desc`.",
              "in": "query",
              "name": "order",
              "required": false,
              "schema": {
                "enum": [
                  "desc",
                  "asc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "@timestamp": 1606929874512,
                          "_document_id": "xJJFlFOhQ6b-5vaAFy9Rjw",
                          "action": "team.add_member",
                          "actor": "octocat",
                          "created_at": 1606929874512,
                          "org": "octo-corp",
                          "team": "octo-corp/example-team",
                          "user": "monalisa"
                        },
                        {
                          "@timestamp": 1606507117008,
                          "_document_id": "Vqvg6kZ4MYqwWRKFDzlMoQ",
                          "action": "org.create",
                          "actor": "octocat",
                          "created_at": 1606507117008,
                          "org": "octocat-test-org"
                        },
                        {
                          "@timestamp": 1605719148837,
                          "_document_id": "LwW2vpJZCDS-WUmo9Z-ifw",
                          "action": "repo.destroy",
                          "actor": "monalisa",
                          "created_at": 1605719148837,
                          "org": "mona-org",
                          "repo": "mona-org/mona-test-repo",
                          "visibility": "private"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "@timestamp": {
                          "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "_document_id": {
                          "description": "A unique identifier for an audit event.",
                          "type": "string"
                        },
                        "action": {
                          "description": "The name of the action that was performed, for example `user.login` or `repo.create`.",
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "active_was": {
                          "type": "boolean"
                        },
                        "actor": {
                          "description": "The actor who performed the action.",
                          "type": "string"
                        },
                        "actor_id": {
                          "description": "The id of the actor who performed the action.",
                          "type": "integer"
                        },
                        "actor_location": {
                          "properties": {
                            "country_name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "blocked_user": {
                          "description": "The username of the account being blocked.",
                          "type": "string"
                        },
                        "business": {
                          "type": "string"
                        },
                        "config": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "config_was": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "content_type": {
                          "type": "string"
                        },
                        "created_at": {
                          "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "data": {
                          "additionalProperties": true,
                          "type": "object"
                        },
                        "deploy_key_fingerprint": {
                          "type": "string"
                        },
                        "emoji": {
                          "type": "string"
                        },
                        "events": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "events_were": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "explanation": {
                          "type": "string"
                        },
                        "fingerprint": {
                          "type": "string"
                        },
                        "hook_id": {
                          "type": "integer"
                        },
                        "limited_availability": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "old_user": {
                          "type": "string"
                        },
                        "openssh_public_key": {
                          "type": "string"
                        },
                        "org": {
                          "type": "string"
                        },
                        "org_id": {
                          "type": "integer"
                        },
                        "previous_visibility": {
                          "type": "string"
                        },
                        "read_only": {
                          "type": "boolean"
                        },
                        "repo": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository_public": {
                          "type": "boolean"
                        },
                        "target_login": {
                          "type": "string"
                        },
                        "team": {
                          "type": "string"
                        },
                        "transport_protocol": {
                          "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "integer"
                        },
                        "transport_protocol_name": {
                          "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "string"
                        },
                        "user": {
                          "description": "The user that was affected by the action performed (if available).",
                          "type": "string"
                        },
                        "visibility": {
                          "description": "The repository visibility, for example `public` or `private`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the audit log for an enterprise",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "audit-log"
          },
          "x-octokit": {
            "changes": [
              {
                "before": {
                  "operationId": "audit-log/get-audit-log"
                },
                "date": "2021-04-30",
                "type": "OPERATION"
              }
            ]
          }
        }
      },
      "/enterprises/{enterprise}/consumed-licenses": {
        "get": {
          "deprecated": null,
          "description": "Lists the license consumption information for all users, including those from connected servers, associated with an enterprise.\nTo use this endpoint, you must be an enterprise admin, and you must use an access\ntoken with the `read:enterprise` scope.\n\n**Note:** The license consumption API endpoints for enterprise accounts are currently\nin Beta and are subject to change.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#list-enterprise-consumed-licenses"
          },
          "operationId": "enterprise-admin/get-consumed-licenses",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "total_seats_consumed": 5000,
                        "total_seats_purchased": 4500,
                        "users": [
                          {
                            "enterprise_server_emails": [
                              "monalisa@github.com"
                            ],
                            "enterprise_server_user": true,
                            "enterprise_server_user_ids": [
                              "example_host_name.com:123",
                              "example_host_name_2:222"
                            ],
                            "github_com_enterprise_role": "owner",
                            "github_com_enterprise_roles": [
                              "owner"
                            ],
                            "github_com_login": "monalisa",
                            "github_com_member_roles": [
                              "org1:Owner",
                              "org2:Owner"
                            ],
                            "github_com_name": "Mona Lisa",
                            "github_com_orgs_with_pending_invites": [
                              "org1",
                              "org2"
                            ],
                            "github_com_profile": "https://github.com/monalisa",
                            "github_com_saml_name_id": "monalisa",
                            "github_com_user": true,
                            "github_com_verified_domain_emails": [
                              "monalisa@github.com"
                            ],
                            "license_type": "enterprise",
                            "total_user_accounts": 3,
                            "visual_studio_subscription_user": false
                          },
                          {
                            "enterprise_server_emails": [
                              "deleonjavier@example.com"
                            ],
                            "enterprise_server_user": true,
                            "enterprise_server_user_ids": [
                              "example_host_name:123"
                            ],
                            "github_com_user": false,
                            "license_type": "enterprise",
                            "total_user_accounts": 1,
                            "visual_studio_subscription_user": false
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "A breakdown of the licenses consumed by an enterprise.",
                    "properties": {
                      "total_seats_consumed": {
                        "type": "integer"
                      },
                      "total_seats_purchased": {
                        "type": "integer"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "enterprise_server_emails": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "enterprise_server_user": {
                              "nullable": true,
                              "type": "boolean"
                            },
                            "enterprise_server_user_ids": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "github_com_enterprise_role": {
                              "description": "Deprecated: The most permissive enterprise role for a user.",
                              "nullable": true,
                              "type": "string"
                            },
                            "github_com_enterprise_roles": {
                              "description": "All enterprise roles for a user.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "github_com_login": {
                              "type": "string"
                            },
                            "github_com_member_roles": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "github_com_name": {
                              "nullable": true,
                              "type": "string"
                            },
                            "github_com_orgs_with_pending_invites": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "github_com_profile": {
                              "nullable": true,
                              "type": "string"
                            },
                            "github_com_saml_name_id": {
                              "nullable": true,
                              "type": "string"
                            },
                            "github_com_user": {
                              "type": "boolean"
                            },
                            "github_com_verified_domain_emails": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "license_type": {
                              "type": "string"
                            },
                            "total_user_accounts": {
                              "type": "integer"
                            },
                            "visual_studio_subscription_email": {
                              "nullable": true,
                              "type": "string"
                            },
                            "visual_studio_subscription_user": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "Enterprise Consumed Licenses"
                  }
                }
              },
              "description": "Consumed Licenses Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List enterprise consumed licenses",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "license"
          }
        }
      },
      "/enterprises/{enterprise}/license-sync-status": {
        "get": {
          "deprecated": null,
          "description": "Gets information about the status of a license sync job for an enterprise.\nTo use this endpoint, you must be an enterprise admin, and you must use an access\ntoken with the `read:enterprise` scope.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/enterprise-admin#get-a-license-sync-status"
          },
          "operationId": "enterprise-admin/get-license-sync-status",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "server_instances": [
                          {
                            "hostname": "github.example.com",
                            "last_sync": {
                              "date": "2020-01-01T00:00:00Z",
                              "status": "success"
                            },
                            "server_id": "deadbeef1"
                          },
                          {
                            "hostname": "github2.example.com",
                            "last_sync": {
                              "date": "2020-01-01T00:00:00Z",
                              "status": "success"
                            },
                            "server_id": "filetoffish1"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "Information about the status of a license sync job for an enterprise.",
                    "properties": {
                      "server_instances": {
                        "items": {
                          "properties": {
                            "hostname": {
                              "type": "string"
                            },
                            "last_sync": {
                              "properties": {
                                "date": {
                                  "type": "string"
                                },
                                "error": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "server_id": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "License Sync Status"
                  }
                }
              },
              "description": "License Sync Status Response"
            }
          },
          "summary": "Get a license sync status",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "license"
          }
        }
      },
      "/enterprises/{enterprise}/settings/billing/actions": {
        "get": {
          "deprecated": null,
          "description": "Gets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nThe authenticated user must be an enterprise admin.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-github-actions-billing-for-an-enterprise"
          },
          "operationId": "billing/get-github-actions-billing-ghe",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "included_minutes": 3000,
                        "minutes_used_breakdown": {
                          "MACOS": 10,
                          "UBUNTU": 205,
                          "WINDOWS": 90
                        },
                        "total_minutes_used": 305,
                        "total_paid_minutes_used": 0
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "included_minutes": {
                        "description": "The amount of free GitHub Actions minutes available.",
                        "type": "integer"
                      },
                      "minutes_used_breakdown": {
                        "properties": {
                          "MACOS": {
                            "description": "Total minutes used on macOS runner machines.",
                            "type": "integer"
                          },
                          "UBUNTU": {
                            "description": "Total minutes used on Ubuntu runner machines.",
                            "type": "integer"
                          },
                          "WINDOWS": {
                            "description": "Total minutes used on Windows runner machines.",
                            "type": "integer"
                          },
                          "total": {
                            "description": "Total minutes used on all runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_16_core": {
                            "description": "Total minutes used on Ubuntu 16 core runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_32_core": {
                            "description": "Total minutes used on Ubuntu 32 core runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_4_core": {
                            "description": "Total minutes used on Ubuntu 4 core runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_64_core": {
                            "description": "Total minutes used on Ubuntu 64 core runner machines.",
                            "type": "integer"
                          },
                          "ubuntu_8_core": {
                            "description": "Total minutes used on Ubuntu 8 core runner machines.",
                            "type": "integer"
                          },
                          "windows_16_core": {
                            "description": "Total minutes used on Windows 16 core runner machines.",
                            "type": "integer"
                          },
                          "windows_32_core": {
                            "description": "Total minutes used on Windows 32 core runner machines.",
                            "type": "integer"
                          },
                          "windows_4_core": {
                            "description": "Total minutes used on Windows 4 core runner machines.",
                            "type": "integer"
                          },
                          "windows_64_core": {
                            "description": "Total minutes used on Windows 64 core runner machines.",
                            "type": "integer"
                          },
                          "windows_8_core": {
                            "description": "Total minutes used on Windows 8 core runner machines.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "total_minutes_used": {
                        "description": "The sum of the free and paid GitHub Actions minutes used.",
                        "type": "integer"
                      },
                      "total_paid_minutes_used": {
                        "description": "The total paid GitHub Actions minutes used.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_minutes_used",
                      "total_paid_minutes_used",
                      "included_minutes",
                      "minutes_used_breakdown"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get GitHub Actions billing for an enterprise",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "billing"
          }
        }
      },
      "/enterprises/{enterprise}/settings/billing/packages": {
        "get": {
          "deprecated": null,
          "description": "Gets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-github-packages-billing-for-an-enterprise"
          },
          "operationId": "billing/get-github-packages-billing-ghe",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "included_gigabytes_bandwidth": 10,
                        "total_gigabytes_bandwidth_used": 50,
                        "total_paid_gigabytes_bandwidth_used": 40
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "included_gigabytes_bandwidth": {
                        "description": "Free storage space (GB) for GitHub Packages.",
                        "type": "integer"
                      },
                      "total_gigabytes_bandwidth_used": {
                        "description": "Sum of the free and paid storage space (GB) for GitHuub Packages.",
                        "type": "integer"
                      },
                      "total_paid_gigabytes_bandwidth_used": {
                        "description": "Total paid storage space (GB) for GitHuub Packages.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_gigabytes_bandwidth_used",
                      "total_paid_gigabytes_bandwidth_used",
                      "included_gigabytes_bandwidth"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get GitHub Packages billing for an enterprise",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "billing"
          }
        }
      },
      "/enterprises/{enterprise}/settings/billing/shared-storage": {
        "get": {
          "deprecated": null,
          "description": "Gets the estimated paid and estimated total storage used for GitHub Actions and GitHub Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://docs.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/billing#get-shared-storage-billing-for-an-enterprise"
          },
          "operationId": "billing/get-shared-storage-billing-ghe",
          "parameters": [
            {
              "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
              "in": "path",
              "name": "enterprise",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "days_left_in_billing_cycle": 20,
                        "estimated_paid_storage_for_month": 15,
                        "estimated_storage_for_month": 40
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "days_left_in_billing_cycle": {
                        "description": "Numbers of days left in billing cycle.",
                        "type": "integer"
                      },
                      "estimated_paid_storage_for_month": {
                        "description": "Estimated storage space (GB) used in billing cycle.",
                        "type": "integer"
                      },
                      "estimated_storage_for_month": {
                        "description": "Estimated sum of free and paid storage space (GB) used in billing cycle.",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "days_left_in_billing_cycle",
                      "estimated_paid_storage_for_month",
                      "estimated_storage_for_month"
                    ],
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get shared storage billing for an enterprise",
          "tags": [
            "billing"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "billing"
          }
        }
      },
      "/orgs/{org}/actions/oidc/customization/sub": {
        "get": {
          "deprecated": null,
          "description": "Gets the customization template for an OpenID Connect (OIDC) subject claim.\nYou must authenticate using an access token with the `read:org` scope to use this endpoint.\nGitHub Apps must have the `organization_administration:write` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/actions/oidc#get-the-customization-template-for-an-oidc-subject-claim-for-an-organization"
          },
          "operationId": "oidc/get-oidc-custom-sub-template-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "include_claim_keys": [
                          "repo",
                          "context"
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "Actions OIDC Subject customization",
                    "properties": {
                      "include_claim_keys": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "include_claim_keys"
                    ],
                    "title": "Actions OIDC Subject customization",
                    "type": "object"
                  }
                }
              },
              "description": "A JSON serialized template for OIDC subject claim customization"
            }
          },
          "summary": "Get the customization template for an OIDC subject claim for an organization",
          "tags": [
            "oidc"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "oidc"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Creates or updates the customization template for an OpenID Connect (OIDC) subject claim.\nYou must authenticate using an access token with the `write:org` scope to use this endpoint.\nGitHub Apps must have the `admin:org` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/actions/oidc#set-the-customization-template-for-an-oidc-subject-claim-for-an-organization"
          },
          "operationId": "oidc/update-oidc-custom-sub-template-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "include_claim_keys": [
                        "repo",
                        "context"
                      ]
                    }
                  }
                },
                "schema": {
                  "description": "Actions OIDC Subject customization",
                  "properties": {
                    "include_claim_keys": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "include_claim_keys"
                  ],
                  "title": "Actions OIDC Subject customization",
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": false,
                    "description": "An object without any properties.",
                    "title": "Empty Object",
                    "type": "object"
                  }
                }
              },
              "description": "Empty response"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Set the customization template for an OIDC subject claim for an organization",
          "tags": [
            "oidc"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "oidc"
          }
        }
      },
      "/orgs/{org}/audit-log": {
        "get": {
          "deprecated": null,
          "description": "Gets the audit log for an organization. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization).\"\n\nThis endpoint is available for organizations on GitHub Enterprise Cloud. To use this endpoint, you must be an organization owner, and you must use an access token with the `admin:org` scope. GitHub Apps must have the `organization_administration` read permission to use this endpoint.\n\nBy default, the response includes up to 30 events from the past three months. Use the `phrase` parameter to filter results and retrieve older events. For example, use the `phrase` parameter with the `created` qualifier to filter events based on when the events occurred. For more information, see \"[Reviewing the audit log for your organization](https://docs.github.com/enterprise-cloud@latest//organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).\"\n\nUse pagination to retrieve fewer or more than 30 events. For more information, see \"[Resources in the REST API](https://docs.github.com/enterprise-cloud@latest//rest/overview/resources-in-the-rest-api#pagination).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#get-audit-log"
          },
          "operationId": "orgs/get-audit-log",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-cloud@latest//github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).",
              "in": "query",
              "name": "phrase",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
              "in": "query",
              "name": "include",
              "required": false,
              "schema": {
                "enum": [
                  "web",
                  "git",
                  "all"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.",
              "in": "query",
              "name": "after",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-cloud@latest//rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.",
              "in": "query",
              "name": "before",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.\n\nThe default is `desc`.",
              "in": "query",
              "name": "order",
              "required": false,
              "schema": {
                "enum": [
                  "desc",
                  "asc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "@timestamp": 1606929874512,
                          "_document_id": "xJJFlFOhQ6b-5vaAFy9Rjw",
                          "action": "team.add_member",
                          "actor": "octocat",
                          "created_at": 1606929874512,
                          "org": "octo-corp",
                          "team": "octo-corp/example-team",
                          "user": "monalisa"
                        },
                        {
                          "@timestamp": 1606507117008,
                          "_document_id": "Vqvg6kZ4MYqwWRKFDzlMoQ",
                          "action": "org.create",
                          "actor": "octocat",
                          "created_at": 1606507117008,
                          "org": "octocat-test-org"
                        },
                        {
                          "@timestamp": 1605719148837,
                          "_document_id": "LwW2vpJZCDS-WUmo9Z-ifw",
                          "action": "repo.destroy",
                          "actor": "monalisa",
                          "created_at": 1605719148837,
                          "org": "mona-org",
                          "repo": "mona-org/mona-test-repo",
                          "visibility": "private"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "@timestamp": {
                          "description": "The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "_document_id": {
                          "description": "A unique identifier for an audit event.",
                          "type": "string"
                        },
                        "action": {
                          "description": "The name of the action that was performed, for example `user.login` or `repo.create`.",
                          "type": "string"
                        },
                        "active": {
                          "type": "boolean"
                        },
                        "active_was": {
                          "type": "boolean"
                        },
                        "actor": {
                          "description": "The actor who performed the action.",
                          "type": "string"
                        },
                        "actor_id": {
                          "description": "The id of the actor who performed the action.",
                          "type": "integer"
                        },
                        "actor_location": {
                          "properties": {
                            "country_name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "blocked_user": {
                          "description": "The username of the account being blocked.",
                          "type": "string"
                        },
                        "business": {
                          "type": "string"
                        },
                        "config": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "config_was": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "content_type": {
                          "type": "string"
                        },
                        "created_at": {
                          "description": "The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).",
                          "type": "integer"
                        },
                        "data": {
                          "additionalProperties": true,
                          "type": "object"
                        },
                        "deploy_key_fingerprint": {
                          "type": "string"
                        },
                        "emoji": {
                          "type": "string"
                        },
                        "events": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "events_were": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "explanation": {
                          "type": "string"
                        },
                        "fingerprint": {
                          "type": "string"
                        },
                        "hook_id": {
                          "type": "integer"
                        },
                        "limited_availability": {
                          "type": "boolean"
                        },
                        "message": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "old_user": {
                          "type": "string"
                        },
                        "openssh_public_key": {
                          "type": "string"
                        },
                        "org": {
                          "type": "string"
                        },
                        "org_id": {
                          "type": "integer"
                        },
                        "previous_visibility": {
                          "type": "string"
                        },
                        "read_only": {
                          "type": "boolean"
                        },
                        "repo": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository": {
                          "description": "The name of the repository.",
                          "type": "string"
                        },
                        "repository_public": {
                          "type": "boolean"
                        },
                        "target_login": {
                          "type": "string"
                        },
                        "team": {
                          "type": "string"
                        },
                        "transport_protocol": {
                          "description": "The type of protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "integer"
                        },
                        "transport_protocol_name": {
                          "description": "A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.",
                          "type": "string"
                        },
                        "user": {
                          "description": "The user that was affected by the action performed (if available).",
                          "type": "string"
                        },
                        "visibility": {
                          "description": "The repository visibility, for example `public` or `private`.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the audit log for an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/orgs/{org}/credential-authorizations": {
        "get": {
          "deprecated": null,
          "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://docs.github.com/en/articles/about-authentication-with-saml-single-sign-on).",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#list-saml-sso-authorizations-for-an-organization"
          },
          "operationId": "orgs/list-saml-sso-authorizations",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page token",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Limits the list of credentials authorizations for an organization to a specific login",
              "in": "query",
              "name": "login",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "authorized_credential_expires_at": "2011-02-25T19:06:43Z",
                          "credential_authorized_at": "2011-01-26T19:06:43Z",
                          "credential_id": 161195,
                          "credential_type": "personal access token",
                          "login": "octocat",
                          "scopes": [
                            "user",
                            "repo"
                          ],
                          "token_last_eight": "71c3fc11"
                        },
                        {
                          "authorized_credential_expires_at": "2019-04-28T19:06:43Z",
                          "credential_authorized_at": "2019-03-29T19:06:43Z",
                          "credential_id": 161196,
                          "credential_type": "personal access token",
                          "login": "hubot",
                          "scopes": [
                            "repo"
                          ],
                          "token_last_eight": "Ae178B4a"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "Credential Authorization",
                      "properties": {
                        "authorized_credential_expires_at": {
                          "description": "The expiry for the token. This will only be present when the credential is a token.",
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "authorized_credential_id": {
                          "example": 12345678,
                          "nullable": true,
                          "type": "integer"
                        },
                        "authorized_credential_note": {
                          "description": "The note given to the token. This will only be present when the credential is a token.",
                          "example": "my token",
                          "nullable": true,
                          "type": "string"
                        },
                        "authorized_credential_title": {
                          "description": "The title given to the ssh key. This will only be present when the credential is an ssh key.",
                          "example": "my ssh key",
                          "nullable": true,
                          "type": "string"
                        },
                        "credential_accessed_at": {
                          "description": "Date when the credential was last accessed. May be null if it was never accessed",
                          "example": "2011-01-26T19:06:43Z",
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "credential_authorized_at": {
                          "description": "Date when the credential was authorized for use.",
                          "example": "2011-01-26T19:06:43Z",
                          "format": "date-time",
                          "type": "string"
                        },
                        "credential_id": {
                          "description": "Unique identifier for the credential.",
                          "example": 1,
                          "type": "integer"
                        },
                        "credential_type": {
                          "description": "Human-readable description of the credential type.",
                          "example": "SSH Key",
                          "type": "string"
                        },
                        "fingerprint": {
                          "description": "Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key.",
                          "example": "jklmnop12345678",
                          "type": "string"
                        },
                        "login": {
                          "description": "User login that owns the underlying credential.",
                          "example": "monalisa",
                          "type": "string"
                        },
                        "scopes": {
                          "description": "List of oauth scopes the token has been granted.",
                          "example": [
                            "user",
                            "repo"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "token_last_eight": {
                          "description": "Last eight characters of the credential. Only included in responses with credential_type of personal access token.",
                          "example": "12345678",
                          "type": "string"
                        }
                      },
                      "required": [
                        "login",
                        "credential_id",
                        "credential_type",
                        "credential_authorized_at",
                        "credential_accessed_at",
                        "authorized_credential_id"
                      ],
                      "title": "Credential Authorization",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List SAML SSO authorizations for an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/orgs/{org}/credential-authorizations/{credential_id}": {
        "delete": {
          "deprecated": null,
          "description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/orgs#remove-a-saml-sso-authorization-for-an-organization"
          },
          "operationId": "orgs/remove-saml-sso-authorization",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "in": "path",
              "name": "credential_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Remove a SAML SSO authorization for an organization",
          "tags": [
            "orgs"
          ],
          "x-github": {
            "category": "orgs",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/orgs/{org}/external-group/{group_id}": {
        "get": {
          "deprecated": null,
          "description": "Displays information about the specific group's usage.  Provides a list of the group's external members as well as a list of teams that this group is connected to.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#external-idp-group-info-for-an-organization"
          },
          "operationId": "teams/external-idp-group-info-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the group.",
              "in": "path",
              "name": "group_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "group_id": "123",
                        "group_name": "Octocat admins",
                        "members": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "teams": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "updated_at": "2021-01-24T11:31:04-06:00"
                      }
                    }
                  },
                  "schema": {
                    "description": "Information about an external group's usage and its members",
                    "properties": {
                      "group_id": {
                        "description": "The internal ID of the group",
                        "example": 1,
                        "type": "integer"
                      },
                      "group_name": {
                        "description": "The display name for the group",
                        "example": "group-azuread-test",
                        "type": "string"
                      },
                      "members": {
                        "description": "An array of external members linked to this group",
                        "example": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "items": {
                          "properties": {
                            "member_email": {
                              "description": "An email attached to a user",
                              "example": "mona_lisa@github.com",
                              "type": "string"
                            },
                            "member_id": {
                              "description": "The internal user ID of the identity",
                              "example": 1,
                              "type": "integer"
                            },
                            "member_login": {
                              "description": "The handle/login for the user",
                              "example": "mona-lisa_eocsaxrs",
                              "type": "string"
                            },
                            "member_name": {
                              "description": "The user display name/profile name",
                              "example": "Mona Lisa",
                              "type": "string"
                            }
                          },
                          "required": [
                            "member_id",
                            "member_login",
                            "member_name",
                            "member_email"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "teams": {
                        "description": "An array of teams linked to this group",
                        "example": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "team_id": {
                              "description": "The id for a team",
                              "example": 1,
                              "type": "integer"
                            },
                            "team_name": {
                              "description": "The name of the team",
                              "example": "team-test",
                              "type": "string"
                            }
                          },
                          "required": [
                            "team_id",
                            "team_name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "description": "The date when the group was last updated_at",
                        "example": "2021-01-03 22:27:15:000 -700",
                        "type": "string"
                      }
                    },
                    "required": [
                      "group_id",
                      "group_name",
                      "teams",
                      "members"
                    ],
                    "title": "ExternalGroup",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get an external group",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        }
      },
      "/orgs/{org}/external-groups": {
        "get": {
          "deprecated": null,
          "description": "Lists external groups available in an organization. You can query the groups using the `display_name` parameter, only groups with a `group_name` containing the text provided in the `display_name` parameter will be returned.  You can also limit your page results using the `per_page` parameter. GitHub Enterprise Cloud generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-external-idp-groups-for-an-organization"
          },
          "operationId": "teams/list-external-idp-groups-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page token",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Limits the list to groups containing the text in the group name",
              "in": "query",
              "name": "display_name",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_id": "123",
                            "group_name": "Octocat admins",
                            "updated_at": "2021-01-24T11:31:04-06:00"
                          },
                          {
                            "group_id": "456",
                            "group_name": "Octocat docs members",
                            "updated_at": "2021-03-24T11:31:04-06:00"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "A list of external groups available to be connected to a team",
                    "properties": {
                      "groups": {
                        "description": "An array of external groups available to be mapped to a team",
                        "example": [
                          {
                            "group_id": 1,
                            "group_name": "group-azuread-test",
                            "updated_at": "2021-01-03 22:27:15:000 -700"
                          },
                          {
                            "group_id": 2,
                            "group_name": "group-azuread-test2",
                            "updated_at": "2021-06-03 22:27:15:000 -700"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_id": {
                              "description": "The internal ID of the group",
                              "example": 1,
                              "type": "integer"
                            },
                            "group_name": {
                              "description": "The display name of the group",
                              "example": "group-azuread-test",
                              "type": "string"
                            },
                            "updated_at": {
                              "description": "The time of the last update for this group",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "updated_at"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ExternalGroups",
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?per_page=2&page=url-encoded-next-page-token>; rel=\"next\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List external groups in an organization",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        }
      },
      "/orgs/{org}/team-sync/groups": {
        "get": {
          "deprecated": null,
          "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups available in an organization. You can limit your page results using the `per_page` parameter. GitHub Enterprise Cloud generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-an-organization"
          },
          "operationId": "teams/list-idp-groups-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page token",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          },
                          {
                            "group_description": "The people who make your octoworld come to life.",
                            "group_id": "456",
                            "group_name": "Octocat docs members"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?per_page=2&page=url-encoded-next-page-token>; rel=\"next\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List IdP groups for an organization",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "team-sync"
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/external-groups": {
        "delete": {
          "deprecated": null,
          "description": "Deletes a connection between a team and an external group.\n\nYou can manage team membership with your IdP using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products) in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#unlink-external-idp-group-team-connection"
          },
          "operationId": "teams/unlink-external-idp-group-from-team-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove the connection between an external group and a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Lists a connection between a team and an external group.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-external-idp-group-team-connection"
          },
          "operationId": "teams/list-linked-external-idp-groups-to-team-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_id": "123",
                            "group_name": "Octocat admins",
                            "updated_at": "2021-01-24T11:31:04-06:00"
                          },
                          {
                            "group_id": "456",
                            "group_name": "Octocat docs members",
                            "updated_at": "2021-03-24T11:31:04-06:00"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "A list of external groups available to be connected to a team",
                    "properties": {
                      "groups": {
                        "description": "An array of external groups available to be mapped to a team",
                        "example": [
                          {
                            "group_id": 1,
                            "group_name": "group-azuread-test",
                            "updated_at": "2021-01-03 22:27:15:000 -700"
                          },
                          {
                            "group_id": 2,
                            "group_name": "group-azuread-test2",
                            "updated_at": "2021-06-03 22:27:15:000 -700"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_id": {
                              "description": "The internal ID of the group",
                              "example": 1,
                              "type": "integer"
                            },
                            "group_name": {
                              "description": "The display name of the group",
                              "example": "group-azuread-test",
                              "type": "string"
                            },
                            "updated_at": {
                              "description": "The time of the last update for this group",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "updated_at"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "ExternalGroups",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List a connection between an external group and a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Creates a connection between a team and an external group.  Only one external group can be linked to a team.\n\nYou can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see \"[GitHub's products](https://docs.github.com/enterprise-cloud@latest//github/getting-started-with-github/githubs-products)\" in the GitHub Help documentation.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#link-external-idp-group-team-connection"
          },
          "operationId": "teams/link-external-idp-group-to-team-for-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "group_id": 123
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "group_id": {
                      "description": "External Group Id",
                      "example": 1,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "group_id"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "group_id": "123",
                        "group_name": "Octocat admins",
                        "members": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "teams": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "updated_at": "2021-01-24T11:31:04-06:00"
                      }
                    }
                  },
                  "schema": {
                    "description": "Information about an external group's usage and its members",
                    "properties": {
                      "group_id": {
                        "description": "The internal ID of the group",
                        "example": 1,
                        "type": "integer"
                      },
                      "group_name": {
                        "description": "The display name for the group",
                        "example": "group-azuread-test",
                        "type": "string"
                      },
                      "members": {
                        "description": "An array of external members linked to this group",
                        "example": [
                          {
                            "member_email": "mona_lisa@github.com",
                            "member_id": 1,
                            "member_login": "mona-lisa_eocsaxrs",
                            "member_name": "Mona Lisa"
                          },
                          {
                            "member_email": "octo_lisa@github.com",
                            "member_id": 2,
                            "member_login": "octo-lisa_eocsaxrs",
                            "member_name": "Octo Lisa"
                          }
                        ],
                        "items": {
                          "properties": {
                            "member_email": {
                              "description": "An email attached to a user",
                              "example": "mona_lisa@github.com",
                              "type": "string"
                            },
                            "member_id": {
                              "description": "The internal user ID of the identity",
                              "example": 1,
                              "type": "integer"
                            },
                            "member_login": {
                              "description": "The handle/login for the user",
                              "example": "mona-lisa_eocsaxrs",
                              "type": "string"
                            },
                            "member_name": {
                              "description": "The user display name/profile name",
                              "example": "Mona Lisa",
                              "type": "string"
                            }
                          },
                          "required": [
                            "member_id",
                            "member_login",
                            "member_name",
                            "member_email"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "teams": {
                        "description": "An array of teams linked to this group",
                        "example": [
                          {
                            "team_id": 1,
                            "team_name": "team-test"
                          },
                          {
                            "team_id": 2,
                            "team_name": "team-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "team_id": {
                              "description": "The id for a team",
                              "example": 1,
                              "type": "integer"
                            },
                            "team_name": {
                              "description": "The name of the team",
                              "example": "team-test",
                              "type": "string"
                            }
                          },
                          "required": [
                            "team_id",
                            "team_name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "updated_at": {
                        "description": "The date when the group was last updated_at",
                        "example": "2021-01-03 22:27:15:000 -700",
                        "type": "string"
                      }
                    },
                    "required": [
                      "group_id",
                      "group_name",
                      "teams",
                      "members"
                    ],
                    "title": "ExternalGroup",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update the connection between an external group and a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "external-groups"
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/team-sync/group-mappings": {
        "get": {
          "deprecated": null,
          "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub Enterprise Cloud.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-a-team"
          },
          "operationId": "teams/list-idp-groups-in-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          },
                          {
                            "group_description": "The people who make your octoworld come to life.",
                            "group_id": "456",
                            "group_name": "Octocat docs members"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List IdP groups for a team",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "team-sync"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#create-or-update-idp-group-connections"
          },
          "operationId": "teams/create-or-update-idp-group-connections-in-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The slug of the team name.",
              "in": "path",
              "name": "team_slug",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "groups": [
                        {
                          "group_description": "string",
                          "group_id": "123",
                          "group_name": "Octocat admins"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "groups": {
                      "description": "The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.",
                      "items": {
                        "properties": {
                          "group_description": {
                            "description": "Description of the IdP group.",
                            "type": "string"
                          },
                          "group_id": {
                            "description": "ID of the IdP group.",
                            "type": "string"
                          },
                          "group_name": {
                            "description": "Name of the IdP group.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "group_id",
                          "group_name",
                          "group_description"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          },
                          {
                            "group_description": "The people who make your octoworld come to life.",
                            "group_id": "456",
                            "group_name": "Octocat docs members"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create or update IdP group connections",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "subcategory": "team-sync"
          }
        }
      },
      "/repos/{owner}/{repo}/actions/oidc/customization/sub": {
        "get": {
          "deprecated": null,
          "description": "Gets the `opt-out` flag of a GitHub Actions OpenID Connect (OIDC) subject claim customization for a repository.\nYou must authenticate using an access token with the `repo` scope to use this\nendpoint. GitHub Apps must have the `organization_administration:read` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/actions/oidc#get-the-opt-out-flag-of-an-oidc-subject-claim-customization-for-a-repository"
          },
          "operationId": "actions/get-custom-oidc-sub-claim-for-repo",
          "parameters": [
            {
              "description": "The account owner of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "use_default": false
                      }
                    }
                  },
                  "schema": {
                    "description": "OIDC Customer Subject",
                    "properties": {
                      "use_default": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "use_default"
                    ],
                    "title": "The json payload enables/disables the use of sub claim customization",
                    "type": "object"
                  }
                }
              },
              "description": "Status response"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad Request"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Get the opt-out flag of an OIDC subject claim customization for a repository",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "oidc"
          }
        },
        "put": {
          "deprecated": null,
          "description": "Sets the `opt-in` or `opt-out` flag of a GitHub Actions OpenID Connect (OIDC) subject claim customization for a repository.\nYou must authenticate using an access token with the `repo` scope to use this\nendpoint. GitHub Apps must have the `actions:write` permission to use this endpoint.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/actions/oidc#set-the-opt-out-flag-of-an-oidc-subject-claim-customization-for-a-repository"
          },
          "operationId": "actions/set-custom-oidc-sub-claim-for-repo",
          "parameters": [
            {
              "description": "The account owner of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "owner",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The name of the repository. The name is not case sensitive.",
              "in": "path",
              "name": "repo",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "use_default": false
                    }
                  }
                },
                "schema": {
                  "description": "OIDC Customer Subject",
                  "properties": {
                    "use_default": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "use_default"
                  ],
                  "title": "The json payload enables/disables the use of sub claim customization",
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": false,
                    "description": "An object without any properties.",
                    "title": "Empty Object",
                    "type": "object"
                  }
                }
              },
              "description": "Empty response"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad Request"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error Simple",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error Simple",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Set the opt-in flag of an OIDC subject claim customization for a repository",
          "tags": [
            "actions"
          ],
          "x-github": {
            "category": "actions",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": "oidc"
          }
        }
      },
      "/scim/v2/organizations/{org}/Users": {
        "get": {
          "deprecated": null,
          "description": "Retrieves a paginated list of all provisioned organization members, including pending invitations. If you provide the `filter` parameter, the resources for all matching provisions members are returned.\n\nWhen a user with a SAML-provisioned external identity leaves (or is removed from) an organization, the account's metadata is immediately removed. However, the returned list of user accounts might not always match the organization or enterprise member list you see on GitHub Enterprise Cloud. This can happen in certain cases where an external identity associated with an organization will not match an organization member:\n  - When a user with a SCIM-provisioned external identity is removed from an organization, the account's metadata is preserved to allow the user to re-join the organization in the future.\n  - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).\n  - When a user is invited over SCIM, an external identity is created that matches with the invitee's email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.\n\nThe returned list of external identities can include an entry for a `null` user. These are unlinked SAML identities that are created when a user goes through the following Single Sign-On (SSO) process but does not sign in to their GitHub Enterprise Cloud account after completing SSO:\n\n1. The user is granted access by the IdP and is not a member of the GitHub Enterprise Cloud organization.\n\n1. The user attempts to access the GitHub Enterprise Cloud organization and initiates the SAML SSO process, and is not currently signed in to their GitHub Enterprise Cloud account.\n\n1. After successfully authenticating with the SAML SSO IdP, the `null` external identity entry is created and the user is prompted to sign in to their GitHub Enterprise Cloud account:\n   - If the user signs in, their GitHub Enterprise Cloud account is linked to this entry.\n   - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub Enterprise Cloud organization, and the external identity `null` entry remains in place.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#list-scim-provisioned-identities"
          },
          "operationId": "scim/list-provisioned-identities",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "allowReserved": null,
              "description": "Used for pagination: the index of the first result to return.",
              "in": "query",
              "name": "startIndex",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Used for pagination: the number of results to return.",
              "in": "query",
              "name": "count",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query:\n\n`?filter=userName%20eq%20\\\"Octocat\\\"`.\n\nTo filter results for the identity with the email `octocat@github.com`, you would use this query:\n\n`?filter=emails%20eq%20\\\"octocat@github.com\\\"`.",
              "in": "query",
              "name": "filter",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "response-with-filter": {
                      "summary": "Response with filter",
                      "value": {
                        "Resources": [
                          {
                            "active": true,
                            "displayName": "Mona Octocat",
                            "emails": [
                              {
                                "primary": true,
                                "value": "octocat@github.com"
                              }
                            ],
                            "externalId": "00u1dhhb1fkIGP7RL1d8",
                            "id": "5fc0c238-1112-11e8-8e45-920c87bdbd75",
                            "meta": {
                              "created": "2018-02-13T15:05:24.000-08:00",
                              "lastModified": "2018-02-13T15:05:55.000-08:00",
                              "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/5fc0c238-1112-11e8-8e45-920c87bdbd75",
                              "resourceType": "User"
                            },
                            "name": {
                              "familyName": "Octocat",
                              "formatted": "Mona Octocat",
                              "givenName": "Mona"
                            },
                            "schemas": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "userName": "octocat@github.com"
                          }
                        ],
                        "itemsPerPage": 1,
                        "schemas": [
                          "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ],
                        "startIndex": 1,
                        "totalResults": 1
                      }
                    },
                    "response-without-filter": {
                      "summary": "Response without filter",
                      "value": {
                        "Resources": [
                          {
                            "active": true,
                            "displayName": "Mona Octocat",
                            "emails": [
                              {
                                "primary": true,
                                "value": "mona.octocat@okta.example.com"
                              }
                            ],
                            "externalId": "a7d0f98382",
                            "id": "edefdfedf-050c-11e7-8d32",
                            "meta": {
                              "created": "2017-03-09T16:11:13-05:00",
                              "lastModified": "2017-03-09T16:11:13-05:00",
                              "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                              "resourceType": "User"
                            },
                            "name": {
                              "familyName": "Octocat",
                              "formatted": "Mona Octocat",
                              "givenName": "Mona"
                            },
                            "schemas": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "userName": "mona.octocat@okta.example.com"
                          },
                          {
                            "active": true,
                            "displayName": "hu bot",
                            "emails": [
                              {
                                "primary": true,
                                "value": "hubot@example.com"
                              }
                            ],
                            "externalId": "sdfoiausdofiua",
                            "id": "77563764-eb6-24-0598234-958243",
                            "meta": {
                              "created": "2017-03-09T16:11:13-05:00",
                              "lastModified": "2017-03-09T16:11:13-05:00",
                              "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/77563764-eb6-24-0598234-958243",
                              "resourceType": "User"
                            },
                            "name": {
                              "familyName": "bot",
                              "formatted": "hu bot",
                              "givenName": "hu"
                            },
                            "schemas": [
                              "urn:ietf:params:scim:schemas:core:2.0:User"
                            ],
                            "userName": "hubot@example.com"
                          }
                        ],
                        "itemsPerPage": 2,
                        "schemas": [
                          "urn:ietf:params:scim:api:messages:2.0:ListResponse"
                        ],
                        "startIndex": 1,
                        "totalResults": 2
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM User List",
                    "properties": {
                      "Resources": {
                        "items": {
                          "description": "SCIM /Users provisioning endpoints",
                          "properties": {
                            "active": {
                              "description": "The active status of the User.",
                              "example": true,
                              "type": "boolean"
                            },
                            "displayName": {
                              "description": "The name of the user, suitable for display to end-users",
                              "example": "Jon Doe",
                              "nullable": true,
                              "type": "string"
                            },
                            "emails": {
                              "description": "user emails",
                              "example": [
                                {
                                  "primary": true,
                                  "value": "someone@example.com"
                                },
                                {
                                  "primary": false,
                                  "value": "another@example.com"
                                }
                              ],
                              "items": {
                                "properties": {
                                  "primary": {
                                    "type": "boolean"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "value"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "externalId": {
                              "description": "The ID of the User.",
                              "example": "a7b0f98395",
                              "nullable": true,
                              "type": "string"
                            },
                            "groups": {
                              "description": "associated groups",
                              "items": {
                                "properties": {
                                  "display": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              },
                              "type": "array"
                            },
                            "id": {
                              "description": "Unique identifier of an external identity",
                              "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                              "type": "string"
                            },
                            "meta": {
                              "properties": {
                                "created": {
                                  "example": "2019-01-24T22:45:36.000Z",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "lastModified": {
                                  "example": "2019-01-24T22:45:36.000Z",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "location": {
                                  "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "resourceType": {
                                  "example": "User",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "name": {
                              "example": {
                                "familyName": "User",
                                "givenName": "Jane"
                              },
                              "properties": {
                                "familyName": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "formatted": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "givenName": {
                                  "nullable": true,
                                  "type": "string"
                                }
                              },
                              "required": [
                                "givenName",
                                "familyName"
                              ],
                              "type": "object"
                            },
                            "operations": {
                              "description": "Set of operations to be performed",
                              "example": [
                                {
                                  "op": "replace",
                                  "value": {
                                    "active": false
                                  }
                                }
                              ],
                              "items": {
                                "properties": {
                                  "op": {
                                    "enum": [
                                      "add",
                                      "remove",
                                      "replace"
                                    ],
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "object"
                                      },
                                      {
                                        "type": "array"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "op"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "organization_id": {
                              "description": "The ID of the organization.",
                              "type": "integer"
                            },
                            "schemas": {
                              "description": "SCIM schema used.",
                              "items": {
                                "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "userName": {
                              "description": "Configured by the admin. Could be an email, login, or username",
                              "example": "someone@example.com",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "schemas",
                            "externalId",
                            "userName",
                            "name",
                            "emails",
                            "active",
                            "meta"
                          ],
                          "title": "SCIM /Users",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "itemsPerPage": {
                        "example": 10,
                        "type": "integer"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:api:messages:2.0:ListResponse",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "startIndex": {
                        "example": 1,
                        "type": "integer"
                      },
                      "totalResults": {
                        "example": 3,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "schemas",
                      "totalResults",
                      "itemsPerPage",
                      "startIndex",
                      "Resources"
                    ],
                    "title": "SCIM User List",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad Request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Too Many Requests"
            }
          },
          "summary": "List SCIM provisioned identities",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        },
        "post": {
          "deprecated": null,
          "description": "Provision organization membership for a user, and send an activation email to the email address.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#provision-and-invite-a-scim-user"
          },
          "operationId": "scim/provision-and-invite-user",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "displayName": {
                      "description": "The name of the user, suitable for display to end-users",
                      "example": "Jon Doe",
                      "type": "string"
                    },
                    "emails": {
                      "description": "user emails",
                      "example": [
                        {
                          "primary": true,
                          "value": "someone@example.com"
                        },
                        {
                          "primary": false,
                          "value": "another@example.com"
                        }
                      ],
                      "items": {
                        "properties": {
                          "primary": {
                            "type": "boolean"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "groups": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "example": {
                        "familyName": "User",
                        "givenName": "Jane"
                      },
                      "properties": {
                        "familyName": {
                          "type": "string"
                        },
                        "formatted": {
                          "type": "string"
                        },
                        "givenName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "givenName",
                        "familyName"
                      ],
                      "type": "object"
                    },
                    "schemas": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userName": {
                      "description": "Configured by the admin. Could be an email, login, or username",
                      "example": "someone@example.com",
                      "type": "string"
                    }
                  },
                  "required": [
                    "userName",
                    "name",
                    "emails"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "displayName": "Monalisa Octocat",
                        "emails": [
                          {
                            "primary": true,
                            "value": "mona.octocat@okta.example.com"
                          },
                          {
                            "value": "monalisa@octocat.github.com"
                          }
                        ],
                        "externalId": "a7d0f98382",
                        "id": "edefdfedf-050c-11e7-8d32",
                        "meta": {
                          "created": "2017-03-09T16:11:13-05:00",
                          "lastModified": "2017-03-09T16:11:13-05:00",
                          "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Monalisa Octocat",
                          "givenName": "Monalisa"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "mona.octocat@okta.example.com"
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM /Users provisioning endpoints",
                    "properties": {
                      "active": {
                        "description": "The active status of the User.",
                        "example": true,
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "nullable": true,
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          {
                            "primary": true,
                            "value": "someone@example.com"
                          },
                          {
                            "primary": false,
                            "value": "another@example.com"
                          }
                        ],
                        "items": {
                          "properties": {
                            "primary": {
                              "type": "boolean"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "externalId": {
                        "description": "The ID of the User.",
                        "example": "a7b0f98395",
                        "nullable": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "associated groups",
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "Unique identifier of an external identity",
                        "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                        "type": "string"
                      },
                      "meta": {
                        "properties": {
                          "created": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModified": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "location": {
                            "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                            "format": "uri",
                            "type": "string"
                          },
                          "resourceType": {
                            "example": "User",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": {
                            "nullable": true,
                            "type": "string"
                          },
                          "formatted": {
                            "nullable": true,
                            "type": "string"
                          },
                          "givenName": {
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "givenName",
                          "familyName"
                        ],
                        "type": "object"
                      },
                      "operations": {
                        "description": "Set of operations to be performed",
                        "example": [
                          {
                            "op": "replace",
                            "value": {
                              "active": false
                            }
                          }
                        ],
                        "items": {
                          "properties": {
                            "op": {
                              "enum": [
                                "add",
                                "remove",
                                "replace"
                              ],
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object"
                                },
                                {
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "op"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "organization_id": {
                        "description": "The ID of the organization.",
                        "type": "integer"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "schemas",
                      "externalId",
                      "userName",
                      "name",
                      "emails",
                      "active",
                      "meta"
                    ],
                    "title": "SCIM /Users",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad Request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "409": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Conflict"
            },
            "500": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Internal Error"
            }
          },
          "summary": "Provision and invite a SCIM user",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/scim/v2/organizations/{org}/Users/{scim_user_id}": {
        "delete": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#delete-a-scim-user-from-an-organization"
          },
          "operationId": "scim/delete-user-from-org",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Delete a SCIM user from an organization",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#get-scim-provisioning-information-for-a-user"
          },
          "operationId": "scim/get-provisioning-information-for-user",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "displayName": "Monalisa Octocat",
                        "emails": [
                          {
                            "primary": true,
                            "value": "mona.octocat@okta.example.com"
                          },
                          {
                            "value": "monalisa@octocat.github.com"
                          }
                        ],
                        "externalId": "a7d0f98382",
                        "id": "edefdfedf-050c-11e7-8d32",
                        "meta": {
                          "created": "2017-03-09T16:11:13-05:00",
                          "lastModified": "2017-03-09T16:11:13-05:00",
                          "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Monalisa Octocat",
                          "givenName": "Monalisa"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "mona.octocat@okta.example.com"
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM /Users provisioning endpoints",
                    "properties": {
                      "active": {
                        "description": "The active status of the User.",
                        "example": true,
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "nullable": true,
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          {
                            "primary": true,
                            "value": "someone@example.com"
                          },
                          {
                            "primary": false,
                            "value": "another@example.com"
                          }
                        ],
                        "items": {
                          "properties": {
                            "primary": {
                              "type": "boolean"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "externalId": {
                        "description": "The ID of the User.",
                        "example": "a7b0f98395",
                        "nullable": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "associated groups",
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "Unique identifier of an external identity",
                        "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                        "type": "string"
                      },
                      "meta": {
                        "properties": {
                          "created": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModified": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "location": {
                            "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                            "format": "uri",
                            "type": "string"
                          },
                          "resourceType": {
                            "example": "User",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": {
                            "nullable": true,
                            "type": "string"
                          },
                          "formatted": {
                            "nullable": true,
                            "type": "string"
                          },
                          "givenName": {
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "givenName",
                          "familyName"
                        ],
                        "type": "object"
                      },
                      "operations": {
                        "description": "Set of operations to be performed",
                        "example": [
                          {
                            "op": "replace",
                            "value": {
                              "active": false
                            }
                          }
                        ],
                        "items": {
                          "properties": {
                            "op": {
                              "enum": [
                                "add",
                                "remove",
                                "replace"
                              ],
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object"
                                },
                                {
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "op"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "organization_id": {
                        "description": "The ID of the organization.",
                        "type": "integer"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "schemas",
                      "externalId",
                      "userName",
                      "name",
                      "emails",
                      "active",
                      "meta"
                    ],
                    "title": "SCIM /Users",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Get SCIM provisioning information for a user",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Allows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n```",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#update-an-attribute-for-a-scim-user"
          },
          "operationId": "scim/update-attribute-for-user",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "Operations": {
                      "description": "Set of operations to be performed",
                      "example": [
                        {
                          "op": "replace",
                          "value": {
                            "active": false
                          }
                        }
                      ],
                      "items": {
                        "properties": {
                          "op": {
                            "enum": [
                              "add",
                              "remove",
                              "replace"
                            ],
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "value": {
                            "oneOf": [
                              {
                                "properties": {
                                  "active": {
                                    "nullable": true,
                                    "type": "boolean"
                                  },
                                  "externalId": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "familyName": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "givenName": {
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "userName": {
                                    "nullable": true,
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "items": {
                                  "properties": {
                                    "primary": {
                                      "type": "boolean"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          }
                        },
                        "required": [
                          "op"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "schemas": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "Operations"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "displayName": "Monalisa Octocat",
                        "emails": [
                          {
                            "primary": true,
                            "value": "mona.octocat@okta.example.com"
                          },
                          {
                            "value": "monalisa@octocat.github.com"
                          }
                        ],
                        "externalId": "a7d0f98382",
                        "id": "edefdfedf-050c-11e7-8d32",
                        "meta": {
                          "created": "2017-03-09T16:11:13-05:00",
                          "lastModified": "2017-03-09T16:11:13-05:00",
                          "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Monalisa Octocat",
                          "givenName": "Monalisa"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "mona.octocat@okta.example.com"
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM /Users provisioning endpoints",
                    "properties": {
                      "active": {
                        "description": "The active status of the User.",
                        "example": true,
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "nullable": true,
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          {
                            "primary": true,
                            "value": "someone@example.com"
                          },
                          {
                            "primary": false,
                            "value": "another@example.com"
                          }
                        ],
                        "items": {
                          "properties": {
                            "primary": {
                              "type": "boolean"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "externalId": {
                        "description": "The ID of the User.",
                        "example": "a7b0f98395",
                        "nullable": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "associated groups",
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "Unique identifier of an external identity",
                        "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                        "type": "string"
                      },
                      "meta": {
                        "properties": {
                          "created": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModified": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "location": {
                            "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                            "format": "uri",
                            "type": "string"
                          },
                          "resourceType": {
                            "example": "User",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": {
                            "nullable": true,
                            "type": "string"
                          },
                          "formatted": {
                            "nullable": true,
                            "type": "string"
                          },
                          "givenName": {
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "givenName",
                          "familyName"
                        ],
                        "type": "object"
                      },
                      "operations": {
                        "description": "Set of operations to be performed",
                        "example": [
                          {
                            "op": "replace",
                            "value": {
                              "active": false
                            }
                          }
                        ],
                        "items": {
                          "properties": {
                            "op": {
                              "enum": [
                                "add",
                                "remove",
                                "replace"
                              ],
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object"
                                },
                                {
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "op"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "organization_id": {
                        "description": "The ID of the organization.",
                        "type": "integer"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "schemas",
                      "externalId",
                      "userName",
                      "name",
                      "emails",
                      "active",
                      "meta"
                    ],
                    "title": "SCIM /Users",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "400": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Bad Request"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            },
            "429": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update an attribute for a SCIM user",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        },
        "put": {
          "deprecated": null,
          "description": "Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#update-an-attribute-for-a-scim-user) endpoint instead.\n\nYou must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `{scim_user_id}`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/scim#set-scim-information-for-a-provisioned-user"
          },
          "operationId": "scim/set-information-for-provisioned-user",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "description": "The unique identifier of the SCIM user.",
              "in": "path",
              "name": "scim_user_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "displayName": {
                      "description": "The name of the user, suitable for display to end-users",
                      "example": "Jon Doe",
                      "type": "string"
                    },
                    "emails": {
                      "description": "user emails",
                      "example": [
                        {
                          "primary": true,
                          "value": "someone@example.com"
                        },
                        {
                          "primary": false,
                          "value": "another@example.com"
                        }
                      ],
                      "items": {
                        "properties": {
                          "primary": {
                            "type": "boolean"
                          },
                          "type": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "type": "object"
                      },
                      "minItems": 1,
                      "type": "array"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "groups": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "example": {
                        "familyName": "User",
                        "givenName": "Jane"
                      },
                      "properties": {
                        "familyName": {
                          "type": "string"
                        },
                        "formatted": {
                          "type": "string"
                        },
                        "givenName": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "givenName",
                        "familyName"
                      ],
                      "type": "object"
                    },
                    "schemas": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "userName": {
                      "description": "Configured by the admin. Could be an email, login, or username",
                      "example": "someone@example.com",
                      "type": "string"
                    }
                  },
                  "required": [
                    "userName",
                    "name",
                    "emails"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/scim+json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "displayName": "Monalisa Octocat",
                        "emails": [
                          {
                            "primary": true,
                            "value": "mona.octocat@okta.example.com"
                          },
                          {
                            "value": "monalisa@octocat.github.com"
                          }
                        ],
                        "externalId": "a7d0f98382",
                        "id": "edefdfedf-050c-11e7-8d32",
                        "meta": {
                          "created": "2017-03-09T16:11:13-05:00",
                          "lastModified": "2017-03-09T16:11:13-05:00",
                          "location": "https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32",
                          "resourceType": "User"
                        },
                        "name": {
                          "familyName": "Octocat",
                          "formatted": "Monalisa Octocat",
                          "givenName": "Monalisa"
                        },
                        "schemas": [
                          "urn:ietf:params:scim:schemas:core:2.0:User"
                        ],
                        "userName": "mona.octocat@okta.example.com"
                      }
                    }
                  },
                  "schema": {
                    "description": "SCIM /Users provisioning endpoints",
                    "properties": {
                      "active": {
                        "description": "The active status of the User.",
                        "example": true,
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The name of the user, suitable for display to end-users",
                        "example": "Jon Doe",
                        "nullable": true,
                        "type": "string"
                      },
                      "emails": {
                        "description": "user emails",
                        "example": [
                          {
                            "primary": true,
                            "value": "someone@example.com"
                          },
                          {
                            "primary": false,
                            "value": "another@example.com"
                          }
                        ],
                        "items": {
                          "properties": {
                            "primary": {
                              "type": "boolean"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "value"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "externalId": {
                        "description": "The ID of the User.",
                        "example": "a7b0f98395",
                        "nullable": true,
                        "type": "string"
                      },
                      "groups": {
                        "description": "associated groups",
                        "items": {
                          "properties": {
                            "display": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        "type": "array"
                      },
                      "id": {
                        "description": "Unique identifier of an external identity",
                        "example": "1b78eada-9baa-11e6-9eb6-a431576d590e",
                        "type": "string"
                      },
                      "meta": {
                        "properties": {
                          "created": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "lastModified": {
                            "example": "2019-01-24T22:45:36.000Z",
                            "format": "date-time",
                            "type": "string"
                          },
                          "location": {
                            "example": "https://api.github.com/scim/v2/organizations/myorg-123abc55141bfd8f/Users/c42772b5-2029-11e9-8543-9264a97dec8d",
                            "format": "uri",
                            "type": "string"
                          },
                          "resourceType": {
                            "example": "User",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "name": {
                        "example": {
                          "familyName": "User",
                          "givenName": "Jane"
                        },
                        "properties": {
                          "familyName": {
                            "nullable": true,
                            "type": "string"
                          },
                          "formatted": {
                            "nullable": true,
                            "type": "string"
                          },
                          "givenName": {
                            "nullable": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "givenName",
                          "familyName"
                        ],
                        "type": "object"
                      },
                      "operations": {
                        "description": "Set of operations to be performed",
                        "example": [
                          {
                            "op": "replace",
                            "value": {
                              "active": false
                            }
                          }
                        ],
                        "items": {
                          "properties": {
                            "op": {
                              "enum": [
                                "add",
                                "remove",
                                "replace"
                              ],
                              "type": "string"
                            },
                            "path": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object"
                                },
                                {
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "op"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "organization_id": {
                        "description": "The ID of the organization.",
                        "type": "integer"
                      },
                      "schemas": {
                        "description": "SCIM schema used.",
                        "items": {
                          "example": "urn:ietf:params:scim:schemas:core:2.0:User",
                          "type": "string"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "userName": {
                        "description": "Configured by the admin. Could be an email, login, or username",
                        "example": "someone@example.com",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "schemas",
                      "externalId",
                      "userName",
                      "name",
                      "emails",
                      "active",
                      "meta"
                    ],
                    "title": "SCIM /Users",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "304": {
              "description": "Not modified"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                },
                "application/scim+json": {
                  "schema": {
                    "description": "Scim Error",
                    "properties": {
                      "detail": {
                        "nullable": true,
                        "type": "string"
                      },
                      "documentation_url": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "schemas": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "scimType": {
                        "nullable": true,
                        "type": "string"
                      },
                      "status": {
                        "type": "integer"
                      }
                    },
                    "title": "Scim Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "Update a provisioned organization membership",
          "tags": [
            "scim"
          ],
          "x-github": {
            "category": "scim",
            "enabledForGitHubApps": true,
            "githubCloudOnly": true,
            "subcategory": null
          }
        }
      },
      "/teams/{team_id}/team-sync/group-mappings": {
        "get": {
          "deprecated": true,
          "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List IdP groups for a team`](https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-a-team) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub Enterprise Cloud.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#list-idp-groups-for-a-team-legacy"
          },
          "operationId": "teams/list-idp-groups-for-legacy",
          "parameters": [
            {
              "description": "The unique identifier of the team.",
              "in": "path",
              "name": "team_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          },
                          {
                            "group_description": "The people who make your octoworld come to life.",
                            "group_id": "456",
                            "group_name": "Octocat docs members"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "404": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Resource not found"
            }
          },
          "summary": "List IdP groups for a team (Legacy)",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "deprecationDate": "2020-01-21",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "removalDate": "2021-02-01",
            "subcategory": "team-sync"
          }
        },
        "patch": {
          "deprecated": true,
          "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create or update IdP group connections`](https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#create-or-update-idp-group-connections) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/enterprise-cloud@latest//rest/reference/teams#create-or-update-idp-group-connections-legacy"
          },
          "operationId": "teams/create-or-update-idp-group-connections-legacy",
          "parameters": [
            {
              "description": "The unique identifier of the team.",
              "in": "path",
              "name": "team_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "groups": [
                        {
                          "description": "The people who configure your octoworld.",
                          "group_description": "string",
                          "group_id": "123",
                          "group_name": "Octocat admins"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "groups": {
                      "description": "The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.",
                      "items": {
                        "properties": {
                          "description": {
                            "example": "\"moar cheese pleese\"",
                            "type": "string"
                          },
                          "group_description": {
                            "description": "Description of the IdP group.",
                            "type": "string"
                          },
                          "group_id": {
                            "description": "ID of the IdP group.",
                            "type": "string"
                          },
                          "group_name": {
                            "description": "Name of the IdP group.",
                            "type": "string"
                          },
                          "id": {
                            "example": "\"caceab43fc9ffa20081c\"",
                            "type": "string"
                          },
                          "name": {
                            "example": "\"external-team-6c13e7288ef7\"",
                            "type": "string"
                          }
                        },
                        "required": [
                          "group_id",
                          "group_name",
                          "group_description"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "synced_at": {
                      "example": "\"I am not a timestamp\"",
                      "type": "string"
                    }
                  },
                  "required": [
                    "groups"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "groups": [
                          {
                            "group_description": "The people who configure your octoworld.",
                            "group_id": "123",
                            "group_name": "Octocat admins"
                          }
                        ]
                      }
                    }
                  },
                  "schema": {
                    "description": "External Groups to be mapped to a team for membership",
                    "properties": {
                      "groups": {
                        "description": "Array of groups to be mapped to this team",
                        "example": [
                          {
                            "group_description": "A group of Developers working on AzureAD SAML SSO",
                            "group_id": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                            "group_name": "saml-azuread-test"
                          },
                          {
                            "group_description": "Another group of Developers working on AzureAD SAML SSO",
                            "group_id": "2bb2bb2b-bb22-22bb-2bb2-bb2bbb2bb2b2",
                            "group_name": "saml-azuread-test2"
                          }
                        ],
                        "items": {
                          "properties": {
                            "group_description": {
                              "description": "a description of the group",
                              "example": "A group of Developers working on AzureAD SAML SSO",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "The ID of the group",
                              "example": "111a1a11-aaa1-1aaa-11a1-a1a1a1a1a1aa",
                              "type": "string"
                            },
                            "group_name": {
                              "description": "The name of the group",
                              "example": "saml-azuread-test",
                              "type": "string"
                            },
                            "status": {
                              "description": "synchronization status for this group mapping",
                              "example": "unsynced",
                              "type": "string"
                            },
                            "synced_at": {
                              "description": "the time of the last sync for this group-mapping",
                              "example": "2019-06-03 22:27:15:000 -700",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "group_id",
                            "group_name",
                            "group_description"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "title": "GroupMapping",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "403": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Basic Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "title": "Basic Error",
                    "type": "object"
                  }
                }
              },
              "description": "Forbidden"
            },
            "422": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Validation Error",
                    "properties": {
                      "documentation_url": {
                        "type": "string"
                      },
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "field": {
                              "type": "string"
                            },
                            "index": {
                              "type": "integer"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "value": {
                              "oneOf": [
                                {
                                  "nullable": true,
                                  "type": "string"
                                },
                                {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                {
                                  "items": {
                                    "type": "string"
                                  },
                                  "nullable": true,
                                  "type": "array"
                                }
                              ]
                            }
                          },
                          "required": [
                            "code"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "documentation_url"
                    ],
                    "title": "Validation Error",
                    "type": "object"
                  }
                }
              },
              "description": "Validation failed, or the endpoint has been spammed."
            }
          },
          "summary": "Create or update IdP group connections (Legacy)",
          "tags": [
            "teams"
          ],
          "x-github": {
            "category": "teams",
            "deprecationDate": "2020-01-21",
            "enabledForGitHubApps": false,
            "githubCloudOnly": true,
            "removalDate": "2021-02-01",
            "subcategory": "team-sync"
          }
        }
      }
    },
    "changed": {
      "/repos/{owner}/{repo}/code-scanning/alerts": {
        "get": {
          "parameters": {
            "changed": {
              "sort": {
                "schema": {
                  "enum_changed": {
                    "added": false,
                    "removed": false,
                    "values_removed": [
                      "number"
                    ]
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}