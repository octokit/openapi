{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.0-development",
    "title": "GitHub's official OpenAPI spec + Octokit extension",
    "description": "OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs",
    "license": { "name": "MIT", "url": "https://spdx.org/licenses/MIT" },
    "termsOfService": "https://docs.github.com/articles/github-terms-of-service",
    "contact": {
      "name": "Support",
      "url": "https://github.com/octokit/openapi"
    }
  },
  "tags": [
    {
      "name": "actions",
      "description": "Endpoints to manage GitHub Actions using the REST API."
    },
    {
      "name": "activity",
      "description": "Activity APIs provide access to notifications, subscriptions, and timelines."
    },
    {
      "name": "apps",
      "description": "Information for integrations and installations."
    },
    {
      "name": "billing",
      "description": "Monitor charges and usage from Actions and Packages."
    },
    {
      "name": "checks",
      "description": "Rich interactions with checks run by your integrations."
    },
    {
      "name": "code-scanning",
      "description": "Retrieve code scanning alerts from a repository."
    },
    {
      "name": "codes-of-conduct",
      "description": "Insight into codes of conduct for your communities."
    },
    {
      "name": "emojis",
      "description": "List emojis available to use on GitHub."
    },
    {
      "name": "enterprise-admin",
      "description": "Administer a GitHub enterprise."
    },
    { "name": "gists", "description": "View, modify your gists." },
    { "name": "git", "description": "Raw Git functionality." },
    { "name": "gitignore", "description": "View gitignore templates" },
    {
      "name": "interactions",
      "description": "Owner or admin management of users interactions."
    },
    { "name": "issues", "description": "Interact with GitHub Issues." },
    { "name": "licenses", "description": "View various OSS licenses." },
    { "name": "markdown", "description": "Render Github flavored markdown" },
    {
      "name": "meta",
      "description": "Endpoints that give information about the API."
    },
    { "name": "migrations", "description": "Move projects to or from GitHub." },
    {
      "name": "oauth-authorizations",
      "description": "Manage access of OAuth applications"
    },
    { "name": "orgs", "description": "Interact with GitHub Orgs." },
    {
      "name": "packages",
      "description": "Manage packages for authenticated users and organizations."
    },
    { "name": "projects", "description": "Interact with GitHub Projects." },
    { "name": "pulls", "description": "Interact with GitHub Pull Requests." },
    {
      "name": "rate-limit",
      "description": "Check your current rate limit status"
    },
    {
      "name": "reactions",
      "description": "Interact with reactions to various GitHub entities."
    },
    { "name": "repos", "description": "Interact with GitHub Repos." },
    {
      "name": "scim",
      "description": "Provisioning of GitHub organization membership for SCIM-enabled providers."
    },
    { "name": "search", "description": "Look for stuff on GitHub." },
    {
      "name": "secret-scanning",
      "description": "Retrieve secret scanning alerts from a repository."
    },
    { "name": "teams", "description": "Interact with GitHub Teams." },
    {
      "name": "users",
      "description": "Interact with and view information about users and also current user."
    }
  ],
  "servers": [
    {
      "url": "{protocol}://{hostname}/api/v3",
      "variables": {
        "hostname": {
          "description": "Self-hosted Enterprise Server or Enterprise Cloud hostname",
          "default": "HOSTNAME"
        },
        "protocol": {
          "description": "Self-hosted Enterprise Server or Enterprise Cloud protocol",
          "default": "http"
        }
      }
    }
  ],
  "externalDocs": {
    "description": "GitHub Enterprise Developer Docs",
    "url": "https://docs.github.com/enterprise-server@2.22/rest/"
  },
  "paths": {
    "/app/installations": {
      "get": {
        "summary": "List installations for the authenticated app",
        "description": "You must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key.",
        "tags": ["apps"],
        "operationId": "apps/list-installations",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/apps#list-installations-for-the-authenticated-app"
        },
        "parameters": [
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/since" },
          {
            "name": "outdated",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "The permissions the installation has are included under the `permissions` key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/installation-ghes-2"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/base-installation-items-ghes-2"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/app/installations/{installation_id}": {
      "get": {
        "summary": "Get an installation for the authenticated app",
        "description": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "tags": ["apps"],
        "operationId": "apps/get-installation",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/apps#get-an-installation-for-the-authenticated-app"
        },
        "parameters": [{ "$ref": "#/components/parameters/installation-id" }],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation-ghes-2"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/base-installation-ghes-2"
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/not_found" },
          "415": { "$ref": "#/components/responses/preview_header_missing" }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners": {
      "get": {
        "summary": "List self-hosted runners in a group for an enterprise",
        "description": "Lists the self-hosted runners that are in a specific enterprise group.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/list-self-hosted-runners-in-group-for-enterprise",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#list-self-hosted-runners-in-a-group-for-an-enterprise"
        },
        "parameters": [
          { "$ref": "#/components/parameters/enterprise" },
          { "$ref": "#/components/parameters/runner-group-id" },
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": { "type": "number" },
                    "runners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner-no-labels"
                      }
                    }
                  },
                  "required": ["total_count", "runners"]
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-paginated-no-labels"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "actions"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/enterprises/{enterprise}/actions/runners": {
      "get": {
        "summary": "List self-hosted runners for an enterprise",
        "description": "Lists all self-hosted runners configured for an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/list-self-hosted-runners-for-enterprise",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#list-self-hosted-runners-for-an-enterprise"
        },
        "parameters": [
          { "$ref": "#/components/parameters/enterprise" },
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": { "type": "number" },
                    "runners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner-no-labels"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-paginated-no-labels"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "actions"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/enterprises/{enterprise}/actions/runners/{runner_id}": {
      "get": {
        "summary": "Get a self-hosted runner for an enterprise",
        "description": "Gets a specific self-hosted runner configured in an enterprise.\n\nYou must authenticate using an access token with the `admin:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/get-self-hosted-runner-for-enterprise",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/enterprise-admin#get-a-self-hosted-runner-for-an-enterprise"
        },
        "parameters": [
          { "$ref": "#/components/parameters/enterprise" },
          { "$ref": "#/components/parameters/runner-id" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/runner-no-labels" },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-no-labels"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "actions"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/orgs/{org}": {
      "patch": {
        "summary": "Update an organization",
        "description": "**Parameter Deprecation Notice:** GitHub Enterprise Server will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).\n\nEnables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges.",
        "tags": ["orgs"],
        "operationId": "orgs/update",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/orgs/#update-an-organization"
        },
        "parameters": [{ "$ref": "#/components/parameters/org" }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "billing_email": {
                    "type": "string",
                    "description": "Billing email address. This address is not publicized."
                  },
                  "company": {
                    "type": "string",
                    "description": "The company name."
                  },
                  "email": {
                    "type": "string",
                    "description": "The publicly visible email address."
                  },
                  "twitter_username": {
                    "type": "string",
                    "description": "The Twitter username of the company."
                  },
                  "location": {
                    "type": "string",
                    "description": "The location."
                  },
                  "name": {
                    "type": "string",
                    "description": "The shorthand name of the company."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the company."
                  },
                  "has_organization_projects": {
                    "type": "boolean",
                    "description": "Toggles whether an organization can use organization projects."
                  },
                  "has_repository_projects": {
                    "type": "boolean",
                    "description": "Toggles whether repositories that belong to the organization can use repository projects."
                  },
                  "default_repository_permission": {
                    "type": "string",
                    "description": "Default permission level members have for organization repositories:  \n\\* `read` - can pull, but not push to or administer this repository.  \n\\* `write` - can pull and push, but not administer this repository.  \n\\* `admin` - can pull, push, and administer this repository.  \n\\* `none` - no permissions granted by default.",
                    "enum": ["read", "write", "admin", "none"],
                    "default": "read"
                  },
                  "members_can_create_repositories": {
                    "type": "boolean",
                    "description": "Toggles the ability of non-admin organization members to create repositories. Can be one of:  \n\\* `true` - all organization members can create repositories.  \n\\* `false` - only organization owners can create repositories.  \nDefault: `true`  \n**Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details. **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details.",
                    "default": true
                  },
                  "members_can_create_internal_repositories": {
                    "type": "boolean",
                    "description": "Toggles whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. Can be one of:  \n\\* `true` - all organization members can create internal repositories.  \n\\* `false` - only organization owners can create internal repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation."
                  },
                  "members_can_create_private_repositories": {
                    "type": "boolean",
                    "description": "Toggles whether organization members can create private repositories, which are visible to organization members with permission. Can be one of:  \n\\* `true` - all organization members can create private repositories.  \n\\* `false` - only organization owners can create private repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation."
                  },
                  "members_can_create_public_repositories": {
                    "type": "boolean",
                    "description": "Toggles whether organization members can create public repositories, which are visible to anyone. Can be one of:  \n\\* `true` - all organization members can create public repositories.  \n\\* `false` - only organization owners can create public repositories.  \nDefault: `true`. For more information, see \"[Restricting repository creation in your organization](https://help.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)\" in the GitHub Help documentation."
                  },
                  "members_allowed_repository_creation_type": {
                    "type": "string",
                    "description": "Specifies which types of repositories non-admin organization members can create. Can be one of:  \n\\* `all` - all organization members can create public and private repositories.  \n\\* `private` - members can create private repositories. This option is only available to repositories that are part of an organization on GitHub Enterprise Cloud.  \n\\* `none` - only admin members can create repositories.  \n**Note:** This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in `members_can_create_repositories`. See the parameter deprecation notice in the operation description for details.",
                    "enum": ["all", "private", "none"]
                  },
                  "blog": {
                    "type": "string",
                    "example": "\"http://github.blog\""
                  }
                }
              },
              "example": {
                "billing_email": "mona@github.com",
                "company": "GitHub",
                "email": "mona@github.com",
                "twitter_username": "github",
                "location": "San Francisco",
                "name": "github",
                "description": "GitHub, the company.",
                "default_repository_permission": "read",
                "members_can_create_repositories": true,
                "members_allowed_repository_creation_type": "all"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/organization-full" },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-full"
                  }
                }
              }
            }
          },
          "409": { "$ref": "#/components/responses/conflict" },
          "415": { "$ref": "#/components/responses/preview_header_missing" },
          "422": {
            "description": "Validation failed",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    { "$ref": "#/components/schemas/validation-error" },
                    { "$ref": "#/components/schemas/validation-error-simple" }
                  ]
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [
            {
              "required": false,
              "name": "surtur",
              "note": "New repository creation permissions are available to preview. You can now use `members_can_create_public_repositories`, `members_can_create_private_repositories`, and `members_can_create_internal_repositories`. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. These parameters provide more granular permissions to configure the type of repositories organization members can create.\n\nTo access these new parameters during the preview period, you must provide a custom [media type](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.surtur-preview+json\n```"
            }
          ],
          "category": "orgs",
          "subcategory": null
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners": {
      "get": {
        "summary": "List self-hosted runners in a group for an organization",
        "description": "Lists self-hosted runners that are in a specific organization group.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/list-self-hosted-runners-in-group-for-org",
        "tags": ["actions"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-self-hosted-runners-in-a-group-for-an-organization"
        },
        "parameters": [
          { "$ref": "#/components/parameters/org" },
          { "$ref": "#/components/parameters/runner-group-id" },
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["total_count", "runners"],
                  "properties": {
                    "total_count": { "type": "number" },
                    "runners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner-no-labels"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-paginated-no-labels"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": false,
          "previews": [],
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/orgs/{org}/actions/runners": {
      "get": {
        "summary": "List self-hosted runners for an organization",
        "description": "Lists all self-hosted runners configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "tags": ["actions"],
        "operationId": "actions/list-self-hosted-runners-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-self-hosted-runners-for-an-organization"
        },
        "parameters": [
          { "$ref": "#/components/parameters/org" },
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["total_count", "runners"],
                  "properties": {
                    "total_count": { "type": "number" },
                    "runners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner-no-labels"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-paginated-no-labels"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/orgs/{org}/actions/runners/{runner_id}": {
      "get": {
        "summary": "Get a self-hosted runner for an organization",
        "description": "Gets a specific self-hosted runner configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "tags": ["actions"],
        "operationId": "actions/get-self-hosted-runner-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-self-hosted-runner-for-an-organization"
        },
        "parameters": [
          { "$ref": "#/components/parameters/org" },
          { "$ref": "#/components/parameters/runner-id" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/runner-no-labels" },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-no-labels"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/orgs/{org}/installation": {
      "get": {
        "summary": "Get an organization installation for the authenticated app",
        "description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "tags": ["apps"],
        "operationId": "apps/get-org-installation",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/apps#get-an-organization-installation-for-the-authenticated-app"
        },
        "parameters": [{ "$ref": "#/components/parameters/org" }],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation-ghes-2"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/installation-ghes-2"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/orgs/{org}/installations": {
      "get": {
        "summary": "List app installations for an organization",
        "description": "Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in the organization. You must be an organization owner with `admin:read` scope to use this endpoint.",
        "tags": ["orgs"],
        "operationId": "orgs/list-app-installations",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/orgs#list-app-installations-for-an-organization"
        },
        "parameters": [
          { "$ref": "#/components/parameters/org" },
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["total_count", "installations"],
                  "properties": {
                    "total_count": { "type": "integer" },
                    "installations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/installation-ghes-2"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/installation-paginated-ghes-2"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "orgs",
          "subcategory": null
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/repos/{owner}/{repo}/actions/runners": {
      "get": {
        "summary": "List self-hosted runners for a repository",
        "description": "Lists all self-hosted runners configured in a repository. You must authenticate using an access token with the `repo` scope to use this endpoint.",
        "tags": ["actions"],
        "operationId": "actions/list-self-hosted-runners-for-repo",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#list-self-hosted-runners-for-a-repository"
        },
        "parameters": [
          { "$ref": "#/components/parameters/owner" },
          { "$ref": "#/components/parameters/repo" },
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["total_count", "runners"],
                  "properties": {
                    "total_count": { "type": "number" },
                    "runners": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner-no-labels"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-paginated-no-labels"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/repos/{owner}/{repo}/actions/runners/{runner_id}": {
      "get": {
        "summary": "Get a self-hosted runner for a repository",
        "description": "Gets a specific self-hosted runner configured in a repository.\n\nYou must authenticate using an access token with the `repo` scope to use this\nendpoint.",
        "tags": ["actions"],
        "operationId": "actions/get-self-hosted-runner-for-repo",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-self-hosted-runner-for-a-repository"
        },
        "parameters": [
          { "$ref": "#/components/parameters/owner" },
          { "$ref": "#/components/parameters/repo" },
          { "$ref": "#/components/parameters/runner-id" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/runner-no-labels" },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-no-labels"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "actions",
          "subcategory": "self-hosted-runners"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/repos/{owner}/{repo}/code-scanning/alerts": {
      "get": {
        "summary": "List code scanning alerts for a repository",
        "description": "Lists all open code scanning alerts for the default branch (usually `main`\nor `master`). You must use an access token with the `security_events` scope to use\nthis endpoint. GitHub Apps must have the `security_events` read permission to use\nthis endpoint.",
        "tags": ["code-scanning"],
        "operationId": "code-scanning/list-alerts-for-repo",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/code-scanning#list-code-scanning-alerts-for-a-repository"
        },
        "parameters": [
          { "$ref": "#/components/parameters/owner" },
          { "$ref": "#/components/parameters/repo" },
          { "$ref": "#/components/parameters/tool-name" },
          { "$ref": "#/components/parameters/tool-guid" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/git-ref" },
          {
            "name": "state",
            "description": "Set to `open`, `fixed`, or `dismissed` to list code scanning alerts in a specific state.",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/code-scanning-alert-state"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/code-scanning-alert-items"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/code-scanning-alert-items"
                  }
                }
              }
            }
          },
          "403": { "$ref": "#/components/responses/forbidden" },
          "404": { "$ref": "#/components/responses/not_found" },
          "503": { "$ref": "#/components/responses/service_unavailable" }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "code-scanning",
          "subcategory": null
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}": {
      "get": {
        "summary": "Get a code scanning alert",
        "description": "Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.\n\n**Deprecation notice**:\nThe instances field is deprecated and will, in future, not be included in the response for this endpoint. From GitHub Enterprise Server 3.0, the same information can be retrieved via a GET request to the URL specified by `instances_url`, added in that release.",
        "tags": ["code-scanning"],
        "operationId": "code-scanning/get-alert",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/code-scanning#get-a-code-scanning-alert"
        },
        "parameters": [
          { "$ref": "#/components/parameters/owner" },
          { "$ref": "#/components/parameters/repo" },
          { "$ref": "#/components/parameters/alert-number" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/code-scanning-alert"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/code-scanning-alert"
                  }
                }
              }
            }
          },
          "403": { "$ref": "#/components/responses/forbidden" },
          "404": { "$ref": "#/components/responses/not_found" },
          "503": { "$ref": "#/components/responses/service_unavailable" }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "previews": [],
          "category": "code-scanning",
          "subcategory": null
        },
        "x-octokit": {
          "changes": [
            {
              "type": "PARAMETER",
              "date": "2020-09-17",
              "parameter": "alert_number",
              "before": { "name": "alert_id" }
            }
          ],
          "diff": { "ghes-3.0.json": { "type": "changed" } }
        }
      },
      "patch": {
        "summary": "Update a code scanning alert",
        "description": "Updates the status of a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` write permission to use this endpoint.",
        "operationId": "code-scanning/update-alert",
        "tags": ["code-scanning"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/code-scanning#update-a-code-scanning-alert"
        },
        "parameters": [
          { "$ref": "#/components/parameters/owner" },
          { "$ref": "#/components/parameters/repo" },
          { "$ref": "#/components/parameters/alert-number" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "state": {
                    "$ref": "#/components/schemas/code-scanning-alert-set-state"
                  },
                  "dismissed_reason": {
                    "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
                  }
                },
                "required": ["state"]
              },
              "example": {
                "state": "dismissed",
                "dismissed_reason": "false positive"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/code-scanning-alert"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/code-scanning-alert-dismissed"
                  }
                }
              }
            }
          },
          "403": { "$ref": "#/components/responses/forbidden" },
          "404": { "$ref": "#/components/responses/not_found" },
          "503": { "$ref": "#/components/responses/service_unavailable" }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": false,
          "previews": [],
          "category": "code-scanning"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/repos/{owner}/{repo}/installation": {
      "get": {
        "summary": "Get a repository installation for the authenticated app",
        "description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "tags": ["apps"],
        "operationId": "apps/get-repo-installation",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/apps#get-a-repository-installation-for-the-authenticated-app"
        },
        "parameters": [
          { "$ref": "#/components/parameters/owner" },
          { "$ref": "#/components/parameters/repo" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation-ghes-2"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/installation-ghes-2"
                  }
                }
              }
            }
          },
          "301": { "$ref": "#/components/responses/moved_permanently" },
          "404": { "$ref": "#/components/responses/not_found" }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/user/installations": {
      "get": {
        "summary": "List app installations accessible to the user access token",
        "description": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key.",
        "tags": ["apps"],
        "operationId": "apps/list-installations-for-authenticated-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/apps#list-app-installations-accessible-to-the-user-access-token"
        },
        "parameters": [
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" }
        ],
        "responses": {
          "200": {
            "description": "You can find the permissions for the installation under the `permissions` key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["total_count", "installations"],
                  "properties": {
                    "total_count": { "type": "integer" },
                    "installations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/installation-ghes-2"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/base-installation-for-auth-user-paginated-ghes-2"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          },
          "304": { "$ref": "#/components/responses/not_modified" },
          "401": { "$ref": "#/components/responses/requires_authentication" },
          "403": { "$ref": "#/components/responses/forbidden" },
          "415": { "$ref": "#/components/responses/preview_header_missing" }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "apps",
          "subcategory": "installations"
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    },
    "/users/{username}/installation": {
      "get": {
        "summary": "Get a user installation for the authenticated app",
        "description": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://docs.github.com/enterprise-server@2.22/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.",
        "tags": ["apps"],
        "operationId": "apps/get-user-installation",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@2.22/rest/reference/apps#get-a-user-installation-for-the-authenticated-app"
        },
        "parameters": [{ "$ref": "#/components/parameters/username" }],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/installation-ghes-2"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/installation-ghes-2"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "apps",
          "subcategory": null
        },
        "x-octokit": { "diff": { "ghes-3.0.json": { "type": "changed" } } }
      }
    }
  },
  "components": {
    "parameters": {
      "per-page": {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": { "type": "integer", "default": 30 }
      },
      "page": {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": { "type": "integer", "default": 1 }
      },
      "since": {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": { "type": "string", "format": "date-time" }
      },
      "installation-id": {
        "name": "installation_id",
        "description": "installation_id parameter",
        "in": "path",
        "required": true,
        "schema": { "type": "integer" }
      },
      "enterprise": {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      },
      "runner-group-id": {
        "name": "runner_group_id",
        "description": "Unique identifier of the self-hosted runner group.",
        "in": "path",
        "required": true,
        "schema": { "type": "integer" }
      },
      "runner-id": {
        "name": "runner_id",
        "description": "Unique identifier of the self-hosted runner.",
        "in": "path",
        "required": true,
        "schema": { "type": "integer" }
      },
      "org": {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      },
      "owner": {
        "name": "owner",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      },
      "repo": {
        "name": "repo",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      },
      "tool-name": {
        "name": "tool_name",
        "description": "The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
        }
      },
      "tool-guid": {
        "name": "tool_guid",
        "description": "The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.",
        "in": "query",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
        }
      },
      "git-ref": {
        "name": "ref",
        "description": "The Git reference for the results you want to list. The `ref` for a branch can be formatted either as `refs/heads/<branch name>` or simply `<branch name>`. To reference a pull request use `refs/pull/<number>/merge`.",
        "in": "query",
        "required": false,
        "schema": { "$ref": "#/components/schemas/code-scanning-ref" }
      },
      "alert-number": {
        "name": "alert_number",
        "in": "path",
        "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.",
        "required": true,
        "schema": { "$ref": "#/components/schemas/alert-number" }
      },
      "username": {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      }
    },
    "schemas": {
      "installation-ghes-2": {
        "title": "Installation",
        "description": "Installation",
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the installation.",
            "type": "integer",
            "example": 1
          },
          "account": {
            "nullable": true,
            "anyOf": [
              { "$ref": "#/components/schemas/simple-user" },
              { "$ref": "#/components/schemas/enterprise" }
            ]
          },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": ["all", "selected"]
          },
          "access_tokens_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/installations/1/access_tokens"
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/installation/repositories"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/organizations/github/settings/installations/1"
          },
          "app_id": { "type": "integer", "example": 1 },
          "target_id": {
            "description": "The ID of the user or organization this token is being scoped to.",
            "type": "integer"
          },
          "target_type": { "type": "string", "example": "Organization" },
          "permissions": {
            "type": "object",
            "example": { "issues": "read", "deployments": "write" },
            "properties": {
              "deployments": { "type": "string" },
              "checks": { "type": "string" },
              "metadata": { "type": "string" },
              "contents": { "type": "string" },
              "pull_requests": { "type": "string" },
              "statuses": { "type": "string" },
              "issues": { "type": "string", "example": "\"read\"" },
              "organization_administration": {
                "type": "string",
                "example": "\"read\""
              }
            }
          },
          "events": { "type": "array", "items": { "type": "string" } },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" },
          "single_file_name": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "app_slug": { "type": "string", "example": "github-actions" },
          "suspended_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "suspended_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "contact_email": {
            "type": "string",
            "example": "\"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com\"",
            "nullable": true
          }
        },
        "required": [
          "id",
          "app_id",
          "app_slug",
          "target_id",
          "target_type",
          "single_file_name",
          "repository_selection",
          "access_tokens_url",
          "html_url",
          "repositories_url",
          "events",
          "account",
          "permissions",
          "created_at",
          "updated_at"
        ]
      },
      "runner-no-labels": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "os": { "type": "string" },
          "status": { "type": "string" },
          "busy": { "type": "boolean" }
        }
      },
      "organization-full": {
        "title": "Organization Full",
        "description": "Organization Full",
        "type": "object",
        "properties": {
          "login": { "type": "string", "example": "github" },
          "id": { "type": "integer", "example": 1 },
          "node_id": {
            "type": "string",
            "example": "MDEyOk9yZ2FuaXphdGlvbjE="
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/repos"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/events"
          },
          "hooks_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/hooks"
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/issues"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/members{/member}"
          },
          "public_members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/public_members{/member}"
          },
          "avatar_url": {
            "type": "string",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "description": {
            "type": "string",
            "example": "A great organization",
            "nullable": true
          },
          "name": { "type": "string", "example": "github" },
          "company": { "type": "string", "example": "GitHub" },
          "blog": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/blog"
          },
          "location": { "type": "string", "example": "San Francisco" },
          "email": {
            "type": "string",
            "format": "email",
            "example": "octocat@github.com"
          },
          "twitter_username": {
            "type": "string",
            "example": "github",
            "nullable": true
          },
          "is_verified": { "type": "boolean", "example": true },
          "has_organization_projects": { "type": "boolean", "example": true },
          "has_repository_projects": { "type": "boolean", "example": true },
          "public_repos": { "type": "integer", "example": 2 },
          "public_gists": { "type": "integer", "example": 1 },
          "followers": { "type": "integer", "example": 20 },
          "following": { "type": "integer", "example": 0 },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2008-01-14T04:33:35Z"
          },
          "type": { "type": "string", "example": "Organization" },
          "total_private_repos": { "type": "integer", "example": 100 },
          "owned_private_repos": { "type": "integer", "example": 100 },
          "private_gists": {
            "type": "integer",
            "example": 81,
            "nullable": true
          },
          "disk_usage": {
            "type": "integer",
            "example": 10000,
            "nullable": true
          },
          "collaborators": {
            "type": "integer",
            "example": 8,
            "nullable": true
          },
          "billing_email": {
            "type": "string",
            "format": "email",
            "example": "org@example.com",
            "nullable": true
          },
          "plan": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "space": { "type": "integer" },
              "private_repos": { "type": "integer" },
              "filled_seats": { "type": "integer" },
              "seats": { "type": "integer" }
            },
            "required": ["name", "space", "private_repos"]
          },
          "default_repository_permission": {
            "type": "string",
            "nullable": true
          },
          "members_can_create_repositories": {
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "two_factor_requirement_enabled": {
            "type": "boolean",
            "example": true,
            "nullable": true
          },
          "members_allowed_repository_creation_type": {
            "type": "string",
            "example": "all"
          },
          "members_can_create_public_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_private_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_internal_repositories": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_pages": { "type": "boolean", "example": true },
          "members_can_create_public_pages": {
            "type": "boolean",
            "example": true
          },
          "members_can_create_private_pages": {
            "type": "boolean",
            "example": true
          },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description",
          "html_url",
          "has_organization_projects",
          "has_repository_projects",
          "public_repos",
          "public_gists",
          "followers",
          "following",
          "type",
          "created_at",
          "updated_at"
        ]
      },
      "validation-error": {
        "title": "Validation Error",
        "description": "Validation Error",
        "type": "object",
        "required": ["message", "documentation_url"],
        "properties": {
          "message": { "type": "string" },
          "documentation_url": { "type": "string" },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["code"],
              "properties": {
                "resource": { "type": "string" },
                "field": { "type": "string" },
                "message": { "type": "string" },
                "code": { "type": "string" },
                "index": { "type": "integer" },
                "value": {
                  "oneOf": [
                    { "type": "string", "nullable": true },
                    { "type": "integer", "nullable": true },
                    {
                      "type": "array",
                      "nullable": true,
                      "items": { "type": "string" }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "validation-error-simple": {
        "title": "Validation Error Simple",
        "description": "Validation Error Simple",
        "type": "object",
        "required": ["message", "documentation_url"],
        "properties": {
          "message": { "type": "string" },
          "documentation_url": { "type": "string" },
          "errors": { "type": "array", "items": { "type": "string" } }
        }
      },
      "code-scanning-alert-state": {
        "type": "string",
        "description": "State of a code scanning alert.",
        "enum": ["open", "closed", "dismissed", "fixed"]
      },
      "code-scanning-alert-items": {
        "type": "object",
        "properties": {
          "number": { "$ref": "#/components/schemas/alert-number" },
          "created_at": { "$ref": "#/components/schemas/alert-created-at" },
          "url": { "$ref": "#/components/schemas/alert-url" },
          "html_url": { "$ref": "#/components/schemas/alert-html-url" },
          "state": { "$ref": "#/components/schemas/code-scanning-alert-state" },
          "dismissed_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "dismissed_at": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-at"
          },
          "dismissed_reason": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
          },
          "rule": {
            "$ref": "#/components/schemas/code-scanning-alert-rule-summary"
          },
          "tool": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool"
          },
          "instance": {
            "$ref": "#/components/schemas/code-scanning-alert-instance"
          },
          "classification": {
            "$ref": "#/components/schemas/code-scanning-alert-classification"
          }
        },
        "required": [
          "number",
          "created_at",
          "url",
          "html_url",
          "state",
          "dismissed_by",
          "dismissed_at",
          "dismissed_reason",
          "rule",
          "tool",
          "instance",
          "classification"
        ]
      },
      "code-scanning-alert": {
        "type": "object",
        "properties": {
          "number": { "$ref": "#/components/schemas/alert-number" },
          "created_at": { "$ref": "#/components/schemas/alert-created-at" },
          "url": { "$ref": "#/components/schemas/alert-url" },
          "html_url": { "$ref": "#/components/schemas/alert-html-url" },
          "instances": { "deprecated": true },
          "state": { "$ref": "#/components/schemas/code-scanning-alert-state" },
          "dismissed_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "dismissed_at": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-at"
          },
          "dismissed_reason": {
            "$ref": "#/components/schemas/code-scanning-alert-dismissed-reason"
          },
          "rule": { "$ref": "#/components/schemas/code-scanning-alert-rule" },
          "tool": { "$ref": "#/components/schemas/code-scanning-analysis-tool" }
        },
        "required": [
          "number",
          "created_at",
          "url",
          "html_url",
          "state",
          "dismissed_by",
          "dismissed_at",
          "dismissed_reason",
          "rule",
          "tool"
        ]
      },
      "code-scanning-alert-set-state": {
        "description": "Sets the state of the code scanning alert. Can be one of `open` or `dismissed`. You must provide `dismissed_reason` when you set the state to `dismissed`.",
        "type": "string",
        "enum": ["open", "dismissed"]
      },
      "code-scanning-alert-dismissed-reason": {
        "type": "string",
        "description": "**Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.",
        "nullable": true,
        "enum": [null, "false positive", "won't fix", "used in tests"]
      },
      "simple-user": {
        "title": "Simple User",
        "description": "Simple User",
        "type": "object",
        "properties": {
          "name": { "nullable": true, "type": "string" },
          "email": { "nullable": true, "type": "string" },
          "login": { "type": "string", "example": "octocat" },
          "id": { "type": "integer", "example": 1 },
          "node_id": { "type": "string", "example": "MDQ6VXNlcjE=" },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": { "type": "string", "example": "User" },
          "site_admin": { "type": "boolean" },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "enterprise": {
        "title": "Enterprise",
        "description": "An enterprise account",
        "type": "object",
        "properties": {
          "description": {
            "description": "A short description of the enterprise.",
            "type": "string",
            "nullable": true
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/enterprises/octo-business"
          },
          "website_url": {
            "description": "The enterprise's website URL.",
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "id": {
            "description": "Unique identifier of the enterprise",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the enterprise.",
            "type": "string",
            "example": "Octo Business"
          },
          "slug": {
            "description": "The slug url identifier for the enterprise.",
            "type": "string",
            "example": "octo-business"
          },
          "created_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2019-01-26T19:01:12Z"
          },
          "updated_at": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2019-01-26T19:14:43Z"
          },
          "avatar_url": { "type": "string", "format": "uri" }
        },
        "required": [
          "id",
          "node_id",
          "name",
          "slug",
          "html_url",
          "created_at",
          "updated_at",
          "avatar_url"
        ]
      },
      "nullable-simple-user": {
        "title": "Simple User",
        "description": "Simple User",
        "type": "object",
        "properties": {
          "name": { "nullable": true, "type": "string" },
          "email": { "nullable": true, "type": "string" },
          "login": { "type": "string", "example": "octocat" },
          "id": { "type": "integer", "example": 1 },
          "node_id": { "type": "string", "example": "MDQ6VXNlcjE=" },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": { "type": "string", "example": "User" },
          "site_admin": { "type": "boolean" },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ],
        "nullable": true
      },
      "basic-error": {
        "title": "Basic Error",
        "description": "Basic Error",
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "documentation_url": { "type": "string" },
          "url": { "type": "string" },
          "status": { "type": "string" }
        }
      },
      "code-scanning-analysis-tool-name": {
        "type": "string",
        "description": "The name of the tool used to generate the code scanning analysis."
      },
      "code-scanning-analysis-tool-guid": {
        "nullable": true,
        "type": "string",
        "description": "The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data."
      },
      "code-scanning-ref": {
        "type": "string",
        "description": "The full Git reference, formatted as `refs/heads/<branch name>`,\n`refs/pull/<number>/merge`, or `refs/pull/<number>/head`."
      },
      "alert-number": {
        "type": "integer",
        "description": "The security alert number.",
        "readOnly": true,
        "nullable": false
      },
      "alert-created-at": {
        "type": "string",
        "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": false
      },
      "alert-url": {
        "type": "string",
        "description": "The REST API URL of the alert resource.",
        "format": "uri",
        "readOnly": true,
        "nullable": false
      },
      "alert-html-url": {
        "type": "string",
        "description": "The GitHub URL of the alert resource.",
        "format": "uri",
        "readOnly": true,
        "nullable": false
      },
      "code-scanning-alert-dismissed-at": {
        "type": "string",
        "description": "The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": true
      },
      "code-scanning-alert-rule-summary": {
        "type": "object",
        "properties": {
          "id": {
            "nullable": true,
            "type": "string",
            "description": "A unique identifier for the rule used to detect the alert."
          },
          "name": {
            "type": "string",
            "description": "The name of the rule used to detect the alert."
          },
          "severity": {
            "nullable": true,
            "type": "string",
            "description": "The severity of the alert.",
            "enum": ["none", "note", "warning", "error"]
          },
          "description": {
            "type": "string",
            "description": "A short description of the rule used to detect the alert."
          }
        }
      },
      "code-scanning-analysis-tool": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-name"
          },
          "version": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-version"
          },
          "guid": {
            "$ref": "#/components/schemas/code-scanning-analysis-tool-guid"
          }
        }
      },
      "code-scanning-analysis-tool-version": {
        "nullable": true,
        "type": "string",
        "description": "The version of the tool used to generate the code scanning analysis."
      },
      "code-scanning-alert-instance": {
        "type": "object",
        "properties": {
          "ref": { "$ref": "#/components/schemas/code-scanning-ref" },
          "analysis_key": {
            "$ref": "#/components/schemas/code-scanning-analysis-analysis-key"
          },
          "environment": {
            "$ref": "#/components/schemas/code-scanning-alert-environment"
          },
          "state": { "$ref": "#/components/schemas/code-scanning-alert-state" },
          "commit_sha": { "type": "string" },
          "message": {
            "type": "object",
            "properties": { "text": { "type": "string" } }
          },
          "location": {
            "$ref": "#/components/schemas/code-scanning-alert-location"
          },
          "html_url": { "type": "string" },
          "classifications": {
            "type": "array",
            "description": "Classifications that have been applied to the file that triggered the alert.\nFor example identifying it as documentation, or a generated file.",
            "items": {
              "$ref": "#/components/schemas/code-scanning-alert-classification"
            }
          }
        }
      },
      "code-scanning-analysis-analysis-key": {
        "type": "string",
        "description": "Identifies the configuration under which the analysis was executed. For example, in GitHub Actions this includes the workflow filename and job name."
      },
      "code-scanning-alert-environment": {
        "type": "string",
        "description": "Identifies the variable values associated with the environment in which the analysis that generated this alert instance was performed, such as the language that was analyzed."
      },
      "code-scanning-alert-location": {
        "type": "object",
        "description": "Describe a region within a file for the alert.",
        "properties": {
          "path": { "type": "string" },
          "start_line": { "type": "integer" },
          "end_line": { "type": "integer" },
          "start_column": { "type": "integer" },
          "end_column": { "type": "integer" }
        }
      },
      "code-scanning-alert-classification": {
        "type": "string",
        "description": "A classification of the file. For example to identify it as generated.",
        "nullable": true,
        "enum": ["source", "generated", "test", "library"]
      },
      "code-scanning-alert-rule": {
        "type": "object",
        "properties": {
          "id": {
            "nullable": true,
            "type": "string",
            "description": "A unique identifier for the rule used to detect the alert."
          },
          "name": {
            "type": "string",
            "description": "The name of the rule used to detect the alert."
          },
          "severity": {
            "nullable": true,
            "type": "string",
            "description": "The severity of the alert.",
            "enum": ["none", "note", "warning", "error"]
          },
          "description": {
            "type": "string",
            "description": "A short description of the rule used to detect the alert."
          },
          "full_description": {
            "type": "string",
            "description": "description of the rule used to detect the alert."
          },
          "tags": {
            "nullable": true,
            "type": "array",
            "description": "A set of tags applicable for the rule.",
            "items": { "type": "string" }
          },
          "help": {
            "nullable": true,
            "type": "string",
            "description": "Detailed documentation for the rule as GitHub Flavored Markdown."
          }
        }
      }
    },
    "examples": {
      "base-installation-items-ghes-2": {
        "value": [
          {
            "id": 1,
            "account": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
            "repositories_url": "https://api.github.com/installation/repositories",
            "html_url": "https://github.com/organizations/github/settings/installations/1",
            "app_id": 1,
            "target_id": 1,
            "target_type": "Organization",
            "permissions": {
              "checks": "write",
              "metadata": "read",
              "contents": "read"
            },
            "events": ["push", "pull_request"],
            "single_file_name": "config.yaml",
            "repository_selection": "selected",
            "created_at": "2017-07-08T16:18:44-04:00",
            "updated_at": "2017-07-08T16:18:44-04:00",
            "app_slug": "github-actions"
          }
        ]
      },
      "base-installation-ghes-2": {
        "value": {
          "id": 1,
          "account": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
          "repositories_url": "https://api.github.com/installation/repositories",
          "html_url": "https://github.com/organizations/github/settings/installations/1",
          "app_id": 1,
          "target_id": 1,
          "target_type": "Organization",
          "permissions": {
            "checks": "write",
            "metadata": "read",
            "contents": "read"
          },
          "events": ["push", "pull_request"],
          "single_file_name": "config.yaml",
          "repository_selection": "selected",
          "created_at": "2017-07-08T16:18:44-04:00",
          "updated_at": "2017-07-08T16:18:44-04:00",
          "app_slug": "github-actions"
        }
      },
      "runner-paginated-no-labels": {
        "value": {
          "total_count": 2,
          "runners": [
            {
              "id": 23,
              "name": "linux_runner",
              "os": "linux",
              "status": "online",
              "busy": true
            },
            {
              "id": 24,
              "name": "mac_runner",
              "os": "macos",
              "status": "offline",
              "busy": false
            }
          ]
        }
      },
      "runner-no-labels": {
        "value": {
          "id": 23,
          "name": "mac_runner",
          "os": "macos",
          "status": "online",
          "busy": true
        }
      },
      "organization-full": {
        "value": {
          "login": "github",
          "id": 1,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
          "url": "https://api.github.com/orgs/github",
          "repos_url": "https://api.github.com/orgs/github/repos",
          "events_url": "https://api.github.com/orgs/github/events",
          "hooks_url": "https://api.github.com/orgs/github/hooks",
          "issues_url": "https://api.github.com/orgs/github/issues",
          "members_url": "https://api.github.com/orgs/github/members{/member}",
          "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "description": "A great organization",
          "name": "github",
          "company": "GitHub",
          "blog": "https://github.com/blog",
          "location": "San Francisco",
          "email": "octocat@github.com",
          "twitter_username": "github",
          "is_verified": true,
          "has_organization_projects": true,
          "has_repository_projects": true,
          "public_repos": 2,
          "public_gists": 1,
          "followers": 20,
          "following": 0,
          "html_url": "https://github.com/octocat",
          "created_at": "2008-01-14T04:33:35Z",
          "type": "Organization",
          "total_private_repos": 100,
          "owned_private_repos": 100,
          "private_gists": 81,
          "disk_usage": 10000,
          "collaborators": 8,
          "billing_email": "mona@github.com",
          "plan": { "name": "Medium", "space": 400, "private_repos": 20 },
          "default_repository_permission": "read",
          "members_can_create_repositories": true,
          "two_factor_requirement_enabled": true,
          "members_allowed_repository_creation_type": "all",
          "members_can_create_public_repositories": false,
          "members_can_create_private_repositories": false,
          "members_can_create_internal_repositories": false,
          "members_can_create_pages": true,
          "members_can_create_public_pages": true,
          "members_can_create_private_pages": true,
          "updated_at": "2014-03-03T18:58:10Z"
        }
      },
      "installation-ghes-2": {
        "value": {
          "id": 1,
          "account": {
            "login": "github",
            "id": 1,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
            "avatar_url": "https://github.com/images/error/hubot_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/github",
            "html_url": "https://github.com/github",
            "followers_url": "https://api.github.com/users/github/followers",
            "following_url": "https://api.github.com/users/github/following{/other_user}",
            "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github/subscriptions",
            "organizations_url": "https://api.github.com/users/github/orgs",
            "repos_url": "https://api.github.com/orgs/github/repos",
            "events_url": "https://api.github.com/orgs/github/events",
            "received_events_url": "https://api.github.com/users/github/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repository_selection": "all",
          "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
          "repositories_url": "https://api.github.com/installation/repositories",
          "html_url": "https://github.com/organizations/github/settings/installations/1",
          "app_id": 1,
          "target_id": 1,
          "target_type": "Organization",
          "permissions": {
            "checks": "write",
            "metadata": "read",
            "contents": "read"
          },
          "events": ["push", "pull_request"],
          "created_at": "2018-02-09T20:51:14Z",
          "updated_at": "2018-02-09T20:51:14Z",
          "single_file_name": "config.yml",
          "app_slug": "github-actions"
        }
      },
      "installation-paginated-ghes-2": {
        "value": {
          "total_count": 1,
          "installations": [
            {
              "id": 25381,
              "account": {
                "login": "octo-org",
                "id": 6811672,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=",
                "avatar_url": "https://avatars3.githubusercontent.com/u/6811672?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octo-org",
                "html_url": "https://github.com/octo-org",
                "followers_url": "https://api.github.com/users/octo-org/followers",
                "following_url": "https://api.github.com/users/octo-org/following{/other_user}",
                "gists_url": "https://api.github.com/users/octo-org/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octo-org/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octo-org/subscriptions",
                "organizations_url": "https://api.github.com/users/octo-org/orgs",
                "repos_url": "https://api.github.com/users/octo-org/repos",
                "events_url": "https://api.github.com/users/octo-org/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octo-org/received_events",
                "type": "Organization",
                "site_admin": false
              },
              "repository_selection": "selected",
              "access_tokens_url": "https://api.github.com/app/installations/25381/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/octo-org/settings/installations/25381",
              "app_id": 2218,
              "target_id": 6811672,
              "target_type": "Organization",
              "permissions": {
                "deployments": "write",
                "metadata": "read",
                "pull_requests": "read",
                "statuses": "read"
              },
              "events": ["deployment", "deployment_status"],
              "created_at": "2017-05-16T08:47:09.000-07:00",
              "updated_at": "2017-06-06T11:23:23.000-07:00",
              "single_file_name": "config.yml",
              "app_slug": "github-actions"
            }
          ]
        }
      },
      "code-scanning-alert-items": {
        "value": [
          {
            "number": 4,
            "created_at": "2020-02-13T12:29:18Z",
            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/4",
            "html_url": "https://github.com/octocat/hello-world/code-scanning/4",
            "state": "open",
            "dismissed_by": null,
            "dismissed_at": null,
            "dismissed_reason": null,
            "rule": {
              "id": "js/zipslip",
              "severity": "error",
              "description": "Arbitrary file write during zip extraction",
              "name": "js/zipslip"
            },
            "tool": { "name": "CodeQL", "guid": null, "version": "2.4.0" },
            "instance": {
              "ref": "refs/heads/main",
              "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "environment": "{}",
              "state": "open",
              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
              "message": {
                "text": "This path depends on a user-provided value."
              },
              "location": {
                "path": "spec-main/api-session-spec.ts",
                "start_line": 917,
                "end_line": 917,
                "start_column": 7,
                "end_column": 18
              },
              "classifications": ["test"]
            }
          },
          {
            "number": 3,
            "created_at": "2020-02-13T12:29:18Z",
            "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/3",
            "html_url": "https://github.com/octocat/hello-world/code-scanning/3",
            "state": "dismissed",
            "dismissed_by": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "dismissed_at": "2020-02-14T12:29:18Z",
            "dismissed_reason": "false positive",
            "rule": {
              "id": "js/zipslip",
              "severity": "error",
              "description": "Arbitrary file write during zip extraction",
              "name": "js/zipslip"
            },
            "tool": { "name": "CodeQL", "guid": null, "version": "2.4.0" },
            "instance": {
              "ref": "refs/heads/main",
              "analysis_key": ".github/workflows/codeql-analysis.yml:CodeQL-Build",
              "environment": "{}",
              "state": "open",
              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
              "message": {
                "text": "This path depends on a user-provided value."
              },
              "location": {
                "path": "lib/ab12-gen.js",
                "start_line": 917,
                "end_line": 917,
                "start_column": 7,
                "end_column": 18
              },
              "classifications": []
            }
          }
        ]
      },
      "code-scanning-alert": {
        "value": {
          "number": 42,
          "created_at": "2020-06-19T11:21:34Z",
          "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/42",
          "html_url": "https://github.com/octocat/hello-world/code-scanning/42",
          "state": "dismissed",
          "dismissed_by": {
            "login": "octocat",
            "id": 54933897,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "dismissed_at": "2020-02-14T12:29:18Z",
          "dismissed_reason": "false positive",
          "rule": {
            "id": "js/zipslip",
            "severity": "error",
            "security_severity_level": "high",
            "description": "Arbitrary file write during zip extraction (\"Zip Slip\")",
            "name": "js/zipslip",
            "full_description": "Extracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten.",
            "tags": ["security", "external/cwe/cwe-022"],
            "help": "# Arbitrary file write during zip extraction (\"Zip Slip\")\\nExtracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten ..."
          },
          "tool": { "name": "CodeQL", "guid": null, "version": "2.4.0" },
          "instances": [
            {
              "ref": "refs/heads/main",
              "analysis_key": ".github/workflows/codeql-analysis.yml:analyze",
              "environment": "{\"language\":\"javascript\"}",
              "state": "dismissed",
              "commit_sha": "39406e42cb832f683daa691dd652a8dc36ee8930",
              "message": {
                "text": "Unsanitized zip archive item path, which may contain '..', is used in a file system operation."
              },
              "location": {
                "path": "src/badcode.js",
                "start_line": 917,
                "end_line": 917,
                "start_column": 7,
                "end_column": 18
              },
              "classifications": ["test"]
            },
            {
              "ref": "refs/pull/3740/head",
              "analysis_key": ".github/workflows/codeql-analysis.yml:analyze",
              "environment": "{\"language\":\"javascript\"}",
              "state": "dismissed",
              "commit_sha": "42cb832f6839406e3daa691dd652a8dc36ee8930",
              "message": {
                "text": "Unsanitized zip archive item path, which may contain '..', is used in a file system operation."
              },
              "location": {
                "path": "src/badcode.js",
                "start_line": 917,
                "end_line": 917,
                "start_column": 7,
                "end_column": 18
              },
              "classifications": ["test"]
            }
          ]
        }
      },
      "code-scanning-alert-dismissed": {
        "value": {
          "number": 42,
          "created_at": "2020-08-25T21:28:36Z",
          "url": "https://api.github.com/repos/octocat/hello-world/code-scanning/alerts/42",
          "html_url": "https://github.com/octocat/hello-world/code-scanning/42",
          "state": "dismissed",
          "dismissed_by": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "dismissed_at": "2020-09-02T22:34:56Z",
          "dismissed_reason": "false positive",
          "rule": {
            "id": "js/zipslip",
            "severity": "error",
            "security_severity_level": "high",
            "description": "Arbitrary file write during zip extraction (\"Zip Slip\")",
            "name": "js/zipslip",
            "full_description": "Extracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten.",
            "tags": ["security", "external/cwe/cwe-022"],
            "help": "# Arbitrary file write during zip extraction (\"Zip Slip\")\\nExtracting files from a malicious zip archive without validating that the destination file path is within the destination directory can cause files outside the destination directory to be overwritten ..."
          },
          "tool": { "name": "CodeQL", "guid": null, "version": "2.4.0" },
          "instances": [
            {
              "ref": "refs/heads/main",
              "analysis_key": ".github/workflows/codeql-analysis.yml:analyze",
              "environment": "{\"language\":\"javascript\"}",
              "state": "dismissed",
              "commit_sha": "4ed4204b0e16480197a64500c4b5848ddfda9561",
              "message": {
                "text": "Unsanitized zip archive item path, which may contain '..', is used in a file system operation."
              },
              "location": {
                "path": "src/zipslip.js",
                "start_line": 20,
                "end_line": 20,
                "start_column": 37,
                "end_column": 45
              },
              "classifications": ["test"]
            },
            {
              "ref": "refs/pull/3740/head",
              "analysis_key": ".github/workflows/codeql-analysis.yml:analyze",
              "environment": "{\"language\":\"javascript\"}",
              "state": "dismissed",
              "commit_sha": "fdc19ddaf04649b910b7267b82c0997a4bbe165e",
              "message": {
                "text": "Unsanitized zip archive item path, which may contain '..', is used in a file system operation."
              },
              "location": {
                "path": "src/zipslip.js",
                "start_line": 20,
                "end_line": 20,
                "start_column": 37,
                "end_column": 45
              },
              "classifications": ["test"]
            }
          ]
        }
      },
      "base-installation-for-auth-user-paginated-ghes-2": {
        "value": {
          "total_count": 2,
          "installations": [
            {
              "id": 1,
              "account": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/1",
              "app_id": 1,
              "target_id": 1,
              "target_type": "Organization",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": ["push", "pull_request"],
              "single_file_name": "config.yaml",
              "repository_selection": "all",
              "created_at": "2017-07-08T16:18:44-04:00",
              "updated_at": "2017-07-08T16:18:44-04:00",
              "app_slug": "github-actions"
            },
            {
              "id": 3,
              "account": {
                "login": "octocat",
                "id": 2,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "access_tokens_url": "https://api.github.com/installations/1/access_tokens",
              "repositories_url": "https://api.github.com/installation/repositories",
              "html_url": "https://github.com/organizations/github/settings/installations/1",
              "app_id": 1,
              "target_id": 1,
              "target_type": "Organization",
              "permissions": {
                "checks": "write",
                "metadata": "read",
                "contents": "read"
              },
              "events": ["push", "pull_request"],
              "single_file_name": "config.yaml",
              "repository_selection": "all",
              "created_at": "2017-07-08T16:18:44-04:00",
              "updated_at": "2017-07-08T16:18:44-04:00",
              "app_slug": "github-actions"
            }
          ]
        }
      }
    },
    "headers": {
      "link": {
        "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
        "schema": { "type": "string" }
      }
    },
    "responses": {
      "not_found": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/basic-error" }
          }
        }
      },
      "preview_header_missing": {
        "description": "Preview header missing",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["message", "documentation_url"],
              "properties": {
                "message": { "type": "string" },
                "documentation_url": { "type": "string" }
              }
            }
          }
        }
      },
      "conflict": {
        "description": "Conflict",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/basic-error" }
          }
        }
      },
      "forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/basic-error" }
          }
        }
      },
      "service_unavailable": {
        "description": "Service unavailable",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": { "type": "string" },
                "message": { "type": "string" },
                "documentation_url": { "type": "string" }
              }
            }
          }
        }
      },
      "moved_permanently": {
        "description": "Moved permanently",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/basic-error" }
          }
        }
      },
      "not_modified": { "description": "Not modified" },
      "requires_authentication": {
        "description": "Requires authentication",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/basic-error" }
          }
        }
      }
    }
  }
}
