{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.0-development",
    "title": "GitHub's official OpenAPI spec + Octokit extension",
    "description": "OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT"
    },
    "termsOfService": "https://docs.github.com/articles/github-terms-of-service",
    "contact": {
      "name": "Support",
      "url": "https://github.com/octokit/openapi"
    }
  },
  "tags": [
    {
      "name": "actions",
      "description": "Endpoints to manage GitHub Actions using the REST API."
    },
    {
      "name": "activity",
      "description": "Activity APIs provide access to notifications, subscriptions, and timelines."
    },
    {
      "name": "apps",
      "description": "Information for integrations and installations."
    },
    {
      "name": "billing",
      "description": "Monitor charges and usage from Actions and Packages."
    },
    {
      "name": "checks",
      "description": "Rich interactions with checks run by your integrations."
    },
    {
      "name": "code-scanning",
      "description": "Retrieve code scanning alerts from a repository."
    },
    {
      "name": "codes-of-conduct",
      "description": "Insight into codes of conduct for your communities."
    },
    {
      "name": "codespaces",
      "description": "Endpoints to manage Codespaces using the REST API."
    },
    {
      "name": "emojis",
      "description": "List emojis available to use on GitHub."
    },
    {
      "name": "enterprise-admin",
      "description": "Administer a GitHub enterprise."
    },
    {
      "name": "dependabot",
      "description": "Endpoints to manage Dependabot."
    },
    {
      "name": "dependency-graph",
      "description": "Endpoints to access Dependency Graph features."
    },
    {
      "name": "gists",
      "description": "View, modify your gists."
    },
    {
      "name": "git",
      "description": "Raw Git functionality."
    },
    {
      "name": "gitignore",
      "description": "View gitignore templates"
    },
    {
      "name": "interactions",
      "description": "Owner or admin management of users interactions."
    },
    {
      "name": "issues",
      "description": "Interact with GitHub Issues."
    },
    {
      "name": "licenses",
      "description": "View various OSS licenses."
    },
    {
      "name": "markdown",
      "description": "Render GitHub flavored markdown"
    },
    {
      "name": "meta",
      "description": "Endpoints that give information about the API."
    },
    {
      "name": "migrations",
      "description": "Move projects to or from GitHub."
    },
    {
      "name": "oauth-authorizations",
      "description": "Manage access of OAuth applications"
    },
    {
      "name": "oidc",
      "description": "Endpoints to manage GitHub OIDC configuration using the REST API."
    },
    {
      "name": "orgs",
      "description": "Interact with GitHub Orgs."
    },
    {
      "name": "packages",
      "description": "Manage packages for authenticated users and organizations."
    },
    {
      "name": "projects",
      "description": "Interact with GitHub Projects."
    },
    {
      "name": "pulls",
      "description": "Interact with GitHub Pull Requests."
    },
    {
      "name": "rate-limit",
      "description": "Check your current rate limit status"
    },
    {
      "name": "reactions",
      "description": "Interact with reactions to various GitHub entities."
    },
    {
      "name": "repos",
      "description": "Interact with GitHub Repos."
    },
    {
      "name": "scim",
      "description": "Provisioning of GitHub organization membership for SCIM-enabled providers."
    },
    {
      "name": "search",
      "description": "Look for stuff on GitHub."
    },
    {
      "name": "secret-scanning",
      "description": "Retrieve secret scanning alerts from a repository."
    },
    {
      "name": "server-statistics",
      "description": "GHES statistics"
    },
    {
      "name": "teams",
      "description": "Interact with GitHub Teams."
    },
    {
      "name": "users",
      "description": "Interact with and view information about users and also current user."
    }
  ],
  "servers": [
    {
      "url": "{protocol}://{hostname}/api/v3",
      "variables": {
        "hostname": {
          "description": "Self-hosted Enterprise Server or Enterprise Cloud hostname",
          "default": "HOSTNAME"
        },
        "protocol": {
          "description": "Self-hosted Enterprise Server or Enterprise Cloud protocol",
          "default": "http"
        }
      }
    }
  ],
  "externalDocs": {
    "description": "GitHub Enterprise Developer Docs",
    "url": "https://docs.github.com/enterprise-server@3.4/rest/"
  },
  "paths": {
    "/enterprises/{enterprise}/actions/runner-groups": {
      "get": {
        "summary": "List self-hosted runner groups for an enterprise",
        "description": "Lists all self-hosted runner groups for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/list-self-hosted-runner-groups-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#list-self-hosted-runner-groups-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "runner_groups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner-groups-enterprise"
                      }
                    }
                  },
                  "required": [
                    "total_count",
                    "runner_groups"
                  ]
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-groups-enterprise"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": false,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      },
      "post": {
        "summary": "Create a self-hosted runner group for an enterprise",
        "description": "Creates a new self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/create-self-hosted-runner-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#create-self-hosted-runner-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the runner group.",
                    "type": "string"
                  },
                  "visibility": {
                    "description": "Visibility of a runner group. You can select all organizations or select individual organization.",
                    "type": "string",
                    "enum": [
                      "selected",
                      "all"
                    ]
                  },
                  "selected_organization_ids": {
                    "description": "List of organization IDs that can access the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the organization."
                    }
                  },
                  "runners": {
                    "description": "List of runner IDs to add to the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the runner."
                    }
                  },
                  "allows_public_repositories": {
                    "description": "Whether the runner group can be used by `public` repositories.",
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected",
                    "selected_organization_ids": [
                      32,
                      91
                    ],
                    "runners": [
                      9,
                      2
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-enterprise"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group-enterprise"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": false,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}": {
      "get": {
        "summary": "Get a self-hosted runner group for an enterprise",
        "description": "Gets a specific self-hosted runner group for an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/get-self-hosted-runner-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#get-a-self-hosted-runner-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-enterprise"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group-enterprise"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": false,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a self-hosted runner group for an enterprise",
        "description": "Updates the `name` and `visibility` of a self-hosted runner group in an enterprise.\n\nYou must authenticate using an access token with the `manage_runners:enterprise` scope to use this endpoint.",
        "operationId": "enterprise-admin/update-self-hosted-runner-group-for-enterprise",
        "tags": [
          "enterprise-admin"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#update-a-self-hosted-runner-group-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the runner group.",
                    "type": "string"
                  },
                  "visibility": {
                    "description": "Visibility of a runner group. You can select all organizations or select individual organizations.",
                    "type": "string",
                    "enum": [
                      "selected",
                      "all"
                    ],
                    "default": "all"
                  },
                  "allows_public_repositories": {
                    "description": "Whether the runner group can be used by `public` repositories.",
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-enterprise"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group-update-enterprise"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": false,
          "githubCloudOnly": false,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/enterprises/{enterprise}/secret-scanning/alerts": {
      "get": {
        "summary": "List secret scanning alerts for an enterprise",
        "description": "Lists secret scanning alerts for eligible repositories in an enterprise, from newest to oldest.\nTo use this endpoint, you must be a member of the enterprise, and you must use an access token with the `repo` scope or `security_events` scope. Alerts are only returned for organizations in the enterprise for which you are an organization owner or a [security manager](https://docs.github.com/enterprise-server@3.4/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).",
        "tags": [
          "secret-scanning"
        ],
        "operationId": "secret-scanning/list-alerts-for-enterprise",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/secret-scanning#list-secret-scanning-alerts-for-an-enterprise"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/enterprise"
          },
          {
            "$ref": "#/components/parameters/secret-scanning-alert-state"
          },
          {
            "$ref": "#/components/parameters/secret-scanning-alert-secret-type"
          },
          {
            "$ref": "#/components/parameters/secret-scanning-alert-resolution"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/pagination-before"
          },
          {
            "$ref": "#/components/parameters/pagination-after"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/organization-secret-scanning-alert"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-secret-scanning-alert-list"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "503": {
            "$ref": "#/components/responses/service_unavailable"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "secret-scanning",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "summary": "List notifications for the authenticated user",
        "description": "List all notifications for the current user, sorted by most recently updated.",
        "tags": [
          "activity"
        ],
        "operationId": "activity/list-notifications-for-authenticated-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/activity#list-notifications-for-the-authenticated-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/all"
          },
          {
            "$ref": "#/components/parameters/participating"
          },
          {
            "$ref": "#/components/parameters/since"
          },
          {
            "$ref": "#/components/parameters/before"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/thread"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/thread-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "activity",
          "subcategory": "notifications"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/notifications/threads/{thread_id}": {
      "get": {
        "summary": "Get a thread",
        "description": "",
        "tags": [
          "activity"
        ],
        "operationId": "activity/get-thread",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/activity#get-a-thread"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/thread-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/thread"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/thread"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "activity",
          "subcategory": "notifications"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/runner-groups": {
      "get": {
        "summary": "List self-hosted runner groups for an organization",
        "description": "Lists all self-hosted runner groups configured in an organization and inherited from an enterprise.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/list-self-hosted-runner-groups-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#list-self-hosted-runner-groups-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "runner_groups"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "runner_groups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/runner-groups-org"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-groups-org"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": false,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      },
      "post": {
        "summary": "Create a self-hosted runner group for an organization",
        "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nCreates a new self-hosted runner group for an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/create-self-hosted-runner-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#create-a-self-hosted-runner-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the runner group.",
                    "type": "string"
                  },
                  "visibility": {
                    "description": "Visibility of a runner group. You can select all repositories, select individual repositories, or limit access to private repositories.",
                    "type": "string",
                    "enum": [
                      "selected",
                      "all",
                      "private"
                    ],
                    "default": "all"
                  },
                  "selected_repository_ids": {
                    "description": "List of repository IDs that can access the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the repository."
                    }
                  },
                  "runners": {
                    "description": "List of runner IDs to add to the runner group.",
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "description": "Unique identifier of the runner."
                    }
                  },
                  "allows_public_repositories": {
                    "description": "Whether the runner group can be used by `public` repositories.",
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected",
                    "selected_repository_ids": [
                      32,
                      91
                    ],
                    "runners": [
                      9,
                      2
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-org"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": false,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/runner-groups/{runner_group_id}": {
      "get": {
        "summary": "Get a self-hosted runner group for an organization",
        "description": "Gets a specific self-hosted runner group for an organization.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/get-self-hosted-runner-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#get-a-self-hosted-runner-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-org"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group-item"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": false,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a self-hosted runner group for an organization",
        "description": "Updates the `name` and `visibility` of a self-hosted runner group in an organization.\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/update-self-hosted-runner-group-for-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#update-a-self-hosted-runner-group-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the runner group.",
                    "type": "string"
                  },
                  "visibility": {
                    "description": "Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories.",
                    "type": "string",
                    "enum": [
                      "selected",
                      "all",
                      "private"
                    ]
                  },
                  "allows_public_repositories": {
                    "description": "Whether the runner group can be used by `public` repositories.",
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "name": "Expensive hardware runners",
                    "visibility": "selected"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runner-groups-org"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/runner-group"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": false,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories": {
      "get": {
        "summary": "List repository access to a self-hosted runner group in an organization",
        "description": "The self-hosted runner groups REST API is available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see \"[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products).\"\n\nLists the repositories with access to a self-hosted runner group configured in an organization.\n\nYou must authenticate using an access token with the `admin:org` scope to use this endpoint.",
        "operationId": "actions/list-repo-access-to-self-hosted-runner-group-in-org",
        "tags": [
          "actions"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#list-repository-access-to-a-self-hosted-runner-group-in-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/runner-group-id"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "repositories"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "number"
                    },
                    "repositories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/minimal-repository"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-paginated"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": false,
          "category": "actions",
          "subcategory": "self-hosted-runner-groups"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/actions/secrets/{secret_name}/repositories": {
      "get": {
        "summary": "List selected repositories for an organization secret",
        "description": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `selected`. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/list-selected-repos-for-org-secret",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#list-selected-repositories-for-an-organization-secret"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/secret-name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "repositories"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "repositories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/minimal-repository"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/public-repository-paginated"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "actions",
          "subcategory": "secrets"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/dependabot/secrets/{secret_name}/repositories": {
      "get": {
        "summary": "List selected repositories for an organization secret",
        "description": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `selected`. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `dependabot_secrets` organization permission to use this endpoint.",
        "tags": [
          "dependabot"
        ],
        "operationId": "dependabot/list-selected-repos-for-org-secret",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/dependabot#list-selected-repositories-for-an-organization-secret"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/secret-name"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "repositories"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "repositories": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/minimal-repository"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/public-repository-paginated"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "dependabot",
          "subcategory": "secrets"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/repos": {
      "get": {
        "summary": "List organization repositories",
        "description": "Lists repositories for the specified organization.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/list-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#list-organization-repositories"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "name": "type",
            "description": "Specifies the types of repositories you want returned. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `type` can also be `internal`. However, the `internal` value is not yet supported when a GitHub App calls this API with an installation access token.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "public",
                "private",
                "forks",
                "sources",
                "member",
                "internal"
              ]
            }
          },
          {
            "name": "sort",
            "description": "The property to sort the results by.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated",
                "pushed",
                "full_name"
              ],
              "default": "created"
            }
          },
          {
            "name": "direction",
            "description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/secret-scanning/alerts": {
      "get": {
        "summary": "List secret scanning alerts for an organization",
        "description": "Lists secret scanning alerts for eligible repositories in an organization, from newest to oldest.\nTo use this endpoint, you must be an administrator or security manager for the organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.",
        "tags": [
          "secret-scanning"
        ],
        "operationId": "secret-scanning/list-alerts-for-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/secret-scanning#list-secret-scanning-alerts-for-an-organization"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/secret-scanning-alert-state"
          },
          {
            "$ref": "#/components/parameters/secret-scanning-alert-secret-type"
          },
          {
            "$ref": "#/components/parameters/secret-scanning-alert-resolution"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/organization-secret-scanning-alert"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-secret-scanning-alert-list"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          },
          "503": {
            "$ref": "#/components/responses/service_unavailable"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "secret-scanning",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/teams/{team_slug}/repos": {
      "get": {
        "summary": "List team repositories",
        "description": "Lists a team's repositories visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/list-repos-in-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/teams#list-team-repositories"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/team-slug"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "teams",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}": {
      "get": {
        "summary": "Check team permissions for a repository",
        "description": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@3.4/rest/overview/media-types/) via the `application/vnd.github.v3.repository+json` accept header.\n\nIf a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/check-permissions-for-repo-in-org",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/teams/#check-team-permissions-for-a-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/org"
          },
          {
            "$ref": "#/components/parameters/team-slug"
          },
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "responses": {
          "200": {
            "description": "Alternative response with repository permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team-repository"
                },
                "examples": {
                  "alternative-response-with-repository-permissions": {
                    "$ref": "#/components/examples/team-repository-alternative-response-with-repository-permissions"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Response if team has permission for the repository. This is the response when the repository media type hasn't been provded in the Accept header."
          },
          "404": {
            "description": "Not Found if team does not have permission for the repository"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "teams",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/reactions/{reaction_id}": {
      "delete": {
        "summary": "Delete a reaction (Legacy)",
        "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Reactions API. We recommend migrating your existing code to use the new delete reactions endpoints. For more information, see this [blog post](https://developer.github.com/changes/2020-02-26-new-delete-reactions-endpoints/).\n\nOAuth access tokens require the `write:discussion` [scope](https://docs.github.com/enterprise-server@3.4/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://docs.github.com/enterprise-server@3.4/rest/reference/teams#discussions) or [team discussion comment](https://docs.github.com/enterprise-server@3.4/rest/reference/teams#discussion-comments).",
        "tags": [
          "reactions"
        ],
        "operationId": "reactions/delete-legacy",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/reactions/#delete-a-reaction-legacy"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/reaction-id"
          }
        ],
        "responses": {
          "204": {
            "description": "Response"
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "410": {
            "$ref": "#/components/responses/gone"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "removalDate": "2021-02-21",
          "deprecationDate": "2020-02-26",
          "category": "reactions",
          "subcategory": null
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "added"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/actions/runs": {
      "get": {
        "summary": "List workflow runs for a repository",
        "description": "Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/list-workflow-runs-for-repo",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#list-workflow-runs-for-a-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/actor"
          },
          {
            "$ref": "#/components/parameters/workflow-run-branch"
          },
          {
            "$ref": "#/components/parameters/event"
          },
          {
            "$ref": "#/components/parameters/workflow-run-status"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/created"
          },
          {
            "$ref": "#/components/parameters/exclude-pull-requests"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "workflow_runs"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "workflow_runs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/workflow-run"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/workflow-run-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "actions",
          "subcategory": "workflow-runs"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/actions/runs/{run_id}": {
      "get": {
        "summary": "Get a workflow run",
        "description": "Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/get-workflow-run",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#get-a-workflow-run"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/run-id"
          },
          {
            "$ref": "#/components/parameters/exclude-pull-requests"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflow-run"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/workflow-run"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "actions",
          "subcategory": "workflow-runs"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs": {
      "get": {
        "summary": "List workflow runs",
        "description": "List all workflow runs for a workflow. You can replace `workflow_id` with the workflow file name. For example, you could use `main.yaml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.",
        "tags": [
          "actions"
        ],
        "operationId": "actions/list-workflow-runs",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/actions#list-workflow-runs"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/workflow-id"
          },
          {
            "$ref": "#/components/parameters/actor"
          },
          {
            "$ref": "#/components/parameters/workflow-run-branch"
          },
          {
            "$ref": "#/components/parameters/event"
          },
          {
            "$ref": "#/components/parameters/workflow-run-status"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/created"
          },
          {
            "$ref": "#/components/parameters/exclude-pull-requests"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "workflow_runs"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "workflow_runs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/workflow-run"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/workflow-run-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "actions",
          "subcategory": "workflow-runs"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/check-suites": {
      "post": {
        "summary": "Create a check suite",
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nBy default, check suites are automatically created when you create a [check run](https://docs.github.com/enterprise-server@3.4/rest/reference/checks#check-runs). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Update repository preferences for check suites](https://docs.github.com/enterprise-server@3.4/rest/reference/checks#update-repository-preferences-for-check-suites)\". Your GitHub App must have the `checks:write` permission to create check suites.",
        "tags": [
          "checks"
        ],
        "operationId": "checks/create-suite",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/checks#create-a-check-suite"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "head_sha": {
                    "type": "string",
                    "description": "The sha of the head commit."
                  }
                },
                "required": [
                  "head_sha"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "head_sha": "d6fde92930d4715a2b49857d24b940956b26d2d3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response when the suite already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check-suite"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/check-suite"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Response when the suite was created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check-suite"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/check-suite"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "checks",
          "subcategory": "suites"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/check-suites/preferences": {
      "patch": {
        "summary": "Update repository preferences for check suites",
        "description": "Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/enterprise-server@3.4/rest/reference/checks#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites.",
        "tags": [
          "checks"
        ],
        "operationId": "checks/set-suites-preferences",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/checks#update-repository-preferences-for-check-suites"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "auto_trigger_checks": {
                    "type": "array",
                    "description": "Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default. See the [`auto_trigger_checks` object](https://docs.github.com/enterprise-server@3.4/rest/reference/checks#auto_trigger_checks-object) description for details.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "app_id": {
                          "type": "integer",
                          "description": "The `id` of the GitHub App."
                        },
                        "setting": {
                          "type": "boolean",
                          "description": "Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.",
                          "default": true
                        }
                      },
                      "required": [
                        "app_id",
                        "setting"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "auto_trigger_checks": [
                      {
                        "app_id": 4,
                        "setting": false
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check-suite-preference"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/check-suite-preference"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "checks",
          "subcategory": "suites"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/check-suites/{check_suite_id}": {
      "get": {
        "summary": "Get a check suite",
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nGets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
        "tags": [
          "checks"
        ],
        "operationId": "checks/get-suite",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/checks#get-a-check-suite"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/check-suite-id"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/check-suite"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/check-suite"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "checks",
          "subcategory": "suites"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/collaborators": {
      "get": {
        "summary": "List repository collaborators",
        "description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\nOrganization members with write, maintain, or admin privileges on the organization-owned repository can use this endpoint.\n\nTeam members will include the members of child teams.\n\nYou must authenticate using an access token with the `read:org` and `repo` scopes with push access to use this\nendpoint. GitHub Apps must have the `members` organization permission and `metadata` repository permission to use this\nendpoint.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/list-collaborators",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#list-repository-collaborators"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "name": "affiliation",
            "description": "Filter collaborators returned by their affiliation. `outside` means all outside collaborators of an organization-owned repository. `direct` means all collaborators with permissions to an organization-owned repository, regardless of organization membership status. `all` means all collaborators the authenticated user can see.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "outside",
                "direct",
                "all"
              ],
              "default": "all"
            }
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/collaborator"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/collaborator-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": "collaborators"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/collaborators/{username}": {
      "put": {
        "summary": "Add a repository collaborator",
        "description": "This endpoint triggers [notifications](https://docs.github.com/enterprise-server@3.4/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. See \"[Secondary rate limits](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#secondary-rate-limits)\" and \"[Dealing with secondary rate limits](https://docs.github.com/enterprise-server@3.4/rest/guides/best-practices-for-integrators#dealing-with-secondary-rate-limits)\" for details.\n\nFor more information on permission levels, see \"[Repository permission levels for an organization](https://docs.github.com/enterprise-server@3.4/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\". There are restrictions on which permissions can be granted to organization members when an organization base role is in place. In this case, the permission being given must be equal to or higher than the org base permission. Otherwise, the request will fail with:\n\n```\nCannot assign {member} permission of {role name}\n```\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#http-verbs).\"\n\nThe invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://docs.github.com/enterprise-server@3.4/rest/reference/repos#invitations).\n\n**Updating an existing collaborator's permission level**\n\nThe endpoint can also be used to change the permissions of an existing collaborator without first removing and re-adding the collaborator. To change the permissions, use the same endpoint and pass a different `permission` parameter. The response will be a `204`, with no other indication that the permission level changed.\n\n**Rate limits**\n\nYou are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/add-collaborator",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#add-a-repository-collaborator"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/username"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permission": {
                    "type": "string",
                    "description": "The permission to grant the collaborator. **Only valid on organization-owned repositories.**",
                    "enum": [
                      "pull",
                      "push",
                      "admin",
                      "maintain",
                      "triage"
                    ],
                    "default": "push"
                  }
                }
              },
              "examples": {
                "new-invitation-is-created": {
                  "summary": "Add a collaborator with triage permissions",
                  "value": {
                    "permission": "triage"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response when a new invitation is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/repository-invitation"
                },
                "examples": {
                  "new-invitation-is-created": {
                    "$ref": "#/components/examples/repository-invitation-response-when-a-new-invitation-is-created"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Response when:\n- an existing collaborator is added as a collaborator\n- an organization member is added as an individual collaborator\n- an existing team member (whose team is also a repository collaborator) is added as an individual collaborator"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "triggersNotification": true,
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": "collaborators"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/collaborators/{username}/permission": {
      "get": {
        "summary": "Get repository permissions for a user",
        "description": "Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/get-collaborator-permission-level",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#get-repository-permissions-for-a-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/username"
          }
        ],
        "responses": {
          "200": {
            "description": "if user has admin permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/repository-collaborator-permission"
                },
                "examples": {
                  "response-if-user-has-admin-permissions": {
                    "$ref": "#/components/examples/repository-collaborator-permission-response-if-user-has-admin-permissions"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": "collaborators"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/commits/{ref}/check-suites": {
      "get": {
        "summary": "List check suites for a Git reference",
        "description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nLists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository.",
        "tags": [
          "checks"
        ],
        "operationId": "checks/list-suites-for-ref",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/checks#list-check-suites-for-a-git-reference"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "name": "ref",
            "description": "ref parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-multi-segment": true
          },
          {
            "name": "app_id",
            "description": "Filters check suites by GitHub App `id`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "$ref": "#/components/parameters/check-name"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "check_suites"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "check_suites": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/check-suite"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/check-suite-paginated"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "checks",
          "subcategory": "suites"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/commits/{ref}/status": {
      "get": {
        "summary": "Get the combined status for a specific reference",
        "description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`",
        "tags": [
          "repos"
        ],
        "operationId": "repos/get-combined-status-for-ref",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#get-the-combined-status-for-a-specific-reference"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "name": "ref",
            "description": "ref parameter",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-multi-segment": true
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/combined-commit-status"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/combined-commit-status"
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": "statuses"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/forks": {
      "get": {
        "summary": "List forks",
        "description": "",
        "tags": [
          "repos"
        ],
        "operationId": "repos/list-forks",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#list-forks"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "name": "sort",
            "description": "The sort order. Can be either `newest`, `oldest`, or `stargazers`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "newest",
                "oldest",
                "stargazers",
                "watchers"
              ],
              "default": "newest"
            }
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-items-2"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/bad_request"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": "forks"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/invitations": {
      "get": {
        "summary": "List repository invitations",
        "description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/list-invitations",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#list-repository-invitations"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/repository-invitation"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/repository-invitation-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": "invitations"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/invitations/{invitation_id}": {
      "patch": {
        "summary": "Update a repository invitation",
        "description": "",
        "tags": [
          "repos"
        ],
        "operationId": "repos/update-invitation",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#update-a-repository-invitation"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/invitation-id"
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "permissions": {
                    "type": "string",
                    "description": "The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.",
                    "enum": [
                      "read",
                      "write",
                      "maintain",
                      "triage",
                      "admin"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/repository-invitation"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/repository-invitation"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": "invitations"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/notifications": {
      "get": {
        "summary": "List repository notifications for the authenticated user",
        "description": "List all notifications for the current user.",
        "tags": [
          "activity"
        ],
        "operationId": "activity/list-repo-notifications-for-authenticated-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/activity#list-repository-notifications-for-the-authenticated-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/all"
          },
          {
            "$ref": "#/components/parameters/participating"
          },
          {
            "$ref": "#/components/parameters/since"
          },
          {
            "$ref": "#/components/parameters/before"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/thread"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/thread-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "activity",
          "subcategory": "notifications"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/secret-scanning/alerts": {
      "get": {
        "summary": "List secret scanning alerts for a repository",
        "description": "Lists secret scanning alerts for a private repository, from newest to oldest. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.",
        "tags": [
          "secret-scanning"
        ],
        "operationId": "secret-scanning/list-alerts-for-repo",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/secret-scanning#list-secret-scanning-alerts-for-a-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/secret-scanning-alert-state"
          },
          {
            "$ref": "#/components/parameters/secret-scanning-alert-secret-type"
          },
          {
            "$ref": "#/components/parameters/secret-scanning-alert-resolution"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per-page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/secret-scanning-alert"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/secret-scanning-alert-list"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Repository is public or secret scanning is disabled for the repository"
          },
          "503": {
            "$ref": "#/components/responses/service_unavailable"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "secret-scanning",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}": {
      "get": {
        "summary": "Get a secret scanning alert",
        "description": "Gets a single secret scanning alert detected in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` read permission to use this endpoint.",
        "tags": [
          "secret-scanning"
        ],
        "operationId": "secret-scanning/get-alert",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/secret-scanning#get-a-secret-scanning-alert"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/alert-number"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secret-scanning-alert"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/secret-scanning-alert-open"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "404": {
            "description": "Repository is public, or secret scanning is disabled for the repository, or the resource is not found"
          },
          "503": {
            "$ref": "#/components/responses/service_unavailable"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "secret-scanning",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      },
      "patch": {
        "summary": "Update a secret scanning alert",
        "description": "Updates the status of a secret scanning alert in a private repository. To use this endpoint, you must be an administrator for the repository or organization, and you must use an access token with the `repo` scope or `security_events` scope.\n\nGitHub Apps must have the `secret_scanning_alerts` write permission to use this endpoint.",
        "operationId": "secret-scanning/update-alert",
        "tags": [
          "secret-scanning"
        ],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/secret-scanning#update-a-secret-scanning-alert"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          },
          {
            "$ref": "#/components/parameters/alert-number"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "state": {
                    "$ref": "#/components/schemas/secret-scanning-alert-state"
                  },
                  "resolution": {
                    "$ref": "#/components/schemas/secret-scanning-alert-resolution"
                  }
                },
                "required": [
                  "state"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "state": "resolved",
                    "resolution": "false_positive"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/secret-scanning-alert"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/secret-scanning-alert-resolved"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Repository is public, or secret scanning is disabled for the repository, or the resource is not found"
          },
          "422": {
            "description": "State does not match the resolution"
          },
          "503": {
            "$ref": "#/components/responses/service_unavailable"
          }
        },
        "x-github": {
          "enabledForGitHubApps": true,
          "githubCloudOnly": false,
          "category": "secret-scanning"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repos/{owner}/{repo}/transfer": {
      "post": {
        "summary": "Transfer a repository",
        "description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://docs.github.com/articles/about-repository-transfers/).",
        "tags": [
          "repos"
        ],
        "operationId": "repos/transfer",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#transfer-a-repository"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "new_owner": {
                    "type": "string",
                    "description": "The username or organization name the repository will be transferred to."
                  },
                  "team_ids": {
                    "type": "array",
                    "description": "ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "new_owner"
                ]
              },
              "examples": {
                "default": {
                  "value": {
                    "new_owner": "github",
                    "team_ids": [
                      12,
                      345
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/minimal-repository"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/repositories": {
      "get": {
        "summary": "List public repositories",
        "description": "Lists all public repositories in the order that they were created.\n\nNote:\n- For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.\n- Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#link-header) to get the URL for the next page of repositories.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/list-public",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#list-public-repositories"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/since-repo"
          },
          {
            "name": "visibility",
            "description": "Specifies the types of repositories to return. This endpoint will only list repositories available to all users on the enterprise.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "public",
              "example": "all",
              "enum": [
                "all",
                "public"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/public-repository-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "example": "<https://api.github.com/repositories?since=364>; rel=\"next\"",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/search/code": {
      "get": {
        "summary": "Search code",
        "description": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/enterprise-server@3.4/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.",
        "tags": [
          "search"
        ],
        "operationId": "search/code",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/search#search-code"
        },
        "parameters": [
          {
            "name": "q",
            "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub Enterprise Server. The REST API supports the same qualifiers as the web interface for GitHub Enterprise Server. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@3.4/rest/reference/search#constructing-a-search-query). See \"[Searching code](https://docs.github.com/enterprise-server@3.4/search-github/searching-on-github/searching-code)\" for a detailed list of qualifiers.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "description": "Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub Enterprise Server search infrastructure. Default: [best match](https://docs.github.com/enterprise-server@3.4/rest/reference/search#ranking-search-results)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "indexed"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "incomplete_results",
                    "items"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "incomplete_results": {
                      "type": "boolean"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/code-search-result-item"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/code-search-result-item-paginated"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "422": {
            "$ref": "#/components/responses/validation_failed"
          },
          "503": {
            "$ref": "#/components/responses/service_unavailable"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "search",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/search/commits": {
      "get": {
        "summary": "Search commits",
        "description": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://docs.github.com/enterprise-server@3.4/rest/reference/search#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`",
        "tags": [
          "search"
        ],
        "operationId": "search/commits",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/search#search-commits"
        },
        "parameters": [
          {
            "name": "q",
            "description": "The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub Enterprise Server. The REST API supports the same qualifiers as the web interface for GitHub Enterprise Server. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@3.4/rest/reference/search#constructing-a-search-query). See \"[Searching commits](https://docs.github.com/enterprise-server@3.4/search-github/searching-on-github/searching-commits)\" for a detailed list of qualifiers.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "description": "Sorts the results of your query by `author-date` or `committer-date`. Default: [best match](https://docs.github.com/enterprise-server@3.4/rest/reference/search#ranking-search-results)",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "author-date",
                "committer-date"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "total_count",
                    "incomplete_results",
                    "items"
                  ],
                  "properties": {
                    "total_count": {
                      "type": "integer"
                    },
                    "incomplete_results": {
                      "type": "boolean"
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/commit-search-result-item"
                      }
                    }
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/commit-search-result-item-paginated"
                  }
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "search",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/teams/{team_id}/repos": {
      "get": {
        "summary": "List team repositories (Legacy)",
        "description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/enterprise-server@3.4/rest/reference/teams#list-team-repositories) endpoint.",
        "tags": [
          "teams"
        ],
        "operationId": "teams/list-repos-legacy",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/teams/#list-team-repositories-legacy"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/team-id"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "removalDate": "2021-02-01",
          "deprecationDate": "2020-01-21",
          "category": "teams",
          "subcategory": null
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/teams/{team_id}/repos/{owner}/{repo}": {
      "get": {
        "summary": "Check team permissions for a repository (Legacy)",
        "description": "**Note**: Repositories inherited through a parent team will also be checked.\n\n**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/enterprise-server@3.4/rest/reference/teams#check-team-permissions-for-a-repository) endpoint.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/enterprise-server@3.4/rest/overview/media-types/) via the `Accept` header:",
        "tags": [
          "teams"
        ],
        "operationId": "teams/check-permissions-for-repo-legacy",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/teams/#check-team-permissions-for-a-repository-legacy"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/team-id"
          },
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/repo"
          }
        ],
        "responses": {
          "200": {
            "description": "Alternative response with extra repository information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/team-repository"
                },
                "examples": {
                  "alternative-response-with-extra-repository-information": {
                    "$ref": "#/components/examples/team-repository-alternative-response-with-extra-repository-information"
                  }
                }
              }
            }
          },
          "204": {
            "description": "Response if repository is managed by this team"
          },
          "404": {
            "description": "Not Found if repository is not managed by this team"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "removalDate": "2021-02-01",
          "deprecationDate": "2020-01-21",
          "category": "teams",
          "subcategory": null
        },
        "deprecated": true,
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/user/migrations/{migration_id}/repositories": {
      "get": {
        "summary": "List repositories for a user migration",
        "description": "Lists all the repositories for this user migration.",
        "tags": [
          "migrations"
        ],
        "operationId": "migrations/list-repos-for-authenticated-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/migrations#list-repositories-for-a-user-migration"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/migration-id"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "migrations",
          "subcategory": "users"
        },
        "x-octokit": {
          "changes": [
            {
              "type": "OPERATION",
              "date": "2021-10-05",
              "before": {
                "operationId": "migrations/list-repos-for-user"
              }
            }
          ],
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/user/repository_invitations": {
      "get": {
        "summary": "List repository invitations for the authenticated user",
        "description": "When authenticating as a user, this endpoint will list all currently open repository invitations for that user.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/list-invitations-for-authenticated-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#list-repository-invitations-for-the-authenticated-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/repository-invitation"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/repository-invitation-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          },
          "404": {
            "$ref": "#/components/responses/not_found"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "repos",
          "subcategory": "invitations"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/user/subscriptions": {
      "get": {
        "summary": "List repositories watched by the authenticated user",
        "description": "Lists repositories the authenticated user is watching.",
        "tags": [
          "activity"
        ],
        "operationId": "activity/list-watched-repos-for-authenticated-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/activity#list-repositories-watched-by-the-authenticated-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/not_modified"
          },
          "401": {
            "$ref": "#/components/responses/requires_authentication"
          },
          "403": {
            "$ref": "#/components/responses/forbidden"
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "category": "activity",
          "subcategory": "watching"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/users/{username}/repos": {
      "get": {
        "summary": "List repositories for a user",
        "description": "Lists public repositories for the specified user. Note: For GitHub AE, this endpoint will list internal repositories for the specified user.",
        "tags": [
          "repos"
        ],
        "operationId": "repos/list-for-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/repos#list-repositories-for-a-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/username"
          },
          {
            "name": "type",
            "description": "Limit results to repositories of the specified type.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "owner",
                "member"
              ],
              "default": "owner"
            }
          },
          {
            "name": "sort",
            "description": "The property to sort the results by.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "updated",
                "pushed",
                "full_name"
              ],
              "default": "full_name"
            }
          },
          {
            "name": "direction",
            "description": "The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "repos",
          "subcategory": null
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    },
    "/users/{username}/subscriptions": {
      "get": {
        "summary": "List repositories watched by a user",
        "description": "Lists repositories a user is watching.",
        "tags": [
          "activity"
        ],
        "operationId": "activity/list-repos-watched-by-user",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/enterprise-server@3.4/rest/reference/activity#list-repositories-watched-by-a-user"
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/username"
          },
          {
            "$ref": "#/components/parameters/per-page"
          },
          {
            "$ref": "#/components/parameters/page"
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/minimal-repository"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/minimal-repository-items"
                  }
                }
              }
            },
            "headers": {
              "Link": {
                "$ref": "#/components/headers/link"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": true,
          "category": "activity",
          "subcategory": "watching"
        },
        "x-octokit": {
          "diff": {
            "ghes-3.5": {
              "type": "changed"
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "enterprise": {
        "name": "enterprise",
        "description": "The slug version of the enterprise name. You can also substitute this value with the enterprise id.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "per-page": {
        "name": "per_page",
        "description": "The number of results per page (max 100).",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 30
        }
      },
      "page": {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "runner-group-id": {
        "name": "runner_group_id",
        "description": "Unique identifier of the self-hosted runner group.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "secret-scanning-alert-state": {
        "name": "state",
        "in": "query",
        "description": "Set to `open` or `resolved` to only list secret scanning alerts in a specific state.",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "open",
            "resolved"
          ]
        }
      },
      "secret-scanning-alert-secret-type": {
        "name": "secret_type",
        "in": "query",
        "description": "A comma-separated list of secret types to return. By default all secret types are returned.\nSee \"[Secret scanning patterns](https://docs.github.com/enterprise-server@3.4/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)\"\nfor a complete list of secret types.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "secret-scanning-alert-resolution": {
        "name": "resolution",
        "in": "query",
        "description": "A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resolutions are `false_positive`, `wont_fix`, `revoked`, `pattern_edited`, `pattern_deleted` or `used_in_tests`.",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "pagination-before": {
        "name": "before",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "pagination-after": {
        "name": "after",
        "description": "A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "all": {
        "name": "all",
        "description": "If `true`, show notifications marked as read.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "participating": {
        "name": "participating",
        "description": "If `true`, only shows notifications in which the user is directly participating or mentioned.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "since": {
        "name": "since",
        "description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "before": {
        "name": "before",
        "description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "thread-id": {
        "name": "thread_id",
        "description": "The unique identifier of the pull request thread.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "org": {
        "name": "org",
        "description": "The organization name. The name is not case sensitive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "secret-name": {
        "name": "secret_name",
        "description": "The name of the secret.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "team-slug": {
        "name": "team_slug",
        "description": "The slug of the team name.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "owner": {
        "name": "owner",
        "description": "The account owner of the repository. The name is not case sensitive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "repo": {
        "name": "repo",
        "description": "The name of the repository. The name is not case sensitive.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "reaction-id": {
        "name": "reaction_id",
        "description": "The unique identifier of the reaction.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "actor": {
        "name": "actor",
        "description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "workflow-run-branch": {
        "name": "branch",
        "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "event": {
        "name": "event",
        "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"[Events that trigger workflows](https://docs.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows).\"",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "workflow-run-status": {
        "name": "status",
        "description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Only GitHub can set a status of `waiting` or `requested`. For a list of the possible `status` and `conclusion` options, see \"[Create a check run](https://docs.github.com/enterprise-server@3.4/rest/reference/checks#create-a-check-run).\"",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "completed",
            "action_required",
            "cancelled",
            "failure",
            "neutral",
            "skipped",
            "stale",
            "success",
            "timed_out",
            "in_progress",
            "queued",
            "requested",
            "waiting"
          ]
        }
      },
      "created": {
        "name": "created",
        "description": "Returns workflow runs created within the given date-time range. For more information on the syntax, see \"[Understanding the search syntax](https://docs.github.com/enterprise-server@3.4/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates).\"",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "exclude-pull-requests": {
        "name": "exclude_pull_requests",
        "description": "If `true` pull requests are omitted from the response (empty array).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "run-id": {
        "name": "run_id",
        "description": "The unique identifier of the workflow run.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "workflow-id": {
        "name": "workflow_id",
        "in": "path",
        "description": "The ID of the workflow. You can also pass the workflow file name as a string.",
        "required": true,
        "schema": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "check-suite-id": {
        "name": "check_suite_id",
        "description": "The unique identifier of the check suite.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "username": {
        "name": "username",
        "description": "The handle for the GitHub user account.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "check-name": {
        "name": "check_name",
        "description": "Returns check runs with the specified `name`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "invitation-id": {
        "name": "invitation_id",
        "description": "The unique identifier of the invitation.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "alert-number": {
        "name": "alert_number",
        "in": "path",
        "description": "The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/alert-number"
        }
      },
      "since-repo": {
        "name": "since",
        "description": "A repository ID. Only return repositories with an ID greater than this ID.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer"
        }
      },
      "order": {
        "name": "order",
        "description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "desc",
            "asc"
          ],
          "default": "desc"
        }
      },
      "team-id": {
        "name": "team_id",
        "description": "The unique identifier of the team.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "migration-id": {
        "name": "migration_id",
        "description": "The unique identifier of the migration.",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "schemas": {
      "runner-groups-enterprise": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "selected_organizations_url": {
            "type": "string"
          },
          "runners_url": {
            "type": "string"
          },
          "allows_public_repositories": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "visibility",
          "allows_public_repositories",
          "default",
          "runners_url"
        ]
      },
      "organization-secret-scanning-alert": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/alert-number"
          },
          "created_at": {
            "$ref": "#/components/schemas/alert-created-at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/nullable-alert-updated-at"
          },
          "url": {
            "$ref": "#/components/schemas/alert-url"
          },
          "html_url": {
            "$ref": "#/components/schemas/alert-html-url"
          },
          "locations_url": {
            "type": "string",
            "format": "uri",
            "description": "The REST API URL of the code locations for this alert."
          },
          "state": {
            "$ref": "#/components/schemas/secret-scanning-alert-state"
          },
          "resolution": {
            "$ref": "#/components/schemas/secret-scanning-alert-resolution"
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "nullable": true
          },
          "resolved_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "secret_type": {
            "type": "string",
            "description": "The type of secret that secret scanning detected."
          },
          "secret": {
            "type": "string",
            "description": "The secret that was detected."
          },
          "repository": {
            "$ref": "#/components/schemas/simple-repository"
          }
        }
      },
      "thread": {
        "title": "Thread",
        "description": "Thread",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "subject": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "latest_comment_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "title",
              "url",
              "latest_comment_url",
              "type"
            ]
          },
          "reason": {
            "type": "string"
          },
          "unread": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string"
          },
          "last_read_at": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string"
          },
          "subscription_url": {
            "type": "string",
            "example": "https://api.github.com/notifications/threads/2/subscription"
          }
        },
        "required": [
          "id",
          "unread",
          "reason",
          "updated_at",
          "last_read_at",
          "subject",
          "repository",
          "url",
          "subscription_url"
        ]
      },
      "runner-groups-org": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "selected_repositories_url": {
            "description": "Link to the selected repositories resource for this runner group. Not present unless visibility was set to `selected`",
            "type": "string"
          },
          "runners_url": {
            "type": "string"
          },
          "inherited": {
            "type": "boolean"
          },
          "inherited_allows_public_repositories": {
            "type": "boolean"
          },
          "allows_public_repositories": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "name",
          "visibility",
          "default",
          "runners_url",
          "inherited",
          "allows_public_repositories"
        ]
      },
      "minimal-repository": {
        "title": "Minimal Repository",
        "description": "Minimal Repository",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1296269
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "type": "string",
            "example": "Hello-World"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string"
          },
          "mirror_url": {
            "type": "string",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string"
          },
          "homepage": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer"
          },
          "stargazers_count": {
            "type": "integer"
          },
          "watchers_count": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "default_branch": {
            "type": "string"
          },
          "open_issues_count": {
            "type": "integer"
          },
          "is_template": {
            "type": "boolean"
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "type": "boolean"
          },
          "has_projects": {
            "type": "boolean"
          },
          "has_wiki": {
            "type": "boolean"
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          },
          "visibility": {
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              }
            }
          },
          "template_repository": {
            "$ref": "#/components/schemas/nullable-repository"
          },
          "temp_clone_token": {
            "type": "string"
          },
          "delete_branch_on_merge": {
            "type": "boolean"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "code_of_conduct": {
            "$ref": "#/components/schemas/code-of-conduct"
          },
          "license": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "spdx_id": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "node_id": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "forks": {
            "type": "integer",
            "example": 0
          },
          "open_issues": {
            "type": "integer",
            "example": 0
          },
          "watchers": {
            "type": "integer",
            "example": 0
          },
          "allow_forking": {
            "type": "boolean"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ]
      },
      "team-repository": {
        "title": "Team Repository",
        "description": "A team's access to a repository.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "example": "Team Environment"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "license": {
            "$ref": "#/components/schemas/nullable-license-simple"
          },
          "forks": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "$ref": "#/components/schemas/nullable-repository"
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_auto_merge": {
            "description": "Whether to allow Auto-merge to be used on pull requests.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_forking": {
            "description": "Whether to allow forking this repo",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ]
      },
      "workflow-run": {
        "title": "Workflow Run",
        "description": "An invocation of a workflow",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the workflow run.",
            "example": 5
          },
          "name": {
            "type": "string",
            "description": "The name of the workflow run.",
            "nullable": true,
            "example": "Build"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOkNoZWNrU3VpdGU1"
          },
          "check_suite_id": {
            "type": "integer",
            "description": "The ID of the associated check suite.",
            "example": 42
          },
          "check_suite_node_id": {
            "type": "string",
            "description": "The node ID of the associated check suite.",
            "example": "MDEwOkNoZWNrU3VpdGU0Mg=="
          },
          "head_branch": {
            "type": "string",
            "nullable": true,
            "example": "master"
          },
          "head_sha": {
            "description": "The SHA of the head commit that points to the version of the workflow being run.",
            "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d",
            "type": "string"
          },
          "run_number": {
            "type": "integer",
            "description": "The auto incrementing run number for the workflow run.",
            "example": 106
          },
          "event": {
            "type": "string",
            "example": "push"
          },
          "status": {
            "type": "string",
            "nullable": true,
            "example": "completed"
          },
          "conclusion": {
            "type": "string",
            "nullable": true,
            "example": "neutral"
          },
          "workflow_id": {
            "type": "integer",
            "description": "The ID of the parent workflow.",
            "example": 5
          },
          "url": {
            "type": "string",
            "description": "The URL to the workflow run.",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/github/hello-world/suites/4"
          },
          "pull_requests": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/pull-request-minimal"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "jobs_url": {
            "description": "The URL to the jobs for the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/jobs"
          },
          "logs_url": {
            "description": "The URL to download the logs for the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/logs"
          },
          "check_suite_url": {
            "description": "The URL to the associated check suite.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/check-suites/12"
          },
          "artifacts_url": {
            "description": "The URL to the artifacts for the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun/artifacts"
          },
          "cancel_url": {
            "description": "The URL to cancel the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/cancel"
          },
          "rerun_url": {
            "description": "The URL to rerun the workflow run.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/runs/5/rerun"
          },
          "workflow_url": {
            "description": "The URL to the workflow.",
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/actions/workflows/main.yaml"
          },
          "head_commit": {
            "$ref": "#/components/schemas/nullable-simple-commit"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "head_repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "head_repository_id": {
            "type": "integer",
            "example": 5
          }
        },
        "required": [
          "id",
          "node_id",
          "head_branch",
          "run_number",
          "event",
          "status",
          "conclusion",
          "head_sha",
          "path",
          "workflow_id",
          "url",
          "html_url",
          "created_at",
          "updated_at",
          "head_commit",
          "head_repository",
          "repository",
          "jobs_url",
          "logs_url",
          "check_suite_url",
          "cancel_url",
          "rerun_url",
          "artifacts_url",
          "workflow_url",
          "pull_requests"
        ]
      },
      "check-suite": {
        "title": "CheckSuite",
        "description": "A suite of checks performed on the code of a given code change",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 5
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOkNoZWNrU3VpdGU1"
          },
          "head_branch": {
            "type": "string",
            "example": "master",
            "nullable": true
          },
          "head_sha": {
            "description": "The SHA of the head commit that is being checked.",
            "example": "009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d",
            "type": "string"
          },
          "status": {
            "type": "string",
            "example": "completed",
            "enum": [
              "queued",
              "in_progress",
              "completed"
            ],
            "nullable": true
          },
          "conclusion": {
            "type": "string",
            "example": "neutral",
            "enum": [
              "success",
              "failure",
              "neutral",
              "cancelled",
              "skipped",
              "timed_out",
              "action_required"
            ],
            "nullable": true
          },
          "url": {
            "type": "string",
            "example": "https://api.github.com/repos/github/hello-world/check-suites/5",
            "nullable": true
          },
          "before": {
            "type": "string",
            "example": "146e867f55c26428e5f9fade55a9bbf5e95a7912",
            "nullable": true
          },
          "after": {
            "type": "string",
            "example": "d6fde92930d4715a2b49857d24b940956b26d2d3",
            "nullable": true
          },
          "pull_requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/pull-request-minimal"
            },
            "nullable": true
          },
          "app": {
            "$ref": "#/components/schemas/nullable-integration"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "head_commit": {
            "$ref": "#/components/schemas/simple-commit"
          },
          "latest_check_runs_count": {
            "type": "integer"
          },
          "check_runs_url": {
            "type": "string"
          },
          "rerequestable": {
            "type": "boolean"
          },
          "runs_rerequestable": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "node_id",
          "head_branch",
          "status",
          "conclusion",
          "head_sha",
          "url",
          "before",
          "after",
          "created_at",
          "updated_at",
          "app",
          "head_commit",
          "repository",
          "latest_check_runs_count",
          "check_runs_url",
          "pull_requests"
        ]
      },
      "check-suite-preference": {
        "title": "Check Suite Preference",
        "description": "Check suite configuration preferences for a repository.",
        "type": "object",
        "required": [
          "preferences",
          "repository"
        ],
        "properties": {
          "preferences": {
            "type": "object",
            "properties": {
              "auto_trigger_checks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "app_id": {
                      "type": "integer"
                    },
                    "setting": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "app_id",
                    "setting"
                  ]
                }
              }
            }
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          }
        }
      },
      "collaborator": {
        "title": "Collaborator",
        "description": "Collaborator",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              }
            },
            "required": [
              "pull",
              "push",
              "admin"
            ]
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "repository-invitation": {
        "title": "Repository Invitation",
        "description": "Repository invitations let you manage who you collaborate with.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository invitation.",
            "example": 42,
            "type": "integer"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "invitee": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "inviter": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "permissions": {
            "description": "The permission associated with the invitation.",
            "example": "read",
            "type": "string",
            "enum": [
              "read",
              "write",
              "admin",
              "triage",
              "maintain"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2016-06-13T14:52:50-05:00"
          },
          "expired": {
            "description": "Whether or not the invitation has expired",
            "type": "boolean"
          },
          "url": {
            "description": "URL for the repository invitation",
            "example": "https://api.github.com/user/repository-invitations/1",
            "type": "string"
          },
          "html_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World/invitations"
          },
          "node_id": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "node_id",
          "permissions",
          "inviter",
          "invitee",
          "repository",
          "url",
          "html_url",
          "created_at"
        ]
      },
      "repository-collaborator-permission": {
        "title": "Repository Collaborator Permission",
        "description": "Repository Collaborator Permission",
        "type": "object",
        "properties": {
          "permission": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/nullable-collaborator"
          }
        },
        "required": [
          "permission",
          "user"
        ]
      },
      "combined-commit-status": {
        "title": "Combined Commit Status",
        "description": "Combined Commit Status",
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/simple-commit-status"
            }
          },
          "sha": {
            "type": "string"
          },
          "total_count": {
            "type": "integer"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "commit_url": {
            "type": "string",
            "format": "uri"
          },
          "url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "state",
          "sha",
          "total_count",
          "statuses",
          "repository",
          "commit_url",
          "url"
        ]
      },
      "secret-scanning-alert": {
        "type": "object",
        "properties": {
          "number": {
            "$ref": "#/components/schemas/alert-number"
          },
          "created_at": {
            "$ref": "#/components/schemas/alert-created-at"
          },
          "updated_at": {
            "$ref": "#/components/schemas/alert-updated-at"
          },
          "url": {
            "$ref": "#/components/schemas/alert-url"
          },
          "html_url": {
            "$ref": "#/components/schemas/alert-html-url"
          },
          "locations_url": {
            "type": "string",
            "format": "uri",
            "description": "The REST API URL of the code locations for this alert."
          },
          "state": {
            "$ref": "#/components/schemas/secret-scanning-alert-state"
          },
          "resolution": {
            "$ref": "#/components/schemas/secret-scanning-alert-resolution"
          },
          "resolved_at": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
            "nullable": true
          },
          "resolved_by": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "secret_type": {
            "type": "string",
            "description": "The type of secret that secret scanning detected."
          },
          "secret": {
            "type": "string",
            "description": "The secret that was detected."
          }
        }
      },
      "secret-scanning-alert-state": {
        "description": "Sets the state of the secret scanning alert. Can be either `open` or `resolved`. You must provide `resolution` when you set the state to `resolved`.",
        "type": "string",
        "enum": [
          "open",
          "resolved"
        ]
      },
      "secret-scanning-alert-resolution": {
        "type": "string",
        "description": "**Required when the `state` is `resolved`.** The reason for resolving the alert.",
        "nullable": true,
        "enum": [
          null,
          "false_positive",
          "wont_fix",
          "revoked",
          "used_in_tests"
        ]
      },
      "code-search-result-item": {
        "title": "Code Search Result Item",
        "description": "Code Search Result Item",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "git_url": {
            "type": "string",
            "format": "uri"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "score": {
            "type": "number"
          },
          "file_size": {
            "type": "integer"
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "last_modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "line_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "73..77",
              "77..78"
            ]
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          }
        },
        "required": [
          "score",
          "name",
          "path",
          "sha",
          "git_url",
          "html_url",
          "url",
          "repository"
        ]
      },
      "commit-search-result-item": {
        "title": "Commit Search Result Item",
        "description": "Commit Search Result Item",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "sha": {
            "type": "string"
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          },
          "comments_url": {
            "type": "string",
            "format": "uri"
          },
          "commit": {
            "type": "object",
            "properties": {
              "author": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "date"
                ]
              },
              "committer": {
                "$ref": "#/components/schemas/nullable-git-user"
              },
              "comment_count": {
                "type": "integer"
              },
              "message": {
                "type": "string"
              },
              "tree": {
                "type": "object",
                "properties": {
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": [
                  "sha",
                  "url"
                ]
              },
              "url": {
                "type": "string",
                "format": "uri"
              },
              "verification": {
                "$ref": "#/components/schemas/verification"
              }
            },
            "required": [
              "author",
              "committer",
              "comment_count",
              "message",
              "tree",
              "url"
            ]
          },
          "author": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "committer": {
            "$ref": "#/components/schemas/nullable-git-user"
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                }
              }
            }
          },
          "repository": {
            "$ref": "#/components/schemas/minimal-repository"
          },
          "score": {
            "type": "number"
          },
          "node_id": {
            "type": "string"
          },
          "text_matches": {
            "$ref": "#/components/schemas/search-result-text-matches"
          }
        },
        "required": [
          "sha",
          "node_id",
          "url",
          "html_url",
          "author",
          "committer",
          "parents",
          "comments_url",
          "commit",
          "repository",
          "score"
        ]
      },
      "alert-number": {
        "type": "integer",
        "description": "The security alert number.",
        "readOnly": true
      },
      "alert-created-at": {
        "type": "string",
        "description": "The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "nullable-alert-updated-at": {
        "type": "string",
        "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true,
        "nullable": true
      },
      "alert-url": {
        "type": "string",
        "description": "The REST API URL of the alert resource.",
        "format": "uri",
        "readOnly": true
      },
      "alert-html-url": {
        "type": "string",
        "description": "The GitHub URL of the alert resource.",
        "format": "uri",
        "readOnly": true
      },
      "nullable-simple-user": {
        "title": "Simple User",
        "description": "Simple User",
        "type": "object",
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ],
        "nullable": true
      },
      "simple-repository": {
        "title": "Simple Repository",
        "description": "Simple Repository",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1296269,
            "description": "A unique identifier of the repository."
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "description": "The GraphQL identifier of the repository."
          },
          "name": {
            "type": "string",
            "example": "Hello-World",
            "description": "The name of the repository."
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World",
            "description": "The full, globally unique, name of the repository."
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "type": "boolean",
            "description": "Whether the repository is private."
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World",
            "description": "The URL to view the repository on GitHub.com."
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true,
            "description": "The repository description."
          },
          "fork": {
            "type": "boolean",
            "description": "Whether the repository is a fork."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World",
            "description": "The URL to get more information about the repository from the GitHub API."
          },
          "archive_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "description": "A template for the API URL to download the repository as an archive."
          },
          "assignees_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "description": "A template for the API URL to list the available assignees for issues in the repository."
          },
          "blobs_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "description": "A template for the API URL to create or retrieve a raw Git blob in the repository."
          },
          "branches_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "description": "A template for the API URL to get information about branches in the repository."
          },
          "collaborators_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "description": "A template for the API URL to get information about collaborators of the repository."
          },
          "comments_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "description": "A template for the API URL to get information about comments on the repository."
          },
          "commits_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "description": "A template for the API URL to get information about commits on the repository."
          },
          "compare_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "description": "A template for the API URL to compare two commits or refs."
          },
          "contents_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "description": "A template for the API URL to get the contents of the repository."
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "description": "A template for the API URL to list the contributors to the repository."
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "description": "The API URL to list the deployments of the repository."
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "description": "The API URL to list the downloads on the repository."
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/events",
            "description": "The API URL to list the events of the repository."
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/forks",
            "description": "The API URL to list the forks of the repository."
          },
          "git_commits_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "description": "A template for the API URL to get information about Git commits of the repository."
          },
          "git_refs_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "description": "A template for the API URL to get information about Git refs of the repository."
          },
          "git_tags_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "description": "A template for the API URL to get information about Git tags of the repository."
          },
          "issue_comment_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "description": "A template for the API URL to get information about issue comments on the repository."
          },
          "issue_events_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "description": "A template for the API URL to get information about issue events on the repository."
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "description": "A template for the API URL to get information about issues on the repository."
          },
          "keys_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "description": "A template for the API URL to get information about deploy keys on the repository."
          },
          "labels_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "description": "A template for the API URL to get information about labels of the repository."
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/languages",
            "description": "The API URL to get information about the languages of the repository."
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/merges",
            "description": "The API URL to merge branches in the repository."
          },
          "milestones_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "description": "A template for the API URL to get information about milestones of the repository."
          },
          "notifications_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "description": "A template for the API URL to get information about notifications on the repository."
          },
          "pulls_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "description": "A template for the API URL to get information about pull requests on the repository."
          },
          "releases_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "description": "A template for the API URL to get information about releases on the repository."
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "description": "The API URL to list the stargazers on the repository."
          },
          "statuses_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "description": "A template for the API URL to get information about statuses of a commit."
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "description": "The API URL to list the subscribers on the repository."
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "description": "The API URL to subscribe to notifications for this repository."
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/tags",
            "description": "The API URL to get information about tags on the repository."
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/teams",
            "description": "The API URL to list the teams on the repository."
          },
          "trees_url": {
            "type": "string",
            "example": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "description": "A template for the API URL to create or retrieve a raw Git tree of the repository."
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "description": "The API URL to list the hooks on the repository."
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url"
        ]
      },
      "simple-user": {
        "title": "Simple User",
        "description": "Simple User",
        "type": "object",
        "properties": {
          "name": {
            "nullable": true,
            "type": "string"
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "basic-error": {
        "title": "Basic Error",
        "description": "Basic Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "validation-error": {
        "title": "Validation Error",
        "description": "Validation Error",
        "type": "object",
        "required": [
          "message",
          "documentation_url"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "documentation_url": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "code"
              ],
              "properties": {
                "resource": {
                  "type": "string"
                },
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "index": {
                  "type": "integer"
                },
                "value": {
                  "oneOf": [
                    {
                      "type": "string",
                      "nullable": true
                    },
                    {
                      "type": "integer",
                      "nullable": true
                    },
                    {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "string"
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "nullable-repository": {
        "title": "Repository",
        "description": "A git repository",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the repository",
            "example": 42,
            "type": "integer"
          },
          "node_id": {
            "type": "string",
            "example": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5"
          },
          "name": {
            "description": "The name of the repository.",
            "type": "string",
            "example": "Team Environment"
          },
          "full_name": {
            "type": "string",
            "example": "octocat/Hello-World"
          },
          "license": {
            "$ref": "#/components/schemas/nullable-license-simple"
          },
          "organization": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "forks": {
            "type": "integer"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "admin": {
                "type": "boolean"
              },
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              }
            },
            "required": [
              "admin",
              "pull",
              "push"
            ]
          },
          "owner": {
            "$ref": "#/components/schemas/simple-user"
          },
          "private": {
            "description": "Whether the repository is private or public.",
            "default": false,
            "type": "boolean"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat/Hello-World"
          },
          "description": {
            "type": "string",
            "example": "This your first repo!",
            "nullable": true
          },
          "fork": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/repos/octocat/Hello-World"
          },
          "archive_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}"
          },
          "assignees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/assignees{/user}"
          },
          "blobs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}"
          },
          "branches_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/branches{/branch}"
          },
          "collaborators_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}"
          },
          "comments_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/comments{/number}"
          },
          "commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/commits{/sha}"
          },
          "compare_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}"
          },
          "contents_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/contents/{+path}"
          },
          "contributors_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/contributors"
          },
          "deployments_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/deployments"
          },
          "downloads_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/downloads"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/events"
          },
          "forks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/forks"
          },
          "git_commits_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}"
          },
          "git_refs_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}"
          },
          "git_tags_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}"
          },
          "git_url": {
            "type": "string",
            "example": "git:github.com/octocat/Hello-World.git"
          },
          "issue_comment_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}"
          },
          "issue_events_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues/events{/number}"
          },
          "issues_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/issues{/number}"
          },
          "keys_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/keys{/key_id}"
          },
          "labels_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/labels{/name}"
          },
          "languages_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/languages"
          },
          "merges_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/merges"
          },
          "milestones_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/milestones{/number}"
          },
          "notifications_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}"
          },
          "pulls_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/pulls{/number}"
          },
          "releases_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
          },
          "ssh_url": {
            "type": "string",
            "example": "git@github.com:octocat/Hello-World.git"
          },
          "stargazers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/stargazers"
          },
          "statuses_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/statuses/{sha}"
          },
          "subscribers_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscribers"
          },
          "subscription_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/subscription"
          },
          "tags_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/tags"
          },
          "teams_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/teams"
          },
          "trees_url": {
            "type": "string",
            "example": "http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}"
          },
          "clone_url": {
            "type": "string",
            "example": "https://github.com/octocat/Hello-World.git"
          },
          "mirror_url": {
            "type": "string",
            "format": "uri",
            "example": "git:git.example.com/octocat/Hello-World",
            "nullable": true
          },
          "hooks_url": {
            "type": "string",
            "format": "uri",
            "example": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "svn_url": {
            "type": "string",
            "format": "uri",
            "example": "https://svn.github.com/octocat/Hello-World"
          },
          "homepage": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com",
            "nullable": true
          },
          "language": {
            "type": "string",
            "nullable": true
          },
          "forks_count": {
            "type": "integer",
            "example": 9
          },
          "stargazers_count": {
            "type": "integer",
            "example": 80
          },
          "watchers_count": {
            "type": "integer",
            "example": 80
          },
          "size": {
            "type": "integer",
            "example": 108
          },
          "default_branch": {
            "description": "The default branch of the repository.",
            "type": "string",
            "example": "master"
          },
          "open_issues_count": {
            "type": "integer",
            "example": 0
          },
          "is_template": {
            "description": "Whether this repository acts as a template that can be used to generate new repositories.",
            "default": false,
            "type": "boolean",
            "example": true
          },
          "topics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "has_issues": {
            "description": "Whether issues are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_projects": {
            "description": "Whether projects are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_wiki": {
            "description": "Whether the wiki is enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "has_pages": {
            "type": "boolean"
          },
          "has_downloads": {
            "description": "Whether downloads are enabled.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "archived": {
            "description": "Whether the repository is archived.",
            "default": false,
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean",
            "description": "Returns whether or not this repository disabled."
          },
          "visibility": {
            "description": "The repository visibility: public, private, or internal.",
            "default": "public",
            "type": "string"
          },
          "pushed_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:06:43Z",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:01:12Z",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2011-01-26T19:14:43Z",
            "nullable": true
          },
          "allow_rebase_merge": {
            "description": "Whether to allow rebase merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "template_repository": {
            "nullable": true,
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "node_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "owner": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "node_id": {
                    "type": "string"
                  },
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  }
                }
              },
              "private": {
                "type": "boolean"
              },
              "html_url": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fork": {
                "type": "boolean"
              },
              "url": {
                "type": "string"
              },
              "archive_url": {
                "type": "string"
              },
              "assignees_url": {
                "type": "string"
              },
              "blobs_url": {
                "type": "string"
              },
              "branches_url": {
                "type": "string"
              },
              "collaborators_url": {
                "type": "string"
              },
              "comments_url": {
                "type": "string"
              },
              "commits_url": {
                "type": "string"
              },
              "compare_url": {
                "type": "string"
              },
              "contents_url": {
                "type": "string"
              },
              "contributors_url": {
                "type": "string"
              },
              "deployments_url": {
                "type": "string"
              },
              "downloads_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "forks_url": {
                "type": "string"
              },
              "git_commits_url": {
                "type": "string"
              },
              "git_refs_url": {
                "type": "string"
              },
              "git_tags_url": {
                "type": "string"
              },
              "git_url": {
                "type": "string"
              },
              "issue_comment_url": {
                "type": "string"
              },
              "issue_events_url": {
                "type": "string"
              },
              "issues_url": {
                "type": "string"
              },
              "keys_url": {
                "type": "string"
              },
              "labels_url": {
                "type": "string"
              },
              "languages_url": {
                "type": "string"
              },
              "merges_url": {
                "type": "string"
              },
              "milestones_url": {
                "type": "string"
              },
              "notifications_url": {
                "type": "string"
              },
              "pulls_url": {
                "type": "string"
              },
              "releases_url": {
                "type": "string"
              },
              "ssh_url": {
                "type": "string"
              },
              "stargazers_url": {
                "type": "string"
              },
              "statuses_url": {
                "type": "string"
              },
              "subscribers_url": {
                "type": "string"
              },
              "subscription_url": {
                "type": "string"
              },
              "tags_url": {
                "type": "string"
              },
              "teams_url": {
                "type": "string"
              },
              "trees_url": {
                "type": "string"
              },
              "clone_url": {
                "type": "string"
              },
              "mirror_url": {
                "type": "string"
              },
              "hooks_url": {
                "type": "string"
              },
              "svn_url": {
                "type": "string"
              },
              "homepage": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "forks_count": {
                "type": "integer"
              },
              "stargazers_count": {
                "type": "integer"
              },
              "watchers_count": {
                "type": "integer"
              },
              "size": {
                "type": "integer"
              },
              "default_branch": {
                "type": "string"
              },
              "open_issues_count": {
                "type": "integer"
              },
              "is_template": {
                "type": "boolean"
              },
              "topics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "has_issues": {
                "type": "boolean"
              },
              "has_projects": {
                "type": "boolean"
              },
              "has_wiki": {
                "type": "boolean"
              },
              "has_pages": {
                "type": "boolean"
              },
              "has_downloads": {
                "type": "boolean"
              },
              "archived": {
                "type": "boolean"
              },
              "disabled": {
                "type": "boolean"
              },
              "visibility": {
                "type": "string"
              },
              "pushed_at": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "permissions": {
                "type": "object",
                "properties": {
                  "admin": {
                    "type": "boolean"
                  },
                  "maintain": {
                    "type": "boolean"
                  },
                  "push": {
                    "type": "boolean"
                  },
                  "triage": {
                    "type": "boolean"
                  },
                  "pull": {
                    "type": "boolean"
                  }
                }
              },
              "allow_rebase_merge": {
                "type": "boolean"
              },
              "temp_clone_token": {
                "type": "string"
              },
              "allow_squash_merge": {
                "type": "boolean"
              },
              "allow_auto_merge": {
                "type": "boolean"
              },
              "delete_branch_on_merge": {
                "type": "boolean"
              },
              "allow_update_branch": {
                "type": "boolean"
              },
              "allow_merge_commit": {
                "type": "boolean"
              },
              "subscribers_count": {
                "type": "integer"
              },
              "network_count": {
                "type": "integer"
              }
            }
          },
          "temp_clone_token": {
            "type": "string"
          },
          "allow_squash_merge": {
            "description": "Whether to allow squash merges for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_auto_merge": {
            "description": "Whether to allow Auto-merge to be used on pull requests.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "delete_branch_on_merge": {
            "description": "Whether to delete head branches when pull requests are merged",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_update_branch": {
            "description": "Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.",
            "default": false,
            "type": "boolean",
            "example": false
          },
          "allow_merge_commit": {
            "description": "Whether to allow merge commits for pull requests.",
            "default": true,
            "type": "boolean",
            "example": true
          },
          "allow_forking": {
            "description": "Whether to allow forking this repo",
            "type": "boolean"
          },
          "subscribers_count": {
            "type": "integer"
          },
          "network_count": {
            "type": "integer"
          },
          "open_issues": {
            "type": "integer"
          },
          "watchers": {
            "type": "integer"
          },
          "master_branch": {
            "type": "string"
          },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:42Z\""
          }
        },
        "required": [
          "archive_url",
          "assignees_url",
          "blobs_url",
          "branches_url",
          "collaborators_url",
          "comments_url",
          "commits_url",
          "compare_url",
          "contents_url",
          "contributors_url",
          "deployments_url",
          "description",
          "downloads_url",
          "events_url",
          "fork",
          "forks_url",
          "full_name",
          "git_commits_url",
          "git_refs_url",
          "git_tags_url",
          "hooks_url",
          "html_url",
          "id",
          "node_id",
          "issue_comment_url",
          "issue_events_url",
          "issues_url",
          "keys_url",
          "labels_url",
          "languages_url",
          "merges_url",
          "milestones_url",
          "name",
          "notifications_url",
          "owner",
          "private",
          "pulls_url",
          "releases_url",
          "stargazers_url",
          "statuses_url",
          "subscribers_url",
          "subscription_url",
          "tags_url",
          "teams_url",
          "trees_url",
          "url",
          "clone_url",
          "default_branch",
          "forks",
          "forks_count",
          "git_url",
          "has_downloads",
          "has_issues",
          "has_projects",
          "has_wiki",
          "has_pages",
          "homepage",
          "language",
          "archived",
          "disabled",
          "mirror_url",
          "open_issues",
          "open_issues_count",
          "license",
          "pushed_at",
          "size",
          "ssh_url",
          "stargazers_count",
          "svn_url",
          "watchers",
          "watchers_count",
          "created_at",
          "updated_at"
        ],
        "nullable": true
      },
      "nullable-license-simple": {
        "title": "License Simple",
        "description": "License Simple",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "mit"
          },
          "name": {
            "type": "string",
            "example": "MIT License"
          },
          "url": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "example": "https://api.github.com/licenses/mit"
          },
          "spdx_id": {
            "type": "string",
            "nullable": true,
            "example": "MIT"
          },
          "node_id": {
            "type": "string",
            "example": "MDc6TGljZW5zZW1pdA=="
          },
          "html_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "key",
          "name",
          "url",
          "spdx_id",
          "node_id"
        ],
        "nullable": true
      },
      "code-of-conduct": {
        "title": "Code Of Conduct",
        "description": "Code Of Conduct",
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "contributor_covenant"
          },
          "name": {
            "type": "string",
            "example": "Contributor Covenant"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/codes_of_conduct/contributor_covenant"
          },
          "body": {
            "type": "string",
            "example": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "required": [
          "url",
          "html_url",
          "key",
          "name"
        ]
      },
      "pull-request-minimal": {
        "title": "Pull Request Minimal",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "number": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          },
          "head": {
            "type": "object",
            "properties": {
              "ref": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              },
              "repo": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "url",
                  "name"
                ]
              }
            },
            "required": [
              "ref",
              "sha",
              "repo"
            ]
          },
          "base": {
            "type": "object",
            "properties": {
              "ref": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              },
              "repo": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "url",
                  "name"
                ]
              }
            },
            "required": [
              "ref",
              "sha",
              "repo"
            ]
          }
        },
        "required": [
          "id",
          "number",
          "url",
          "head",
          "base"
        ]
      },
      "nullable-simple-commit": {
        "title": "Simple Commit",
        "description": "Simple Commit",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tree_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "author": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "email"
            ],
            "nullable": true
          },
          "committer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "email"
            ],
            "nullable": true
          }
        },
        "required": [
          "id",
          "tree_id",
          "message",
          "timestamp",
          "author",
          "committer"
        ],
        "nullable": true
      },
      "nullable-integration": {
        "title": "GitHub app",
        "description": "GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier of the GitHub app",
            "example": 37,
            "type": "integer"
          },
          "slug": {
            "description": "The slug name of the GitHub app",
            "example": "probot-owners",
            "type": "string"
          },
          "node_id": {
            "type": "string",
            "example": "MDExOkludGVncmF0aW9uMQ=="
          },
          "owner": {
            "$ref": "#/components/schemas/nullable-simple-user"
          },
          "name": {
            "description": "The name of the GitHub app",
            "example": "Probot Owners",
            "type": "string"
          },
          "description": {
            "type": "string",
            "example": "The description of the app.",
            "nullable": true
          },
          "external_url": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/apps/super-ci"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-08T16:18:44-04:00"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-08T16:18:44-04:00"
          },
          "permissions": {
            "description": "The set of permissions for the GitHub app",
            "type": "object",
            "properties": {
              "issues": {
                "type": "string"
              },
              "checks": {
                "type": "string"
              },
              "metadata": {
                "type": "string"
              },
              "contents": {
                "type": "string"
              },
              "deployments": {
                "type": "string"
              }
            },
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "issues": "read",
              "deployments": "write"
            }
          },
          "events": {
            "description": "The list of events for the GitHub app",
            "example": [
              "label",
              "deployment"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "installations_count": {
            "description": "The number of installations associated with the GitHub app",
            "example": 5,
            "type": "integer"
          },
          "client_id": {
            "type": "string",
            "example": "\"Iv1.25b5d1e65ffc4022\""
          },
          "client_secret": {
            "type": "string",
            "example": "\"1d4b2097ac622ba702d19de498f005747a8b21d3\""
          },
          "webhook_secret": {
            "type": "string",
            "example": "\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\"",
            "nullable": true
          },
          "pem": {
            "type": "string",
            "example": "\"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\n-----END RSA PRIVATE KEY-----\\n\""
          }
        },
        "required": [
          "id",
          "node_id",
          "owner",
          "name",
          "description",
          "external_url",
          "html_url",
          "created_at",
          "updated_at",
          "permissions",
          "events"
        ],
        "nullable": true
      },
      "simple-commit": {
        "title": "Simple Commit",
        "description": "Simple Commit",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "tree_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "author": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "email"
            ],
            "nullable": true
          },
          "committer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "email"
            ],
            "nullable": true
          }
        },
        "required": [
          "id",
          "tree_id",
          "message",
          "timestamp",
          "author",
          "committer"
        ]
      },
      "nullable-collaborator": {
        "title": "Collaborator",
        "description": "Collaborator",
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "example": "octocat"
          },
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "node_id": {
            "type": "string",
            "example": "MDQ6VXNlcjE="
          },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": {
            "type": "string",
            "example": "User"
          },
          "site_admin": {
            "type": "boolean"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "pull": {
                "type": "boolean"
              },
              "triage": {
                "type": "boolean"
              },
              "push": {
                "type": "boolean"
              },
              "maintain": {
                "type": "boolean"
              },
              "admin": {
                "type": "boolean"
              }
            },
            "required": [
              "pull",
              "push",
              "admin"
            ]
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ],
        "nullable": true
      },
      "simple-commit-status": {
        "title": "Simple Commit Status",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer"
          },
          "node_id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "target_url": {
            "type": "string",
            "format": "uri"
          },
          "required": {
            "type": "boolean",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true,
            "format": "uri"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "description",
          "id",
          "node_id",
          "state",
          "context",
          "target_url",
          "avatar_url",
          "url",
          "created_at",
          "updated_at"
        ]
      },
      "scim-error": {
        "title": "Scim Error",
        "description": "Scim Error",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "documentation_url": {
            "type": "string",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer"
          },
          "scimType": {
            "type": "string",
            "nullable": true
          },
          "schemas": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "alert-updated-at": {
        "type": "string",
        "description": "The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.",
        "format": "date-time",
        "readOnly": true
      },
      "search-result-text-matches": {
        "title": "Search Result Text Matches",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "object_url": {
              "type": "string"
            },
            "object_type": {
              "nullable": true,
              "type": "string"
            },
            "property": {
              "type": "string"
            },
            "fragment": {
              "type": "string"
            },
            "matches": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "indices": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "nullable-git-user": {
        "title": "Git User",
        "description": "Metaproperties for Git author/committer information.",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "\"Chris Wanstrath\""
          },
          "email": {
            "type": "string",
            "example": "\"chris@ozmm.org\""
          },
          "date": {
            "type": "string",
            "example": "\"2007-10-29T02:42:39.000-07:00\""
          }
        },
        "nullable": true
      },
      "verification": {
        "title": "Verification",
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean"
          },
          "reason": {
            "type": "string"
          },
          "payload": {
            "type": "string",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "verified",
          "reason",
          "payload",
          "signature"
        ]
      }
    },
    "examples": {
      "runner-groups-enterprise": {
        "value": {
          "total_count": 3,
          "runner_groups": [
            {
              "id": 1,
              "name": "Default",
              "visibility": "all",
              "default": true,
              "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/1/runners",
              "allows_public_repositories": false
            },
            {
              "id": 2,
              "name": "octo-runner-group",
              "visibility": "selected",
              "default": false,
              "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/2/organizations",
              "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/2/runners",
              "allows_public_repositories": true
            },
            {
              "id": 3,
              "name": "expensive-hardware",
              "visibility": "private",
              "default": false,
              "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner_groups/3/runners",
              "allows_public_repositories": true
            }
          ]
        }
      },
      "runner-group-enterprise": {
        "value": {
          "id": 2,
          "name": "octo-runner-group",
          "visibility": "selected",
          "default": false,
          "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
          "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
          "allows_public_repositories": false
        }
      },
      "runner-group-update-enterprise": {
        "value": {
          "id": 2,
          "name": "Expensive hardware runners",
          "visibility": "selected",
          "default": false,
          "selected_organizations_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/organizations",
          "runners_url": "https://api.github.com/enterprises/octo-corp/actions/runner-groups/2/runners",
          "allows_public_repositories": true
        }
      },
      "organization-secret-scanning-alert-list": {
        "value": [
          {
            "number": 2,
            "created_at": "2020-11-06T18:48:51Z",
            "url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2",
            "html_url": "https://github.com/owner/private-repo/security/secret-scanning/2",
            "locations_url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2/locations",
            "state": "resolved",
            "resolution": "false_positive",
            "resolved_at": "2020-11-07T02:47:13Z",
            "resolved_by": {
              "login": "monalisa",
              "id": 2,
              "node_id": "MDQ6VXNlcjI=",
              "avatar_url": "https://alambic.github.com/avatars/u/2?",
              "gravatar_id": "",
              "url": "https://api.github.com/users/monalisa",
              "html_url": "https://github.com/monalisa",
              "followers_url": "https://api.github.com/users/monalisa/followers",
              "following_url": "https://api.github.com/users/monalisa/following{/other_user}",
              "gists_url": "https://api.github.com/users/monalisa/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/monalisa/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/monalisa/subscriptions",
              "organizations_url": "https://api.github.com/users/monalisa/orgs",
              "repos_url": "https://api.github.com/users/monalisa/repos",
              "events_url": "https://api.github.com/users/monalisa/events{/privacy}",
              "received_events_url": "https://api.github.com/users/monalisa/received_events",
              "type": "User",
              "site_admin": true
            },
            "secret_type": "adafruit_io_key",
            "secret_type_display_name": "Adafruit IO Key",
            "secret": "aio_XXXXXXXXXXXXXXXXXXXXXXXXXXXX",
            "repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks"
            }
          },
          {
            "number": 1,
            "created_at": "2020-11-06T18:18:30Z",
            "url": "https://api.github.com/repos/owner/repo/secret-scanning/alerts/1",
            "html_url": "https://github.com/owner/repo/security/secret-scanning/1",
            "locations_url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/1/locations",
            "state": "open",
            "resolution": null,
            "resolved_at": null,
            "resolved_by": null,
            "secret_type": "mailchimp_api_key",
            "secret_type_display_name": "Mailchimp API Key",
            "secret": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2",
            "repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks"
            }
          }
        ]
      },
      "thread-items": {
        "value": [
          {
            "id": "1",
            "repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
            },
            "subject": {
              "title": "Greetings",
              "url": "https://api.github.com/repos/octokit/octokit.rb/issues/123",
              "latest_comment_url": "https://api.github.com/repos/octokit/octokit.rb/issues/comments/123",
              "type": "Issue"
            },
            "reason": "subscribed",
            "unread": true,
            "updated_at": "2014-11-07T22:01:45Z",
            "last_read_at": "2014-11-07T22:01:45Z",
            "url": "https://api.github.com/notifications/threads/1",
            "subscription_url": "https://api.github.com/notifications/threads/1/subscription"
          }
        ]
      },
      "thread": {
        "value": {
          "id": "1",
          "repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "subject": {
            "title": "Greetings",
            "url": "https://api.github.com/repos/octokit/octokit.rb/issues/123",
            "latest_comment_url": "https://api.github.com/repos/octokit/octokit.rb/issues/comments/123",
            "type": "Issue"
          },
          "reason": "subscribed",
          "unread": true,
          "updated_at": "2014-11-07T22:01:45Z",
          "last_read_at": "2014-11-07T22:01:45Z",
          "url": "https://api.github.com/notifications/threads/1",
          "subscription_url": "https://api.github.com/notifications/threads/1/subscription"
        }
      },
      "runner-groups-org": {
        "value": {
          "total_count": 3,
          "runner_groups": [
            {
              "id": 1,
              "name": "Default",
              "visibility": "all",
              "default": true,
              "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/1/runners",
              "inherited": false,
              "allows_public_repositories": true
            },
            {
              "id": 2,
              "name": "octo-runner-group",
              "visibility": "selected",
              "default": false,
              "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories",
              "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
              "inherited": true,
              "allows_public_repositories": true
            },
            {
              "id": 3,
              "name": "expensive-hardware",
              "visibility": "private",
              "default": false,
              "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/3/runners",
              "inherited": false,
              "allows_public_repositories": true
            }
          ]
        }
      },
      "runner-group": {
        "value": {
          "id": 2,
          "name": "octo-runner-group",
          "visibility": "selected",
          "default": false,
          "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner-groups/2/repositories",
          "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
          "inherited": false,
          "allows_public_repositories": true
        }
      },
      "runner-group-item": {
        "value": {
          "id": 2,
          "name": "octo-runner-group",
          "visibility": "selected",
          "default": false,
          "selected_repositories_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/repositories",
          "runners_url": "https://api.github.com/orgs/octo-org/actions/runner_groups/2/runners",
          "inherited": false,
          "allows_public_repositories": true
        }
      },
      "minimal-repository-paginated": {
        "value": {
          "total_count": 1,
          "repositories": [
            {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World",
              "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World",
              "homepage": "https://github.com",
              "language": null,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues_count": 0,
              "is_template": true,
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "visibility": "public",
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "template_repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "organization": null,
                "language": null,
                "forks": 9,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "watchers": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues": 0,
                "open_issues_count": 0,
                "is_template": true,
                "license": {
                  "key": "mit",
                  "name": "MIT License",
                  "url": "https://api.github.com/licenses/mit",
                  "spdx_id": "MIT",
                  "node_id": "MDc6TGljZW5zZW1pdA==",
                  "html_url": "https://api.github.com/licenses/mit"
                },
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "visibility": "public",
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "allow_rebase_merge": true,
                "template_repository": null,
                "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                "allow_squash_merge": true,
                "allow_auto_merge": false,
                "delete_branch_on_merge": true,
                "allow_merge_commit": true,
                "subscribers_count": 42,
                "network_count": 0
              },
              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
              "delete_branch_on_merge": true,
              "subscribers_count": 42,
              "network_count": 0,
              "license": {
                "key": "mit",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT",
                "node_id": "MDc6TGljZW5zZW1pdA=="
              },
              "forks": 1,
              "open_issues": 1,
              "watchers": 1
            }
          ]
        }
      },
      "public-repository-paginated": {
        "value": {
          "total_count": 1,
          "repositories": [
            {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
            }
          ]
        }
      },
      "minimal-repository-items": {
        "value": [
          {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": false,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "template_repository": null
          }
        ]
      },
      "team-repository-alternative-response-with-repository-permissions": {
        "value": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": false,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "visibility": "public",
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "maintain": false,
            "push": false,
            "triage": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World-Template",
            "full_name": "octocat/Hello-World-Template",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World-Template",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World-Template",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World-Template.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World-Template.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
            "homepage": "https://github.com",
            "language": null,
            "forks": 9,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "watchers": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues": 0,
            "open_issues_count": 0,
            "is_template": true,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "url": "https://api.github.com/licenses/mit",
              "spdx_id": "MIT",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "https://api.github.com/licenses/mit"
            },
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "pull": true,
              "triage": false,
              "push": false,
              "maintain": false,
              "admin": false
            },
            "allow_rebase_merge": true,
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "allow_squash_merge": true,
            "allow_auto_merge": false,
            "delete_branch_on_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0
          },
          "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
          "allow_squash_merge": true,
          "allow_auto_merge": false,
          "delete_branch_on_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0,
          "license": {
            "key": "mit",
            "name": "MIT License",
            "url": "https://api.github.com/licenses/mit",
            "spdx_id": "MIT",
            "node_id": "MDc6TGljZW5zZW1pdA==",
            "html_url": "https://api.github.com/licenses/mit"
          },
          "forks": 1,
          "open_issues": 1,
          "watchers": 1
        }
      },
      "workflow-run-paginated": {
        "value": {
          "total_count": 1,
          "workflow_runs": [
            {
              "id": 30433642,
              "name": "Build",
              "node_id": "MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==",
              "check_suite_id": 42,
              "check_suite_node_id": "MDEwOkNoZWNrU3VpdGU0Mg==",
              "head_branch": "master",
              "head_sha": "acb5820ced9479c074f688cc328bf03f341a511d",
              "run_number": 562,
              "event": "push",
              "status": "queued",
              "conclusion": null,
              "workflow_id": 159038,
              "url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642",
              "html_url": "https://github.com/octo-org/octo-repo/actions/runs/30433642",
              "pull_requests": [],
              "created_at": "2020-01-22T19:33:08Z",
              "updated_at": "2020-01-22T19:33:08Z",
              "jobs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs",
              "logs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs",
              "check_suite_url": "https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374",
              "artifacts_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts",
              "cancel_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel",
              "rerun_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun",
              "workflow_url": "https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038",
              "head_commit": {
                "id": "acb5820ced9479c074f688cc328bf03f341a511d",
                "tree_id": "d23f6eedb1e1b9610bbc754ddb5197bfe7271223",
                "message": "Create linter.yaml",
                "timestamp": "2020-01-22T19:33:05Z",
                "author": {
                  "name": "Octo Cat",
                  "email": "octocat@github.com"
                },
                "committer": {
                  "name": "GitHub",
                  "email": "noreply@github.com"
                }
              },
              "repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
              },
              "head_repository": {
                "id": 217723378,
                "node_id": "MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=",
                "name": "octo-repo",
                "full_name": "octo-org/octo-repo",
                "private": true,
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "html_url": "https://github.com/octo-org/octo-repo",
                "description": null,
                "fork": false,
                "url": "https://api.github.com/repos/octo-org/octo-repo",
                "forks_url": "https://api.github.com/repos/octo-org/octo-repo/forks",
                "keys_url": "https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/octo-org/octo-repo/teams",
                "hooks_url": "https://api.github.com/repos/octo-org/octo-repo/hooks",
                "issue_events_url": "https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}",
                "events_url": "https://api.github.com/repos/octo-org/octo-repo/events",
                "assignees_url": "https://api.github.com/repos/octo-org/octo-repo/assignees{/user}",
                "branches_url": "https://api.github.com/repos/octo-org/octo-repo/branches{/branch}",
                "tags_url": "https://api.github.com/repos/octo-org/octo-repo/tags",
                "blobs_url": "https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/octo-org/octo-repo/languages",
                "stargazers_url": "https://api.github.com/repos/octo-org/octo-repo/stargazers",
                "contributors_url": "https://api.github.com/repos/octo-org/octo-repo/contributors",
                "subscribers_url": "https://api.github.com/repos/octo-org/octo-repo/subscribers",
                "subscription_url": "https://api.github.com/repos/octo-org/octo-repo/subscription",
                "commits_url": "https://api.github.com/repos/octo-org/octo-repo/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/octo-org/octo-repo/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/octo-org/octo-repo/contents/{+path}",
                "compare_url": "https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/octo-org/octo-repo/merges",
                "archive_url": "https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/octo-org/octo-repo/downloads",
                "issues_url": "https://api.github.com/repos/octo-org/octo-repo/issues{/number}",
                "pulls_url": "https://api.github.com/repos/octo-org/octo-repo/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/octo-org/octo-repo/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/octo-org/octo-repo/labels{/name}",
                "releases_url": "https://api.github.com/repos/octo-org/octo-repo/releases{/id}",
                "deployments_url": "https://api.github.com/repos/octo-org/octo-repo/deployments"
              }
            }
          ]
        }
      },
      "workflow-run": {
        "value": {
          "id": 30433642,
          "name": "Build",
          "node_id": "MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==",
          "check_suite_id": 42,
          "check_suite_node_id": "MDEwOkNoZWNrU3VpdGU0Mg==",
          "head_branch": "main",
          "head_sha": "acb5820ced9479c074f688cc328bf03f341a511d",
          "path": ".github/workflows/build.yml@main",
          "run_number": 562,
          "event": "push",
          "status": "queued",
          "workflow_id": 159038,
          "url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642",
          "html_url": "https://github.com/octo-org/octo-repo/actions/runs/30433642",
          "pull_requests": [],
          "created_at": "2020-01-22T19:33:08Z",
          "updated_at": "2020-01-22T19:33:08Z",
          "jobs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs",
          "logs_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs",
          "check_suite_url": "https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374",
          "artifacts_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts",
          "cancel_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel",
          "rerun_url": "https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun",
          "workflow_url": "https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038",
          "head_commit": {
            "id": "acb5820ced9479c074f688cc328bf03f341a511d",
            "tree_id": "d23f6eedb1e1b9610bbc754ddb5197bfe7271223",
            "message": "Create linter.yaml",
            "timestamp": "2020-01-22T19:33:05Z",
            "author": {
              "name": "Octo Cat",
              "email": "octocat@github.com"
            },
            "committer": {
              "name": "GitHub",
              "email": "noreply@github.com"
            }
          },
          "repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "head_repository": {
            "id": 217723378,
            "node_id": "MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=",
            "name": "octo-repo",
            "full_name": "octo-org/octo-repo",
            "private": true,
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/octo-org/octo-repo",
            "description": null,
            "fork": false,
            "url": "https://api.github.com/repos/octo-org/octo-repo",
            "forks_url": "https://api.github.com/repos/octo-org/octo-repo/forks",
            "keys_url": "https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/octo-org/octo-repo/teams",
            "hooks_url": "https://api.github.com/repos/octo-org/octo-repo/hooks",
            "issue_events_url": "https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}",
            "events_url": "https://api.github.com/repos/octo-org/octo-repo/events",
            "assignees_url": "https://api.github.com/repos/octo-org/octo-repo/assignees{/user}",
            "branches_url": "https://api.github.com/repos/octo-org/octo-repo/branches{/branch}",
            "tags_url": "https://api.github.com/repos/octo-org/octo-repo/tags",
            "blobs_url": "https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/octo-org/octo-repo/languages",
            "stargazers_url": "https://api.github.com/repos/octo-org/octo-repo/stargazers",
            "contributors_url": "https://api.github.com/repos/octo-org/octo-repo/contributors",
            "subscribers_url": "https://api.github.com/repos/octo-org/octo-repo/subscribers",
            "subscription_url": "https://api.github.com/repos/octo-org/octo-repo/subscription",
            "commits_url": "https://api.github.com/repos/octo-org/octo-repo/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/octo-org/octo-repo/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/octo-org/octo-repo/contents/{+path}",
            "compare_url": "https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/octo-org/octo-repo/merges",
            "archive_url": "https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/octo-org/octo-repo/downloads",
            "issues_url": "https://api.github.com/repos/octo-org/octo-repo/issues{/number}",
            "pulls_url": "https://api.github.com/repos/octo-org/octo-repo/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/octo-org/octo-repo/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/octo-org/octo-repo/labels{/name}",
            "releases_url": "https://api.github.com/repos/octo-org/octo-repo/releases{/id}",
            "deployments_url": "https://api.github.com/repos/octo-org/octo-repo/deployments"
          }
        }
      },
      "check-suite": {
        "value": {
          "id": 5,
          "node_id": "MDEwOkNoZWNrU3VpdGU1",
          "head_branch": "master",
          "head_sha": "d6fde92930d4715a2b49857d24b940956b26d2d3",
          "status": "completed",
          "conclusion": "neutral",
          "url": "https://api.github.com/repos/github/hello-world/check-suites/5",
          "before": "146e867f55c26428e5f9fade55a9bbf5e95a7912",
          "after": "d6fde92930d4715a2b49857d24b940956b26d2d3",
          "pull_requests": [],
          "created_at": "2017-07-08T16:18:44-04:00",
          "updated_at": "2017-07-08T16:18:44-04:00",
          "app": {
            "id": 1,
            "slug": "octoapp",
            "node_id": "MDExOkludGVncmF0aW9uMQ==",
            "owner": {
              "login": "github",
              "id": 1,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
              "url": "https://api.github.com/orgs/github",
              "repos_url": "https://api.github.com/orgs/github/repos",
              "events_url": "https://api.github.com/orgs/github/events",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": true
            },
            "name": "Octocat App",
            "description": "",
            "external_url": "https://example.com",
            "html_url": "https://github.com/apps/octoapp",
            "created_at": "2017-07-08T16:18:44-04:00",
            "updated_at": "2017-07-08T16:18:44-04:00",
            "permissions": {
              "metadata": "read",
              "contents": "read",
              "issues": "write",
              "single_file": "write"
            },
            "events": [
              "push",
              "pull_request"
            ]
          },
          "repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "template_repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World-Template",
              "full_name": "octocat/Hello-World-Template",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World-Template",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World-Template",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World-Template.git",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World-Template.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
              "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
              "homepage": "https://github.com",
              "language": null,
              "forks": 9,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "watchers": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues": 0,
              "open_issues_count": 0,
              "is_template": true,
              "license": {
                "key": "mit",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT",
                "node_id": "MDc6TGljZW5zZW1pdA==",
                "html_url": "https://api.github.com/licenses/mit"
              },
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "visibility": "public",
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "allow_rebase_merge": true,
              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
              "allow_squash_merge": true,
              "allow_auto_merge": false,
              "delete_branch_on_merge": true,
              "allow_merge_commit": true,
              "subscribers_count": 42,
              "network_count": 0
            },
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": false,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "delete_branch_on_merge": true,
            "subscribers_count": 42,
            "network_count": 0
          },
          "head_commit": {
            "id": "7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
            "tree_id": "7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
            "message": "Merge pull request #6 from Spaceghost/patch-1\n\nNew line at end of file.",
            "timestamp": "2016-10-10T00:00:00Z",
            "author": {
              "name": "The Octocat",
              "email": "octocat@nowhere.com"
            },
            "committer": {
              "name": "The Octocat",
              "email": "octocat@nowhere.com"
            }
          },
          "latest_check_runs_count": 1,
          "check_runs_url": "https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs"
        }
      },
      "check-suite-preference": {
        "value": {
          "preferences": {
            "auto_trigger_checks": [
              {
                "app_id": 2,
                "setting": true
              },
              {
                "app_id": 4,
                "setting": false
              }
            ]
          },
          "repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": false,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "template_repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World-Template",
              "full_name": "octocat/Hello-World-Template",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World-Template",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World-Template",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World-Template.git",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
              "clone_url": "https://github.com/octocat/Hello-World-Template.git",
              "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
              "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
              "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
              "homepage": "https://github.com",
              "language": null,
              "forks": 9,
              "forks_count": 9,
              "stargazers_count": 80,
              "watchers_count": 80,
              "watchers": 80,
              "size": 108,
              "default_branch": "master",
              "open_issues": 0,
              "open_issues_count": 0,
              "is_template": true,
              "license": {
                "key": "mit",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT",
                "node_id": "MDc6TGljZW5zZW1pdA==",
                "html_url": "https://api.github.com/licenses/mit"
              },
              "topics": [
                "octocat",
                "atom",
                "electron",
                "api"
              ],
              "has_issues": true,
              "has_projects": true,
              "has_wiki": true,
              "has_pages": false,
              "has_downloads": true,
              "archived": false,
              "disabled": false,
              "visibility": "public",
              "pushed_at": "2011-01-26T19:06:43Z",
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "permissions": {
                "admin": false,
                "push": false,
                "pull": true
              },
              "allow_rebase_merge": true,
              "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
              "allow_squash_merge": true,
              "allow_auto_merge": false,
              "delete_branch_on_merge": true,
              "allow_merge_commit": true,
              "subscribers_count": 42,
              "network_count": 0
            }
          }
        }
      },
      "collaborator-items": {
        "value": [
          {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false,
            "permissions": {
              "pull": true,
              "push": true,
              "admin": false
            }
          }
        ]
      },
      "repository-invitation-response-when-a-new-invitation-is-created": {
        "value": {
          "id": 1,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "invitee": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "inviter": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "permissions": "write",
          "created_at": "2016-06-13T14:52:50-05:00",
          "url": "https://api.github.com/user/repository_invitations/1296269",
          "html_url": "https://github.com/octocat/Hello-World/invitations"
        }
      },
      "repository-collaborator-permission-response-if-user-has-admin-permissions": {
        "value": {
          "permission": "admin",
          "user": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          }
        }
      },
      "check-suite-paginated": {
        "value": {
          "total_count": 1,
          "check_suites": [
            {
              "id": 5,
              "node_id": "MDEwOkNoZWNrU3VpdGU1",
              "head_branch": "master",
              "head_sha": "d6fde92930d4715a2b49857d24b940956b26d2d3",
              "status": "completed",
              "conclusion": "neutral",
              "url": "https://api.github.com/repos/github/hello-world/check-suites/5",
              "before": "146e867f55c26428e5f9fade55a9bbf5e95a7912",
              "after": "d6fde92930d4715a2b49857d24b940956b26d2d3",
              "pull_requests": [],
              "app": {
                "id": 1,
                "slug": "octoapp",
                "node_id": "MDExOkludGVncmF0aW9uMQ==",
                "owner": {
                  "login": "github",
                  "id": 1,
                  "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                  "url": "https://api.github.com/orgs/github",
                  "repos_url": "https://api.github.com/orgs/github/repos",
                  "events_url": "https://api.github.com/orgs/github/events",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": true
                },
                "name": "Octocat App",
                "description": "",
                "external_url": "https://example.com",
                "html_url": "https://github.com/apps/octoapp",
                "created_at": "2017-07-08T16:18:44-04:00",
                "updated_at": "2017-07-08T16:18:44-04:00",
                "permissions": {
                  "metadata": "read",
                  "contents": "read",
                  "issues": "write",
                  "single_file": "write"
                },
                "events": [
                  "push",
                  "pull_request"
                ]
              },
              "repository": {
                "id": 1296269,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
                "name": "Hello-World",
                "full_name": "octocat/Hello-World",
                "owner": {
                  "login": "octocat",
                  "id": 1,
                  "node_id": "MDQ6VXNlcjE=",
                  "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Hello-World",
                "description": "This your first repo!",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Hello-World",
                "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
                "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
                "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
                "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
                "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
                "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
                "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
                "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
                "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
                "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
                "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
                "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
                "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
                "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
                "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
                "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
                "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
                "git_url": "git:github.com/octocat/Hello-World.git",
                "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
                "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
                "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
                "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
                "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
                "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
                "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
                "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
                "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
                "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
                "ssh_url": "git@github.com:octocat/Hello-World.git",
                "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
                "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
                "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
                "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
                "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
                "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
                "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
                "clone_url": "https://github.com/octocat/Hello-World.git",
                "mirror_url": "git:git.example.com/octocat/Hello-World",
                "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
                "svn_url": "https://svn.github.com/octocat/Hello-World",
                "homepage": "https://github.com",
                "language": null,
                "forks_count": 9,
                "stargazers_count": 80,
                "watchers_count": 80,
                "size": 108,
                "default_branch": "master",
                "open_issues_count": 0,
                "is_template": true,
                "topics": [
                  "octocat",
                  "atom",
                  "electron",
                  "api"
                ],
                "has_issues": true,
                "has_projects": true,
                "has_wiki": true,
                "has_pages": false,
                "has_downloads": true,
                "archived": false,
                "disabled": false,
                "visibility": "public",
                "pushed_at": "2011-01-26T19:06:43Z",
                "created_at": "2011-01-26T19:01:12Z",
                "updated_at": "2011-01-26T19:14:43Z",
                "permissions": {
                  "admin": false,
                  "push": false,
                  "pull": true
                },
                "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
                "delete_branch_on_merge": true,
                "subscribers_count": 42,
                "network_count": 0
              },
              "created_at": "2011-01-26T19:01:12Z",
              "updated_at": "2011-01-26T19:14:43Z",
              "head_commit": {
                "id": "7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
                "tree_id": "7fd1a60b01f91b314f59955a4e4d4e80d8edf11d",
                "message": "Merge pull request #6 from Spaceghost/patch-1\n\nNew line at end of file.",
                "timestamp": "2016-10-10T00:00:00Z",
                "author": {
                  "name": "The Octocat",
                  "email": "octocat@nowhere.com"
                },
                "committer": {
                  "name": "The Octocat",
                  "email": "octocat@nowhere.com"
                }
              },
              "latest_check_runs_count": 1,
              "check_runs_url": "https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs"
            }
          ]
        }
      },
      "combined-commit-status": {
        "value": {
          "state": "success",
          "statuses": [
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "avatar_url": "https://github.com/images/error/hubot_happy.gif",
              "id": 1,
              "node_id": "MDY6U3RhdHVzMQ==",
              "state": "success",
              "description": "Build has completed successfully",
              "target_url": "https://ci.example.com/1000/output",
              "context": "continuous-integration/jenkins",
              "created_at": "2012-07-20T01:19:13Z",
              "updated_at": "2012-07-20T01:19:13Z"
            },
            {
              "url": "https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e",
              "avatar_url": "https://github.com/images/error/other_user_happy.gif",
              "id": 2,
              "node_id": "MDY6U3RhdHVzMg==",
              "state": "success",
              "description": "Testing has completed successfully",
              "target_url": "https://ci.example.com/2000/output",
              "context": "security/brakeman",
              "created_at": "2012-08-20T01:19:13Z",
              "updated_at": "2012-08-20T01:19:13Z"
            }
          ],
          "sha": "6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "total_count": 2,
          "repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "commit_url": "https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e",
          "url": "https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status"
        }
      },
      "minimal-repository-items-2": {
        "value": [
          {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": true,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World",
            "homepage": "https://github.com",
            "language": null,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues_count": 0,
            "is_template": true,
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "delete_branch_on_merge": true,
            "subscribers_count": 42,
            "network_count": 0,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "spdx_id": "MIT",
              "url": "https://api.github.com/licenses/mit",
              "node_id": "MDc6TGljZW5zZW1pdA=="
            }
          }
        ]
      },
      "repository-invitation-items": {
        "value": [
          {
            "id": 1,
            "repository": {
              "id": 1296269,
              "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
              "name": "Hello-World",
              "full_name": "octocat/Hello-World",
              "owner": {
                "login": "octocat",
                "id": 1,
                "node_id": "MDQ6VXNlcjE=",
                "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "private": false,
              "html_url": "https://github.com/octocat/Hello-World",
              "description": "This your first repo!",
              "fork": false,
              "url": "https://api.github.com/repos/octocat/Hello-World",
              "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
              "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
              "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
              "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
              "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
              "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
              "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
              "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
              "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
              "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
              "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
              "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
              "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
              "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
              "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
              "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
              "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
              "git_url": "git:github.com/octocat/Hello-World.git",
              "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
              "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
              "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
              "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
              "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
              "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
              "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
              "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
              "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
              "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
              "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
              "ssh_url": "git@github.com:octocat/Hello-World.git",
              "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
              "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
              "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
              "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
              "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
              "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
              "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
              "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
            },
            "invitee": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "inviter": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "permissions": "write",
            "created_at": "2016-06-13T14:52:50-05:00",
            "url": "https://api.github.com/user/repository_invitations/1296269",
            "html_url": "https://github.com/octocat/Hello-World/invitations",
            "node_id": "MDQ6VXNlcjE="
          }
        ]
      },
      "repository-invitation": {
        "value": {
          "id": 1,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
          },
          "invitee": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "inviter": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "permissions": "write",
          "created_at": "2016-06-13T14:52:50-05:00",
          "expired": false,
          "url": "https://api.github.com/user/repository_invitations/1296269",
          "html_url": "https://github.com/octocat/Hello-World/invitations"
        }
      },
      "secret-scanning-alert-list": {
        "value": [
          {
            "number": 2,
            "created_at": "2020-11-06T18:48:51Z",
            "url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2",
            "html_url": "https://github.com/owner/private-repo/security/secret-scanning/2",
            "locations_url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2/locations",
            "state": "resolved",
            "resolution": "false_positive",
            "resolved_at": "2020-11-07T02:47:13Z",
            "resolved_by": {
              "login": "monalisa",
              "id": 2,
              "node_id": "MDQ6VXNlcjI=",
              "avatar_url": "https://alambic.github.com/avatars/u/2?",
              "gravatar_id": "",
              "url": "https://api.github.com/users/monalisa",
              "html_url": "https://github.com/monalisa",
              "followers_url": "https://api.github.com/users/monalisa/followers",
              "following_url": "https://api.github.com/users/monalisa/following{/other_user}",
              "gists_url": "https://api.github.com/users/monalisa/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/monalisa/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/monalisa/subscriptions",
              "organizations_url": "https://api.github.com/users/monalisa/orgs",
              "repos_url": "https://api.github.com/users/monalisa/repos",
              "events_url": "https://api.github.com/users/monalisa/events{/privacy}",
              "received_events_url": "https://api.github.com/users/monalisa/received_events",
              "type": "User",
              "site_admin": true
            },
            "secret_type": "adafruit_io_key",
            "secret_type_display_name": "Adafruit IO Key",
            "secret": "aio_XXXXXXXXXXXXXXXXXXXXXXXXXXXX"
          },
          {
            "number": 1,
            "created_at": "2020-11-06T18:18:30Z",
            "url": "https://api.github.com/repos/owner/repo/secret-scanning/alerts/1",
            "html_url": "https://github.com/owner/repo/security/secret-scanning/1",
            "locations_url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/1/locations",
            "state": "open",
            "resolution": null,
            "resolved_at": null,
            "resolved_by": null,
            "secret_type": "mailchimp_api_key",
            "secret_type_display_name": "Mailchimp API Key",
            "secret": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2"
          }
        ]
      },
      "secret-scanning-alert-open": {
        "value": {
          "number": 42,
          "created_at": "2020-11-06T18:18:30Z",
          "url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42",
          "html_url": "https://github.com/owner/private-repo/security/secret-scanning/42",
          "locations_url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42/locations",
          "state": "open",
          "secret_type": "mailchimp_api_key",
          "secret": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2"
        }
      },
      "secret-scanning-alert-resolved": {
        "value": {
          "number": 42,
          "created_at": "2020-11-06T18:18:30Z",
          "url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42",
          "html_url": "https://github.com/owner/private-repo/security/secret-scanning/42",
          "locations_url": "https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42/locations",
          "state": "resolved",
          "resolution": "used_in_tests",
          "resolved_at": "2020-11-16T22:42:07Z",
          "resolved_by": {
            "login": "monalisa",
            "id": 2,
            "node_id": "MDQ6VXNlcjI=",
            "avatar_url": "https://alambic.github.com/avatars/u/2?",
            "gravatar_id": "",
            "url": "https://api.github.com/users/monalisa",
            "html_url": "https://github.com/monalisa",
            "followers_url": "https://api.github.com/users/monalisa/followers",
            "following_url": "https://api.github.com/users/monalisa/following{/other_user}",
            "gists_url": "https://api.github.com/users/monalisa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/monalisa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/monalisa/subscriptions",
            "organizations_url": "https://api.github.com/users/monalisa/orgs",
            "repos_url": "https://api.github.com/users/monalisa/repos",
            "events_url": "https://api.github.com/users/monalisa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/monalisa/received_events",
            "type": "User",
            "site_admin": true
          },
          "secret_type": "mailchimp_api_key",
          "secret": "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2"
        }
      },
      "minimal-repository": {
        "value": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "language": null,
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": false,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "visibility": "public",
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "push": false,
            "pull": true
          },
          "template_repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World-Template",
            "full_name": "octocat/Hello-World-Template",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World-Template",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World-Template",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World-Template.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World-Template.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
            "homepage": "https://github.com",
            "language": null,
            "forks": 9,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "watchers": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues": 0,
            "open_issues_count": 0,
            "is_template": true,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "url": "https://api.github.com/licenses/mit",
              "spdx_id": "MIT",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "https://api.github.com/licenses/mit"
            },
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "admin": false,
              "push": false,
              "pull": true
            },
            "allow_rebase_merge": true,
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "allow_squash_merge": true,
            "allow_auto_merge": false,
            "delete_branch_on_merge": true,
            "allow_merge_commit": true,
            "allow_forking": true,
            "subscribers_count": 42,
            "network_count": 0
          }
        }
      },
      "public-repository-items": {
        "value": [
          {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World",
            "full_name": "octocat/Hello-World",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
            "hooks_url": "http://api.github.com/repos/octocat/Hello-World/hooks"
          }
        ]
      },
      "code-search-result-item-paginated": {
        "value": {
          "total_count": 7,
          "incomplete_results": false,
          "items": [
            {
              "name": "classes.js",
              "path": "src/attributes/classes.js",
              "sha": "d7212f9dee2dcc18f084d7df8f417b80846ded5a",
              "url": "https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4",
              "git_url": "https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a",
              "html_url": "https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js",
              "repository": {
                "id": 167174,
                "node_id": "MDEwOlJlcG9zaXRvcnkxNjcxNzQ=",
                "name": "jquery",
                "full_name": "jquery/jquery",
                "owner": {
                  "login": "jquery",
                  "id": 70142,
                  "node_id": "MDQ6VXNlcjcwMTQy",
                  "avatar_url": "https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/jquery",
                  "html_url": "https://github.com/jquery",
                  "followers_url": "https://api.github.com/users/jquery/followers",
                  "following_url": "https://api.github.com/users/jquery/following{/other_user}",
                  "gists_url": "https://api.github.com/users/jquery/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/jquery/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/jquery/subscriptions",
                  "organizations_url": "https://api.github.com/users/jquery/orgs",
                  "repos_url": "https://api.github.com/users/jquery/repos",
                  "events_url": "https://api.github.com/users/jquery/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/jquery/received_events",
                  "type": "Organization",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/jquery/jquery",
                "description": "jQuery JavaScript Library",
                "fork": false,
                "url": "https://api.github.com/repos/jquery/jquery",
                "forks_url": "https://api.github.com/repos/jquery/jquery/forks",
                "keys_url": "https://api.github.com/repos/jquery/jquery/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/jquery/jquery/teams",
                "hooks_url": "https://api.github.com/repos/jquery/jquery/hooks",
                "issue_events_url": "https://api.github.com/repos/jquery/jquery/issues/events{/number}",
                "events_url": "https://api.github.com/repos/jquery/jquery/events",
                "assignees_url": "https://api.github.com/repos/jquery/jquery/assignees{/user}",
                "branches_url": "https://api.github.com/repos/jquery/jquery/branches{/branch}",
                "tags_url": "https://api.github.com/repos/jquery/jquery/tags",
                "blobs_url": "https://api.github.com/repos/jquery/jquery/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/jquery/jquery/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/jquery/jquery/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/jquery/jquery/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/jquery/jquery/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/jquery/jquery/languages",
                "stargazers_url": "https://api.github.com/repos/jquery/jquery/stargazers",
                "contributors_url": "https://api.github.com/repos/jquery/jquery/contributors",
                "subscribers_url": "https://api.github.com/repos/jquery/jquery/subscribers",
                "subscription_url": "https://api.github.com/repos/jquery/jquery/subscription",
                "commits_url": "https://api.github.com/repos/jquery/jquery/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/jquery/jquery/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/jquery/jquery/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/jquery/jquery/issues/comments/{number}",
                "contents_url": "https://api.github.com/repos/jquery/jquery/contents/{+path}",
                "compare_url": "https://api.github.com/repos/jquery/jquery/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/jquery/jquery/merges",
                "archive_url": "https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/jquery/jquery/downloads",
                "issues_url": "https://api.github.com/repos/jquery/jquery/issues{/number}",
                "pulls_url": "https://api.github.com/repos/jquery/jquery/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/jquery/jquery/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/jquery/jquery/labels{/name}",
                "deployments_url": "http://api.github.com/repos/octocat/Hello-World/deployments",
                "releases_url": "http://api.github.com/repos/octocat/Hello-World/releases{/id}"
              },
              "score": 1
            }
          ]
        }
      },
      "commit-search-result-item-paginated": {
        "value": {
          "total_count": 1,
          "incomplete_results": false,
          "items": [
            {
              "url": "https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f",
              "sha": "bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f",
              "html_url": "https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f",
              "comments_url": "https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments",
              "commit": {
                "url": "https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f",
                "author": {
                  "date": "2014-02-04T14:38:36-08:00",
                  "name": "The Octocat",
                  "email": "octocat@nowhere.com"
                },
                "committer": {
                  "date": "2014-02-12T15:18:55-08:00",
                  "name": "The Octocat",
                  "email": "octocat@nowhere.com"
                },
                "message": "Create styles.css and updated README",
                "tree": {
                  "url": "https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68",
                  "sha": "a639e96f9038797fba6e0469f94a4b0cc459fa68"
                },
                "comment_count": 8
              },
              "author": {
                "login": "octocat",
                "id": 583231,
                "node_id": "MDQ6VXNlcjU4MzIzMQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/583231?v=3",
                "gravatar_id": "",
                "url": "https://api.github.com/users/octocat",
                "html_url": "https://github.com/octocat",
                "followers_url": "https://api.github.com/users/octocat/followers",
                "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                "organizations_url": "https://api.github.com/users/octocat/orgs",
                "repos_url": "https://api.github.com/users/octocat/repos",
                "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                "received_events_url": "https://api.github.com/users/octocat/received_events",
                "type": "User",
                "site_admin": false
              },
              "committer": {},
              "parents": [
                {
                  "url": "https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4",
                  "html_url": "https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4",
                  "sha": "a30c19e3f13765a3b48829788bc1cb8b4e95cee4"
                }
              ],
              "repository": {
                "id": 1300192,
                "node_id": "MDEwOlJlcG9zaXRvcnkxMzAwMTky",
                "name": "Spoon-Knife",
                "full_name": "octocat/Spoon-Knife",
                "owner": {
                  "login": "octocat",
                  "id": 583231,
                  "node_id": "MDQ6VXNlcjU4MzIzMQ==",
                  "avatar_url": "https://avatars.githubusercontent.com/u/583231?v=3",
                  "gravatar_id": "",
                  "url": "https://api.github.com/users/octocat",
                  "html_url": "https://github.com/octocat",
                  "followers_url": "https://api.github.com/users/octocat/followers",
                  "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                  "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                  "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                  "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                  "organizations_url": "https://api.github.com/users/octocat/orgs",
                  "repos_url": "https://api.github.com/users/octocat/repos",
                  "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                  "received_events_url": "https://api.github.com/users/octocat/received_events",
                  "type": "User",
                  "site_admin": false
                },
                "private": false,
                "html_url": "https://github.com/octocat/Spoon-Knife",
                "description": "This repo is for demonstration purposes only.",
                "fork": false,
                "url": "https://api.github.com/repos/octocat/Spoon-Knife",
                "forks_url": "https://api.github.com/repos/octocat/Spoon-Knife/forks",
                "keys_url": "https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/octocat/Spoon-Knife/teams",
                "hooks_url": "https://api.github.com/repos/octocat/Spoon-Knife/hooks",
                "issue_events_url": "https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}",
                "events_url": "https://api.github.com/repos/octocat/Spoon-Knife/events",
                "assignees_url": "https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}",
                "branches_url": "https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}",
                "tags_url": "https://api.github.com/repos/octocat/Spoon-Knife/tags",
                "blobs_url": "https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/octocat/Spoon-Knife/languages",
                "stargazers_url": "https://api.github.com/repos/octocat/Spoon-Knife/stargazers",
                "contributors_url": "https://api.github.com/repos/octocat/Spoon-Knife/contributors",
                "subscribers_url": "https://api.github.com/repos/octocat/Spoon-Knife/subscribers",
                "subscription_url": "https://api.github.com/repos/octocat/Spoon-Knife/subscription",
                "commits_url": "https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}",
                "compare_url": "https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/octocat/Spoon-Knife/merges",
                "archive_url": "https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/octocat/Spoon-Knife/downloads",
                "issues_url": "https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}",
                "pulls_url": "https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}",
                "releases_url": "https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}",
                "deployments_url": "https://api.github.com/repos/octocat/Spoon-Knife/deployments"
              },
              "score": 1,
              "node_id": "MDQ6VXNlcjU4MzIzMQ=="
            }
          ]
        }
      },
      "team-repository-alternative-response-with-extra-repository-information": {
        "value": {
          "id": 1296269,
          "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
          "name": "Hello-World",
          "full_name": "octocat/Hello-World",
          "owner": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          },
          "private": false,
          "html_url": "https://github.com/octocat/Hello-World",
          "description": "This your first repo!",
          "fork": false,
          "url": "https://api.github.com/repos/octocat/Hello-World",
          "archive_url": "https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}",
          "assignees_url": "https://api.github.com/repos/octocat/Hello-World/assignees{/user}",
          "blobs_url": "https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}",
          "branches_url": "https://api.github.com/repos/octocat/Hello-World/branches{/branch}",
          "collaborators_url": "https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}",
          "comments_url": "https://api.github.com/repos/octocat/Hello-World/comments{/number}",
          "commits_url": "https://api.github.com/repos/octocat/Hello-World/commits{/sha}",
          "compare_url": "https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}",
          "contents_url": "https://api.github.com/repos/octocat/Hello-World/contents/{+path}",
          "contributors_url": "https://api.github.com/repos/octocat/Hello-World/contributors",
          "deployments_url": "https://api.github.com/repos/octocat/Hello-World/deployments",
          "downloads_url": "https://api.github.com/repos/octocat/Hello-World/downloads",
          "events_url": "https://api.github.com/repos/octocat/Hello-World/events",
          "forks_url": "https://api.github.com/repos/octocat/Hello-World/forks",
          "git_commits_url": "https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}",
          "git_refs_url": "https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}",
          "git_tags_url": "https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}",
          "git_url": "git:github.com/octocat/Hello-World.git",
          "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}",
          "issue_events_url": "https://api.github.com/repos/octocat/Hello-World/issues/events{/number}",
          "issues_url": "https://api.github.com/repos/octocat/Hello-World/issues{/number}",
          "keys_url": "https://api.github.com/repos/octocat/Hello-World/keys{/key_id}",
          "labels_url": "https://api.github.com/repos/octocat/Hello-World/labels{/name}",
          "languages_url": "https://api.github.com/repos/octocat/Hello-World/languages",
          "merges_url": "https://api.github.com/repos/octocat/Hello-World/merges",
          "milestones_url": "https://api.github.com/repos/octocat/Hello-World/milestones{/number}",
          "notifications_url": "https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}",
          "pulls_url": "https://api.github.com/repos/octocat/Hello-World/pulls{/number}",
          "releases_url": "https://api.github.com/repos/octocat/Hello-World/releases{/id}",
          "ssh_url": "git@github.com:octocat/Hello-World.git",
          "stargazers_url": "https://api.github.com/repos/octocat/Hello-World/stargazers",
          "statuses_url": "https://api.github.com/repos/octocat/Hello-World/statuses/{sha}",
          "subscribers_url": "https://api.github.com/repos/octocat/Hello-World/subscribers",
          "subscription_url": "https://api.github.com/repos/octocat/Hello-World/subscription",
          "tags_url": "https://api.github.com/repos/octocat/Hello-World/tags",
          "teams_url": "https://api.github.com/repos/octocat/Hello-World/teams",
          "trees_url": "https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}",
          "clone_url": "https://github.com/octocat/Hello-World.git",
          "mirror_url": "git:git.example.com/octocat/Hello-World",
          "hooks_url": "https://api.github.com/repos/octocat/Hello-World/hooks",
          "svn_url": "https://svn.github.com/octocat/Hello-World",
          "homepage": "https://github.com",
          "forks_count": 9,
          "stargazers_count": 80,
          "watchers_count": 80,
          "size": 108,
          "default_branch": "master",
          "open_issues_count": 0,
          "is_template": false,
          "topics": [
            "octocat",
            "atom",
            "electron",
            "api"
          ],
          "has_issues": true,
          "has_projects": true,
          "has_wiki": true,
          "has_pages": false,
          "has_downloads": true,
          "archived": false,
          "disabled": false,
          "visibility": "public",
          "pushed_at": "2011-01-26T19:06:43Z",
          "created_at": "2011-01-26T19:01:12Z",
          "updated_at": "2011-01-26T19:14:43Z",
          "permissions": {
            "admin": false,
            "maintain": false,
            "push": false,
            "triage": false,
            "pull": true
          },
          "allow_rebase_merge": true,
          "template_repository": {
            "id": 1296269,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjk2MjY5",
            "name": "Hello-World-Template",
            "full_name": "octocat/Hello-World-Template",
            "owner": {
              "login": "octocat",
              "id": 1,
              "node_id": "MDQ6VXNlcjE=",
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "",
              "url": "https://api.github.com/users/octocat",
              "html_url": "https://github.com/octocat",
              "followers_url": "https://api.github.com/users/octocat/followers",
              "following_url": "https://api.github.com/users/octocat/following{/other_user}",
              "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
              "organizations_url": "https://api.github.com/users/octocat/orgs",
              "repos_url": "https://api.github.com/users/octocat/repos",
              "events_url": "https://api.github.com/users/octocat/events{/privacy}",
              "received_events_url": "https://api.github.com/users/octocat/received_events",
              "type": "User",
              "site_admin": false
            },
            "private": false,
            "html_url": "https://github.com/octocat/Hello-World-Template",
            "description": "This your first repo!",
            "fork": false,
            "url": "https://api.github.com/repos/octocat/Hello-World-Template",
            "archive_url": "https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}",
            "assignees_url": "https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}",
            "collaborators_url": "https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}",
            "commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}",
            "compare_url": "https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/octocat/Hello-World-Template/contributors",
            "deployments_url": "https://api.github.com/repos/octocat/Hello-World-Template/deployments",
            "downloads_url": "https://api.github.com/repos/octocat/Hello-World-Template/downloads",
            "events_url": "https://api.github.com/repos/octocat/Hello-World-Template/events",
            "forks_url": "https://api.github.com/repos/octocat/Hello-World-Template/forks",
            "git_commits_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}",
            "git_url": "git:github.com/octocat/Hello-World-Template.git",
            "issue_comment_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}",
            "keys_url": "https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}",
            "languages_url": "https://api.github.com/repos/octocat/Hello-World-Template/languages",
            "merges_url": "https://api.github.com/repos/octocat/Hello-World-Template/merges",
            "milestones_url": "https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}",
            "pulls_url": "https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}",
            "releases_url": "https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}",
            "ssh_url": "git@github.com:octocat/Hello-World-Template.git",
            "stargazers_url": "https://api.github.com/repos/octocat/Hello-World-Template/stargazers",
            "statuses_url": "https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscribers",
            "subscription_url": "https://api.github.com/repos/octocat/Hello-World-Template/subscription",
            "tags_url": "https://api.github.com/repos/octocat/Hello-World-Template/tags",
            "teams_url": "https://api.github.com/repos/octocat/Hello-World-Template/teams",
            "trees_url": "https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}",
            "clone_url": "https://github.com/octocat/Hello-World-Template.git",
            "mirror_url": "git:git.example.com/octocat/Hello-World-Template",
            "hooks_url": "https://api.github.com/repos/octocat/Hello-World-Template/hooks",
            "svn_url": "https://svn.github.com/octocat/Hello-World-Template",
            "homepage": "https://github.com",
            "language": null,
            "forks": 9,
            "forks_count": 9,
            "stargazers_count": 80,
            "watchers_count": 80,
            "watchers": 80,
            "size": 108,
            "default_branch": "master",
            "open_issues": 0,
            "open_issues_count": 0,
            "is_template": true,
            "license": {
              "key": "mit",
              "name": "MIT License",
              "url": "https://api.github.com/licenses/mit",
              "spdx_id": "MIT",
              "node_id": "MDc6TGljZW5zZW1pdA==",
              "html_url": "https://api.github.com/licenses/mit"
            },
            "topics": [
              "octocat",
              "atom",
              "electron",
              "api"
            ],
            "has_issues": true,
            "has_projects": true,
            "has_wiki": true,
            "has_pages": false,
            "has_downloads": true,
            "archived": false,
            "disabled": false,
            "visibility": "public",
            "pushed_at": "2011-01-26T19:06:43Z",
            "created_at": "2011-01-26T19:01:12Z",
            "updated_at": "2011-01-26T19:14:43Z",
            "permissions": {
              "pull": true,
              "triage": false,
              "push": false,
              "maintain": false,
              "admin": false
            },
            "allow_rebase_merge": true,
            "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
            "allow_squash_merge": true,
            "allow_auto_merge": false,
            "delete_branch_on_merge": true,
            "allow_merge_commit": true,
            "subscribers_count": 42,
            "network_count": 0
          },
          "temp_clone_token": "ABTLWHOULUVAXGTRYU7OC2876QJ2O",
          "allow_squash_merge": true,
          "allow_auto_merge": false,
          "delete_branch_on_merge": true,
          "allow_merge_commit": true,
          "subscribers_count": 42,
          "network_count": 0,
          "license": {
            "key": "mit",
            "name": "MIT License",
            "url": "https://api.github.com/licenses/mit",
            "spdx_id": "MIT",
            "node_id": "MDc6TGljZW5zZW1pdA==",
            "html_url": "https://api.github.com/licenses/mit"
          },
          "forks": 1,
          "open_issues": 1,
          "watchers": 1
        }
      }
    },
    "headers": {
      "link": {
        "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "not_found": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "service_unavailable": {
        "description": "Service unavailable",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "documentation_url": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "not_modified": {
        "description": "Not modified"
      },
      "requires_authentication": {
        "description": "Requires authentication",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "validation_failed": {
        "description": "Validation failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/validation-error"
            }
          }
        }
      },
      "gone": {
        "description": "Gone",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          }
        }
      },
      "bad_request": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/basic-error"
            }
          },
          "application/scim+json": {
            "schema": {
              "$ref": "#/components/schemas/scim-error"
            }
          }
        }
      }
    }
  }
}