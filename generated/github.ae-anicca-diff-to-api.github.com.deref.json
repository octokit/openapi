{
  "paths": {
    "added": {
      "/admin/hooks": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#list-global-webhooks"
          },
          "operationId": "enterprise-admin/list-global-webhooks",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "active": true,
                          "config": {
                            "content_type": "json",
                            "insecure_ssl": "0",
                            "secret": "********",
                            "url": "https://example.com"
                          },
                          "created_at": "2017-12-07T00:14:59Z",
                          "events": [
                            "organization",
                            "user"
                          ],
                          "id": 1,
                          "name": "web",
                          "ping_url": "https://api.github.com/admin/hooks/1/pings",
                          "type": "Global",
                          "updated_at": "2017-12-07T00:14:59Z",
                          "url": "https://api.github.com/admin/hooks/1"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "active": {
                          "type": "boolean"
                        },
                        "config": {
                          "properties": {
                            "content_type": {
                              "type": "string"
                            },
                            "insecure_ssl": {
                              "type": "string"
                            },
                            "secret": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "events": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "ping_url": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List global webhooks",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        },
        "post": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#create-a-global-webhook"
          },
          "operationId": "enterprise-admin/create-global-webhook",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "config": {
                        "content_type": "json",
                        "secret": "secret",
                        "url": "https://example.com/webhook"
                      },
                      "events": [
                        "organization",
                        "user"
                      ],
                      "name": "web"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "active": {
                      "default": true,
                      "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                      "type": "boolean"
                    },
                    "config": {
                      "description": "Key/value pairs to provide settings for this webhook.",
                      "properties": {
                        "content_type": {
                          "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                          "type": "string"
                        },
                        "insecure_ssl": {
                          "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                          "type": "string"
                        },
                        "secret": {
                          "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/github-ae@latest/webhooks/event-payloads/#delivery-headers) header.",
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL to which the payloads will be delivered.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    },
                    "events": {
                      "description": "The [events](https://docs.github.com/github-ae@latest/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "Must be passed as \"web\".",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "config"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "config": {
                          "content_type": "json",
                          "insecure_ssl": "0",
                          "secret": "********",
                          "url": "https://example.com"
                        },
                        "created_at": "2017-12-07T00:14:59Z",
                        "events": [
                          "organization",
                          "user"
                        ],
                        "id": 1,
                        "name": "web",
                        "ping_url": "https://api.github.com/admin/hooks/1/pings",
                        "type": "Global",
                        "updated_at": "2017-12-07T00:14:59Z",
                        "url": "https://api.github.com/admin/hooks/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "config": {
                        "properties": {
                          "content_type": {
                            "type": "string"
                          },
                          "insecure_ssl": {
                            "type": "string"
                          },
                          "secret": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "ping_url": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        }
      },
      "/admin/hooks/{hook_id}": {
        "delete": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-global-webhook"
          },
          "operationId": "enterprise-admin/delete-global-webhook",
          "parameters": [
            {
              "description": "The unique identifier of the hook.",
              "in": "path",
              "name": "hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-a-global-webhook"
          },
          "operationId": "enterprise-admin/get-global-webhook",
          "parameters": [
            {
              "description": "The unique identifier of the hook.",
              "in": "path",
              "name": "hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "config": {
                          "content_type": "json",
                          "insecure_ssl": "0",
                          "secret": "********",
                          "url": "https://example.com"
                        },
                        "created_at": "2017-12-07T00:14:59Z",
                        "events": [
                          "organization",
                          "user"
                        ],
                        "id": 1,
                        "name": "web",
                        "ping_url": "https://api.github.com/admin/hooks/1/pings",
                        "type": "Global",
                        "updated_at": "2017-12-07T00:14:59Z",
                        "url": "https://api.github.com/admin/hooks/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "config": {
                        "properties": {
                          "content_type": {
                            "type": "string"
                          },
                          "insecure_ssl": {
                            "type": "string"
                          },
                          "secret": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "ping_url": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Parameters that are not provided will be overwritten with the default value or removed if no default exists.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#update-a-global-webhook"
          },
          "operationId": "enterprise-admin/update-global-webhook",
          "parameters": [
            {
              "description": "The unique identifier of the hook.",
              "in": "path",
              "name": "hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "config": {
                        "url": "https://example.com/webhook"
                      },
                      "events": [
                        "organization"
                      ]
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "active": {
                      "default": true,
                      "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                      "type": "boolean"
                    },
                    "config": {
                      "description": "Key/value pairs to provide settings for this webhook.",
                      "properties": {
                        "content_type": {
                          "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.",
                          "type": "string"
                        },
                        "insecure_ssl": {
                          "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**",
                          "type": "string"
                        },
                        "secret": {
                          "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/github-ae@latest/webhooks/event-payloads/#delivery-headers) header.",
                          "type": "string"
                        },
                        "url": {
                          "description": "The URL to which the payloads will be delivered.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    },
                    "events": {
                      "description": "The [events](https://docs.github.com/github-ae@latest/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "active": true,
                        "config": {
                          "content_type": "form",
                          "insecure_ssl": "0",
                          "url": "https://example.com"
                        },
                        "created_at": "2017-12-07T00:14:59Z",
                        "events": [
                          "organization"
                        ],
                        "id": 1,
                        "name": "web",
                        "ping_url": "https://api.github.com/admin/hooks/1/pings",
                        "type": "Global",
                        "updated_at": "2017-12-07T00:14:59Z",
                        "url": "https://api.github.com/admin/hooks/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "config": {
                        "properties": {
                          "content_type": {
                            "type": "string"
                          },
                          "insecure_ssl": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "events": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "ping_url": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        }
      },
      "/admin/hooks/{hook_id}/pings": {
        "post": {
          "deprecated": null,
          "description": "This will trigger a [ping event](https://docs.github.com/github-ae@latest/webhooks/#ping-event) to be sent to the webhook.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#ping-a-global-webhook"
          },
          "operationId": "enterprise-admin/ping-global-webhook",
          "parameters": [
            {
              "description": "The unique identifier of the hook.",
              "in": "path",
              "name": "hook_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Ping a global webhook",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "global-webhooks"
          }
        }
      },
      "/admin/keys": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#list-public-keys"
          },
          "operationId": "enterprise-admin/list-public-keys",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The direction to sort the results by.",
              "in": "query",
              "name": "direction",
              "required": false,
              "schema": {
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "default": "created",
                "enum": [
                  "created",
                  "updated",
                  "accessed"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Only show public keys accessed after the given time.",
              "in": "query",
              "name": "since",
              "required": false,
              "schema": {
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "created_at": "2020-06-11T21:31:57Z",
                          "id": 2,
                          "key": "2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234",
                          "last_used": "2020-06-11T22:31:57Z",
                          "read_only": false,
                          "repository_id": 2,
                          "title": "ssh-rsa AAAAB3NzaC1yc2EAAA",
                          "url": "https://api.github.com/user/keys/2",
                          "user_id": 1,
                          "verified": false
                        },
                        {
                          "created_at": "2020-06-11T21:31:57Z",
                          "id": 3,
                          "key": "9Og8iYjAyymI9LvABpJerYrMxURPc8r+dB7TJyvv1234",
                          "last_used": "2020-06-11T22:31:57Z",
                          "read_only": false,
                          "repository_id": 2,
                          "title": "ssh-rsa AAAAB3NzaC1yc2EAAA",
                          "url": "https://api.github.com/user/keys/2",
                          "user_id": 1,
                          "verified": false
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "key": {
                          "type": "string"
                        },
                        "read_only": {
                          "type": "boolean"
                        },
                        "repository_id": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "title": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "user_id": {
                          "nullable": true,
                          "type": "integer"
                        },
                        "verified": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "key",
                        "url",
                        "title",
                        "verified",
                        "created_at",
                        "read_only",
                        "last_used",
                        "user_id",
                        "repository_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List public keys",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/keys/{key_ids}": {
        "delete": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-public-key"
          },
          "operationId": "enterprise-admin/delete-public-key",
          "parameters": [
            {
              "description": "The unique identifier of the key.",
              "in": "path",
              "name": "key_ids",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a public key",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/organizations": {
        "post": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#create-an-organization"
          },
          "operationId": "enterprise-admin/create-org",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "admin": "monalisaoctocat",
                      "login": "github",
                      "profile_name": "GitHub, Inc."
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "admin": {
                      "description": "The login of the user who will manage this organization.",
                      "type": "string"
                    },
                    "login": {
                      "description": "The organization's username.",
                      "type": "string"
                    },
                    "profile_name": {
                      "description": "The organization's display name.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "admin"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                        "description": "A great organization",
                        "events_url": "https://api.github.com/orgs/github/events",
                        "hooks_url": "https://api.github.com/orgs/github/hooks",
                        "id": 1,
                        "issues_url": "https://api.github.com/orgs/github/issues",
                        "login": "github",
                        "members_url": "https://api.github.com/orgs/github/members{/member}",
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
                        "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
                        "repos_url": "https://api.github.com/orgs/github/repos",
                        "url": "https://api.github.com/orgs/github"
                      }
                    }
                  },
                  "schema": {
                    "description": "Organization Simple",
                    "properties": {
                      "avatar_url": {
                        "example": "https://github.com/images/error/octocat_happy.gif",
                        "type": "string"
                      },
                      "description": {
                        "example": "A great organization",
                        "nullable": true,
                        "type": "string"
                      },
                      "events_url": {
                        "example": "https://api.github.com/orgs/github/events",
                        "format": "uri",
                        "type": "string"
                      },
                      "hooks_url": {
                        "example": "https://api.github.com/orgs/github/hooks",
                        "type": "string"
                      },
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "issues_url": {
                        "example": "https://api.github.com/orgs/github/issues",
                        "type": "string"
                      },
                      "login": {
                        "example": "github",
                        "type": "string"
                      },
                      "members_url": {
                        "example": "https://api.github.com/orgs/github/members{/member}",
                        "type": "string"
                      },
                      "node_id": {
                        "example": "MDEyOk9yZ2FuaXphdGlvbjE=",
                        "type": "string"
                      },
                      "public_members_url": {
                        "example": "https://api.github.com/orgs/github/public_members{/member}",
                        "type": "string"
                      },
                      "repos_url": {
                        "example": "https://api.github.com/orgs/github/repos",
                        "format": "uri",
                        "type": "string"
                      },
                      "url": {
                        "example": "https://api.github.com/orgs/github",
                        "format": "uri",
                        "type": "string"
                      }
                    },
                    "required": [
                      "login",
                      "url",
                      "id",
                      "node_id",
                      "repos_url",
                      "events_url",
                      "hooks_url",
                      "issues_url",
                      "members_url",
                      "public_members_url",
                      "avatar_url",
                      "description"
                    ],
                    "title": "Organization Simple",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create an organization",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "orgs"
          }
        }
      },
      "/admin/organizations/{org}": {
        "patch": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#update-an-organization-name"
          },
          "operationId": "enterprise-admin/update-org-name",
          "parameters": [
            {
              "description": "The organization name. The name is not case sensitive.",
              "in": "path",
              "name": "org",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "login": "the-new-octocats"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "login": {
                      "description": "The organization's new name.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "login"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "202": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "message": "Job queued to rename organization. It may take a few minutes to complete.",
                        "url": "https://<hostname>/api/v3/organizations/1"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Update an organization name",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "orgs"
          }
        }
      },
      "/admin/pre-receive-environments": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#list-pre-receive-environments"
          },
          "operationId": "enterprise-admin/list-pre-receive-environments",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "The direction to sort the results by.",
              "in": "query",
              "name": "direction",
              "required": false,
              "schema": {
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "type": "string"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "in": "query",
              "name": "sort",
              "required": false,
              "schema": {
                "default": "created",
                "enum": [
                  "created",
                  "updated",
                  "name"
                ],
                "type": "string"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": true,
                          "download": {
                            "downloaded_at": "2016-05-26T07:42:53-05:00",
                            "message": null,
                            "state": "not_started",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest"
                          },
                          "hooks_count": 14,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/1",
                          "id": 1,
                          "image_url": "githubenterprise://internal",
                          "name": "Default",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1"
                        },
                        {
                          "created_at": "2016-05-20T11:35:45-05:00",
                          "default_environment": false,
                          "download": {
                            "downloaded_at": "2016-05-26T07:42:53-05:00",
                            "message": null,
                            "state": "success",
                            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                          },
                          "hooks_count": 1,
                          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                          "id": 2,
                          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                          "name": "DevTools Hook Env",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "default_environment": {
                          "type": "boolean"
                        },
                        "download": {
                          "properties": {
                            "downloaded_at": {
                              "nullable": true,
                              "type": "string"
                            },
                            "message": {
                              "nullable": true,
                              "type": "string"
                            },
                            "state": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "hooks_count": {
                          "type": "integer"
                        },
                        "html_url": {
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "image_url": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "List pre-receive environments",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        },
        "post": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#create-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/create-pre-receive-environment",
          "requestBody": {
            "content": {
              "application/json": {
                "examples": {
                  "default": {
                    "value": {
                      "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                      "name": "DevTools Hook Env"
                    }
                  }
                },
                "schema": {
                  "properties": {
                    "image_url": {
                      "description": "URL from which to download a tarball of this environment.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The new pre-receive environment's name.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "image_url"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "created_at": "2016-05-20T11:35:45-05:00",
                        "default_environment": false,
                        "download": {
                          "downloaded_at": null,
                          "message": null,
                          "state": "not_started",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                        },
                        "hooks_count": 1,
                        "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                        "id": 2,
                        "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                        "name": "DevTools Hook Env",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "default_environment": {
                        "type": "boolean"
                      },
                      "download": {
                        "properties": {
                          "downloaded_at": {
                            "nullable": true,
                            "type": "string"
                          },
                          "message": {
                            "nullable": true,
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "hooks_count": {
                        "type": "integer"
                      },
                      "html_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Create a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        }
      },
      "/admin/pre-receive-environments/{pre_receive_environment_id}": {
        "delete": {
          "deprecated": null,
          "description": "If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Cannot delete environment that has hooks_\n*   _Cannot delete environment when download is in progress_",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/delete-pre-receive-environment",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "examples": {
                    "client-errors": {
                      "value": {
                        "errors": [
                          {
                            "code": "custom",
                            "message": "Cannot modify or delete the default environment",
                            "resource": "PreReceiveEnvironment"
                          }
                        ],
                        "message": "Validation Failed"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Client Errors"
            }
          },
          "summary": "Delete a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        },
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/get-pre-receive-environment",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "created_at": "2016-05-20T11:35:45-05:00",
                        "default_environment": false,
                        "download": {
                          "downloaded_at": null,
                          "message": null,
                          "state": "not_started",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                        },
                        "hooks_count": 1,
                        "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                        "id": 2,
                        "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                        "name": "DevTools Hook Env",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "default_environment": {
                        "type": "boolean"
                      },
                      "download": {
                        "properties": {
                          "downloaded_at": {
                            "nullable": true,
                            "type": "string"
                          },
                          "message": {
                            "nullable": true,
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "hooks_count": {
                        "type": "integer"
                      },
                      "html_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "You cannot modify the default environment. If you attempt to modify the default environment, you will receive a `422 Unprocessable Entity` response.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#update-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/update-pre-receive-environment",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "image_url": {
                      "description": "URL from which to download a tarball of this environment.",
                      "type": "string"
                    },
                    "name": {
                      "description": "This pre-receive environment's new name.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default-response": {
                      "value": {
                        "created_at": "2016-05-20T11:35:45-05:00",
                        "default_environment": false,
                        "download": {
                          "downloaded_at": "2016-05-26T07:42:53-05:00",
                          "message": null,
                          "state": "success",
                          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest"
                        },
                        "hooks_count": 1,
                        "html_url": "https://github.example.com/admin/pre-receive-environments/2",
                        "id": 2,
                        "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
                        "name": "DevTools Hook Env",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "default_environment": {
                        "type": "boolean"
                      },
                      "download": {
                        "properties": {
                          "downloaded_at": {
                            "nullable": true,
                            "type": "string"
                          },
                          "message": {
                            "nullable": true,
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "hooks_count": {
                        "type": "integer"
                      },
                      "html_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "examples": {
                    "client-errors": {
                      "value": {
                        "errors": [
                          {
                            "code": "custom",
                            "message": "Cannot modify or delete the default environment",
                            "resource": "PreReceiveEnvironment"
                          }
                        ],
                        "message": "Validation Failed"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Client Errors"
            }
          },
          "summary": "Update a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        }
      },
      "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads": {
        "post": {
          "deprecated": null,
          "description": "Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.\n\nIf a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n* _Cannot modify or delete the default environment_\n* _Can not start a new download when a download is in progress_",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#start-a-pre-receive-environment-download"
          },
          "operationId": "enterprise-admin/start-pre-receive-environment-download",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "202": {
              "content": {
                "application/json": {
                  "examples": {
                    "default-response": {
                      "value": {
                        "downloaded_at": null,
                        "message": null,
                        "state": "not_started",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "downloaded_at": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            },
            "422": {
              "content": {
                "application/json": {
                  "examples": {
                    "client-errors": {
                      "value": {
                        "errors": [
                          {
                            "code": "custom",
                            "message": "Can not start a new download when a download is in progress",
                            "resource": "PreReceiveEnvironment"
                          }
                        ],
                        "message": "Validation Failed"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "errors": {
                        "items": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Client Errors"
            }
          },
          "summary": "Start a pre-receive environment download",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        }
      },
      "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest": {
        "get": {
          "deprecated": null,
          "description": "In addition to seeing the download status at the \"[Get a pre-receive environment](#get-a-pre-receive-environment)\" endpoint, there is also this separate endpoint for just the download status.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-the-download-status-for-a-pre-receive-environment"
          },
          "operationId": "enterprise-admin/get-download-status-for-pre-receive-environment",
          "parameters": [
            {
              "description": "The unique identifier of the pre-receive environment.",
              "in": "path",
              "name": "pre_receive_environment_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "downloaded_at": "2016-05-26T07:42:53-05:00",
                        "message": null,
                        "state": "success",
                        "url": "https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest"
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "downloaded_at": {
                        "nullable": true,
                        "type": "string"
                      },
                      "message": {
                        "nullable": true,
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the download status for a pre-receive environment",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "pre-receive-environments"
          }
        }
      },
      "/admin/tokens": {
        "get": {
          "deprecated": null,
          "description": "Lists personal access tokens for all users, including admin users.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#list-personal-access-tokens"
          },
          "operationId": "enterprise-admin/list-personal-access-tokens",
          "parameters": [
            {
              "allowReserved": null,
              "description": "The number of results per page (max 100).",
              "in": "query",
              "name": "per_page",
              "required": false,
              "schema": {
                "default": 30,
                "type": "integer"
              },
              "style": "form"
            },
            {
              "allowReserved": null,
              "description": "Page number of the results to fetch.",
              "in": "query",
              "name": "page",
              "required": false,
              "schema": {
                "default": 1,
                "type": "integer"
              },
              "style": "form"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": [
                        {
                          "app": {
                            "client_id": "abcde12345fghij67890",
                            "name": "my github app",
                            "url": "http://my-github-app.com"
                          },
                          "created_at": "2011-09-06T17:26:27Z",
                          "expires_at": "2011-09-08T17:26:27Z",
                          "fingerprint": "jklmnop12345678",
                          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                          "id": 1,
                          "note": "optional note",
                          "note_url": "http://optional/note/url",
                          "scopes": [
                            "public_repo"
                          ],
                          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                          "token_last_eight": "Ae178B4a",
                          "updated_at": "2011-09-06T20:39:23Z",
                          "url": "https://api.github.com/authorizations/1"
                        }
                      ]
                    }
                  },
                  "schema": {
                    "items": {
                      "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                      "properties": {
                        "app": {
                          "properties": {
                            "client_id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "url": {
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "client_id",
                            "name",
                            "url"
                          ],
                          "type": "object"
                        },
                        "created_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "expires_at": {
                          "format": "date-time",
                          "nullable": true,
                          "type": "string"
                        },
                        "fingerprint": {
                          "nullable": true,
                          "type": "string"
                        },
                        "hashed_token": {
                          "nullable": true,
                          "type": "string"
                        },
                        "id": {
                          "type": "integer"
                        },
                        "installation": {
                          "nullable": true,
                          "properties": {
                            "account": {
                              "description": "Simple User",
                              "properties": {
                                "avatar_url": {
                                  "example": "https://github.com/images/error/octocat_happy.gif",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "email": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "events_url": {
                                  "example": "https://api.github.com/users/octocat/events{/privacy}",
                                  "type": "string"
                                },
                                "followers_url": {
                                  "example": "https://api.github.com/users/octocat/followers",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "following_url": {
                                  "example": "https://api.github.com/users/octocat/following{/other_user}",
                                  "type": "string"
                                },
                                "gists_url": {
                                  "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                  "type": "string"
                                },
                                "gravatar_id": {
                                  "example": "41d064eb2195891e12d0413f63227ea7",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "html_url": {
                                  "example": "https://github.com/octocat",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "id": {
                                  "example": 1,
                                  "type": "integer"
                                },
                                "login": {
                                  "example": "octocat",
                                  "type": "string"
                                },
                                "name": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "node_id": {
                                  "example": "MDQ6VXNlcjE=",
                                  "type": "string"
                                },
                                "organizations_url": {
                                  "example": "https://api.github.com/users/octocat/orgs",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "received_events_url": {
                                  "example": "https://api.github.com/users/octocat/received_events",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "repos_url": {
                                  "example": "https://api.github.com/users/octocat/repos",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "site_admin": {
                                  "type": "boolean"
                                },
                                "starred_at": {
                                  "example": "\"2020-07-09T00:17:55Z\"",
                                  "type": "string"
                                },
                                "starred_url": {
                                  "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                  "type": "string"
                                },
                                "subscriptions_url": {
                                  "example": "https://api.github.com/users/octocat/subscriptions",
                                  "format": "uri",
                                  "type": "string"
                                },
                                "type": {
                                  "example": "User",
                                  "type": "string"
                                },
                                "url": {
                                  "example": "https://api.github.com/users/octocat",
                                  "format": "uri",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "avatar_url",
                                "events_url",
                                "followers_url",
                                "following_url",
                                "gists_url",
                                "gravatar_id",
                                "html_url",
                                "id",
                                "node_id",
                                "login",
                                "organizations_url",
                                "received_events_url",
                                "repos_url",
                                "site_admin",
                                "starred_url",
                                "subscriptions_url",
                                "type",
                                "url"
                              ],
                              "title": "Simple User",
                              "type": "object"
                            },
                            "has_multiple_single_files": {
                              "example": true,
                              "type": "boolean"
                            },
                            "permissions": {
                              "description": "The permissions granted to the user-to-server access token.",
                              "example": {
                                "contents": "read",
                                "deployments": "write",
                                "issues": "read",
                                "single_file": "read"
                              },
                              "properties": {
                                "actions": {
                                  "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "administration": {
                                  "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "checks": {
                                  "description": "The level of permission to grant the access token for checks on code.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "contents": {
                                  "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "deployments": {
                                  "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "environments": {
                                  "description": "The level of permission to grant the access token for managing repository environments.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "issues": {
                                  "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "members": {
                                  "description": "The level of permission to grant the access token for organization teams and members.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "metadata": {
                                  "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_administration": {
                                  "description": "The level of permission to grant the access token to manage access to an organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_hooks": {
                                  "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_packages": {
                                  "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_plan": {
                                  "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                  "enum": [
                                    "read"
                                  ],
                                  "type": "string"
                                },
                                "organization_projects": {
                                  "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                  "enum": [
                                    "read",
                                    "write",
                                    "admin"
                                  ],
                                  "type": "string"
                                },
                                "organization_secrets": {
                                  "description": "The level of permission to grant the access token to manage organization secrets.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_self_hosted_runners": {
                                  "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "organization_user_blocking": {
                                  "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "packages": {
                                  "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "pages": {
                                  "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "pull_requests": {
                                  "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "repository_hooks": {
                                  "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "repository_projects": {
                                  "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                  "enum": [
                                    "read",
                                    "write",
                                    "admin"
                                  ],
                                  "type": "string"
                                },
                                "secret_scanning_alerts": {
                                  "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "secrets": {
                                  "description": "The level of permission to grant the access token to manage repository secrets.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "security_events": {
                                  "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "single_file": {
                                  "description": "The level of permission to grant the access token to manage just a single file.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "statuses": {
                                  "description": "The level of permission to grant the access token for commit statuses.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "team_discussions": {
                                  "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "vulnerability_alerts": {
                                  "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                  "enum": [
                                    "read",
                                    "write"
                                  ],
                                  "type": "string"
                                },
                                "workflows": {
                                  "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                  "enum": [
                                    "write"
                                  ],
                                  "type": "string"
                                }
                              },
                              "title": "App Permissions",
                              "type": "object"
                            },
                            "repositories_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "repository_selection": {
                              "description": "Describe whether all repositories have been selected or there's a selection involved",
                              "enum": [
                                "all",
                                "selected"
                              ],
                              "type": "string"
                            },
                            "single_file_name": {
                              "example": "config.yaml",
                              "nullable": true,
                              "type": "string"
                            },
                            "single_file_paths": {
                              "example": [
                                "config.yml",
                                ".github/issue_TEMPLATE.md"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "permissions",
                            "repository_selection",
                            "single_file_name",
                            "repositories_url",
                            "account"
                          ],
                          "title": "Scoped Installation",
                          "type": "object"
                        },
                        "note": {
                          "nullable": true,
                          "type": "string"
                        },
                        "note_url": {
                          "format": "uri",
                          "nullable": true,
                          "type": "string"
                        },
                        "scopes": {
                          "description": "A list of scopes that this authorization is in.",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "token": {
                          "type": "string"
                        },
                        "token_last_eight": {
                          "nullable": true,
                          "type": "string"
                        },
                        "updated_at": {
                          "format": "date-time",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "user": {
                          "description": "Simple User",
                          "nullable": true,
                          "properties": {
                            "avatar_url": {
                              "example": "https://github.com/images/error/octocat_happy.gif",
                              "format": "uri",
                              "type": "string"
                            },
                            "email": {
                              "nullable": true,
                              "type": "string"
                            },
                            "events_url": {
                              "example": "https://api.github.com/users/octocat/events{/privacy}",
                              "type": "string"
                            },
                            "followers_url": {
                              "example": "https://api.github.com/users/octocat/followers",
                              "format": "uri",
                              "type": "string"
                            },
                            "following_url": {
                              "example": "https://api.github.com/users/octocat/following{/other_user}",
                              "type": "string"
                            },
                            "gists_url": {
                              "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                              "type": "string"
                            },
                            "gravatar_id": {
                              "example": "41d064eb2195891e12d0413f63227ea7",
                              "nullable": true,
                              "type": "string"
                            },
                            "html_url": {
                              "example": "https://github.com/octocat",
                              "format": "uri",
                              "type": "string"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "login": {
                              "example": "octocat",
                              "type": "string"
                            },
                            "name": {
                              "nullable": true,
                              "type": "string"
                            },
                            "node_id": {
                              "example": "MDQ6VXNlcjE=",
                              "type": "string"
                            },
                            "organizations_url": {
                              "example": "https://api.github.com/users/octocat/orgs",
                              "format": "uri",
                              "type": "string"
                            },
                            "received_events_url": {
                              "example": "https://api.github.com/users/octocat/received_events",
                              "format": "uri",
                              "type": "string"
                            },
                            "repos_url": {
                              "example": "https://api.github.com/users/octocat/repos",
                              "format": "uri",
                              "type": "string"
                            },
                            "site_admin": {
                              "type": "boolean"
                            },
                            "starred_at": {
                              "example": "\"2020-07-09T00:17:55Z\"",
                              "type": "string"
                            },
                            "starred_url": {
                              "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                              "type": "string"
                            },
                            "subscriptions_url": {
                              "example": "https://api.github.com/users/octocat/subscriptions",
                              "format": "uri",
                              "type": "string"
                            },
                            "type": {
                              "example": "User",
                              "type": "string"
                            },
                            "url": {
                              "example": "https://api.github.com/users/octocat",
                              "format": "uri",
                              "type": "string"
                            }
                          },
                          "required": [
                            "avatar_url",
                            "events_url",
                            "followers_url",
                            "following_url",
                            "gists_url",
                            "gravatar_id",
                            "html_url",
                            "id",
                            "node_id",
                            "login",
                            "organizations_url",
                            "received_events_url",
                            "repos_url",
                            "site_admin",
                            "starred_url",
                            "subscriptions_url",
                            "type",
                            "url"
                          ],
                          "title": "Simple User",
                          "type": "object"
                        }
                      },
                      "required": [
                        "app",
                        "id",
                        "note",
                        "note_url",
                        "scopes",
                        "token",
                        "hashed_token",
                        "token_last_eight",
                        "fingerprint",
                        "url",
                        "created_at",
                        "updated_at",
                        "expires_at"
                      ],
                      "title": "Authorization",
                      "type": "object"
                    },
                    "type": "array"
                  }
                }
              },
              "description": "Response",
              "headers": {
                "Link": {
                  "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
                  "required": null,
                  "schema": {
                    "type": "string"
                  },
                  "style": "simple"
                }
              }
            }
          },
          "summary": "List personal access tokens",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/tokens/{token_id}": {
        "delete": {
          "deprecated": null,
          "description": "Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-personal-access-token"
          },
          "operationId": "enterprise-admin/delete-personal-access-token",
          "parameters": [
            {
              "description": "The unique identifier of the token.",
              "in": "path",
              "name": "token_id",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a personal access token",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/users/{username}": {
        "delete": {
          "deprecated": null,
          "description": "Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#suspend-a-user) is often a better option.\n\nYou can delete any user account except your own.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-user"
          },
          "operationId": "enterprise-admin/delete-user",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/admin/users/{username}/authorizations": {
        "delete": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-an-impersonation-oauth-token"
          },
          "operationId": "enterprise-admin/delete-impersonation-o-auth-token",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Delete an impersonation OAuth token",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        },
        "post": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#create-an-impersonation-oauth-token"
          },
          "operationId": "enterprise-admin/create-impersonation-o-auth-token",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "scopes": {
                      "description": "A list of [scopes](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "Simple User",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "Simple User",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response when getting an existing impersonation OAuth token"
            },
            "201": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "abcde12345fghij67890",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-10-06T17:26:27Z",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1"
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "Simple User",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "Simple User",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response when creating a new impersonation OAuth token"
            }
          },
          "summary": "Create an impersonation OAuth token",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      },
      "/applications/{client_id}/tokens/{access_token}": {
        "post": {
          "deprecated": true,
          "description": "**Deprecation Notice:** GitHub AE will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/github-ae@latest/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/apps#reset-an-authorization"
          },
          "operationId": "apps/reset-authorization",
          "parameters": [
            {
              "description": "The client ID of the GitHub app.",
              "examples": {
                "default": {
                  "value": "Iv1.8a61f9b3a7aba766"
                }
              },
              "in": "path",
              "name": "client_id",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            },
            {
              "in": "path",
              "name": "access_token",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "app": {
                          "client_id": "Iv1.8a61f9b3a7aba766",
                          "name": "my github app",
                          "url": "http://my-github-app.com"
                        },
                        "created_at": "2011-09-06T17:26:27Z",
                        "expires_at": "2011-09-08T17:26:27Z",
                        "fingerprint": "jklmnop12345678",
                        "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
                        "id": 1,
                        "note": "optional note",
                        "note_url": "http://optional/note/url",
                        "scopes": [
                          "public_repo",
                          "user"
                        ],
                        "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
                        "token_last_eight": "Ae178B4a",
                        "updated_at": "2011-09-06T20:39:23Z",
                        "url": "https://api.github.com/authorizations/1",
                        "user": {
                          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
                          "events_url": "https://api.github.com/users/octocat/events{/privacy}",
                          "followers_url": "https://api.github.com/users/octocat/followers",
                          "following_url": "https://api.github.com/users/octocat/following{/other_user}",
                          "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
                          "html_url": "https://github.com/octocat",
                          "id": 1,
                          "login": "octocat",
                          "node_id": "MDQ6VXNlcjE=",
                          "organizations_url": "https://api.github.com/users/octocat/orgs",
                          "received_events_url": "https://api.github.com/users/octocat/received_events",
                          "repos_url": "https://api.github.com/users/octocat/repos",
                          "site_admin": false,
                          "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                          "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
                          "type": "User",
                          "url": "https://api.github.com/users/octocat"
                        }
                      }
                    }
                  },
                  "schema": {
                    "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
                    "properties": {
                      "app": {
                        "properties": {
                          "client_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "url": {
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "client_id",
                          "name",
                          "url"
                        ],
                        "type": "object"
                      },
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "expires_at": {
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      },
                      "fingerprint": {
                        "nullable": true,
                        "type": "string"
                      },
                      "hashed_token": {
                        "nullable": true,
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "installation": {
                        "nullable": true,
                        "properties": {
                          "account": {
                            "description": "Simple User",
                            "properties": {
                              "avatar_url": {
                                "example": "https://github.com/images/error/octocat_happy.gif",
                                "format": "uri",
                                "type": "string"
                              },
                              "email": {
                                "nullable": true,
                                "type": "string"
                              },
                              "events_url": {
                                "example": "https://api.github.com/users/octocat/events{/privacy}",
                                "type": "string"
                              },
                              "followers_url": {
                                "example": "https://api.github.com/users/octocat/followers",
                                "format": "uri",
                                "type": "string"
                              },
                              "following_url": {
                                "example": "https://api.github.com/users/octocat/following{/other_user}",
                                "type": "string"
                              },
                              "gists_url": {
                                "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                                "type": "string"
                              },
                              "gravatar_id": {
                                "example": "41d064eb2195891e12d0413f63227ea7",
                                "nullable": true,
                                "type": "string"
                              },
                              "html_url": {
                                "example": "https://github.com/octocat",
                                "format": "uri",
                                "type": "string"
                              },
                              "id": {
                                "example": 1,
                                "type": "integer"
                              },
                              "login": {
                                "example": "octocat",
                                "type": "string"
                              },
                              "name": {
                                "nullable": true,
                                "type": "string"
                              },
                              "node_id": {
                                "example": "MDQ6VXNlcjE=",
                                "type": "string"
                              },
                              "organizations_url": {
                                "example": "https://api.github.com/users/octocat/orgs",
                                "format": "uri",
                                "type": "string"
                              },
                              "received_events_url": {
                                "example": "https://api.github.com/users/octocat/received_events",
                                "format": "uri",
                                "type": "string"
                              },
                              "repos_url": {
                                "example": "https://api.github.com/users/octocat/repos",
                                "format": "uri",
                                "type": "string"
                              },
                              "site_admin": {
                                "type": "boolean"
                              },
                              "starred_at": {
                                "example": "\"2020-07-09T00:17:55Z\"",
                                "type": "string"
                              },
                              "starred_url": {
                                "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                                "type": "string"
                              },
                              "subscriptions_url": {
                                "example": "https://api.github.com/users/octocat/subscriptions",
                                "format": "uri",
                                "type": "string"
                              },
                              "type": {
                                "example": "User",
                                "type": "string"
                              },
                              "url": {
                                "example": "https://api.github.com/users/octocat",
                                "format": "uri",
                                "type": "string"
                              }
                            },
                            "required": [
                              "avatar_url",
                              "events_url",
                              "followers_url",
                              "following_url",
                              "gists_url",
                              "gravatar_id",
                              "html_url",
                              "id",
                              "node_id",
                              "login",
                              "organizations_url",
                              "received_events_url",
                              "repos_url",
                              "site_admin",
                              "starred_url",
                              "subscriptions_url",
                              "type",
                              "url"
                            ],
                            "title": "Simple User",
                            "type": "object"
                          },
                          "has_multiple_single_files": {
                            "example": true,
                            "type": "boolean"
                          },
                          "permissions": {
                            "description": "The permissions granted to the user-to-server access token.",
                            "example": {
                              "contents": "read",
                              "deployments": "write",
                              "issues": "read",
                              "single_file": "read"
                            },
                            "properties": {
                              "actions": {
                                "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "administration": {
                                "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "checks": {
                                "description": "The level of permission to grant the access token for checks on code.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "contents": {
                                "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "deployments": {
                                "description": "The level of permission to grant the access token for deployments and deployment statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "environments": {
                                "description": "The level of permission to grant the access token for managing repository environments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "issues": {
                                "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "members": {
                                "description": "The level of permission to grant the access token for organization teams and members.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "metadata": {
                                "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_administration": {
                                "description": "The level of permission to grant the access token to manage access to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_packages": {
                                "description": "The level of permission to grant the access token for organization packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_plan": {
                                "description": "The level of permission to grant the access token for viewing an organization's plan.",
                                "enum": [
                                  "read"
                                ],
                                "type": "string"
                              },
                              "organization_projects": {
                                "description": "The level of permission to grant the access token to manage organization projects and projects beta (where available).",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "organization_secrets": {
                                "description": "The level of permission to grant the access token to manage organization secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_self_hosted_runners": {
                                "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "organization_user_blocking": {
                                "description": "The level of permission to grant the access token to view and manage users blocked by the organization.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "packages": {
                                "description": "The level of permission to grant the access token for packages published to GitHub Packages.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pages": {
                                "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "pull_requests": {
                                "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_hooks": {
                                "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "repository_projects": {
                                "description": "The level of permission to grant the access token to manage repository projects, columns, and cards.",
                                "enum": [
                                  "read",
                                  "write",
                                  "admin"
                                ],
                                "type": "string"
                              },
                              "secret_scanning_alerts": {
                                "description": "The level of permission to grant the access token to view and manage secret scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "secrets": {
                                "description": "The level of permission to grant the access token to manage repository secrets.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "security_events": {
                                "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "single_file": {
                                "description": "The level of permission to grant the access token to manage just a single file.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "statuses": {
                                "description": "The level of permission to grant the access token for commit statuses.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "team_discussions": {
                                "description": "The level of permission to grant the access token to manage team discussions and related comments.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "vulnerability_alerts": {
                                "description": "The level of permission to grant the access token to manage Dependabot alerts.",
                                "enum": [
                                  "read",
                                  "write"
                                ],
                                "type": "string"
                              },
                              "workflows": {
                                "description": "The level of permission to grant the access token to update GitHub Actions workflow files.",
                                "enum": [
                                  "write"
                                ],
                                "type": "string"
                              }
                            },
                            "title": "App Permissions",
                            "type": "object"
                          },
                          "repositories_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "repository_selection": {
                            "description": "Describe whether all repositories have been selected or there's a selection involved",
                            "enum": [
                              "all",
                              "selected"
                            ],
                            "type": "string"
                          },
                          "single_file_name": {
                            "example": "config.yaml",
                            "nullable": true,
                            "type": "string"
                          },
                          "single_file_paths": {
                            "example": [
                              "config.yml",
                              ".github/issue_TEMPLATE.md"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "permissions",
                          "repository_selection",
                          "single_file_name",
                          "repositories_url",
                          "account"
                        ],
                        "title": "Scoped Installation",
                        "type": "object"
                      },
                      "note": {
                        "nullable": true,
                        "type": "string"
                      },
                      "note_url": {
                        "format": "uri",
                        "nullable": true,
                        "type": "string"
                      },
                      "scopes": {
                        "description": "A list of scopes that this authorization is in.",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true,
                        "type": "array"
                      },
                      "token": {
                        "type": "string"
                      },
                      "token_last_eight": {
                        "nullable": true,
                        "type": "string"
                      },
                      "updated_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "url": {
                        "format": "uri",
                        "type": "string"
                      },
                      "user": {
                        "description": "Simple User",
                        "nullable": true,
                        "properties": {
                          "avatar_url": {
                            "example": "https://github.com/images/error/octocat_happy.gif",
                            "format": "uri",
                            "type": "string"
                          },
                          "email": {
                            "nullable": true,
                            "type": "string"
                          },
                          "events_url": {
                            "example": "https://api.github.com/users/octocat/events{/privacy}",
                            "type": "string"
                          },
                          "followers_url": {
                            "example": "https://api.github.com/users/octocat/followers",
                            "format": "uri",
                            "type": "string"
                          },
                          "following_url": {
                            "example": "https://api.github.com/users/octocat/following{/other_user}",
                            "type": "string"
                          },
                          "gists_url": {
                            "example": "https://api.github.com/users/octocat/gists{/gist_id}",
                            "type": "string"
                          },
                          "gravatar_id": {
                            "example": "41d064eb2195891e12d0413f63227ea7",
                            "nullable": true,
                            "type": "string"
                          },
                          "html_url": {
                            "example": "https://github.com/octocat",
                            "format": "uri",
                            "type": "string"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "login": {
                            "example": "octocat",
                            "type": "string"
                          },
                          "name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "node_id": {
                            "example": "MDQ6VXNlcjE=",
                            "type": "string"
                          },
                          "organizations_url": {
                            "example": "https://api.github.com/users/octocat/orgs",
                            "format": "uri",
                            "type": "string"
                          },
                          "received_events_url": {
                            "example": "https://api.github.com/users/octocat/received_events",
                            "format": "uri",
                            "type": "string"
                          },
                          "repos_url": {
                            "example": "https://api.github.com/users/octocat/repos",
                            "format": "uri",
                            "type": "string"
                          },
                          "site_admin": {
                            "type": "boolean"
                          },
                          "starred_at": {
                            "example": "\"2020-07-09T00:17:55Z\"",
                            "type": "string"
                          },
                          "starred_url": {
                            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
                            "type": "string"
                          },
                          "subscriptions_url": {
                            "example": "https://api.github.com/users/octocat/subscriptions",
                            "format": "uri",
                            "type": "string"
                          },
                          "type": {
                            "example": "User",
                            "type": "string"
                          },
                          "url": {
                            "example": "https://api.github.com/users/octocat",
                            "format": "uri",
                            "type": "string"
                          }
                        },
                        "required": [
                          "avatar_url",
                          "events_url",
                          "followers_url",
                          "following_url",
                          "gists_url",
                          "gravatar_id",
                          "html_url",
                          "id",
                          "node_id",
                          "login",
                          "organizations_url",
                          "received_events_url",
                          "repos_url",
                          "site_admin",
                          "starred_url",
                          "subscriptions_url",
                          "type",
                          "url"
                        ],
                        "title": "Simple User",
                        "type": "object"
                      }
                    },
                    "required": [
                      "app",
                      "id",
                      "note",
                      "note_url",
                      "scopes",
                      "token",
                      "hashed_token",
                      "token_last_eight",
                      "fingerprint",
                      "url",
                      "created_at",
                      "updated_at",
                      "expires_at"
                    ],
                    "title": "Authorization",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Reset an authorization",
          "tags": [
            "apps"
          ],
          "x-github": {
            "category": "apps",
            "deprecationDate": "2020-02-14",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "removalDate": "2021-05-05",
            "subcategory": "oauth-applications"
          }
        }
      },
      "/enterprise/announcement": {
        "delete": {
          "deprecated": null,
          "description": "Removes the global announcement banner in your enterprise.",
          "operationId": "enterprise-admin/remove-announcement",
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Remove the global announcement banner",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "announcement"
          }
        },
        "get": {
          "deprecated": null,
          "description": "Gets the current message and expiration date of the global announcement banner in your enterprise.",
          "operationId": "enterprise-admin/get-announcement",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Default response",
                      "value": {
                        "announcement": "Very **important** announcement about _nothing_.",
                        "expires_at": "2021-01-01T00:00:00.000+00:00"
                      }
                    }
                  },
                  "schema": {
                    "description": "Enterprise global announcement",
                    "properties": {
                      "announcement": {
                        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/github-ae@latest/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                        "example": "Very **important** announcement about _nothing_.",
                        "type": "string"
                      },
                      "expires_at": {
                        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                        "example": "\"2021-01-01T00:00:00.000-07:00\"",
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "announcement"
                    ],
                    "title": "Enterprise Announcement",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get the global announcement banner",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "announcement"
          }
        },
        "patch": {
          "deprecated": null,
          "description": "Sets the message and expiration time for the global announcement banner in your enterprise.",
          "operationId": "enterprise-admin/set-announcement",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Enterprise global announcement",
                  "properties": {
                    "announcement": {
                      "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/github-ae@latest/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                      "example": "Very **important** announcement about _nothing_.",
                      "type": "string"
                    },
                    "expires_at": {
                      "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                      "example": "\"2021-01-01T00:00:00.000-07:00\"",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "announcement"
                  ],
                  "title": "Enterprise Announcement",
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "summary": "Default response",
                      "value": {
                        "announcement": "Very **important** announcement about _nothing_.",
                        "expires_at": "2021-01-01T00:00:00.000+00:00"
                      }
                    }
                  },
                  "schema": {
                    "description": "Enterprise global announcement",
                    "properties": {
                      "announcement": {
                        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Basic writing and formatting syntax](https://docs.github.com/github-ae@latest/github/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax).\"",
                        "example": "Very **important** announcement about _nothing_.",
                        "type": "string"
                      },
                      "expires_at": {
                        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
                        "example": "\"2021-01-01T00:00:00.000-07:00\"",
                        "format": "date-time",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "required": [
                      "announcement"
                    ],
                    "title": "Enterprise Announcement",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Set the global announcement banner",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "announcement"
          }
        }
      },
      "/enterprise/settings/license": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-license-information"
          },
          "operationId": "enterprise-admin/get-license-information",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "days_until_expiration": 365,
                        "expire_at": "2016/02/06 12:41:52 -0600",
                        "kind": "standard",
                        "seats": 1400,
                        "seats_available": 84,
                        "seats_used": 1316
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "days_until_expiration": {
                        "type": "integer"
                      },
                      "expire_at": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "seats": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          }
                        ]
                      },
                      "seats_available": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          }
                        ]
                      },
                      "seats_used": {
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get license information",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "license"
          }
        }
      },
      "/enterprise/stats/all": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-statistics"
          },
          "operationId": "enterprise-admin/get-all-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "examples": {
                    "default": {
                      "value": {
                        "comments": {
                          "total_commit_comments": 6,
                          "total_gist_comments": 28,
                          "total_issue_comments": 366,
                          "total_pull_request_comments": 30
                        },
                        "gists": {
                          "private_gists": 151,
                          "public_gists": 25,
                          "total_gists": 178
                        },
                        "hooks": {
                          "active_hooks": 23,
                          "inactive_hooks": 4,
                          "total_hooks": 27
                        },
                        "issues": {
                          "closed_issues": 96,
                          "open_issues": 83,
                          "total_issues": 179
                        },
                        "milestones": {
                          "closed_milestones": 1,
                          "open_milestones": 6,
                          "total_milestones": 7
                        },
                        "orgs": {
                          "disabled_orgs": 0,
                          "total_orgs": 33,
                          "total_team_members": 314,
                          "total_teams": 60
                        },
                        "pages": {
                          "total_pages": 36
                        },
                        "pulls": {
                          "mergeable_pulls": 21,
                          "merged_pulls": 60,
                          "total_pulls": 86,
                          "unmergeable_pulls": 3
                        },
                        "repos": {
                          "fork_repos": 18,
                          "org_repos": 51,
                          "root_repos": 194,
                          "total_pushes": 3082,
                          "total_repos": 212,
                          "total_wikis": 15
                        },
                        "users": {
                          "admin_users": 45,
                          "suspended_users": 21,
                          "total_users": 254
                        }
                      }
                    }
                  },
                  "schema": {
                    "properties": {
                      "comments": {
                        "properties": {
                          "total_commit_comments": {
                            "type": "integer"
                          },
                          "total_gist_comments": {
                            "type": "integer"
                          },
                          "total_issue_comments": {
                            "type": "integer"
                          },
                          "total_pull_request_comments": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_commit_comments",
                          "total_gist_comments",
                          "total_issue_comments",
                          "total_pull_request_comments"
                        ],
                        "title": "Enterprise Comment Stats",
                        "type": "object"
                      },
                      "gists": {
                        "properties": {
                          "private_gists": {
                            "type": "integer"
                          },
                          "public_gists": {
                            "type": "integer"
                          },
                          "total_gists": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_gists",
                          "private_gists",
                          "public_gists"
                        ],
                        "title": "Enterprise Gist Stats",
                        "type": "object"
                      },
                      "hooks": {
                        "properties": {
                          "active_hooks": {
                            "type": "integer"
                          },
                          "inactive_hooks": {
                            "type": "integer"
                          },
                          "total_hooks": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_hooks",
                          "active_hooks",
                          "inactive_hooks"
                        ],
                        "title": "Hooks Enterprise Stats",
                        "type": "object"
                      },
                      "issues": {
                        "properties": {
                          "closed_issues": {
                            "type": "integer"
                          },
                          "open_issues": {
                            "type": "integer"
                          },
                          "total_issues": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_issues",
                          "open_issues",
                          "closed_issues"
                        ],
                        "title": "Enterprise Issue Stats",
                        "type": "object"
                      },
                      "milestones": {
                        "properties": {
                          "closed_milestones": {
                            "type": "integer"
                          },
                          "open_milestones": {
                            "type": "integer"
                          },
                          "total_milestones": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_milestones",
                          "open_milestones",
                          "closed_milestones"
                        ],
                        "title": "Enterprise Milestone Stats",
                        "type": "object"
                      },
                      "orgs": {
                        "properties": {
                          "disabled_orgs": {
                            "type": "integer"
                          },
                          "total_orgs": {
                            "type": "integer"
                          },
                          "total_team_members": {
                            "type": "integer"
                          },
                          "total_teams": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_orgs",
                          "disabled_orgs",
                          "total_teams",
                          "total_team_members"
                        ],
                        "title": "Enterprise Organization Stats",
                        "type": "object"
                      },
                      "pages": {
                        "properties": {
                          "total_pages": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_pages"
                        ],
                        "title": "Enterprise Pages Stats",
                        "type": "object"
                      },
                      "pulls": {
                        "properties": {
                          "mergeable_pulls": {
                            "type": "integer"
                          },
                          "merged_pulls": {
                            "type": "integer"
                          },
                          "total_pulls": {
                            "type": "integer"
                          },
                          "unmergeable_pulls": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_pulls",
                          "merged_pulls",
                          "mergeable_pulls",
                          "unmergeable_pulls"
                        ],
                        "title": "Enterprise Pull Request Stats",
                        "type": "object"
                      },
                      "repos": {
                        "properties": {
                          "fork_repos": {
                            "type": "integer"
                          },
                          "org_repos": {
                            "type": "integer"
                          },
                          "root_repos": {
                            "type": "integer"
                          },
                          "total_pushes": {
                            "type": "integer"
                          },
                          "total_repos": {
                            "type": "integer"
                          },
                          "total_wikis": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_repos",
                          "root_repos",
                          "fork_repos",
                          "org_repos",
                          "total_pushes",
                          "total_wikis"
                        ],
                        "title": "Repository Enterprise Stats",
                        "type": "object"
                      },
                      "users": {
                        "properties": {
                          "admin_users": {
                            "type": "integer"
                          },
                          "suspended_users": {
                            "type": "integer"
                          },
                          "total_users": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "total_users",
                          "admin_users",
                          "suspended_users"
                        ],
                        "title": "Enterprise User Stats",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get all statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/comments": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-comment-statistics"
          },
          "operationId": "enterprise-admin/get-comment-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "total_commit_comments": {
                        "type": "integer"
                      },
                      "total_gist_comments": {
                        "type": "integer"
                      },
                      "total_issue_comments": {
                        "type": "integer"
                      },
                      "total_pull_request_comments": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_commit_comments",
                      "total_gist_comments",
                      "total_issue_comments",
                      "total_pull_request_comments"
                    ],
                    "title": "Enterprise Comment Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get comment statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/gists": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-gist-statistics"
          },
          "operationId": "enterprise-admin/get-gist-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "private_gists": {
                        "type": "integer"
                      },
                      "public_gists": {
                        "type": "integer"
                      },
                      "total_gists": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_gists",
                      "private_gists",
                      "public_gists"
                    ],
                    "title": "Enterprise Gist Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get gist statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/hooks": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-hooks-statistics"
          },
          "operationId": "enterprise-admin/get-hooks-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "active_hooks": {
                        "type": "integer"
                      },
                      "inactive_hooks": {
                        "type": "integer"
                      },
                      "total_hooks": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_hooks",
                      "active_hooks",
                      "inactive_hooks"
                    ],
                    "title": "Hooks Enterprise Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get hooks statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/issues": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-issues-statistics"
          },
          "operationId": "enterprise-admin/get-issue-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "closed_issues": {
                        "type": "integer"
                      },
                      "open_issues": {
                        "type": "integer"
                      },
                      "total_issues": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_issues",
                      "open_issues",
                      "closed_issues"
                    ],
                    "title": "Enterprise Issue Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get issue statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/milestones": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-milestone-statistics"
          },
          "operationId": "enterprise-admin/get-milestone-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "closed_milestones": {
                        "type": "integer"
                      },
                      "open_milestones": {
                        "type": "integer"
                      },
                      "total_milestones": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_milestones",
                      "open_milestones",
                      "closed_milestones"
                    ],
                    "title": "Enterprise Milestone Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get milestone statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/orgs": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-organization-statistics"
          },
          "operationId": "enterprise-admin/get-org-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "disabled_orgs": {
                        "type": "integer"
                      },
                      "total_orgs": {
                        "type": "integer"
                      },
                      "total_team_members": {
                        "type": "integer"
                      },
                      "total_teams": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_orgs",
                      "disabled_orgs",
                      "total_teams",
                      "total_team_members"
                    ],
                    "title": "Enterprise Organization Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get organization statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/pages": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-pages-statistics"
          },
          "operationId": "enterprise-admin/get-pages-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "total_pages": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_pages"
                    ],
                    "title": "Enterprise Pages Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get pages statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/pulls": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-pull-requests-statistics"
          },
          "operationId": "enterprise-admin/get-pull-request-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "mergeable_pulls": {
                        "type": "integer"
                      },
                      "merged_pulls": {
                        "type": "integer"
                      },
                      "total_pulls": {
                        "type": "integer"
                      },
                      "unmergeable_pulls": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_pulls",
                      "merged_pulls",
                      "mergeable_pulls",
                      "unmergeable_pulls"
                    ],
                    "title": "Enterprise Pull Request Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get pull request statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/repos": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-repository-statistics"
          },
          "operationId": "enterprise-admin/get-repo-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "fork_repos": {
                        "type": "integer"
                      },
                      "org_repos": {
                        "type": "integer"
                      },
                      "root_repos": {
                        "type": "integer"
                      },
                      "total_pushes": {
                        "type": "integer"
                      },
                      "total_repos": {
                        "type": "integer"
                      },
                      "total_wikis": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_repos",
                      "root_repos",
                      "fork_repos",
                      "org_repos",
                      "total_pushes",
                      "total_wikis"
                    ],
                    "title": "Repository Enterprise Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get repository statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/enterprise/stats/users": {
        "get": {
          "deprecated": null,
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-users-statistics"
          },
          "operationId": "enterprise-admin/get-user-stats",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "admin_users": {
                        "type": "integer"
                      },
                      "suspended_users": {
                        "type": "integer"
                      },
                      "total_users": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "total_users",
                      "admin_users",
                      "suspended_users"
                    ],
                    "title": "Enterprise User Stats",
                    "type": "object"
                  }
                }
              },
              "description": "Response"
            }
          },
          "summary": "Get users statistics",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "admin-stats"
          }
        }
      },
      "/users/{username}/suspended": {
        "delete": {
          "deprecated": null,
          "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/github-ae@latest/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#unsuspend-a-user"
          },
          "operationId": "enterprise-admin/unsuspend-user",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "properties": {
                    "reason": {
                      "description": "The reason the user is being unsuspended. This message will be logged in the [audit log](https://docs.github.com/github-ae@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/about-the-audit-log-for-your-enterprise). If you don't provide a `reason`, it will default to \"Unsuspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Unsuspend a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        },
        "put": {
          "deprecated": null,
          "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://docs.github.com/github-ae@latest/admin/identity-and-access-management/using-ldap-for-enterprise-iam/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.\n\nYou can suspend any user account except your own.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#http-verbs).\"",
          "externalDocs": {
            "description": "API method documentation",
            "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#suspend-a-user"
          },
          "operationId": "enterprise-admin/suspend-user",
          "parameters": [
            {
              "description": "The handle for the GitHub user account.",
              "in": "path",
              "name": "username",
              "required": true,
              "schema": {
                "type": "string"
              },
              "style": "simple"
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true,
                  "properties": {
                    "reason": {
                      "description": "The reason the user is being suspended. This message will be logged in the [audit log](https://docs.github.com/github-ae@latest/admin/monitoring-activity-in-your-enterprise/reviewing-audit-logs-for-your-enterprise/about-the-audit-log-for-your-enterprise). If you don't provide a `reason`, it will default to \"Suspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "required": null
          },
          "responses": {
            "204": {
              "description": "Response"
            }
          },
          "summary": "Suspend a user",
          "tags": [
            "enterprise-admin"
          ],
          "x-github": {
            "category": "enterprise-admin",
            "enabledForGitHubApps": false,
            "githubCloudOnly": false,
            "subcategory": "users"
          }
        }
      }
    },
    "changed": {
      "/app/installations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "permissions": {
                                "properties_changed": {
                                  "removed": [
                                    "organization_custom_roles"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations/{installation_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_custom_roles"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/app/installations/{installation_id}/access_tokens": {
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "permissions": {
                          "properties_changed": {
                            "removed": [
                              "organization_custom_roles"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_custom_roles"
                                ]
                              }
                            },
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/applications/{client_id}/token": {
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "removed": [
                                        "organization_custom_roles"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installation": {
                              "properties_changed": {
                                "changed": {
                                  "permissions": {
                                    "properties_changed": {
                                      "removed": [
                                        "organization_custom_roles"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "Only return runner groups that are allowed to be used by this organization.",
                "in": "query",
                "name": "visible_to_organization",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "style": "form"
              }
            ]
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "runner_groups": {
                              "items_changed": {
                                "properties_changed": {
                                  "removed": [
                                    "restricted_to_workflows",
                                    "selected_workflows",
                                    "workflow_restrictions_read_only"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "restricted_to_workflows",
                        "selected_workflows"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "restricted_to_workflows",
                            "selected_workflows",
                            "workflow_restrictions_read_only"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "restricted_to_workflows",
                            "selected_workflows",
                            "workflow_restrictions_read_only"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "restricted_to_workflows",
                        "selected_workflows"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "restricted_to_workflows",
                            "selected_workflows",
                            "workflow_restrictions_read_only"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/registration-token": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/enterprises/{enterprise}/actions/runners/remove-token": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/enterprises/{enterprise}/audit-log": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
                "in": "query",
                "name": "include",
                "required": false,
                "schema": {
                  "enum": [
                    "web",
                    "git",
                    "all"
                  ],
                  "type": "string"
                },
                "style": "form"
              }
            ]
          }
        }
      },
      "/installation/repositories": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/issues": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/meta": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "ssh_keys"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/notifications": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/notifications/threads/{thread_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/permissions/repositories": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/runner-groups": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "Only return runner groups that are allowed to be used by this repository.",
                "in": "query",
                "name": "visible_to_repository",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "style": "form"
              }
            ]
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "runner_groups": {
                              "items_changed": {
                                "properties_changed": {
                                  "removed": [
                                    "restricted_to_workflows",
                                    "selected_workflows",
                                    "workflow_restrictions_read_only"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "restricted_to_workflows",
                        "selected_workflows"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "restricted_to_workflows",
                            "selected_workflows",
                            "workflow_restrictions_read_only"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/runner-groups/{runner_group_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "restricted_to_workflows",
                            "selected_workflows",
                            "workflow_restrictions_read_only"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "restricted_to_workflows",
                        "selected_workflows"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "restricted_to_workflows",
                            "selected_workflows",
                            "workflow_restrictions_read_only"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/runners/registration-token": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/runners/remove-token": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/secrets/{secret_name}": {
        "put": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "changed": {
                        "selected_repository_ids": {
                          "items_changed": {
                            "type_changed": {
                              "to": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/actions/secrets/{secret_name}/repositories": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/audit-log": {
        "get": {
          "parameters": {
            "added": [
              {
                "description": "Page number of the results to fetch.",
                "in": "query",
                "name": "page",
                "required": false,
                "schema": {
                  "default": 1,
                  "type": "integer"
                },
                "style": "form"
              }
            ],
            "removed": [
              {
                "description": "The event types to include:\n\n- `web` - returns web (non-Git) events.\n- `git` - returns Git events.\n- `all` - returns both web and Git events.\n\nThe default is `web`.",
                "in": "query",
                "name": "include",
                "required": false,
                "schema": {
                  "enum": [
                    "web",
                    "git",
                    "all"
                  ],
                  "type": "string"
                },
                "style": "form"
              }
            ]
          }
        }
      },
      "/orgs/{org}/installation": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_custom_roles"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/installations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installations": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "permissions": {
                                      "properties_changed": {
                                        "removed": [
                                          "organization_custom_roles"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/issues": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/migrations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repositories": {
                                "items_changed": {
                                  "properties_changed": {
                                    "changed": {
                                      "template_repository": {
                                        "properties_changed": {
                                          "removed": [
                                            "merge_commit_message",
                                            "merge_commit_title",
                                            "squash_merge_commit_message",
                                            "squash_merge_commit_title",
                                            "use_squash_pr_title_as_default"
                                          ]
                                        }
                                      }
                                    },
                                    "removed": [
                                      "merge_commit_message",
                                      "merge_commit_title",
                                      "squash_merge_commit_message",
                                      "squash_merge_commit_title",
                                      "use_squash_pr_title_as_default"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/migrations/{migration_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/repos": {
        "get": {
          "parameters": {
            "changed": {
              "type": {
                "schema": {
                  "enum_changed": {
                    "added": false,
                    "removed": false,
                    "values_removed": [
                      "public"
                    ]
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "template_repository": {
                              "properties_changed": {
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "merge_commit_message",
                            "merge_commit_title",
                            "squash_merge_commit_message",
                            "squash_merge_commit_title",
                            "use_squash_pr_title_as_default"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/repos": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "template_repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/rate_limit": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "resources": {
                              "properties_changed": {
                                "removed": [
                                  "dependency_snapshots"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "parent": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            },
                            "source": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            },
                            "template_repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "merge_commit_message",
                            "merge_commit_title",
                            "squash_merge_commit_message",
                            "squash_merge_commit_title"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "parent": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            },
                            "source": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            },
                            "template_repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "merge_commit_message",
                            "merge_commit_title",
                            "squash_merge_commit_message",
                            "squash_merge_commit_title"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runners/registration-token": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runners/remove-token": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runs": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "Returns workflow runs with the `check_suite_id` that you specify.",
                "in": "query",
                "name": "check_suite_id",
                "required": false,
                "schema": {
                  "type": "integer"
                },
                "style": "form"
              }
            ]
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "workflow_runs": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "head_repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runs/{run_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "head_repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "head_repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun": {
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "enable_debug_logging"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "Returns workflow runs with the `check_suite_id` that you specify.",
                "in": "query",
                "name": "check_suite_id",
                "required": false,
                "schema": {
                  "type": "integer"
                },
                "style": "form"
              }
            ]
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "workflow_runs": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "head_repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/autolinks": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "is_alphanumeric"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "is_alphanumeric"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/autolinks/{autolink_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "is_alphanumeric"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/check-suites": {
        "post": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/check-suites/preferences": {
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/check-suites/{check_suite_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/code-scanning/alerts": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "The direction to sort the results by.",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc"
                  ],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "description": "The property by which to sort the results. `number` is deprecated - we recommend that you use `created` instead.",
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": [
                    "created",
                    "number",
                    "updated"
                  ],
                  "type": "string"
                },
                "style": "form"
              }
            ]
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "rule": {
                                "properties_changed": {
                                  "removed": [
                                    "tags"
                                  ]
                                }
                              }
                            },
                            "removed": [
                              "dismissed_comment",
                              "fixed_at",
                              "updated_at"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "removed": [
              "304"
            ]
          }
        }
      },
      "/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "dismissed_comment",
                            "fixed_at",
                            "updated_at"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "removed": [
              "304"
            ]
          }
        },
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "dismissed_comment"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "dismissed_comment",
                            "fixed_at",
                            "updated_at"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/collaborators": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "required_changed": {
                            "removed": [
                              "role_name"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/collaborators/{username}": {
        "put": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/collaborators/{username}/permission": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "user": {
                              "required_changed": {
                                "removed": [
                                  "role_name"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/comments/{comment_id}/reactions": {
        "post": {
          "responses": {
            "added": [
              [
                "415",
                {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "documentation_url": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message",
                          "documentation_url"
                        ],
                        "type": "object"
                      }
                    }
                  },
                  "description": "Preview header missing"
                }
              ]
            ]
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{commit_sha}/pulls": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "base": {
                                "properties_changed": {
                                  "changed": {
                                    "repo": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "head": {
                                "properties_changed": {
                                  "changed": {
                                    "repo": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}/check-suites": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "check_suites": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/commits/{ref}/status": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/events": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "payload": {
                                "properties_changed": {
                                  "changed": {
                                    "issue": {
                                      "properties_changed": {
                                        "changed": {
                                          "repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/forks": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "default_branch_only",
                        "name"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "202": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "parent": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            },
                            "source": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            },
                            "template_repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "merge_commit_message",
                            "merge_commit_title",
                            "squash_merge_commit_message",
                            "squash_merge_commit_title"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/installation": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_custom_roles"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/invitations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/invitations/{invitation_id}": {
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/events": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "issue": {
                                "properties_changed": {
                                  "changed": {
                                    "repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/events/{event_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "issue": {
                              "properties_changed": {
                                "changed": {
                                  "repository": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/{issue_number}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/issues/{issue_number}/assignees": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/keys": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "added_by",
                              "last_used"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "added_by",
                            "last_used"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/keys/{key_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "added_by",
                            "last_used"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/notifications": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "base": {
                                "properties_changed": {
                                  "changed": {
                                    "repo": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "head": {
                                "properties_changed": {
                                  "changed": {
                                    "repo": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "base": {
                              "properties_changed": {
                                "changed": {
                                  "repo": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "head": {
                              "properties_changed": {
                                "changed": {
                                  "repo": {
                                    "properties_changed": {
                                      "changed": {
                                        "template_repository": {
                                          "properties_changed": {
                                            "removed": [
                                              "merge_commit_message",
                                              "merge_commit_title",
                                              "squash_merge_commit_message",
                                              "squash_merge_commit_title",
                                              "use_squash_pr_title_as_default"
                                            ]
                                          }
                                        }
                                      },
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/releases": {
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "discussion_category_name",
                        "generate_release_notes"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "removed": [
              "404"
            ]
          }
        }
      },
      "/repos/{owner}/{repo}/releases/{release_id}": {
        "patch": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "discussion_category_name"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "removed": [
              "404"
            ]
          }
        }
      },
      "/repos/{owner}/{repo}/releases/{release_id}/reactions": {
        "get": {
          "responses": {
            "added": [
              [
                "415",
                {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "documentation_url": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message",
                          "documentation_url"
                        ],
                        "type": "object"
                      }
                    }
                  },
                  "description": "Preview header missing"
                }
              ]
            ]
          }
        }
      },
      "/repos/{owner}/{repo}/secret-scanning/alerts": {
        "get": {
          "parameters": {
            "removed": [
              {
                "description": "The property to sort the results by. `created` means when the alert was created. `updated` means when the alert was updated or resolved.",
                "in": "query",
                "name": "sort",
                "required": false,
                "schema": {
                  "default": "created",
                  "enum": [
                    "created",
                    "updated"
                  ],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "description": "The direction to sort the results by.",
                "in": "query",
                "name": "direction",
                "required": false,
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc"
                  ],
                  "type": "string"
                },
                "style": "form"
              },
              {
                "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor. To receive an initial cursor on your first request, include an empty \"before\" query string.",
                "in": "query",
                "name": "before",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "style": "form"
              },
              {
                "description": "A cursor, as given in the [Link header](https://docs.github.com/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.  To receive an initial cursor on your first request, include an empty \"after\" query string.",
                "in": "query",
                "name": "after",
                "required": false,
                "schema": {
                  "type": "string"
                },
                "style": "form"
              }
            ]
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "removed": [
                              "push_protection_bypassed",
                              "push_protection_bypassed_at",
                              "push_protection_bypassed_by",
                              "secret_type_display_name"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "push_protection_bypassed",
                            "push_protection_bypassed_at",
                            "push_protection_bypassed_by",
                            "secret_type_display_name"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "patch": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "removed": [
                            "push_protection_bypassed",
                            "push_protection_bypassed_at",
                            "push_protection_bypassed_by",
                            "secret_type_display_name"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{owner}/{repo}/transfer": {
        "post": {
          "responses": {
            "changed": {
              "202": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "template_repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/repos/{template_owner}/{template_repo}/generate": {
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "template_repository": {
                              "properties_changed": {
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "merge_commit_message",
                            "merge_commit_title",
                            "squash_merge_commit_message",
                            "squash_merge_commit_title",
                            "use_squash_pr_title_as_default"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/search/code": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "items": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/search/commits": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "items": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/search/issues": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "items": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/repos": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/teams/{team_id}/repos/{owner}/{repo}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "template_repository": {
                              "properties_changed": {
                                "changed": {
                                  "template_repository": {
                                    "properties_changed": {
                                      "removed": [
                                        "merge_commit_message",
                                        "merge_commit_title",
                                        "squash_merge_commit_message",
                                        "squash_merge_commit_title",
                                        "use_squash_pr_title_as_default"
                                      ]
                                    }
                                  }
                                },
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/gpg_keys": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "subkeys": {
                                "items_changed": {
                                  "properties_changed": {
                                    "removed": [
                                      "revoked"
                                    ]
                                  }
                                }
                              }
                            },
                            "removed": [
                              "name",
                              "revoked"
                            ]
                          },
                          "required_changed": {
                            "removed": [
                              "revoked"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "request_body": {
            "content_changed": {
              "changed": {
                "application/json": {
                  "schema_changed": {
                    "properties_changed": {
                      "removed": [
                        "name"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "subkeys": {
                              "items_changed": {
                                "properties_changed": {
                                  "removed": [
                                    "revoked"
                                  ]
                                }
                              }
                            }
                          },
                          "removed": [
                            "name",
                            "revoked"
                          ]
                        },
                        "required_changed": {
                          "removed": [
                            "revoked"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/gpg_keys/{gpg_key_id}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "subkeys": {
                              "items_changed": {
                                "properties_changed": {
                                  "removed": [
                                    "revoked"
                                  ]
                                }
                              }
                            }
                          },
                          "removed": [
                            "name",
                            "revoked"
                          ]
                        },
                        "required_changed": {
                          "removed": [
                            "revoked"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/installations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "installations": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "permissions": {
                                      "properties_changed": {
                                        "removed": [
                                          "organization_custom_roles"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/installations/{installation_id}/repositories": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/issues": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/migrations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repositories": {
                                "items_changed": {
                                  "properties_changed": {
                                    "changed": {
                                      "template_repository": {
                                        "properties_changed": {
                                          "removed": [
                                            "merge_commit_message",
                                            "merge_commit_title",
                                            "squash_merge_commit_message",
                                            "squash_merge_commit_title",
                                            "use_squash_pr_title_as_default"
                                          ]
                                        }
                                      }
                                    },
                                    "removed": [
                                      "merge_commit_message",
                                      "merge_commit_title",
                                      "squash_merge_commit_message",
                                      "squash_merge_commit_title",
                                      "use_squash_pr_title_as_default"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "repositories": {
                              "items_changed": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/migrations/{migration_id}/repositories": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/repos": {
        "get": {
          "parameters": {
            "changed": {
              "type": {
                "schema": {
                  "enum_changed": {
                    "added": false,
                    "removed": false,
                    "values_added": [
                      "internal"
                    ],
                    "values_removed": [
                      "public"
                    ]
                  }
                }
              },
              "visibility": {
                "schema": {
                  "enum_changed": {
                    "added": false,
                    "removed": false,
                    "values_added": [
                      "internal"
                    ],
                    "values_removed": [
                      "public"
                    ]
                  }
                }
              }
            }
          },
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            },
                            "removed": [
                              "merge_commit_message",
                              "merge_commit_title",
                              "squash_merge_commit_message",
                              "squash_merge_commit_title",
                              "use_squash_pr_title_as_default"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "responses": {
            "changed": {
              "201": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "template_repository": {
                              "properties_changed": {
                                "removed": [
                                  "merge_commit_message",
                                  "merge_commit_title",
                                  "squash_merge_commit_message",
                                  "squash_merge_commit_title",
                                  "use_squash_pr_title_as_default"
                                ]
                              }
                            }
                          },
                          "removed": [
                            "merge_commit_message",
                            "merge_commit_title",
                            "squash_merge_commit_message",
                            "squash_merge_commit_title",
                            "use_squash_pr_title_as_default"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/repository_invitations": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "changed": {
                                          "template_repository": {
                                            "properties_changed": {
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        },
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/starred": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            },
                            "removed": [
                              "merge_commit_message",
                              "merge_commit_title",
                              "squash_merge_commit_message",
                              "squash_merge_commit_title",
                              "use_squash_pr_title_as_default"
                            ]
                          }
                        }
                      }
                    },
                    "application/vnd.github.v3.star+json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "repo": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/user/subscriptions": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/events": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "payload": {
                                "properties_changed": {
                                  "changed": {
                                    "issue": {
                                      "properties_changed": {
                                        "changed": {
                                          "repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/events/orgs/{org}": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "payload": {
                                "properties_changed": {
                                  "changed": {
                                    "issue": {
                                      "properties_changed": {
                                        "changed": {
                                          "repository": {
                                            "properties_changed": {
                                              "changed": {
                                                "template_repository": {
                                                  "properties_changed": {
                                                    "removed": [
                                                      "merge_commit_message",
                                                      "merge_commit_title",
                                                      "squash_merge_commit_message",
                                                      "squash_merge_commit_title",
                                                      "use_squash_pr_title_as_default"
                                                    ]
                                                  }
                                                }
                                              },
                                              "removed": [
                                                "merge_commit_message",
                                                "merge_commit_title",
                                                "squash_merge_commit_message",
                                                "squash_merge_commit_title",
                                                "use_squash_pr_title_as_default"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/gpg_keys": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "subkeys": {
                                "items_changed": {
                                  "properties_changed": {
                                    "removed": [
                                      "revoked"
                                    ]
                                  }
                                }
                              }
                            },
                            "removed": [
                              "name",
                              "revoked"
                            ]
                          },
                          "required_changed": {
                            "removed": [
                              "revoked"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/installation": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "properties_changed": {
                          "changed": {
                            "permissions": {
                              "properties_changed": {
                                "removed": [
                                  "organization_custom_roles"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/repos": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{username}/subscriptions": {
        "get": {
          "responses": {
            "changed": {
              "200": {
                "content": {
                  "changed": {
                    "application/json": {
                      "schema_changed": {
                        "items_changed": {
                          "properties_changed": {
                            "changed": {
                              "template_repository": {
                                "properties_changed": {
                                  "changed": {
                                    "template_repository": {
                                      "properties_changed": {
                                        "removed": [
                                          "merge_commit_message",
                                          "merge_commit_title",
                                          "squash_merge_commit_message",
                                          "squash_merge_commit_title",
                                          "use_squash_pr_title_as_default"
                                        ]
                                      }
                                    }
                                  },
                                  "removed": [
                                    "merge_commit_message",
                                    "merge_commit_title",
                                    "squash_merge_commit_message",
                                    "squash_merge_commit_title",
                                    "use_squash_pr_title_as_default"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "removed": {
      "/applications/{client_id}/token/scoped": [
        "post"
      ],
      "/enterprise-installation/{enterprise_or_org}/server-statistics": [
        "get"
      ],
      "/enterprises/{enterprise}/actions/cache/usage": [
        "get"
      ],
      "/enterprises/{enterprise}/actions/oidc/customization/issuer": [
        "put"
      ],
      "/enterprises/{enterprise}/actions/permissions/workflow": [
        "get",
        "put"
      ],
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations": [
        "get",
        "put"
      ],
      "/enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations/{org_id}": [
        "put",
        "delete"
      ],
      "/enterprises/{enterprise}/actions/runners/{runner_id}/labels": [
        "get",
        "put",
        "post",
        "delete"
      ],
      "/enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}": [
        "delete"
      ],
      "/enterprises/{enterprise}/code-scanning/alerts": [
        "get"
      ],
      "/enterprises/{enterprise}/consumed-licenses": [
        "get"
      ],
      "/enterprises/{enterprise}/license-sync-status": [
        "get"
      ],
      "/enterprises/{enterprise}/secret-scanning/alerts": [
        "get"
      ],
      "/enterprises/{enterprise}/settings/billing/actions": [
        "get"
      ],
      "/enterprises/{enterprise}/settings/billing/advanced-security": [
        "get"
      ],
      "/enterprises/{enterprise}/settings/billing/packages": [
        "get"
      ],
      "/enterprises/{enterprise}/settings/billing/shared-storage": [
        "get"
      ],
      "/events": [
        "get"
      ],
      "/marketplace_listing/accounts/{account_id}": [
        "get"
      ],
      "/marketplace_listing/plans": [
        "get"
      ],
      "/marketplace_listing/plans/{plan_id}/accounts": [
        "get"
      ],
      "/marketplace_listing/stubbed/accounts/{account_id}": [
        "get"
      ],
      "/marketplace_listing/stubbed/plans": [
        "get"
      ],
      "/marketplace_listing/stubbed/plans/{plan_id}/accounts": [
        "get"
      ],
      "/networks/{owner}/{repo}/events": [
        "get"
      ],
      "/organizations/{organization_id}/custom_roles": [
        "get"
      ],
      "/orgs/{org}/actions/cache/usage": [
        "get"
      ],
      "/orgs/{org}/actions/cache/usage-by-repository": [
        "get"
      ],
      "/orgs/{org}/actions/oidc/customization/sub": [
        "get",
        "put"
      ],
      "/orgs/{org}/actions/permissions/workflow": [
        "get",
        "put"
      ],
      "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories": [
        "get",
        "put"
      ],
      "/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}": [
        "put",
        "delete"
      ],
      "/orgs/{org}/actions/runner-groups/{runner_group_id}/runners": [
        "get",
        "put"
      ],
      "/orgs/{org}/actions/runners/{runner_id}/labels": [
        "get",
        "put",
        "post",
        "delete"
      ],
      "/orgs/{org}/actions/runners/{runner_id}/labels/{name}": [
        "delete"
      ],
      "/orgs/{org}/blocks": [
        "get"
      ],
      "/orgs/{org}/blocks/{username}": [
        "get",
        "put",
        "delete"
      ],
      "/orgs/{org}/code-scanning/alerts": [
        "get"
      ],
      "/orgs/{org}/codespaces": [
        "get"
      ],
      "/orgs/{org}/credential-authorizations": [
        "get"
      ],
      "/orgs/{org}/credential-authorizations/{credential_id}": [
        "delete"
      ],
      "/orgs/{org}/dependabot/secrets": [
        "get"
      ],
      "/orgs/{org}/dependabot/secrets/public-key": [
        "get"
      ],
      "/orgs/{org}/dependabot/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/orgs/{org}/dependabot/secrets/{secret_name}/repositories": [
        "get",
        "put"
      ],
      "/orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}": [
        "put",
        "delete"
      ],
      "/orgs/{org}/events": [
        "get"
      ],
      "/orgs/{org}/failed_invitations": [
        "get"
      ],
      "/orgs/{org}/interaction-limits": [
        "get",
        "put",
        "delete"
      ],
      "/orgs/{org}/invitations": [
        "get",
        "post"
      ],
      "/orgs/{org}/invitations/{invitation_id}": [
        "delete"
      ],
      "/orgs/{org}/invitations/{invitation_id}/teams": [
        "get"
      ],
      "/orgs/{org}/members/{username}/codespaces/{codespace_name}": [
        "delete"
      ],
      "/orgs/{org}/members/{username}/codespaces/{codespace_name}/stop": [
        "post"
      ],
      "/orgs/{org}/migrations/{migration_id}/archive": [
        "get",
        "delete"
      ],
      "/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock": [
        "delete"
      ],
      "/orgs/{org}/migrations/{migration_id}/repositories": [
        "get"
      ],
      "/orgs/{org}/packages": [
        "get"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}": [
        "get",
        "delete"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}/restore": [
        "post"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}/versions": [
        "get"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}": [
        "get",
        "delete"
      ],
      "/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": [
        "post"
      ],
      "/orgs/{org}/public_members": [
        "get"
      ],
      "/orgs/{org}/public_members/{username}": [
        "get",
        "put",
        "delete"
      ],
      "/orgs/{org}/secret-scanning/alerts": [
        "get"
      ],
      "/orgs/{org}/security-managers": [
        "get"
      ],
      "/orgs/{org}/security-managers/teams/{team_slug}": [
        "put",
        "delete"
      ],
      "/orgs/{org}/settings/billing/actions": [
        "get"
      ],
      "/orgs/{org}/settings/billing/advanced-security": [
        "get"
      ],
      "/orgs/{org}/settings/billing/packages": [
        "get"
      ],
      "/orgs/{org}/settings/billing/shared-storage": [
        "get"
      ],
      "/orgs/{org}/team-sync/groups": [
        "get"
      ],
      "/orgs/{org}/teams/{team_slug}/invitations": [
        "get"
      ],
      "/orgs/{org}/teams/{team_slug}/team-sync/group-mappings": [
        "get",
        "patch"
      ],
      "/orgs/{org}/{security_product}/{enablement}": [
        "post"
      ],
      "/repos/{owner}/{repo}/actions/cache/usage": [
        "get"
      ],
      "/repos/{owner}/{repo}/actions/caches": [
        "get",
        "delete"
      ],
      "/repos/{owner}/{repo}/actions/caches/{cache_id}": [
        "delete"
      ],
      "/repos/{owner}/{repo}/actions/jobs/{job_id}/rerun": [
        "post"
      ],
      "/repos/{owner}/{repo}/actions/oidc/customization/sub": [
        "get",
        "put"
      ],
      "/repos/{owner}/{repo}/actions/permissions/access": [
        "get",
        "put"
      ],
      "/repos/{owner}/{repo}/actions/permissions/workflow": [
        "get",
        "put"
      ],
      "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels": [
        "get",
        "put",
        "post",
        "delete"
      ],
      "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}": [
        "delete"
      ],
      "/repos/{owner}/{repo}/actions/runs/{run_id}/approvals": [
        "get"
      ],
      "/repos/{owner}/{repo}/actions/runs/{run_id}/approve": [
        "post"
      ],
      "/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments": [
        "get",
        "post"
      ],
      "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs": [
        "post"
      ],
      "/repos/{owner}/{repo}/automated-security-fixes": [
        "put",
        "delete"
      ],
      "/repos/{owner}/{repo}/branches/{branch}/rename": [
        "post"
      ],
      "/repos/{owner}/{repo}/codespaces": [
        "get",
        "post"
      ],
      "/repos/{owner}/{repo}/codespaces/devcontainers": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/machines": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/new": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/secrets": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/secrets/public-key": [
        "get"
      ],
      "/repos/{owner}/{repo}/codespaces/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/repos/{owner}/{repo}/community/profile": [
        "get"
      ],
      "/repos/{owner}/{repo}/dependabot/secrets": [
        "get"
      ],
      "/repos/{owner}/{repo}/dependabot/secrets/public-key": [
        "get"
      ],
      "/repos/{owner}/{repo}/dependabot/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/repos/{owner}/{repo}/dependency-graph/compare/{basehead}": [
        "get"
      ],
      "/repos/{owner}/{repo}/dependency-graph/snapshots": [
        "post"
      ],
      "/repos/{owner}/{repo}/import": [
        "get",
        "put",
        "delete",
        "patch"
      ],
      "/repos/{owner}/{repo}/import/authors": [
        "get"
      ],
      "/repos/{owner}/{repo}/import/authors/{author_id}": [
        "patch"
      ],
      "/repos/{owner}/{repo}/import/large_files": [
        "get"
      ],
      "/repos/{owner}/{repo}/import/lfs": [
        "patch"
      ],
      "/repos/{owner}/{repo}/interaction-limits": [
        "get",
        "put",
        "delete"
      ],
      "/repos/{owner}/{repo}/pages/deployment": [
        "post"
      ],
      "/repos/{owner}/{repo}/pages/health": [
        "get"
      ],
      "/repos/{owner}/{repo}/pulls/{pull_number}/codespaces": [
        "post"
      ],
      "/repos/{owner}/{repo}/releases/generate-notes": [
        "post"
      ],
      "/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations": [
        "get"
      ],
      "/repos/{owner}/{repo}/tags/protection": [
        "get",
        "post"
      ],
      "/repos/{owner}/{repo}/tags/protection/{tag_protection_id}": [
        "delete"
      ],
      "/repos/{owner}/{repo}/traffic/clones": [
        "get"
      ],
      "/repos/{owner}/{repo}/traffic/popular/paths": [
        "get"
      ],
      "/repos/{owner}/{repo}/traffic/popular/referrers": [
        "get"
      ],
      "/repos/{owner}/{repo}/traffic/views": [
        "get"
      ],
      "/repos/{owner}/{repo}/vulnerability-alerts": [
        "get",
        "put",
        "delete"
      ],
      "/repositories": [
        "get"
      ],
      "/repositories/{repository_id}/environments/{environment_name}/secrets": [
        "get"
      ],
      "/repositories/{repository_id}/environments/{environment_name}/secrets/public-key": [
        "get"
      ],
      "/repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/scim/v2/enterprises/{enterprise}/Users": [
        "get",
        "post"
      ],
      "/scim/v2/enterprises/{enterprise}/Users/{scim_user_id}": [
        "get",
        "put",
        "delete",
        "patch"
      ],
      "/scim/v2/organizations/{org}/Users": [
        "get",
        "post"
      ],
      "/scim/v2/organizations/{org}/Users/{scim_user_id}": [
        "get",
        "put",
        "delete",
        "patch"
      ],
      "/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions": [
        "get",
        "post"
      ],
      "/teams/{team_id}/discussions/{discussion_number}/reactions": [
        "get",
        "post"
      ],
      "/teams/{team_id}/invitations": [
        "get"
      ],
      "/teams/{team_id}/team-sync/group-mappings": [
        "get",
        "patch"
      ],
      "/user/blocks": [
        "get"
      ],
      "/user/blocks/{username}": [
        "get",
        "put",
        "delete"
      ],
      "/user/codespaces": [
        "get",
        "post"
      ],
      "/user/codespaces/secrets": [
        "get"
      ],
      "/user/codespaces/secrets/public-key": [
        "get"
      ],
      "/user/codespaces/secrets/{secret_name}": [
        "get",
        "put",
        "delete"
      ],
      "/user/codespaces/secrets/{secret_name}/repositories": [
        "get",
        "put"
      ],
      "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}": [
        "put",
        "delete"
      ],
      "/user/codespaces/{codespace_name}": [
        "get",
        "delete",
        "patch"
      ],
      "/user/codespaces/{codespace_name}/exports": [
        "post"
      ],
      "/user/codespaces/{codespace_name}/exports/{export_id}": [
        "get"
      ],
      "/user/codespaces/{codespace_name}/machines": [
        "get"
      ],
      "/user/codespaces/{codespace_name}/start": [
        "post"
      ],
      "/user/codespaces/{codespace_name}/stop": [
        "post"
      ],
      "/user/email/visibility": [
        "patch"
      ],
      "/user/emails": [
        "get",
        "post",
        "delete"
      ],
      "/user/interaction-limits": [
        "get",
        "put",
        "delete"
      ],
      "/user/marketplace_purchases": [
        "get"
      ],
      "/user/marketplace_purchases/stubbed": [
        "get"
      ],
      "/user/migrations/{migration_id}": [
        "get"
      ],
      "/user/migrations/{migration_id}/repos/{repo_name}/lock": [
        "delete"
      ],
      "/user/packages": [
        "get"
      ],
      "/user/packages/{package_type}/{package_name}": [
        "get",
        "delete"
      ],
      "/user/packages/{package_type}/{package_name}/restore": [
        "post"
      ],
      "/user/packages/{package_type}/{package_name}/versions": [
        "get"
      ],
      "/user/packages/{package_type}/{package_name}/versions/{package_version_id}": [
        "get",
        "delete"
      ],
      "/user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": [
        "post"
      ],
      "/user/public_emails": [
        "get"
      ],
      "/user/ssh_signing_keys": [
        "get",
        "post"
      ],
      "/user/ssh_signing_keys/{ssh_signing_key_id}": [
        "get",
        "delete"
      ],
      "/users/{username}/events/public": [
        "get"
      ],
      "/users/{username}/packages": [
        "get"
      ],
      "/users/{username}/packages/{package_type}/{package_name}": [
        "get",
        "delete"
      ],
      "/users/{username}/packages/{package_type}/{package_name}/restore": [
        "post"
      ],
      "/users/{username}/packages/{package_type}/{package_name}/versions": [
        "get"
      ],
      "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}": [
        "get",
        "delete"
      ],
      "/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore": [
        "post"
      ],
      "/users/{username}/received_events": [
        "get"
      ],
      "/users/{username}/received_events/public": [
        "get"
      ],
      "/users/{username}/settings/billing/actions": [
        "get"
      ],
      "/users/{username}/settings/billing/packages": [
        "get"
      ],
      "/users/{username}/settings/billing/shared-storage": [
        "get"
      ],
      "/users/{username}/ssh_signing_keys": [
        "get"
      ]
    }
  },
  "servers": {
    "added": [
      {
        "url": "https://{hostname}/api/v3",
        "variables": {
          "hostname": {
            "default": "HOSTNAME",
            "description": "Self-hosted GitHub AE hostname"
          }
        }
      }
    ],
    "removed": [
      {
        "url": "https://api.github.com"
      }
    ]
  }
}