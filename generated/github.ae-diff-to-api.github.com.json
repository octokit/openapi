{
  "openapi": "3.0.3",
  "info": {
    "version": "0.0.0-development",
    "title": "GitHub's official OpenAPI spec + Octokit extension",
    "description": "OpenAPI specs from https://github.com/github/rest-api-description with the 'x-octokit' extension required by the Octokit SDKs",
    "license": { "name": "MIT", "url": "https://spdx.org/licenses/MIT" },
    "termsOfService": "https://docs.github.com/articles/github-terms-of-service",
    "contact": {
      "name": "Support",
      "url": "https://github.com/octokit/openapi"
    }
  },
  "tags": [
    {
      "name": "actions",
      "description": "Endpoints to manage GitHub Actions using the REST API."
    },
    {
      "name": "activity",
      "description": "Activity APIs provide access to notifications, subscriptions, and timelines."
    },
    {
      "name": "apps",
      "description": "Information for integrations and installations."
    },
    {
      "name": "billing",
      "description": "Monitor charges and usage from Actions and Packages."
    },
    {
      "name": "checks",
      "description": "Rich interactions with checks run by your integrations."
    },
    {
      "name": "code-scanning",
      "description": "Retrieve code scanning alerts from a repository."
    },
    {
      "name": "codes-of-conduct",
      "description": "Insight into codes of conduct for your communities."
    },
    {
      "name": "emojis",
      "description": "List emojis available to use on GitHub."
    },
    {
      "name": "enterprise-admin",
      "description": "Administer a GitHub enterprise."
    },
    { "name": "gists", "description": "View, modify your gists." },
    { "name": "git", "description": "Raw Git functionality." },
    { "name": "gitignore", "description": "View gitignore templates" },
    {
      "name": "interactions",
      "description": "Owner or admin management of users interactions."
    },
    { "name": "issues", "description": "Interact with GitHub Issues." },
    { "name": "licenses", "description": "View various OSS licenses." },
    { "name": "markdown", "description": "Render Github flavored markdown" },
    {
      "name": "meta",
      "description": "Endpoints that give information about the API."
    },
    { "name": "migrations", "description": "Move projects to or from GitHub." },
    {
      "name": "oauth-authorizations",
      "description": "Manage access of OAuth applications"
    },
    { "name": "orgs", "description": "Interact with GitHub Orgs." },
    {
      "name": "packages",
      "description": "Manage packages for authenticated users and organizations."
    },
    { "name": "projects", "description": "Interact with GitHub Projects." },
    { "name": "pulls", "description": "Interact with GitHub Pull Requests." },
    {
      "name": "rate-limit",
      "description": "Check your current rate limit status"
    },
    {
      "name": "reactions",
      "description": "Interact with reactions to various GitHub entities."
    },
    { "name": "repos", "description": "Interact with GitHub Repos." },
    {
      "name": "scim",
      "description": "Provisioning of GitHub organization membership for SCIM-enabled providers."
    },
    { "name": "search", "description": "Look for stuff on GitHub." },
    {
      "name": "secret-scanning",
      "description": "Retrieve secret scanning alerts from a repository."
    },
    { "name": "server-statistics", "description": "GHES statistics" },
    { "name": "teams", "description": "Interact with GitHub Teams." },
    {
      "name": "users",
      "description": "Interact with and view information about users and also current user."
    }
  ],
  "servers": [
    {
      "url": "https://{hostname}/api/v3",
      "variables": {
        "hostname": {
          "description": "Self-hosted GitHub AE hostname",
          "default": "HOSTNAME"
        }
      }
    }
  ],
  "externalDocs": {
    "description": "GitHub AE Developer Docs",
    "url": "https://docs.github.com/github-ae@latest/rest/"
  },
  "paths": {
    "/admin/hooks": {
      "get": {
        "summary": "List global webhooks",
        "description": "",
        "operationId": "enterprise-admin/list-global-webhooks",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#list-global-webhooks"
        },
        "parameters": [
          {
            "name": "accept",
            "description": "This API is under preview and subject to change.",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/vnd.github.superpro-preview+json"
            },
            "required": true
          },
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/global-hook" }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/global-hook-items"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "superpro",
              "note": "The [Global Webhooks API](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "global-webhooks"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "post": {
        "summary": "Create a global webhook",
        "description": "",
        "operationId": "enterprise-admin/create-global-webhook",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#create-a-global-webhook"
        },
        "parameters": [
          {
            "name": "accept",
            "description": "This API is under preview and subject to change.",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/vnd.github.superpro-preview+json"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/global-hook" },
                "examples": {
                  "default": { "$ref": "#/components/examples/global-hook" }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Must be passed as \"web\"."
                  },
                  "config": {
                    "type": "object",
                    "description": "Key/value pairs to provide settings for this webhook.",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "The URL to which the payloads will be delivered."
                      },
                      "content_type": {
                        "type": "string",
                        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."
                      },
                      "secret": {
                        "type": "string",
                        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/github-ae@latest/webhooks/event-payloads/#delivery-headers) header."
                      },
                      "insecure_ssl": {
                        "type": "string",
                        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**"
                      }
                    },
                    "required": ["url"]
                  },
                  "events": {
                    "type": "array",
                    "description": "The [events](https://docs.github.com/github-ae@latest/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                    "items": { "type": "string" }
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                    "default": true
                  }
                },
                "required": ["name", "config"]
              },
              "example": {
                "name": "web",
                "events": ["organization", "user"],
                "config": {
                  "url": "https://example.com/webhook",
                  "content_type": "json",
                  "secret": "secret"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "superpro",
              "note": "The [Global Webhooks API](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "global-webhooks"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/hooks/{hook_id}": {
      "get": {
        "summary": "Get a global webhook",
        "description": "",
        "operationId": "enterprise-admin/get-global-webhook",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-a-global-webhook"
        },
        "parameters": [
          {
            "name": "accept",
            "description": "This API is under preview and subject to change.",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/vnd.github.superpro-preview+json"
            },
            "required": true
          },
          { "$ref": "#/components/parameters/hook-id" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/global-hook" },
                "examples": {
                  "default": { "$ref": "#/components/examples/global-hook" }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "superpro",
              "note": "The [Global Webhooks API](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "global-webhooks"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "patch": {
        "summary": "Update a global webhook",
        "description": "Parameters that are not provided will be overwritten with the default value or removed if no default exists.",
        "operationId": "enterprise-admin/update-global-webhook",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#update-a-global-webhook"
        },
        "parameters": [
          {
            "name": "accept",
            "description": "This API is under preview and subject to change.",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/vnd.github.superpro-preview+json"
            },
            "required": true
          },
          { "$ref": "#/components/parameters/hook-id" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/global-hook-2" },
                "examples": {
                  "default": { "$ref": "#/components/examples/global-hook-2" }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Key/value pairs to provide settings for this webhook.",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "The URL to which the payloads will be delivered."
                      },
                      "content_type": {
                        "type": "string",
                        "description": "The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`."
                      },
                      "secret": {
                        "type": "string",
                        "description": "If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/github-ae@latest/webhooks/event-payloads/#delivery-headers) header."
                      },
                      "insecure_ssl": {
                        "type": "string",
                        "description": "Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**"
                      }
                    },
                    "required": ["url"]
                  },
                  "events": {
                    "type": "array",
                    "description": "The [events](https://docs.github.com/github-ae@latest/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.",
                    "items": { "type": "string" }
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.",
                    "default": true
                  }
                }
              },
              "example": {
                "events": ["organization"],
                "config": { "url": "https://example.com/webhook" }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "superpro",
              "note": "The [Global Webhooks API](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "global-webhooks"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "delete": {
        "summary": "Delete a global webhook",
        "description": "",
        "operationId": "enterprise-admin/delete-global-webhook",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-global-webhook"
        },
        "parameters": [
          {
            "name": "accept",
            "description": "This API is under preview and subject to change.",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/vnd.github.superpro-preview+json"
            },
            "required": true
          },
          { "$ref": "#/components/parameters/hook-id" }
        ],
        "responses": { "204": { "description": "Response" } },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "superpro",
              "note": "The [Global Webhooks API](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "global-webhooks"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/hooks/{hook_id}/pings": {
      "post": {
        "summary": "Ping a global webhook",
        "description": "This will trigger a [ping event](https://docs.github.com/github-ae@latest/webhooks/#ping-event) to be sent to the webhook.",
        "operationId": "enterprise-admin/ping-global-webhook",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#ping-a-global-webhook"
        },
        "parameters": [
          {
            "name": "accept",
            "description": "This API is under preview and subject to change.",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/vnd.github.superpro-preview+json"
            },
            "required": true
          },
          { "$ref": "#/components/parameters/hook-id" }
        ],
        "responses": { "204": { "description": "Response" } },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "superpro",
              "note": "The [Global Webhooks API](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#global-webhooks) is currently available for developers to preview. To access the API during the preview period, you must provide a custom [media type](https://docs.github.com/github-ae@latest/rest/overview/media-types) in the `Accept` header:\n```shell\napplication/vnd.github.superpro-preview+json\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "global-webhooks"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/keys": {
      "get": {
        "summary": "List public keys",
        "description": "",
        "operationId": "enterprise-admin/list-public-keys",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#list-public-keys"
        },
        "parameters": [
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/direction" },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["created", "updated", "accessed"],
              "default": "created"
            }
          },
          {
            "name": "since",
            "description": "Only show public keys accessed after the given time.",
            "in": "query",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/public-key-full" }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/enterprise-public-key-items"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/keys/{key_ids}": {
      "delete": {
        "summary": "Delete a public key",
        "description": "",
        "operationId": "enterprise-admin/delete-public-key",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-public-key"
        },
        "parameters": [{ "$ref": "#/components/parameters/key-ids" }],
        "responses": { "204": { "description": "Response" } },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/organizations": {
      "post": {
        "summary": "Create an organization",
        "description": "",
        "operationId": "enterprise-admin/create-org",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#create-an-organization"
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organization-simple"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/organization-simple"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string",
                    "description": "The organization's username."
                  },
                  "admin": {
                    "type": "string",
                    "description": "The login of the user who will manage this organization."
                  },
                  "profile_name": {
                    "type": "string",
                    "description": "The organization's display name."
                  }
                },
                "required": ["login", "admin"]
              },
              "example": {
                "login": "github",
                "profile_name": "GitHub, Inc.",
                "admin": "monalisaoctocat"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "orgs"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/organizations/{org}": {
      "patch": {
        "summary": "Update an organization name",
        "description": "",
        "operationId": "enterprise-admin/update-org-name",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#update-an-organization-name"
        },
        "parameters": [{ "$ref": "#/components/parameters/org" }],
        "responses": {
          "202": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "url": { "type": "string" }
                  }
                },
                "example": {
                  "message": "Job queued to rename organization. It may take a few minutes to complete.",
                  "url": "https://<hostname>/api/v3/organizations/1"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string",
                    "description": "The organization's new name."
                  }
                },
                "required": ["login"]
              },
              "example": { "login": "the-new-octocats" }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "orgs"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/pre-receive-environments": {
      "get": {
        "summary": "List pre-receive environments",
        "description": "",
        "operationId": "enterprise-admin/list-pre-receive-environments",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#list-pre-receive-environments"
        },
        "parameters": [
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" },
          { "$ref": "#/components/parameters/direction" },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["created", "updated", "name"],
              "default": "created"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/pre-receive-environment"
                  }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/pre-receive-environment-items"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "eye-scream",
              "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "pre-receive-environments"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "post": {
        "summary": "Create a pre-receive environment",
        "description": "",
        "operationId": "enterprise-admin/create-pre-receive-environment",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#create-a-pre-receive-environment"
        },
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pre-receive-environment"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/pre-receive-environment"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new pre-receive environment's name."
                  },
                  "image_url": {
                    "type": "string",
                    "description": "URL from which to download a tarball of this environment."
                  }
                },
                "required": ["name", "image_url"]
              },
              "example": {
                "name": "DevTools Hook Env",
                "image_url": "https://my_file_server/path/to/devtools_env.tar.gz"
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "eye-scream",
              "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "pre-receive-environments"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/pre-receive-environments/{pre_receive_environment_id}": {
      "get": {
        "summary": "Get a pre-receive environment",
        "description": "",
        "operationId": "enterprise-admin/get-pre-receive-environment",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-a-pre-receive-environment"
        },
        "parameters": [
          { "$ref": "#/components/parameters/pre-receive-environment-id" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pre-receive-environment"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/pre-receive-environment"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "eye-scream",
              "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "pre-receive-environments"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "patch": {
        "summary": "Update a pre-receive environment",
        "description": "You cannot modify the default environment. If you attempt to modify the default environment, you will receive a `422 Unprocessable Entity` response.",
        "operationId": "enterprise-admin/update-pre-receive-environment",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#update-a-pre-receive-environment"
        },
        "parameters": [
          { "$ref": "#/components/parameters/pre-receive-environment-id" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pre-receive-environment"
                },
                "examples": {
                  "default-response": {
                    "$ref": "#/components/examples/pre-receive-environment-default-response"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Client Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "resource": { "type": "string" },
                          "code": { "type": "string" },
                          "message": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "client-errors": {
                    "value": {
                      "message": "Validation Failed",
                      "errors": [
                        {
                          "resource": "PreReceiveEnvironment",
                          "code": "custom",
                          "message": "Cannot modify or delete the default environment"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "This pre-receive environment's new name."
                  },
                  "image_url": {
                    "type": "string",
                    "description": "URL from which to download a tarball of this environment."
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "eye-scream",
              "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "pre-receive-environments"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "delete": {
        "summary": "Delete a pre-receive environment",
        "description": "If you attempt to delete an environment that cannot be deleted, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n*   _Cannot modify or delete the default environment_\n*   _Cannot delete environment that has hooks_\n*   _Cannot delete environment when download is in progress_",
        "operationId": "enterprise-admin/delete-pre-receive-environment",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-pre-receive-environment"
        },
        "parameters": [
          { "$ref": "#/components/parameters/pre-receive-environment-id" }
        ],
        "responses": {
          "204": { "description": "Response" },
          "422": {
            "description": "Client Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "resource": { "type": "string" },
                          "code": { "type": "string" },
                          "message": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "client-errors": {
                    "value": {
                      "message": "Validation Failed",
                      "errors": [
                        {
                          "resource": "PreReceiveEnvironment",
                          "code": "custom",
                          "message": "Cannot modify or delete the default environment"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "eye-scream",
              "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "pre-receive-environments"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads": {
      "post": {
        "summary": "Start a pre-receive environment download",
        "description": "Triggers a new download of the environment tarball from the environment's `image_url`. When the download is finished, the newly downloaded tarball will overwrite the existing environment.\n\nIf a download cannot be triggered, you will receive a `422 Unprocessable Entity` response.\n\nThe possible error messages are:\n\n* _Cannot modify or delete the default environment_\n* _Can not start a new download when a download is in progress_",
        "operationId": "enterprise-admin/start-pre-receive-environment-download",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#start-a-pre-receive-environment-download"
        },
        "parameters": [
          { "$ref": "#/components/parameters/pre-receive-environment-id" }
        ],
        "responses": {
          "202": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pre-receive-environment-download-status"
                },
                "examples": {
                  "default-response": {
                    "$ref": "#/components/examples/pre-receive-environment-download-status-default-response"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Client Errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "resource": { "type": "string" },
                          "code": { "type": "string" },
                          "message": { "type": "string" }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "client-errors": {
                    "value": {
                      "message": "Validation Failed",
                      "errors": [
                        {
                          "resource": "PreReceiveEnvironment",
                          "code": "custom",
                          "message": "Can not start a new download when a download is in progress"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "eye-scream",
              "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "pre-receive-environments"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/pre-receive-environments/{pre_receive_environment_id}/downloads/latest": {
      "get": {
        "summary": "Get the download status for a pre-receive environment",
        "description": "In addition to seeing the download status at the \"[Get a pre-receive environment](#get-a-pre-receive-environment)\" endpoint, there is also this separate endpoint for just the download status.",
        "operationId": "enterprise-admin/get-download-status-for-pre-receive-environment",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-the-download-status-for-a-pre-receive-environment"
        },
        "parameters": [
          { "$ref": "#/components/parameters/pre-receive-environment-id" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pre-receive-environment-download-status"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/pre-receive-environment-download-status"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [
            {
              "required": true,
              "name": "eye-scream",
              "note": "APIs for managing pre-receive hooks are currently available for developers to preview. During the preview period, the APIs may change without advance notice.\n\nTo access the API you must provide a custom [media type](/rest/overview/media-types) in the `Accept` header:\n\n```shell\napplication/vnd.github.eye-scream-preview\n```"
            }
          ],
          "category": "enterprise-admin",
          "subcategory": "pre-receive-environments"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/tokens": {
      "get": {
        "summary": "List personal access tokens",
        "description": "Lists personal access tokens for all users, including admin users.",
        "operationId": "enterprise-admin/list-personal-access-tokens",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#list-personal-access-tokens"
        },
        "parameters": [
          { "$ref": "#/components/parameters/per-page" },
          { "$ref": "#/components/parameters/page" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/authorization" }
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-items"
                  }
                }
              }
            },
            "headers": { "Link": { "$ref": "#/components/headers/link" } }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/tokens/{token_id}": {
      "delete": {
        "summary": "Delete a personal access token",
        "description": "Deletes a personal access token. Returns a `403 - Forbidden` status when a personal access token is in use. For example, if you access this endpoint with the same personal access token that you are trying to delete, you will receive this error.",
        "operationId": "enterprise-admin/delete-personal-access-token",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-personal-access-token"
        },
        "parameters": [{ "$ref": "#/components/parameters/token-id" }],
        "responses": { "204": { "description": "Response" } },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/users/{username}": {
      "delete": {
        "summary": "Delete a user",
        "description": "Deleting a user will delete all their repositories, gists, applications, and personal settings. [Suspending a user](https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#suspend-a-user) is often a better option.\n\nYou can delete any user account except your own.",
        "operationId": "enterprise-admin/delete-user",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-a-user"
        },
        "parameters": [{ "$ref": "#/components/parameters/username" }],
        "responses": { "204": { "description": "Response" } },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/admin/users/{username}/authorizations": {
      "post": {
        "summary": "Create an impersonation OAuth token",
        "description": "",
        "operationId": "enterprise-admin/create-impersonation-o-auth-token",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#create-an-impersonation-oauth-token"
        },
        "parameters": [{ "$ref": "#/components/parameters/username" }],
        "responses": {
          "201": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/authorization" },
                "examples": {
                  "default": { "$ref": "#/components/examples/authorization" }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "description": "A list of [scopes](https://docs.github.com/github-ae@latest/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).",
                    "items": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "delete": {
        "summary": "Delete an impersonation OAuth token",
        "description": "",
        "operationId": "enterprise-admin/delete-impersonation-o-auth-token",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#delete-an-impersonation-oauth-token"
        },
        "parameters": [{ "$ref": "#/components/parameters/username" }],
        "responses": { "204": { "description": "Response" } },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/applications/{client_id}/grants/{access_token}": {
      "delete": {
        "summary": "Revoke a grant for an application",
        "description": "**Deprecation Notice:** GitHub AE will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://docs.github.com/github-ae@latest/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the Applications settings page under \"Authorized OAuth Apps\" on GitHub AE](https://github.com/settings/applications#authorized).",
        "tags": ["apps"],
        "operationId": "apps/revoke-grant-for-application",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/apps#revoke-a-grant-for-an-application"
        },
        "parameters": [
          { "$ref": "#/components/parameters/client-id" },
          { "$ref": "#/components/parameters/access-token" }
        ],
        "responses": { "204": { "description": "Response" } },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "removalDate": "2021-05-05",
          "deprecationDate": "2020-02-14",
          "category": "apps",
          "subcategory": "oauth-applications"
        },
        "deprecated": true,
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/applications/{client_id}/tokens/{access_token}": {
      "get": {
        "summary": "Check an authorization",
        "description": "**Deprecation Notice:** GitHub AE will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://docs.github.com/github-ae@latest/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
        "tags": ["apps"],
        "operationId": "apps/check-authorization",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/apps#check-an-authorization"
        },
        "parameters": [
          { "$ref": "#/components/parameters/client-id" },
          { "$ref": "#/components/parameters/access-token" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/nullable-authorization"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-with-user"
                  }
                }
              }
            }
          },
          "404": { "$ref": "#/components/responses/not_found" }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "removalDate": "2021-05-05",
          "deprecationDate": "2020-02-14",
          "category": "apps",
          "subcategory": "oauth-applications"
        },
        "deprecated": true,
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "post": {
        "summary": "Reset an authorization",
        "description": "**Deprecation Notice:** GitHub AE will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://docs.github.com/github-ae@latest/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`.",
        "tags": ["apps"],
        "operationId": "apps/reset-authorization",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/apps#reset-an-authorization"
        },
        "parameters": [
          { "$ref": "#/components/parameters/client-id" },
          { "$ref": "#/components/parameters/access-token" }
        ],
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/authorization" },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/authorization-with-user"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "removalDate": "2021-05-05",
          "deprecationDate": "2020-02-14",
          "category": "apps",
          "subcategory": "oauth-applications"
        },
        "deprecated": true,
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "delete": {
        "summary": "Revoke an authorization for an application",
        "description": "**Deprecation Notice:** GitHub AE will discontinue OAuth endpoints that contain `access_token` in the path parameter. We have introduced new endpoints that allow you to securely manage tokens for OAuth Apps by moving `access_token` to the request body. For more information, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://docs.github.com/github-ae@latest/rest/overview/other-authentication-methods#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password.",
        "tags": ["apps"],
        "operationId": "apps/revoke-authorization-for-application",
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/apps#revoke-an-authorization-for-an-application"
        },
        "parameters": [
          { "$ref": "#/components/parameters/client-id" },
          { "$ref": "#/components/parameters/access-token" }
        ],
        "responses": { "204": { "description": "Response" } },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "removalDate": "2021-05-05",
          "deprecationDate": "2020-02-14",
          "category": "apps",
          "subcategory": "oauth-applications"
        },
        "deprecated": true,
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/announcement": {
      "get": {
        "summary": "Get the global announcement banner",
        "description": "Gets the current message and expiration date of the global announcement banner in your enterprise.",
        "tags": ["enterprise-admin"],
        "operationId": "enterprise-admin/get-announcement",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/announcement" },
                "examples": {
                  "default": { "$ref": "#/components/examples/announcement" }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "announcement"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "patch": {
        "summary": "Set the global announcement banner",
        "description": "Sets the message and expiration time for the global announcement banner in your enterprise.",
        "tags": ["enterprise-admin"],
        "operationId": "enterprise-admin/set-announcement",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/announcement" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/announcement" },
                "examples": {
                  "default": { "$ref": "#/components/examples/announcement" }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "announcement"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "delete": {
        "summary": "Remove the global announcement banner",
        "description": "Removes the global announcement banner in your enterprise.",
        "tags": ["enterprise-admin"],
        "operationId": "enterprise-admin/remove-announcement",
        "responses": { "204": { "description": "Response" } },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "announcement"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/settings/license": {
      "get": {
        "summary": "Get license information",
        "description": "",
        "operationId": "enterprise-admin/get-license-information",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-license-information"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/license-info" },
                "examples": {
                  "default": { "$ref": "#/components/examples/license-info" }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "license"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/all": {
      "get": {
        "summary": "Get all statistics",
        "description": "",
        "operationId": "enterprise-admin/get-all-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-overview"
                },
                "examples": {
                  "default": {
                    "$ref": "#/components/examples/enterprise-overview"
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/comments": {
      "get": {
        "summary": "Get comment statistics",
        "description": "",
        "operationId": "enterprise-admin/get-comment-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-comment-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-comment-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/gists": {
      "get": {
        "summary": "Get gist statistics",
        "description": "",
        "operationId": "enterprise-admin/get-all-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-gist-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-gist-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/hooks": {
      "get": {
        "summary": "Get hooks statistics",
        "operationId": "enterprise-admin/get-hooks-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-hooks-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-hook-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/issues": {
      "get": {
        "summary": "Get issue statistics",
        "description": "",
        "operationId": "enterprise-admin/get-issue-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-issues-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-issue-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/milestones": {
      "get": {
        "summary": "Get milestone statistics",
        "description": "",
        "operationId": "enterprise-admin/get-milestone-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-milestone-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-milestone-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/orgs": {
      "get": {
        "summary": "Get organization statistics",
        "description": "",
        "operationId": "enterprise-admin/get-org-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-organization-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-organization-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/pages": {
      "get": {
        "summary": "Get pages statistics",
        "description": "",
        "operationId": "enterprise-admin/get-pages-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-pages-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-page-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/pulls": {
      "get": {
        "summary": "Get pull request statistics",
        "description": "",
        "operationId": "enterprise-admin/get-pull-request-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-pull-requests-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-pull-request-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/repos": {
      "get": {
        "summary": "Get repository statistics",
        "operationId": "enterprise-admin/get-repo-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-repository-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-repository-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/enterprise/stats/users": {
      "get": {
        "summary": "Get users statistics",
        "description": "",
        "operationId": "enterprise-admin/get-user-stats",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#get-users-statistics"
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/enterprise-user-overview"
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "admin-stats"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    },
    "/users/{username}/suspended": {
      "put": {
        "summary": "Suspend a user",
        "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), Active Directory LDAP-authenticated users cannot be suspended through this API. If you attempt to suspend an Active Directory LDAP-authenticated user through this API, it will return a `403` response.\n\nYou can suspend any user account except your own.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/github-ae@latest/rest/overview/resources-in-the-rest-api#http-verbs).\"",
        "operationId": "enterprise-admin/suspend-user",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#suspend-a-user"
        },
        "parameters": [{ "$ref": "#/components/parameters/username" }],
        "responses": { "204": { "description": "Response" } },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "nullable": true,
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "The reason the user is being suspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Suspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action."
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      },
      "delete": {
        "summary": "Unsuspend a user",
        "description": "If your GitHub instance uses [LDAP Sync with Active Directory LDAP servers](https://help.github.com/enterprise/admin/guides/user-management/using-ldap), this API is disabled and will return a `403` response. Active Directory LDAP-authenticated users cannot be unsuspended using the API.",
        "operationId": "enterprise-admin/unsuspend-user",
        "tags": ["enterprise-admin"],
        "externalDocs": {
          "description": "API method documentation",
          "url": "https://docs.github.com/github-ae@latest/rest/reference/enterprise-admin#unsuspend-a-user"
        },
        "parameters": [{ "$ref": "#/components/parameters/username" }],
        "responses": { "204": { "description": "Response" } },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "nullable": true,
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "The reason the user is being unsuspended. This message will be logged in the [audit log](https://help.github.com/enterprise/admin/articles/audit-logging/). If you don't provide a `reason`, it will default to \"Unsuspended via API by _SITE\\_ADMINISTRATOR_\", where _SITE\\_ADMINISTRATOR_ is the person who performed the action."
                  }
                }
              }
            }
          }
        },
        "x-github": {
          "githubCloudOnly": false,
          "enabledForGitHubApps": false,
          "previews": [],
          "category": "enterprise-admin",
          "subcategory": "users"
        },
        "x-octokit": { "diff": { "api.github.com.json": { "type": "added" } } }
      }
    }
  },
  "components": {
    "parameters": {
      "per-page": {
        "name": "per_page",
        "description": "Results per page (max 100)",
        "in": "query",
        "schema": { "type": "integer", "default": 30 }
      },
      "page": {
        "name": "page",
        "description": "Page number of the results to fetch.",
        "in": "query",
        "schema": { "type": "integer", "default": 1 }
      },
      "hook-id": {
        "name": "hook_id",
        "in": "path",
        "required": true,
        "schema": { "type": "integer" }
      },
      "direction": {
        "name": "direction",
        "description": "One of `asc` (ascending) or `desc` (descending).",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": ["asc", "desc"],
          "default": "desc"
        }
      },
      "key-ids": {
        "name": "key_ids",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      },
      "org": {
        "name": "org",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      },
      "pre-receive-environment-id": {
        "name": "pre_receive_environment_id",
        "in": "path",
        "required": true,
        "schema": { "type": "integer" }
      },
      "token-id": {
        "name": "token_id",
        "in": "path",
        "required": true,
        "schema": { "type": "integer" }
      },
      "username": {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      },
      "client-id": {
        "name": "client_id",
        "in": "path",
        "required": true,
        "description": "The client ID of your GitHub app.",
        "schema": { "type": "string" }
      },
      "access-token": {
        "name": "access_token",
        "in": "path",
        "required": true,
        "schema": { "type": "string" }
      }
    },
    "schemas": {
      "global-hook": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "events": { "type": "array", "items": { "type": "string" } },
          "config": {
            "type": "object",
            "properties": {
              "url": { "type": "string" },
              "content_type": { "type": "string" },
              "insecure_ssl": { "type": "string" },
              "secret": { "type": "string" }
            }
          },
          "updated_at": { "type": "string" },
          "created_at": { "type": "string" },
          "url": { "type": "string" },
          "ping_url": { "type": "string" }
        }
      },
      "global-hook-2": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "active": { "type": "boolean" },
          "events": { "type": "array", "items": { "type": "string" } },
          "config": {
            "type": "object",
            "properties": {
              "url": { "type": "string" },
              "content_type": { "type": "string" },
              "insecure_ssl": { "type": "string" }
            }
          },
          "updated_at": { "type": "string" },
          "created_at": { "type": "string" },
          "url": { "type": "string" },
          "ping_url": { "type": "string" }
        }
      },
      "public-key-full": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "key": { "type": "string" },
          "user_id": { "nullable": true, "type": "integer" },
          "repository_id": { "nullable": true, "type": "integer" },
          "url": { "type": "string" },
          "title": { "type": "string" },
          "read_only": { "type": "boolean" },
          "verified": { "type": "boolean" },
          "created_at": { "type": "string", "format": "date-time" },
          "last_used": {
            "nullable": true,
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "key",
          "url",
          "title",
          "verified",
          "created_at",
          "read_only",
          "last_used",
          "user_id",
          "repository_id"
        ]
      },
      "organization-simple": {
        "title": "Organization Simple",
        "description": "Organization Simple",
        "type": "object",
        "properties": {
          "login": { "type": "string", "example": "github" },
          "id": { "type": "integer", "example": 1 },
          "node_id": {
            "type": "string",
            "example": "MDEyOk9yZ2FuaXphdGlvbjE="
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/repos"
          },
          "events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/orgs/github/events"
          },
          "hooks_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/hooks"
          },
          "issues_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/issues"
          },
          "members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/members{/member}"
          },
          "public_members_url": {
            "type": "string",
            "example": "https://api.github.com/orgs/github/public_members{/member}"
          },
          "avatar_url": {
            "type": "string",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "description": {
            "type": "string",
            "example": "A great organization",
            "nullable": true
          }
        },
        "required": [
          "login",
          "url",
          "id",
          "node_id",
          "repos_url",
          "events_url",
          "hooks_url",
          "issues_url",
          "members_url",
          "public_members_url",
          "avatar_url",
          "description"
        ]
      },
      "pre-receive-environment": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "image_url": { "type": "string" },
          "url": { "type": "string" },
          "html_url": { "type": "string" },
          "default_environment": { "type": "boolean" },
          "created_at": { "type": "string" },
          "hooks_count": { "type": "integer" },
          "download": {
            "type": "object",
            "properties": {
              "url": { "type": "string" },
              "state": { "type": "string" },
              "downloaded_at": { "nullable": true, "type": "string" },
              "message": { "nullable": true, "type": "string" }
            }
          }
        }
      },
      "pre-receive-environment-download-status": {
        "type": "object",
        "properties": {
          "url": { "type": "string" },
          "state": { "type": "string" },
          "downloaded_at": { "nullable": true, "type": "string" },
          "message": { "nullable": true, "type": "string" }
        }
      },
      "authorization": {
        "title": "Authorization",
        "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "url": { "type": "string", "format": "uri" },
          "scopes": {
            "description": "A list of scopes that this authorization is in.",
            "type": "array",
            "items": { "type": "string" },
            "nullable": true
          },
          "token": { "type": "string" },
          "token_last_eight": { "type": "string", "nullable": true },
          "hashed_token": { "type": "string", "nullable": true },
          "app": {
            "type": "object",
            "properties": {
              "client_id": { "type": "string" },
              "name": { "type": "string" },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["client_id", "name", "url"]
          },
          "note": { "type": "string", "nullable": true },
          "note_url": { "type": "string", "format": "uri", "nullable": true },
          "updated_at": { "type": "string", "format": "date-time" },
          "created_at": { "type": "string", "format": "date-time" },
          "fingerprint": { "type": "string", "nullable": true },
          "user": { "$ref": "#/components/schemas/nullable-simple-user" },
          "installation": {
            "$ref": "#/components/schemas/nullable-scoped-installation"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "app",
          "id",
          "note",
          "note_url",
          "scopes",
          "token",
          "hashed_token",
          "token_last_eight",
          "fingerprint",
          "url",
          "created_at",
          "updated_at",
          "expires_at"
        ]
      },
      "nullable-authorization": {
        "title": "Authorization",
        "description": "The authorization for an OAuth app, GitHub App, or a Personal Access Token.",
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "url": { "type": "string", "format": "uri" },
          "scopes": {
            "description": "A list of scopes that this authorization is in.",
            "type": "array",
            "items": { "type": "string" },
            "nullable": true
          },
          "token": { "type": "string" },
          "token_last_eight": { "type": "string", "nullable": true },
          "hashed_token": { "type": "string", "nullable": true },
          "app": {
            "type": "object",
            "properties": {
              "client_id": { "type": "string" },
              "name": { "type": "string" },
              "url": { "type": "string", "format": "uri" }
            },
            "required": ["client_id", "name", "url"]
          },
          "note": { "type": "string", "nullable": true },
          "note_url": { "type": "string", "format": "uri", "nullable": true },
          "updated_at": { "type": "string", "format": "date-time" },
          "created_at": { "type": "string", "format": "date-time" },
          "fingerprint": { "type": "string", "nullable": true },
          "user": { "$ref": "#/components/schemas/nullable-simple-user" },
          "installation": {
            "$ref": "#/components/schemas/nullable-scoped-installation"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "app",
          "id",
          "note",
          "note_url",
          "scopes",
          "token",
          "hashed_token",
          "token_last_eight",
          "fingerprint",
          "url",
          "created_at",
          "updated_at",
          "expires_at"
        ],
        "nullable": true
      },
      "announcement": {
        "title": "Enterprise Announcement",
        "description": "Enterprise global announcement",
        "type": "object",
        "properties": {
          "announcement": {
            "$ref": "#/components/schemas/announcement-message"
          },
          "expires_at": {
            "$ref": "#/components/schemas/announcement-expiration"
          }
        },
        "required": ["announcement"]
      },
      "license-info": {
        "type": "object",
        "properties": {
          "seats": { "oneOf": [{ "type": "string" }, { "type": "integer" }] },
          "seats_used": { "type": "integer" },
          "seats_available": {
            "oneOf": [{ "type": "string" }, { "type": "integer" }]
          },
          "kind": { "type": "string" },
          "days_until_expiration": { "type": "integer" },
          "expire_at": { "type": "string" }
        }
      },
      "enterprise-overview": {
        "type": "object",
        "properties": {
          "repos": {
            "$ref": "#/components/schemas/enterprise-repository-overview"
          },
          "hooks": { "$ref": "#/components/schemas/enterprise-hook-overview" },
          "pages": { "$ref": "#/components/schemas/enterprise-page-overview" },
          "orgs": {
            "$ref": "#/components/schemas/enterprise-organization-overview"
          },
          "users": { "$ref": "#/components/schemas/enterprise-user-overview" },
          "pulls": {
            "$ref": "#/components/schemas/enterprise-pull-request-overview"
          },
          "issues": {
            "$ref": "#/components/schemas/enterprise-issue-overview"
          },
          "milestones": {
            "$ref": "#/components/schemas/enterprise-milestone-overview"
          },
          "gists": { "$ref": "#/components/schemas/enterprise-gist-overview" },
          "comments": {
            "$ref": "#/components/schemas/enterprise-comment-overview"
          }
        }
      },
      "enterprise-comment-overview": {
        "title": "Enterprise Comment Stats",
        "type": "object",
        "properties": {
          "total_commit_comments": { "type": "integer" },
          "total_gist_comments": { "type": "integer" },
          "total_issue_comments": { "type": "integer" },
          "total_pull_request_comments": { "type": "integer" }
        },
        "required": [
          "total_commit_comments",
          "total_gist_comments",
          "total_issue_comments",
          "total_pull_request_comments"
        ]
      },
      "enterprise-gist-overview": {
        "title": "Enterprise Gist Stats",
        "type": "object",
        "properties": {
          "total_gists": { "type": "integer" },
          "private_gists": { "type": "integer" },
          "public_gists": { "type": "integer" }
        },
        "required": ["total_gists", "private_gists", "public_gists"]
      },
      "enterprise-hook-overview": {
        "title": "Hooks Enterprise Stats",
        "type": "object",
        "properties": {
          "total_hooks": { "type": "integer" },
          "active_hooks": { "type": "integer" },
          "inactive_hooks": { "type": "integer" }
        },
        "required": ["total_hooks", "active_hooks", "inactive_hooks"]
      },
      "enterprise-issue-overview": {
        "title": "Enterprise Issue Stats",
        "type": "object",
        "properties": {
          "total_issues": { "type": "integer" },
          "open_issues": { "type": "integer" },
          "closed_issues": { "type": "integer" }
        },
        "required": ["total_issues", "open_issues", "closed_issues"]
      },
      "enterprise-milestone-overview": {
        "title": "Enterprise Milestone Stats",
        "type": "object",
        "properties": {
          "total_milestones": { "type": "integer" },
          "open_milestones": { "type": "integer" },
          "closed_milestones": { "type": "integer" }
        },
        "required": ["total_milestones", "open_milestones", "closed_milestones"]
      },
      "enterprise-organization-overview": {
        "title": "Enterprise Organization Stats",
        "type": "object",
        "properties": {
          "total_orgs": { "type": "integer" },
          "disabled_orgs": { "type": "integer" },
          "total_teams": { "type": "integer" },
          "total_team_members": { "type": "integer" }
        },
        "required": [
          "total_orgs",
          "disabled_orgs",
          "total_teams",
          "total_team_members"
        ]
      },
      "enterprise-page-overview": {
        "title": "Enterprise Pages Stats",
        "type": "object",
        "properties": { "total_pages": { "type": "integer" } },
        "required": ["total_pages"]
      },
      "enterprise-pull-request-overview": {
        "title": "Enterprise Pull Request Stats",
        "type": "object",
        "properties": {
          "total_pulls": { "type": "integer" },
          "merged_pulls": { "type": "integer" },
          "mergeable_pulls": { "type": "integer" },
          "unmergeable_pulls": { "type": "integer" }
        },
        "required": [
          "total_pulls",
          "merged_pulls",
          "mergeable_pulls",
          "unmergeable_pulls"
        ]
      },
      "enterprise-repository-overview": {
        "title": "Repository Enterprise Stats",
        "type": "object",
        "properties": {
          "total_repos": { "type": "integer" },
          "root_repos": { "type": "integer" },
          "fork_repos": { "type": "integer" },
          "org_repos": { "type": "integer" },
          "total_pushes": { "type": "integer" },
          "total_wikis": { "type": "integer" }
        },
        "required": [
          "total_repos",
          "root_repos",
          "fork_repos",
          "org_repos",
          "total_pushes",
          "total_wikis"
        ]
      },
      "enterprise-user-overview": {
        "title": "Enterprise User Stats",
        "type": "object",
        "properties": {
          "total_users": { "type": "integer" },
          "admin_users": { "type": "integer" },
          "suspended_users": { "type": "integer" }
        },
        "required": ["total_users", "admin_users", "suspended_users"]
      },
      "nullable-simple-user": {
        "title": "Simple User",
        "description": "Simple User",
        "type": "object",
        "properties": {
          "name": { "nullable": true, "type": "string" },
          "email": { "nullable": true, "type": "string" },
          "login": { "type": "string", "example": "octocat" },
          "id": { "type": "integer", "example": 1 },
          "node_id": { "type": "string", "example": "MDQ6VXNlcjE=" },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": { "type": "string", "example": "User" },
          "site_admin": { "type": "boolean" },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ],
        "nullable": true
      },
      "nullable-scoped-installation": {
        "title": "Scoped Installation",
        "type": "object",
        "properties": {
          "permissions": { "$ref": "#/components/schemas/app-permissions" },
          "repository_selection": {
            "description": "Describe whether all repositories have been selected or there's a selection involved",
            "type": "string",
            "enum": ["all", "selected"]
          },
          "single_file_name": {
            "type": "string",
            "example": "config.yaml",
            "nullable": true
          },
          "has_multiple_single_files": { "type": "boolean", "example": true },
          "single_file_paths": {
            "type": "array",
            "items": { "type": "string" },
            "example": ["config.yml", ".github/issue_TEMPLATE.md"]
          },
          "repositories_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "account": { "$ref": "#/components/schemas/simple-user" }
        },
        "required": [
          "permissions",
          "repository_selection",
          "single_file_name",
          "repositories_url",
          "account"
        ],
        "nullable": true
      },
      "app-permissions": {
        "title": "App Permissions",
        "type": "object",
        "description": "The permissions granted to the user-to-server access token.",
        "properties": {
          "actions": {
            "type": "string",
            "description": "The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "administration": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "checks": {
            "type": "string",
            "description": "The level of permission to grant the access token for checks on code. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "content_references": {
            "type": "string",
            "description": "The level of permission to grant the access token for notification of content references and creation content attachments. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "contents": {
            "type": "string",
            "description": "The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "deployments": {
            "type": "string",
            "description": "The level of permission to grant the access token for deployments and deployment statuses. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "environments": {
            "type": "string",
            "description": "The level of permission to grant the access token for managing repository environments. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "issues": {
            "type": "string",
            "description": "The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "metadata": {
            "type": "string",
            "description": "The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "packages": {
            "type": "string",
            "description": "The level of permission to grant the access token for packages published to GitHub Packages. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "pages": {
            "type": "string",
            "description": "The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "pull_requests": {
            "type": "string",
            "description": "The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "repository_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for a repository. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "repository_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
            "enum": ["read", "write", "admin"]
          },
          "secret_scanning_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage secret scanning alerts. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage repository secrets. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "security_events": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage security events like code scanning alerts. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "single_file": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage just a single file. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "statuses": {
            "type": "string",
            "description": "The level of permission to grant the access token for commit statuses. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "vulnerability_alerts": {
            "type": "string",
            "description": "The level of permission to grant the access token to retrieve Dependabot alerts. Can be one of: `read`.",
            "enum": ["read"]
          },
          "workflows": {
            "type": "string",
            "description": "The level of permission to grant the access token to update GitHub Actions workflow files. Can be one of: `write`.",
            "enum": ["write"]
          },
          "members": {
            "type": "string",
            "description": "The level of permission to grant the access token for organization teams and members. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "organization_administration": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage access to an organization. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "organization_hooks": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage the post-receive hooks for an organization. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "organization_plan": {
            "type": "string",
            "description": "The level of permission to grant the access token for viewing an organization's plan. Can be one of: `read`.",
            "enum": ["read"]
          },
          "organization_projects": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization projects, columns, and cards. Can be one of: `read`, `write`, or `admin`.",
            "enum": ["read", "write", "admin"]
          },
          "organization_packages": {
            "type": "string",
            "description": "The level of permission to grant the access token for organization packages published to GitHub Packages. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "organization_secrets": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage organization secrets. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "organization_self_hosted_runners": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "organization_user_blocking": {
            "type": "string",
            "description": "The level of permission to grant the access token to view and manage users blocked by the organization. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          },
          "team_discussions": {
            "type": "string",
            "description": "The level of permission to grant the access token to manage team discussions and related comments. Can be one of: `read` or `write`.",
            "enum": ["read", "write"]
          }
        },
        "example": {
          "contents": "read",
          "issues": "read",
          "deployments": "write",
          "single_file": "read"
        }
      },
      "simple-user": {
        "title": "Simple User",
        "description": "Simple User",
        "type": "object",
        "properties": {
          "name": { "nullable": true, "type": "string" },
          "email": { "nullable": true, "type": "string" },
          "login": { "type": "string", "example": "octocat" },
          "id": { "type": "integer", "example": 1 },
          "node_id": { "type": "string", "example": "MDQ6VXNlcjE=" },
          "avatar_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/images/error/octocat_happy.gif"
          },
          "gravatar_id": {
            "type": "string",
            "example": "41d064eb2195891e12d0413f63227ea7",
            "nullable": true
          },
          "url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat"
          },
          "html_url": {
            "type": "string",
            "format": "uri",
            "example": "https://github.com/octocat"
          },
          "followers_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/followers"
          },
          "following_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/following{/other_user}"
          },
          "gists_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/gists{/gist_id}"
          },
          "starred_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/starred{/owner}{/repo}"
          },
          "subscriptions_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/subscriptions"
          },
          "organizations_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/orgs"
          },
          "repos_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/repos"
          },
          "events_url": {
            "type": "string",
            "example": "https://api.github.com/users/octocat/events{/privacy}"
          },
          "received_events_url": {
            "type": "string",
            "format": "uri",
            "example": "https://api.github.com/users/octocat/received_events"
          },
          "type": { "type": "string", "example": "User" },
          "site_admin": { "type": "boolean" },
          "starred_at": {
            "type": "string",
            "example": "\"2020-07-09T00:17:55Z\""
          }
        },
        "required": [
          "avatar_url",
          "events_url",
          "followers_url",
          "following_url",
          "gists_url",
          "gravatar_id",
          "html_url",
          "id",
          "node_id",
          "login",
          "organizations_url",
          "received_events_url",
          "repos_url",
          "site_admin",
          "starred_url",
          "subscriptions_url",
          "type",
          "url"
        ]
      },
      "basic-error": {
        "title": "Basic Error",
        "description": "Basic Error",
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "documentation_url": { "type": "string" },
          "url": { "type": "string" },
          "status": { "type": "string" }
        }
      },
      "announcement-message": {
        "type": "string",
        "description": "The announcement text in GitHub Flavored Markdown. For more information about GitHub Flavored Markdown, see \"[Mastering markdown](https://guides.github.com/features/mastering-markdown/).\"",
        "example": "Very **important** announcement about _nothing_."
      },
      "announcement-expiration": {
        "type": "string",
        "format": "date-time",
        "description": "The time at which the announcement expires. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. To set an announcement that never expires, omit this parameter, set it to `null`, or set it to an empty string.",
        "example": "\"2021-01-01T00:00:00.000-07:00\"",
        "nullable": true
      }
    },
    "examples": {
      "global-hook-items": {
        "value": [
          {
            "type": "Global",
            "id": 1,
            "name": "web",
            "active": true,
            "events": ["organization", "user"],
            "config": {
              "url": "https://example.com",
              "content_type": "json",
              "insecure_ssl": "0",
              "secret": "********"
            },
            "updated_at": "2017-12-07T00:14:59Z",
            "created_at": "2017-12-07T00:14:59Z",
            "url": "https://api.github.com/admin/hooks/1",
            "ping_url": "https://api.github.com/admin/hooks/1/pings"
          }
        ]
      },
      "global-hook": {
        "value": {
          "type": "Global",
          "id": 1,
          "name": "web",
          "active": true,
          "events": ["organization", "user"],
          "config": {
            "url": "https://example.com",
            "content_type": "json",
            "insecure_ssl": "0",
            "secret": "********"
          },
          "updated_at": "2017-12-07T00:14:59Z",
          "created_at": "2017-12-07T00:14:59Z",
          "url": "https://api.github.com/admin/hooks/1",
          "ping_url": "https://api.github.com/admin/hooks/1/pings"
        }
      },
      "global-hook-2": {
        "value": {
          "type": "Global",
          "id": 1,
          "name": "web",
          "active": true,
          "events": ["organization"],
          "config": {
            "url": "https://example.com",
            "content_type": "form",
            "insecure_ssl": "0"
          },
          "updated_at": "2017-12-07T00:14:59Z",
          "created_at": "2017-12-07T00:14:59Z",
          "url": "https://api.github.com/admin/hooks/1",
          "ping_url": "https://api.github.com/admin/hooks/1/pings"
        }
      },
      "enterprise-public-key-items": {
        "value": [
          {
            "key": "2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234",
            "id": 2,
            "url": "https://api.github.com/user/keys/2",
            "title": "ssh-rsa AAAAB3NzaC1yc2EAAA",
            "created_at": "2020-06-11T21:31:57Z",
            "verified": false,
            "read_only": false,
            "last_used": "2020-06-11T22:31:57Z",
            "user_id": 1,
            "repository_id": 2
          },
          {
            "key": "9Og8iYjAyymI9LvABpJerYrMxURPc8r+dB7TJyvv1234",
            "id": 3,
            "url": "https://api.github.com/user/keys/2",
            "title": "ssh-rsa AAAAB3NzaC1yc2EAAA",
            "created_at": "2020-06-11T21:31:57Z",
            "verified": false,
            "read_only": false,
            "last_used": "2020-06-11T22:31:57Z",
            "user_id": 1,
            "repository_id": 2
          }
        ]
      },
      "organization-simple": {
        "value": {
          "login": "github",
          "id": 1,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjE=",
          "url": "https://api.github.com/orgs/github",
          "repos_url": "https://api.github.com/orgs/github/repos",
          "events_url": "https://api.github.com/orgs/github/events",
          "hooks_url": "https://api.github.com/orgs/github/hooks",
          "issues_url": "https://api.github.com/orgs/github/issues",
          "members_url": "https://api.github.com/orgs/github/members{/member}",
          "public_members_url": "https://api.github.com/orgs/github/public_members{/member}",
          "avatar_url": "https://github.com/images/error/octocat_happy.gif",
          "description": "A great organization"
        }
      },
      "pre-receive-environment-items": {
        "value": [
          {
            "id": 1,
            "name": "Default",
            "image_url": "githubenterprise://internal",
            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1",
            "html_url": "https://github.example.com/admin/pre-receive-environments/1",
            "default_environment": true,
            "created_at": "2016-05-20T11:35:45-05:00",
            "hooks_count": 14,
            "download": {
              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/1/downloads/latest",
              "state": "not_started",
              "downloaded_at": "2016-05-26T07:42:53-05:00",
              "message": null
            }
          },
          {
            "id": 2,
            "name": "DevTools Hook Env",
            "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2",
            "html_url": "https://github.example.com/admin/pre-receive-environments/2",
            "default_environment": false,
            "created_at": "2016-05-20T11:35:45-05:00",
            "hooks_count": 1,
            "download": {
              "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest",
              "state": "success",
              "downloaded_at": "2016-05-26T07:42:53-05:00",
              "message": null
            }
          }
        ]
      },
      "pre-receive-environment": {
        "value": {
          "id": 2,
          "name": "DevTools Hook Env",
          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2",
          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
          "default_environment": false,
          "created_at": "2016-05-20T11:35:45-05:00",
          "hooks_count": 1,
          "download": {
            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest",
            "state": "not_started",
            "downloaded_at": null,
            "message": null
          }
        }
      },
      "pre-receive-environment-default-response": {
        "value": {
          "id": 2,
          "name": "DevTools Hook Env",
          "image_url": "https://my_file_server/path/to/devtools_env.tar.gz",
          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2",
          "html_url": "https://github.example.com/admin/pre-receive-environments/2",
          "default_environment": false,
          "created_at": "2016-05-20T11:35:45-05:00",
          "hooks_count": 1,
          "download": {
            "url": "https://github.example.com/api/v3/admin/pre-receive-environments/2/downloads/latest",
            "state": "success",
            "downloaded_at": "2016-05-26T07:42:53-05:00",
            "message": null
          }
        }
      },
      "pre-receive-environment-download-status-default-response": {
        "value": {
          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest",
          "state": "not_started",
          "downloaded_at": null,
          "message": null
        }
      },
      "pre-receive-environment-download-status": {
        "value": {
          "url": "https://github.example.com/api/v3/admin/pre-receive-environments/3/downloads/latest",
          "state": "success",
          "downloaded_at": "2016-05-26T07:42:53-05:00",
          "message": null
        }
      },
      "authorization-items": {
        "value": [
          {
            "id": 1,
            "url": "https://api.github.com/authorizations/1",
            "scopes": ["public_repo"],
            "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
            "token_last_eight": "Ae178B4a",
            "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
            "app": {
              "url": "http://my-github-app.com",
              "name": "my github app",
              "client_id": "abcde12345fghij67890"
            },
            "note": "optional note",
            "note_url": "http://optional/note/url",
            "updated_at": "2011-09-06T20:39:23Z",
            "created_at": "2011-09-06T17:26:27Z",
            "expires_at": "2011-09-08T17:26:27Z",
            "fingerprint": "jklmnop12345678"
          }
        ]
      },
      "authorization": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": ["public_repo"],
          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
          "token_last_eight": "Ae178B4a",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "abcde12345fghij67890"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "expires_at": "2011-10-06T17:26:27Z",
          "fingerprint": ""
        }
      },
      "authorization-with-user": {
        "value": {
          "id": 1,
          "url": "https://api.github.com/authorizations/1",
          "scopes": ["public_repo", "user"],
          "token": "ghu_16C7e42F292c6912E7710c838347Ae178B4a",
          "token_last_eight": "Ae178B4a",
          "hashed_token": "25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8",
          "app": {
            "url": "http://my-github-app.com",
            "name": "my github app",
            "client_id": "abcde12345fghij67890"
          },
          "note": "optional note",
          "note_url": "http://optional/note/url",
          "updated_at": "2011-09-06T20:39:23Z",
          "created_at": "2011-09-06T17:26:27Z",
          "fingerprint": "jklmnop12345678",
          "expires_at": "2011-09-08T17:26:27Z",
          "user": {
            "login": "octocat",
            "id": 1,
            "node_id": "MDQ6VXNlcjE=",
            "avatar_url": "https://github.com/images/error/octocat_happy.gif",
            "gravatar_id": "",
            "url": "https://api.github.com/users/octocat",
            "html_url": "https://github.com/octocat",
            "followers_url": "https://api.github.com/users/octocat/followers",
            "following_url": "https://api.github.com/users/octocat/following{/other_user}",
            "gists_url": "https://api.github.com/users/octocat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/octocat/subscriptions",
            "organizations_url": "https://api.github.com/users/octocat/orgs",
            "repos_url": "https://api.github.com/users/octocat/repos",
            "events_url": "https://api.github.com/users/octocat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/octocat/received_events",
            "type": "User",
            "site_admin": false
          }
        }
      },
      "announcement": {
        "summary": "Default response",
        "value": {
          "announcement": "Very **important** announcement about _nothing_.",
          "expires_at": "2021-01-01T00:00:00.000+00:00"
        }
      },
      "license-info": {
        "value": {
          "seats": 1400,
          "seats_used": 1316,
          "seats_available": 84,
          "kind": "standard",
          "days_until_expiration": 365,
          "expire_at": "2016/02/06 12:41:52 -0600"
        }
      },
      "enterprise-overview": {
        "value": {
          "repos": {
            "total_repos": 212,
            "root_repos": 194,
            "fork_repos": 18,
            "org_repos": 51,
            "total_pushes": 3082,
            "total_wikis": 15
          },
          "hooks": {
            "total_hooks": 27,
            "active_hooks": 23,
            "inactive_hooks": 4
          },
          "pages": { "total_pages": 36 },
          "orgs": {
            "total_orgs": 33,
            "disabled_orgs": 0,
            "total_teams": 60,
            "total_team_members": 314
          },
          "users": {
            "total_users": 254,
            "admin_users": 45,
            "suspended_users": 21
          },
          "pulls": {
            "total_pulls": 86,
            "merged_pulls": 60,
            "mergeable_pulls": 21,
            "unmergeable_pulls": 3
          },
          "issues": {
            "total_issues": 179,
            "open_issues": 83,
            "closed_issues": 96
          },
          "milestones": {
            "total_milestones": 7,
            "open_milestones": 6,
            "closed_milestones": 1
          },
          "gists": {
            "total_gists": 178,
            "private_gists": 151,
            "public_gists": 25
          },
          "comments": {
            "total_commit_comments": 6,
            "total_gist_comments": 28,
            "total_issue_comments": 366,
            "total_pull_request_comments": 30
          }
        }
      }
    },
    "headers": {
      "link": {
        "example": "<https://api.github.com/resource?page=2>; rel=\"next\", <https://api.github.com/resource?page=5>; rel=\"last\"",
        "schema": { "type": "string" }
      }
    },
    "responses": {
      "not_found": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/basic-error" }
          }
        }
      }
    }
  }
}
